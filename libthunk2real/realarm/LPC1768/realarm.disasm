
LPC1768/realarm.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00002d3d


Disassembly of section .text:

00000000 <__isr_vector>:
       0:	10008000 	.word	0x10008000
       4:	00002d3d 	.word	0x00002d3d
       8:	00002d71 	.word	0x00002d71
       c:	00001b6f 	.word	0x00001b6f
      10:	00001b73 	.word	0x00001b73
      14:	00001b77 	.word	0x00001b77
      18:	00001b7b 	.word	0x00001b7b
	...
      2c:	00002d7b 	.word	0x00002d7b
      30:	00001b7f 	.word	0x00001b7f
      34:	00000000 	.word	0x00000000
      38:	00002d7f 	.word	0x00002d7f
      3c:	00002d81 	.word	0x00002d81
      40:	00002d85 	.word	0x00002d85
      44:	00002d87 	.word	0x00002d87
      48:	00002d89 	.word	0x00002d89
      4c:	00002d8b 	.word	0x00002d8b
      50:	00002d8d 	.word	0x00002d8d
      54:	00001b83 	.word	0x00001b83
      58:	00001b87 	.word	0x00001b87
      5c:	00001b8b 	.word	0x00001b8b
      60:	00001b8f 	.word	0x00001b8f
      64:	00002d97 	.word	0x00002d97
      68:	00002d99 	.word	0x00002d99
      6c:	00002d9b 	.word	0x00002d9b
      70:	00002d9d 	.word	0x00002d9d
      74:	00002d9f 	.word	0x00002d9f
      78:	00002da1 	.word	0x00002da1
      7c:	00002da3 	.word	0x00002da3
      80:	00002da5 	.word	0x00002da5
      84:	00002da7 	.word	0x00002da7
      88:	00002da9 	.word	0x00002da9
      8c:	00002dab 	.word	0x00002dab
      90:	00002dad 	.word	0x00002dad
      94:	00002daf 	.word	0x00002daf
      98:	00002db1 	.word	0x00002db1
      9c:	00002db3 	.word	0x00002db3
      a0:	00002db5 	.word	0x00002db5
      a4:	00002db7 	.word	0x00002db7
      a8:	00002db9 	.word	0x00002db9
      ac:	00002dbb 	.word	0x00002dbb
      b0:	00002dbd 	.word	0x00002dbd
      b4:	00002dbf 	.word	0x00002dbf
      b8:	00002dc1 	.word	0x00002dc1
      bc:	00002dc3 	.word	0x00002dc3
      c0:	00002dc5 	.word	0x00002dc5
      c4:	00002dc7 	.word	0x00002dc7
      c8:	00002dc9 	.word	0x00002dc9

000000cc <__do_global_dtors_aux>:
      cc:	b510      	push	{r4, lr}
      ce:	4c05      	ldr	r4, [pc, #20]	; (e4 <__do_global_dtors_aux+0x18>)
      d0:	7823      	ldrb	r3, [r4, #0]
      d2:	b933      	cbnz	r3, e2 <__do_global_dtors_aux+0x16>
      d4:	4804      	ldr	r0, [pc, #16]	; (e8 <__do_global_dtors_aux+0x1c>)
      d6:	b110      	cbz	r0, de <__do_global_dtors_aux+0x12>
      d8:	4804      	ldr	r0, [pc, #16]	; (ec <__do_global_dtors_aux+0x20>)
      da:	f3af 8000 	nop.w
      de:	2101      	movs	r1, #1
      e0:	7021      	strb	r1, [r4, #0]
      e2:	bd10      	pop	{r4, pc}
      e4:	10000168 	.word	0x10000168
      e8:	00000000 	.word	0x00000000
      ec:	00004198 	.word	0x00004198

000000f0 <frame_dummy>:
      f0:	b508      	push	{r3, lr}
      f2:	4b06      	ldr	r3, [pc, #24]	; (10c <frame_dummy+0x1c>)
      f4:	b11b      	cbz	r3, fe <frame_dummy+0xe>
      f6:	4806      	ldr	r0, [pc, #24]	; (110 <frame_dummy+0x20>)
      f8:	4906      	ldr	r1, [pc, #24]	; (114 <frame_dummy+0x24>)
      fa:	f3af 8000 	nop.w
      fe:	4806      	ldr	r0, [pc, #24]	; (118 <frame_dummy+0x28>)
     100:	6801      	ldr	r1, [r0, #0]
     102:	b111      	cbz	r1, 10a <frame_dummy+0x1a>
     104:	4a05      	ldr	r2, [pc, #20]	; (11c <frame_dummy+0x2c>)
     106:	b102      	cbz	r2, 10a <frame_dummy+0x1a>
     108:	4790      	blx	r2
     10a:	bd08      	pop	{r3, pc}
     10c:	00000000 	.word	0x00000000
     110:	00004198 	.word	0x00004198
     114:	1000016c 	.word	0x1000016c
     118:	10000164 	.word	0x10000164
     11c:	00000000 	.word	0x00000000

00000120 <getMPUDataRegionCount()>:
     120:	f64e 5390 	movw	r3, #60816	; 0xed90
     124:	f2ce 0300 	movt	r3, #57344	; 0xe000
     128:	681b      	ldr	r3, [r3, #0]
     12a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
     12e:	ea4f 2313 	mov.w	r3, r3, lsr #8
     132:	4618      	mov	r0, r3
     134:	4770      	bx	lr
     136:	bf00      	nop

00000138 <getHighestMPUDataRegionIndex()>:
     138:	b508      	push	{r3, lr}
     13a:	f7ff fff1 	bl	120 <getMPUDataRegionCount()>
     13e:	4603      	mov	r3, r0
     140:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
     144:	4618      	mov	r0, r3
     146:	bd08      	pop	{r3, pc}

00000148 <isMPURegionNumberValid(unsigned long)>:
     148:	b500      	push	{lr}
     14a:	b083      	sub	sp, #12
     14c:	9001      	str	r0, [sp, #4]
     14e:	f7ff ffe7 	bl	120 <getMPUDataRegionCount()>
     152:	4602      	mov	r2, r0
     154:	9b01      	ldr	r3, [sp, #4]
     156:	429a      	cmp	r2, r3
     158:	bf94      	ite	ls
     15a:	2300      	movls	r3, #0
     15c:	2301      	movhi	r3, #1
     15e:	b2db      	uxtb	r3, r3
     160:	4618      	mov	r0, r3
     162:	b003      	add	sp, #12
     164:	bd00      	pop	{pc}
     166:	bf00      	nop

00000168 <isMPUNotPresent()>:
     168:	b508      	push	{r3, lr}
     16a:	f7ff ffd9 	bl	120 <getMPUDataRegionCount()>
     16e:	4603      	mov	r3, r0
     170:	2b00      	cmp	r3, #0
     172:	bf14      	ite	ne
     174:	2300      	movne	r3, #0
     176:	2301      	moveq	r3, #1
     178:	b2db      	uxtb	r3, r3
     17a:	4618      	mov	r0, r3
     17c:	bd08      	pop	{r3, pc}
     17e:	bf00      	nop

00000180 <disableMPU()>:
     180:	b508      	push	{r3, lr}
     182:	f7ff fff1 	bl	168 <isMPUNotPresent()>
     186:	4603      	mov	r3, r0
     188:	2b00      	cmp	r3, #0
     18a:	bf0c      	ite	eq
     18c:	2300      	moveq	r3, #0
     18e:	2301      	movne	r3, #1
     190:	b2db      	uxtb	r3, r3
     192:	2b00      	cmp	r3, #0
     194:	d110      	bne.n	1b8 <disableMPU()+0x38>
     196:	f64e 5390 	movw	r3, #60816	; 0xed90
     19a:	f2ce 0300 	movt	r3, #57344	; 0xe000
     19e:	f64e 5290 	movw	r2, #60816	; 0xed90
     1a2:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1a6:	6852      	ldr	r2, [r2, #4]
     1a8:	f022 0201 	bic.w	r2, r2, #1
     1ac:	605a      	str	r2, [r3, #4]
     1ae:	f3bf 8f4f 	dsb	sy
     1b2:	f3bf 8f6f 	isb	sy
     1b6:	e000      	b.n	1ba <disableMPU()+0x3a>
     1b8:	bf00      	nop
     1ba:	bd08      	pop	{r3, pc}

000001bc <enableMPUWithHardAndNMIFaults()>:
     1bc:	b508      	push	{r3, lr}
     1be:	f7ff ffd3 	bl	168 <isMPUNotPresent()>
     1c2:	4603      	mov	r3, r0
     1c4:	2b00      	cmp	r3, #0
     1c6:	bf0c      	ite	eq
     1c8:	2300      	moveq	r3, #0
     1ca:	2301      	movne	r3, #1
     1cc:	b2db      	uxtb	r3, r3
     1ce:	2b00      	cmp	r3, #0
     1d0:	d110      	bne.n	1f4 <enableMPUWithHardAndNMIFaults()+0x38>
     1d2:	f64e 5390 	movw	r3, #60816	; 0xed90
     1d6:	f2ce 0300 	movt	r3, #57344	; 0xe000
     1da:	f64e 5290 	movw	r2, #60816	; 0xed90
     1de:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1e2:	6852      	ldr	r2, [r2, #4]
     1e4:	f042 0203 	orr.w	r2, r2, #3
     1e8:	605a      	str	r2, [r3, #4]
     1ea:	f3bf 8f4f 	dsb	sy
     1ee:	f3bf 8f6f 	isb	sy
     1f2:	e000      	b.n	1f6 <enableMPUWithHardAndNMIFaults()+0x3a>
     1f4:	bf00      	nop
     1f6:	bd08      	pop	{r3, pc}

000001f8 <prepareToAccessMPURegion(unsigned long)>:
     1f8:	b500      	push	{lr}
     1fa:	b083      	sub	sp, #12
     1fc:	9001      	str	r0, [sp, #4]
     1fe:	9801      	ldr	r0, [sp, #4]
     200:	f7ff ffa2 	bl	148 <isMPURegionNumberValid(unsigned long)>
     204:	4603      	mov	r3, r0
     206:	2b00      	cmp	r3, #0
     208:	bf14      	ite	ne
     20a:	2300      	movne	r3, #0
     20c:	2301      	moveq	r3, #1
     20e:	b2db      	uxtb	r3, r3
     210:	2b00      	cmp	r3, #0
     212:	d002      	beq.n	21a <prepareToAccessMPURegion(unsigned long)+0x22>
     214:	f04f 0300 	mov.w	r3, #0
     218:	e007      	b.n	22a <prepareToAccessMPURegion(unsigned long)+0x32>
     21a:	f64e 5390 	movw	r3, #60816	; 0xed90
     21e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     222:	9a01      	ldr	r2, [sp, #4]
     224:	609a      	str	r2, [r3, #8]
     226:	f04f 0301 	mov.w	r3, #1
     22a:	4618      	mov	r0, r3
     22c:	b003      	add	sp, #12
     22e:	bd00      	pop	{pc}

00000230 <setMPURegionAddress(unsigned long)>:
     230:	b500      	push	{lr}
     232:	b083      	sub	sp, #12
     234:	9001      	str	r0, [sp, #4]
     236:	f7ff ff97 	bl	168 <isMPUNotPresent()>
     23a:	4603      	mov	r3, r0
     23c:	2b00      	cmp	r3, #0
     23e:	bf0c      	ite	eq
     240:	2300      	moveq	r3, #0
     242:	2301      	movne	r3, #1
     244:	b2db      	uxtb	r3, r3
     246:	2b00      	cmp	r3, #0
     248:	d108      	bne.n	25c <setMPURegionAddress(unsigned long)+0x2c>
     24a:	f64e 5390 	movw	r3, #60816	; 0xed90
     24e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     252:	9a01      	ldr	r2, [sp, #4]
     254:	ea4f 1242 	mov.w	r2, r2, lsl #5
     258:	60da      	str	r2, [r3, #12]
     25a:	e000      	b.n	25e <setMPURegionAddress(unsigned long)+0x2e>
     25c:	bf00      	nop
     25e:	b003      	add	sp, #12
     260:	bd00      	pop	{pc}
     262:	bf00      	nop

00000264 <setMPURegionAttributeAndSize(unsigned long)>:
     264:	b500      	push	{lr}
     266:	b083      	sub	sp, #12
     268:	9001      	str	r0, [sp, #4]
     26a:	f7ff ff7d 	bl	168 <isMPUNotPresent()>
     26e:	4603      	mov	r3, r0
     270:	2b00      	cmp	r3, #0
     272:	bf0c      	ite	eq
     274:	2300      	moveq	r3, #0
     276:	2301      	movne	r3, #1
     278:	b2db      	uxtb	r3, r3
     27a:	2b00      	cmp	r3, #0
     27c:	d106      	bne.n	28c <setMPURegionAttributeAndSize(unsigned long)+0x28>
     27e:	f64e 5390 	movw	r3, #60816	; 0xed90
     282:	f2ce 0300 	movt	r3, #57344	; 0xe000
     286:	9a01      	ldr	r2, [sp, #4]
     288:	611a      	str	r2, [r3, #16]
     28a:	e000      	b.n	28e <setMPURegionAttributeAndSize(unsigned long)+0x2a>
     28c:	bf00      	nop
     28e:	b003      	add	sp, #12
     290:	bd00      	pop	{pc}
     292:	bf00      	nop

00000294 <attemptUnalignedAccess()>:
     294:	4770      	bx	lr
     296:	bf00      	nop

00000298 <attemptMemoryWriteFault()>:
     298:	4770      	bx	lr
     29a:	bf00      	nop

0000029c <disallowUnalignedAccesses()>:
     29c:	f44f 436d 	mov.w	r3, #60672	; 0xed00
     2a0:	f2ce 0300 	movt	r3, #57344	; 0xe000
     2a4:	f44f 426d 	mov.w	r2, #60672	; 0xed00
     2a8:	f2ce 0200 	movt	r2, #57344	; 0xe000
     2ac:	6952      	ldr	r2, [r2, #20]
     2ae:	f042 0208 	orr.w	r2, r2, #8
     2b2:	615a      	str	r2, [r3, #20]
     2b4:	4770      	bx	lr
     2b6:	bf00      	nop

000002b8 <noForce8ByteAlignmentDuringExceptionStacking()>:
     2b8:	f44f 436d 	mov.w	r3, #60672	; 0xed00
     2bc:	f2ce 0300 	movt	r3, #57344	; 0xe000
     2c0:	f44f 426d 	mov.w	r2, #60672	; 0xed00
     2c4:	f2ce 0200 	movt	r2, #57344	; 0xe000
     2c8:	6952      	ldr	r2, [r2, #20]
     2ca:	f422 7200 	bic.w	r2, r2, #512	; 0x200
     2ce:	615a      	str	r2, [r3, #20]
     2d0:	4770      	bx	lr
     2d2:	bf00      	nop

000002d4 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>:
     2d4:	b508      	push	{r3, lr}
     2d6:	f7ff ff2f 	bl	138 <getHighestMPUDataRegionIndex()>
     2da:	4603      	mov	r3, r0
     2dc:	4618      	mov	r0, r3
     2de:	f7ff ff8b 	bl	1f8 <prepareToAccessMPURegion(unsigned long)>
     2e2:	f04f 0000 	mov.w	r0, #0
     2e6:	f7ff ffa3 	bl	230 <setMPURegionAddress(unsigned long)>
     2ea:	f04f 003f 	mov.w	r0, #63	; 0x3f
     2ee:	f2c0 1000 	movt	r0, #256	; 0x100
     2f2:	f7ff ffb7 	bl	264 <setMPURegionAttributeAndSize(unsigned long)>
     2f6:	bd08      	pop	{r3, pc}

000002f8 <disableWriteCaching()>:
     2f8:	b508      	push	{r3, lr}
     2fa:	f7ff ff41 	bl	180 <disableMPU()>
     2fe:	f7ff ffe9 	bl	2d4 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>
     302:	f7ff ff5b 	bl	1bc <enableMPUWithHardAndNMIFaults()>
     306:	bd08      	pop	{r3, pc}

00000308 <main>:
     308:	b508      	push	{r3, lr}
     30a:	f7ff ffc7 	bl	29c <disallowUnalignedAccesses()>
     30e:	f7ff ffd3 	bl	2b8 <noForce8ByteAlignmentDuringExceptionStacking()>
     312:	f7ff fff1 	bl	2f8 <disableWriteCaching()>
     316:	f7ff ffbd 	bl	294 <attemptUnalignedAccess()>
     31a:	f7ff ffbd 	bl	298 <attemptMemoryWriteFault()>
     31e:	be00      	bkpt	0x0000
     320:	e7fd      	b.n	31e <main+0x16>
     322:	bf00      	nop

00000324 <_start>:
     324:	b500      	push	{lr}
     326:	b083      	sub	sp, #12
     328:	f240 42ec 	movw	r2, #1260	; 0x4ec
     32c:	f2c1 0200 	movt	r2, #4096	; 0x1000
     330:	f240 1368 	movw	r3, #360	; 0x168
     334:	f2c1 0300 	movt	r3, #4096	; 0x1000
     338:	1ad3      	subs	r3, r2, r3
     33a:	9301      	str	r3, [sp, #4]
     33c:	9b01      	ldr	r3, [sp, #4]
     33e:	f240 1068 	movw	r0, #360	; 0x168
     342:	f2c1 0000 	movt	r0, #4096	; 0x1000
     346:	f04f 0100 	mov.w	r1, #0
     34a:	461a      	mov	r2, r3
     34c:	f003 f855 	bl	33fa <memset>
     350:	f243 40a4 	movw	r0, #13476	; 0x34a4
     354:	f2c0 0000 	movt	r0, #0
     358:	f000 f80e 	bl	378 <__mriInit>
     35c:	f3af 8000 	nop.w
     360:	f003 f81c 	bl	339c <__libc_init_array>
     364:	f7ff ffd0 	bl	308 <main>
     368:	9000      	str	r0, [sp, #0]
     36a:	9800      	ldr	r0, [sp, #0]
     36c:	f002 fcb4 	bl	2cd8 <exit>

00000370 <__wrap_semihost_connected>:
     370:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     374:	4618      	mov	r0, r3
     376:	4770      	bx	lr

00000378 <__mriInit>:
     378:	b570      	push	{r4, r5, r6, lr}
     37a:	2100      	movs	r1, #0
     37c:	b09e      	sub	sp, #120	; 0x78
     37e:	2224      	movs	r2, #36	; 0x24
     380:	4606      	mov	r6, r0
     382:	480f      	ldr	r0, [pc, #60]	; (3c0 <__mriInit+0x48>)
     384:	f003 f839 	bl	33fa <memset>
     388:	4c0e      	ldr	r4, [pc, #56]	; (3c4 <__mriInit+0x4c>)
     38a:	480d      	ldr	r0, [pc, #52]	; (3c0 <__mriInit+0x48>)
     38c:	f000 f95a 	bl	644 <__mriPacket_Init>
     390:	2500      	movs	r5, #0
     392:	a801      	add	r0, sp, #4
     394:	6025      	str	r5, [r4, #0]
     396:	f000 f9eb 	bl	770 <__mriToken_Init>
     39a:	a801      	add	r0, sp, #4
     39c:	4631      	mov	r1, r6
     39e:	6025      	str	r5, [r4, #0]
     3a0:	f000 f9f0 	bl	784 <__mriToken_SplitString>
     3a4:	6823      	ldr	r3, [r4, #0]
     3a6:	b913      	cbnz	r3, 3ae <__mriInit+0x36>
     3a8:	a801      	add	r0, sp, #4
     3aa:	f001 f9a7 	bl	16fc <__mriPlatform_Init>
     3ae:	6820      	ldr	r0, [r4, #0]
     3b0:	b920      	cbnz	r0, 3bc <__mriInit+0x44>
     3b2:	4903      	ldr	r1, [pc, #12]	; (3c0 <__mriInit+0x48>)
     3b4:	694a      	ldr	r2, [r1, #20]
     3b6:	f042 0303 	orr.w	r3, r2, #3
     3ba:	614b      	str	r3, [r1, #20]
     3bc:	b01e      	add	sp, #120	; 0x78
     3be:	bd70      	pop	{r4, r5, r6, pc}
     3c0:	10000184 	.word	0x10000184
     3c4:	100001dc 	.word	0x100001dc

000003c8 <__mriCore_InitBuffer>:
     3c8:	b510      	push	{r4, lr}
     3ca:	f000 fc95 	bl	cf8 <__mriPlatform_GetPacketBuffer>
     3ce:	4604      	mov	r4, r0
     3d0:	f000 fc96 	bl	d00 <__mriPlatform_GetPacketBufferSize>
     3d4:	4602      	mov	r2, r0
     3d6:	4803      	ldr	r0, [pc, #12]	; (3e4 <__mriCore_InitBuffer+0x1c>)
     3d8:	4621      	mov	r1, r4
     3da:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3de:	f001 bc33 	b.w	1c48 <__mriBuffer_Init>
     3e2:	bf00      	nop
     3e4:	1000018c 	.word	0x1000018c

000003e8 <__mriCore_PrepareStringResponse>:
     3e8:	b510      	push	{r4, lr}
     3ea:	4604      	mov	r4, r0
     3ec:	f7ff ffec 	bl	3c8 <__mriCore_InitBuffer>
     3f0:	4802      	ldr	r0, [pc, #8]	; (3fc <__mriCore_PrepareStringResponse+0x14>)
     3f2:	4621      	mov	r1, r4
     3f4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3f8:	f001 bcd8 	b.w	1dac <__mriBuffer_WriteString>
     3fc:	1000018c 	.word	0x1000018c

00000400 <__mriCore_WasControlCFlagSentFromGdb>:
     400:	4b02      	ldr	r3, [pc, #8]	; (40c <CFSR_BUS_IMPRECISE_BIT+0xc>)
     402:	6958      	ldr	r0, [r3, #20]
     404:	f000 0004 	and.w	r0, r0, #4
     408:	4770      	bx	lr
     40a:	bf00      	nop
     40c:	10000184 	.word	0x10000184

00000410 <__mriCore_IsWaitingForGdbToConnect>:
     410:	b508      	push	{r3, lr}
     412:	4b05      	ldr	r3, [pc, #20]	; (428 <__mriCore_IsWaitingForGdbToConnect+0x18>)
     414:	6958      	ldr	r0, [r3, #20]
     416:	f010 0002 	ands.w	r0, r0, #2
     41a:	d004      	beq.n	426 <__mriCore_IsWaitingForGdbToConnect+0x16>
     41c:	f000 ffa2 	bl	1364 <__mriPlatform_CommShouldWaitForGdbConnect>
     420:	3000      	adds	r0, #0
     422:	bf18      	it	ne
     424:	2001      	movne	r0, #1
     426:	bd08      	pop	{r3, pc}
     428:	10000184 	.word	0x10000184

0000042c <__mriCore_RecordControlCFlagSentFromGdb>:
     42c:	4b04      	ldr	r3, [pc, #16]	; (440 <__mriCore_RecordControlCFlagSentFromGdb+0x14>)
     42e:	695a      	ldr	r2, [r3, #20]
     430:	b110      	cbz	r0, 438 <__mriCore_RecordControlCFlagSentFromGdb+0xc>
     432:	f042 0004 	orr.w	r0, r2, #4
     436:	e001      	b.n	43c <__mriCore_RecordControlCFlagSentFromGdb+0x10>
     438:	f022 0004 	bic.w	r0, r2, #4
     43c:	6158      	str	r0, [r3, #20]
     43e:	4770      	bx	lr
     440:	10000184 	.word	0x10000184

00000444 <__mriCore_WasSemihostCallCancelledByGdb>:
     444:	4b03      	ldr	r3, [pc, #12]	; (454 <__mriCore_WasSemihostCallCancelledByGdb+0x10>)
     446:	69d8      	ldr	r0, [r3, #28]
     448:	1f01      	subs	r1, r0, #4
     44a:	424a      	negs	r2, r1
     44c:	eb52 0001 	adcs.w	r0, r2, r1
     450:	4770      	bx	lr
     452:	bf00      	nop
     454:	10000184 	.word	0x10000184

00000458 <__mriCore_FlagSemihostCallAsHandled>:
     458:	b510      	push	{r4, lr}
     45a:	4c06      	ldr	r4, [pc, #24]	; (474 <__mriCore_FlagSemihostCallAsHandled+0x1c>)
     45c:	f000 fdac 	bl	fb8 <__mriPlatform_AdvanceProgramCounterToNextInstruction>
     460:	69a0      	ldr	r0, [r4, #24]
     462:	f000 fe01 	bl	1068 <__mriPlatform_SetSemihostCallReturnValue>
     466:	69a3      	ldr	r3, [r4, #24]
     468:	b113      	cbz	r3, 470 <__mriCore_FlagSemihostCallAsHandled+0x18>
     46a:	69e2      	ldr	r2, [r4, #28]
     46c:	4802      	ldr	r0, [pc, #8]	; (478 <__mriCore_FlagSemihostCallAsHandled+0x20>)
     46e:	6002      	str	r2, [r0, #0]
     470:	bd10      	pop	{r4, pc}
     472:	bf00      	nop
     474:	10000184 	.word	0x10000184
     478:	100004e8 	.word	0x100004e8

0000047c <__mriCore_IsFirstException>:
     47c:	4b02      	ldr	r3, [pc, #8]	; (488 <__mriCore_IsFirstException+0xc>)
     47e:	6958      	ldr	r0, [r3, #20]
     480:	f000 0002 	and.w	r0, r0, #2
     484:	4770      	bx	lr
     486:	bf00      	nop
     488:	10000184 	.word	0x10000184

0000048c <__mriCore_SetSignalValue>:
     48c:	4b01      	ldr	r3, [pc, #4]	; (494 <__mriCore_SetSignalValue+0x8>)
     48e:	f883 0020 	strb.w	r0, [r3, #32]
     492:	4770      	bx	lr
     494:	10000184 	.word	0x10000184

00000498 <__mriCore_GetSignalValue>:
     498:	4b01      	ldr	r3, [pc, #4]	; (4a0 <__mriCore_GetSignalValue+0x8>)
     49a:	f893 0020 	ldrb.w	r0, [r3, #32]
     49e:	4770      	bx	lr
     4a0:	10000184 	.word	0x10000184

000004a4 <__mriCore_SetSemihostReturnValues>:
     4a4:	4b01      	ldr	r3, [pc, #4]	; (4ac <__mriCore_SetSemihostReturnValues+0x8>)
     4a6:	6198      	str	r0, [r3, #24]
     4a8:	61d9      	str	r1, [r3, #28]
     4aa:	4770      	bx	lr
     4ac:	10000184 	.word	0x10000184

000004b0 <__mriCore_GetSemihostReturnCode>:
     4b0:	4b01      	ldr	r3, [pc, #4]	; (4b8 <__mriCore_GetSemihostReturnCode+0x8>)
     4b2:	6998      	ldr	r0, [r3, #24]
     4b4:	4770      	bx	lr
     4b6:	bf00      	nop
     4b8:	10000184 	.word	0x10000184

000004bc <__mriCore_GetBuffer>:
     4bc:	4800      	ldr	r0, [pc, #0]	; (4c0 <__mriCore_GetBuffer+0x4>)
     4be:	4770      	bx	lr
     4c0:	1000018c 	.word	0x1000018c

000004c4 <__mriCore_GetInitializedBuffer>:
     4c4:	b508      	push	{r3, lr}
     4c6:	f7ff ff7f 	bl	3c8 <__mriCore_InitBuffer>
     4ca:	4801      	ldr	r0, [pc, #4]	; (4d0 <__mriCore_GetInitializedBuffer+0xc>)
     4cc:	bd08      	pop	{r3, pc}
     4ce:	bf00      	nop
     4d0:	1000018c 	.word	0x1000018c

000004d4 <__mriCore_SendPacketToGdb>:
     4d4:	b508      	push	{r3, lr}
     4d6:	480a      	ldr	r0, [pc, #40]	; (500 <__mriCore_SendPacketToGdb+0x2c>)
     4d8:	f001 fbde 	bl	1c98 <__mriBuffer_OverrunDetected>
     4dc:	b128      	cbz	r0, 4ea <__mriCore_SendPacketToGdb+0x16>
     4de:	f7ff ff73 	bl	3c8 <__mriCore_InitBuffer>
     4e2:	4807      	ldr	r0, [pc, #28]	; (500 <__mriCore_SendPacketToGdb+0x2c>)
     4e4:	4907      	ldr	r1, [pc, #28]	; (504 <__mriCore_SendPacketToGdb+0x30>)
     4e6:	f001 fc61 	bl	1dac <__mriBuffer_WriteString>
     4ea:	4805      	ldr	r0, [pc, #20]	; (500 <__mriCore_SendPacketToGdb+0x2c>)
     4ec:	f001 fbb4 	bl	1c58 <__mriBuffer_SetEndOfBuffer>
     4f0:	4805      	ldr	r0, [pc, #20]	; (508 <__mriCore_SendPacketToGdb+0x34>)
     4f2:	f100 0108 	add.w	r1, r0, #8
     4f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
     4fa:	f000 b8f7 	b.w	6ec <__mriPacket_SendToGDB>
     4fe:	bf00      	nop
     500:	1000018c 	.word	0x1000018c
     504:	000034b8 	.word	0x000034b8
     508:	10000184 	.word	0x10000184

0000050c <__mriCore_GdbCommandHandlingLoop>:
     50c:	b510      	push	{r4, lr}
     50e:	f7ff ff5b 	bl	3c8 <__mriCore_InitBuffer>
     512:	4812      	ldr	r0, [pc, #72]	; (55c <__mriCore_GdbCommandHandlingLoop+0x50>)
     514:	f100 0108 	add.w	r1, r0, #8
     518:	f000 f898 	bl	64c <__mriPacket_GetFromGDB>
     51c:	4810      	ldr	r0, [pc, #64]	; (560 <__mriCore_GdbCommandHandlingLoop+0x54>)
     51e:	f001 fbd5 	bl	1ccc <__mriBuffer_ReadChar>
     522:	2300      	movs	r3, #0
     524:	4a0f      	ldr	r2, [pc, #60]	; (564 <__mriCore_GdbCommandHandlingLoop+0x58>)
     526:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
     52a:	790c      	ldrb	r4, [r1, #4]
     52c:	4284      	cmp	r4, r0
     52e:	d106      	bne.n	53e <__mriCore_GdbCommandHandlingLoop+0x32>
     530:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
     534:	4780      	blx	r0
     536:	0782      	lsls	r2, r0, #30
     538:	4604      	mov	r4, r0
     53a:	d507      	bpl.n	54c <__mriCore_GdbCommandHandlingLoop+0x40>
     53c:	e008      	b.n	550 <__mriCore_GdbCommandHandlingLoop+0x44>
     53e:	3301      	adds	r3, #1
     540:	2b0c      	cmp	r3, #12
     542:	d1ef      	bne.n	524 <__mriCore_GdbCommandHandlingLoop+0x18>
     544:	4808      	ldr	r0, [pc, #32]	; (568 <__mriCore_GdbCommandHandlingLoop+0x5c>)
     546:	f7ff ff4f 	bl	3e8 <__mriCore_PrepareStringResponse>
     54a:	2400      	movs	r4, #0
     54c:	f7ff ffc2 	bl	4d4 <__mriCore_SendPacketToGdb>
     550:	f004 0401 	and.w	r4, r4, #1
     554:	2c00      	cmp	r4, #0
     556:	d0da      	beq.n	50e <__mriCore_GdbCommandHandlingLoop+0x2>
     558:	bd10      	pop	{r4, pc}
     55a:	bf00      	nop
     55c:	10000184 	.word	0x10000184
     560:	1000018c 	.word	0x1000018c
     564:	000034bc 	.word	0x000034bc
     568:	0000352e 	.word	0x0000352e

0000056c <__mriDebugException>:
     56c:	b570      	push	{r4, r5, r6, lr}
     56e:	f7ff ff4f 	bl	410 <__mriCore_IsWaitingForGdbToConnect>
     572:	4605      	mov	r5, r0
     574:	f000 fbb8 	bl	ce8 <__mriPlatform_IsSingleStepping>
     578:	4606      	mov	r6, r0
     57a:	f000 fed7 	bl	132c <__mriPlatform_CommCausedInterrupt>
     57e:	b130      	cbz	r0, 58e <__mriDebugException+0x22>
     580:	f000 feb0 	bl	12e4 <__mriPlatform_CommHasReceiveData>
     584:	b918      	cbnz	r0, 58e <__mriDebugException+0x22>
     586:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     58a:	f000 bedb 	b.w	1344 <__mriPlatform_CommClearInterrupt>
     58e:	f3af 8000 	nop.w
     592:	f7ff ff3d 	bl	410 <__mriCore_IsWaitingForGdbToConnect>
     596:	b160      	cbz	r0, 5b2 <__mriDebugException+0x46>
     598:	f000 fef2 	bl	1380 <__mriPlatform_CommIsWaitingForGdbToConnect>
     59c:	2800      	cmp	r0, #0
     59e:	d1fb      	bne.n	598 <__mriDebugException+0x2c>
     5a0:	f000 feaa 	bl	12f8 <__mriPlatform_CommReceiveChar>
     5a4:	282b      	cmp	r0, #43	; 0x2b
     5a6:	d004      	beq.n	5b2 <__mriDebugException+0x46>
     5a8:	f001 f85a 	bl	1660 <__mriPlatform_CommWaitForReceiveDataToStop>
     5ac:	f000 fef6 	bl	139c <__mriPlatform_CommPrepareToWaitForGdbConnection>
     5b0:	e7f2      	b.n	598 <__mriDebugException+0x2c>
     5b2:	f000 fc21 	bl	df8 <__mriPlatform_EnteringDebugger>
     5b6:	f000 fba5 	bl	d04 <__mriPlatform_DetermineCauseOfException>
     5ba:	4c13      	ldr	r4, [pc, #76]	; (608 <__mriDebugException+0x9c>)
     5bc:	2805      	cmp	r0, #5
     5be:	f884 0020 	strb.w	r0, [r4, #32]
     5c2:	d10f      	bne.n	5e4 <__mriDebugException+0x78>
     5c4:	f001 f8e8 	bl	1798 <__mriSemihost_IsDebuggeeMakingSemihostCall>
     5c8:	b160      	cbz	r0, 5e4 <__mriDebugException+0x78>
     5ca:	f001 f8ef 	bl	17ac <__mriSemihost_HandleSemihostRequest>
     5ce:	b148      	cbz	r0, 5e4 <__mriDebugException+0x78>
     5d0:	b946      	cbnz	r6, 5e4 <__mriDebugException+0x78>
     5d2:	f000 fc8f 	bl	ef4 <__mriPlatform_LeavingDebugger>
     5d6:	f3af 8000 	nop.w
     5da:	6961      	ldr	r1, [r4, #20]
     5dc:	f021 0302 	bic.w	r3, r1, #2
     5e0:	6163      	str	r3, [r4, #20]
     5e2:	bd70      	pop	{r4, r5, r6, pc}
     5e4:	b91d      	cbnz	r5, 5ee <__mriDebugException+0x82>
     5e6:	f000 fbc1 	bl	d6c <__mriPlatform_DisplayFaultCauseToGdbConsole>
     5ea:	f002 f8f5 	bl	27d8 <__mriCmd_Send_T_StopResponse>
     5ee:	f7ff ff8d 	bl	50c <__mriCore_GdbCommandHandlingLoop>
     5f2:	f000 fc7f 	bl	ef4 <__mriPlatform_LeavingDebugger>
     5f6:	f3af 8000 	nop.w
     5fa:	4b03      	ldr	r3, [pc, #12]	; (608 <__mriDebugException+0x9c>)
     5fc:	695a      	ldr	r2, [r3, #20]
     5fe:	f022 0002 	bic.w	r0, r2, #2
     602:	6158      	str	r0, [r3, #20]
     604:	bd70      	pop	{r4, r5, r6, pc}
     606:	bf00      	nop
     608:	10000184 	.word	0x10000184

0000060c <HexCharToNibble>:
     60c:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
     610:	2b05      	cmp	r3, #5
     612:	d801      	bhi.n	618 <HexCharToNibble+0xc>
     614:	3857      	subs	r0, #87	; 0x57
     616:	4770      	bx	lr
     618:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
     61c:	2905      	cmp	r1, #5
     61e:	d801      	bhi.n	624 <HexCharToNibble+0x18>
     620:	3837      	subs	r0, #55	; 0x37
     622:	4770      	bx	lr
     624:	3830      	subs	r0, #48	; 0x30
     626:	b2c2      	uxtb	r2, r0
     628:	2a09      	cmp	r2, #9
     62a:	d907      	bls.n	63c <HexCharToNibble+0x30>
     62c:	4804      	ldr	r0, [pc, #16]	; (640 <HexCharToNibble+0x34>)
     62e:	6803      	ldr	r3, [r0, #0]
     630:	2b02      	cmp	r3, #2
     632:	bfb8      	it	lt
     634:	2302      	movlt	r3, #2
     636:	6003      	str	r3, [r0, #0]
     638:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     63c:	4770      	bx	lr
     63e:	bf00      	nop
     640:	100001dc 	.word	0x100001dc

00000644 <__mriPacket_Init>:
     644:	2100      	movs	r1, #0
     646:	2208      	movs	r2, #8
     648:	f002 bed7 	b.w	33fa <memset>

0000064c <__mriPacket_GetFromGDB>:
     64c:	b538      	push	{r3, r4, r5, lr}
     64e:	4604      	mov	r4, r0
     650:	6001      	str	r1, [r0, #0]
     652:	7925      	ldrb	r5, [r4, #4]
     654:	2d24      	cmp	r5, #36	; 0x24
     656:	d004      	beq.n	662 <__mriPacket_GetFromGDB+0x16>
     658:	f000 fe4e 	bl	12f8 <__mriPlatform_CommReceiveChar>
     65c:	b2c5      	uxtb	r5, r0
     65e:	7125      	strb	r5, [r4, #4]
     660:	e7f8      	b.n	654 <__mriPacket_GetFromGDB+0x8>
     662:	6820      	ldr	r0, [r4, #0]
     664:	f001 faf5 	bl	1c52 <__mriBuffer_Reset>
     668:	2300      	movs	r3, #0
     66a:	7163      	strb	r3, [r4, #5]
     66c:	f000 fe44 	bl	12f8 <__mriPlatform_CommReceiveChar>
     670:	b2c5      	uxtb	r5, r0
     672:	7125      	strb	r5, [r4, #4]
     674:	6820      	ldr	r0, [r4, #0]
     676:	f001 faf2 	bl	1c5e <__mriBuffer_BytesLeft>
     67a:	b158      	cbz	r0, 694 <__mriPacket_GetFromGDB+0x48>
     67c:	2d24      	cmp	r5, #36	; 0x24
     67e:	d0e8      	beq.n	652 <__mriPacket_GetFromGDB+0x6>
     680:	2d23      	cmp	r5, #35	; 0x23
     682:	d009      	beq.n	698 <__mriPacket_GetFromGDB+0x4c>
     684:	7962      	ldrb	r2, [r4, #5]
     686:	6820      	ldr	r0, [r4, #0]
     688:	18a9      	adds	r1, r5, r2
     68a:	7161      	strb	r1, [r4, #5]
     68c:	4629      	mov	r1, r5
     68e:	f001 fb0b 	bl	1ca8 <__mriBuffer_WriteChar>
     692:	e7eb      	b.n	66c <__mriPacket_GetFromGDB+0x20>
     694:	2d23      	cmp	r5, #35	; 0x23
     696:	d1dc      	bne.n	652 <__mriPacket_GetFromGDB+0x6>
     698:	f000 fe2e 	bl	12f8 <__mriPlatform_CommReceiveChar>
     69c:	b2c0      	uxtb	r0, r0
     69e:	7120      	strb	r0, [r4, #4]
     6a0:	f7ff ffb4 	bl	60c <HexCharToNibble>
     6a4:	4605      	mov	r5, r0
     6a6:	f000 fe27 	bl	12f8 <__mriPlatform_CommReceiveChar>
     6aa:	b2c0      	uxtb	r0, r0
     6ac:	7120      	strb	r0, [r4, #4]
     6ae:	f7ff ffad 	bl	60c <HexCharToNibble>
     6b2:	b2ed      	uxtb	r5, r5
     6b4:	ea40 1005 	orr.w	r0, r0, r5, lsl #4
     6b8:	71a0      	strb	r0, [r4, #6]
     6ba:	f000 fe13 	bl	12e4 <__mriPlatform_CommHasReceiveData>
     6be:	2800      	cmp	r0, #0
     6c0:	d1c7      	bne.n	652 <__mriPacket_GetFromGDB+0x6>
     6c2:	79a2      	ldrb	r2, [r4, #6]
     6c4:	7961      	ldrb	r1, [r4, #5]
     6c6:	428a      	cmp	r2, r1
     6c8:	d001      	beq.n	6ce <__mriPacket_GetFromGDB+0x82>
     6ca:	202d      	movs	r0, #45	; 0x2d
     6cc:	e000      	b.n	6d0 <__mriPacket_GetFromGDB+0x84>
     6ce:	202b      	movs	r0, #43	; 0x2b
     6d0:	f000 fe1e 	bl	1310 <__mriPlatform_CommSendChar>
     6d4:	79a0      	ldrb	r0, [r4, #6]
     6d6:	7963      	ldrb	r3, [r4, #5]
     6d8:	4298      	cmp	r0, r3
     6da:	d1ba      	bne.n	652 <__mriPacket_GetFromGDB+0x6>
     6dc:	6820      	ldr	r0, [r4, #0]
     6de:	f001 fabb 	bl	1c58 <__mriBuffer_SetEndOfBuffer>
     6e2:	6820      	ldr	r0, [r4, #0]
     6e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
     6e8:	f001 bab3 	b.w	1c52 <__mriBuffer_Reset>

000006ec <__mriPacket_SendToGDB>:
     6ec:	b570      	push	{r4, r5, r6, lr}
     6ee:	4604      	mov	r4, r0
     6f0:	6001      	str	r1, [r0, #0]
     6f2:	6820      	ldr	r0, [r4, #0]
     6f4:	f001 faad 	bl	1c52 <__mriBuffer_Reset>
     6f8:	2300      	movs	r3, #0
     6fa:	7163      	strb	r3, [r4, #5]
     6fc:	2024      	movs	r0, #36	; 0x24
     6fe:	f000 fe07 	bl	1310 <__mriPlatform_CommSendChar>
     702:	6820      	ldr	r0, [r4, #0]
     704:	f001 faab 	bl	1c5e <__mriBuffer_BytesLeft>
     708:	b148      	cbz	r0, 71e <__mriPacket_SendToGDB+0x32>
     70a:	6820      	ldr	r0, [r4, #0]
     70c:	f001 fade 	bl	1ccc <__mriBuffer_ReadChar>
     710:	4605      	mov	r5, r0
     712:	f000 fdfd 	bl	1310 <__mriPlatform_CommSendChar>
     716:	7963      	ldrb	r3, [r4, #5]
     718:	18ee      	adds	r6, r5, r3
     71a:	7166      	strb	r6, [r4, #5]
     71c:	e7f1      	b.n	702 <__mriPacket_SendToGDB+0x16>
     71e:	2023      	movs	r0, #35	; 0x23
     720:	f000 fdf6 	bl	1310 <__mriPlatform_CommSendChar>
     724:	7966      	ldrb	r6, [r4, #5]
     726:	4d0b      	ldr	r5, [pc, #44]	; (754 <__mriPacket_SendToGDB+0x68>)
     728:	0930      	lsrs	r0, r6, #4
     72a:	5c28      	ldrb	r0, [r5, r0]
     72c:	f006 060f 	and.w	r6, r6, #15
     730:	f000 fdee 	bl	1310 <__mriPlatform_CommSendChar>
     734:	5da8      	ldrb	r0, [r5, r6]
     736:	f000 fdeb 	bl	1310 <__mriPlatform_CommSendChar>
     73a:	f000 fddd 	bl	12f8 <__mriPlatform_CommReceiveChar>
     73e:	b2c1      	uxtb	r1, r0
     740:	2903      	cmp	r1, #3
     742:	7120      	strb	r0, [r4, #4]
     744:	d0f9      	beq.n	73a <__mriPacket_SendToGDB+0x4e>
     746:	b2ca      	uxtb	r2, r1
     748:	2a2b      	cmp	r2, #43	; 0x2b
     74a:	d001      	beq.n	750 <__mriPacket_SendToGDB+0x64>
     74c:	2a24      	cmp	r2, #36	; 0x24
     74e:	d1d0      	bne.n	6f2 <__mriPacket_SendToGDB+0x6>
     750:	bd70      	pop	{r4, r5, r6, pc}
     752:	bf00      	nop
     754:	0000351c 	.word	0x0000351c

00000758 <clearTokenObject>:
     758:	b510      	push	{r4, lr}
     75a:	2100      	movs	r1, #0
     75c:	2228      	movs	r2, #40	; 0x28
     75e:	4604      	mov	r4, r0
     760:	f002 fe4b 	bl	33fa <memset>
     764:	2300      	movs	r3, #0
     766:	62e3      	str	r3, [r4, #44]	; 0x2c
     768:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
     76c:	bd10      	pop	{r4, pc}
	...

00000770 <__mriToken_Init>:
     770:	b510      	push	{r4, lr}
     772:	4604      	mov	r4, r0
     774:	f7ff fff0 	bl	758 <clearTokenObject>
     778:	4b01      	ldr	r3, [pc, #4]	; (780 <__mriToken_Init+0x10>)
     77a:	62a3      	str	r3, [r4, #40]	; 0x28
     77c:	bd10      	pop	{r4, pc}
     77e:	bf00      	nop
     780:	0000352c 	.word	0x0000352c

00000784 <__mriToken_SplitString>:
     784:	4b2b      	ldr	r3, [pc, #172]	; (834 <Heap_Size+0x34>)
     786:	b570      	push	{r4, r5, r6, lr}
     788:	2200      	movs	r2, #0
     78a:	4604      	mov	r4, r0
     78c:	460d      	mov	r5, r1
     78e:	601a      	str	r2, [r3, #0]
     790:	f7ff ffe2 	bl	758 <clearTokenObject>
     794:	f104 0330 	add.w	r3, r4, #48	; 0x30
     798:	4629      	mov	r1, r5
     79a:	461a      	mov	r2, r3
     79c:	f105 0640 	add.w	r6, r5, #64	; 0x40
     7a0:	4608      	mov	r0, r1
     7a2:	f811 5b01 	ldrb.w	r5, [r1], #1
     7a6:	b125      	cbz	r5, 7b2 <__mriToken_SplitString+0x2e>
     7a8:	42b1      	cmp	r1, r6
     7aa:	f802 5b01 	strb.w	r5, [r2], #1
     7ae:	4608      	mov	r0, r1
     7b0:	d1f6      	bne.n	7a0 <__mriToken_SplitString+0x1c>
     7b2:	2100      	movs	r1, #0
     7b4:	7011      	strb	r1, [r2, #0]
     7b6:	7800      	ldrb	r0, [r0, #0]
     7b8:	4a1e      	ldr	r2, [pc, #120]	; (834 <Heap_Size+0x34>)
     7ba:	b120      	cbz	r0, 7c6 <__mriToken_SplitString+0x42>
     7bc:	6811      	ldr	r1, [r2, #0]
     7be:	2901      	cmp	r1, #1
     7c0:	bfb8      	it	lt
     7c2:	2101      	movlt	r1, #1
     7c4:	6011      	str	r1, [r2, #0]
     7c6:	6810      	ldr	r0, [r2, #0]
     7c8:	2800      	cmp	r0, #0
     7ca:	d132      	bne.n	832 <Heap_Size+0x32>
     7cc:	781a      	ldrb	r2, [r3, #0]
     7ce:	2a00      	cmp	r2, #0
     7d0:	d02f      	beq.n	832 <Heap_Size+0x32>
     7d2:	461a      	mov	r2, r3
     7d4:	f813 5b01 	ldrb.w	r5, [r3], #1
     7d8:	b92d      	cbnz	r5, 7e6 <__mriToken_SplitString+0x62>
     7da:	4b16      	ldr	r3, [pc, #88]	; (834 <Heap_Size+0x34>)
     7dc:	2000      	movs	r0, #0
     7de:	6018      	str	r0, [r3, #0]
     7e0:	7811      	ldrb	r1, [r2, #0]
     7e2:	b949      	cbnz	r1, 7f8 <__mriToken_SplitString+0x74>
     7e4:	e012      	b.n	80c <Heap_Size+0xc>
     7e6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     7e8:	1e48      	subs	r0, r1, #1
     7ea:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     7ee:	2900      	cmp	r1, #0
     7f0:	d0f3      	beq.n	7da <__mriToken_SplitString+0x56>
     7f2:	428d      	cmp	r5, r1
     7f4:	d1f9      	bne.n	7ea <__mriToken_SplitString+0x66>
     7f6:	e7ec      	b.n	7d2 <__mriToken_SplitString+0x4e>
     7f8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
     7fa:	2809      	cmp	r0, #9
     7fc:	d902      	bls.n	804 <Heap_Size+0x4>
     7fe:	2001      	movs	r0, #1
     800:	6018      	str	r0, [r3, #0]
     802:	e003      	b.n	80c <Heap_Size+0xc>
     804:	1c41      	adds	r1, r0, #1
     806:	f844 2020 	str.w	r2, [r4, r0, lsl #2]
     80a:	62e1      	str	r1, [r4, #44]	; 0x2c
     80c:	681b      	ldr	r3, [r3, #0]
     80e:	b983      	cbnz	r3, 832 <Heap_Size+0x32>
     810:	4613      	mov	r3, r2
     812:	f812 5b01 	ldrb.w	r5, [r2], #1
     816:	2d00      	cmp	r5, #0
     818:	d0d8      	beq.n	7cc <__mriToken_SplitString+0x48>
     81a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     81c:	1e48      	subs	r0, r1, #1
     81e:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     822:	2900      	cmp	r1, #0
     824:	d0f4      	beq.n	810 <Heap_Size+0x10>
     826:	428d      	cmp	r5, r1
     828:	d1f9      	bne.n	81e <Heap_Size+0x1e>
     82a:	2100      	movs	r1, #0
     82c:	f803 1b01 	strb.w	r1, [r3], #1
     830:	e7cc      	b.n	7cc <__mriToken_SplitString+0x48>
     832:	bd70      	pop	{r4, r5, r6, pc}
     834:	100001dc 	.word	0x100001dc

00000838 <__mriToken_MatchingString>:
     838:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     83c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     83e:	4606      	mov	r6, r0
     840:	4688      	mov	r8, r1
     842:	2400      	movs	r4, #0
     844:	42bc      	cmp	r4, r7
     846:	d008      	beq.n	85a <__mriToken_MatchingString+0x22>
     848:	f856 5024 	ldr.w	r5, [r6, r4, lsl #2]
     84c:	4641      	mov	r1, r8
     84e:	4628      	mov	r0, r5
     850:	f002 fddb 	bl	340a <strcmp>
     854:	b110      	cbz	r0, 85c <__mriToken_MatchingString+0x24>
     856:	3401      	adds	r4, #1
     858:	e7f4      	b.n	844 <__mriToken_MatchingString+0xc>
     85a:	2500      	movs	r5, #0
     85c:	4628      	mov	r0, r5
     85e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00000862 <__mriToken_MatchingStringPrefix>:
     862:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     866:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     868:	4606      	mov	r6, r0
     86a:	4688      	mov	r8, r1
     86c:	2500      	movs	r5, #0
     86e:	42bd      	cmp	r5, r7
     870:	d009      	beq.n	886 <__mriToken_MatchingStringPrefix+0x24>
     872:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
     876:	4641      	mov	r1, r8
     878:	4620      	mov	r0, r4
     87a:	f002 fdf0 	bl	345e <strstr>
     87e:	4284      	cmp	r4, r0
     880:	d002      	beq.n	888 <__mriToken_MatchingStringPrefix+0x26>
     882:	3501      	adds	r5, #1
     884:	e7f3      	b.n	86e <__mriToken_MatchingStringPrefix+0xc>
     886:	2400      	movs	r4, #0
     888:	4620      	mov	r0, r4
     88a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

00000890 <findDWTComparator>:
     890:	4b12      	ldr	r3, [pc, #72]	; (8dc <findDWTComparator+0x4c>)
     892:	b5f0      	push	{r4, r5, r6, r7, lr}
     894:	681f      	ldr	r7, [r3, #0]
     896:	4606      	mov	r6, r0
     898:	0f3f      	lsrs	r7, r7, #28
     89a:	2300      	movs	r3, #0
     89c:	f103 6060 	add.w	r0, r3, #234881024	; 0xe000000
     8a0:	f500 7081 	add.w	r0, r0, #258	; 0x102
     8a4:	0100      	lsls	r0, r0, #4
     8a6:	42bb      	cmp	r3, r7
     8a8:	d013      	beq.n	8d2 <findDWTComparator+0x42>
     8aa:	6885      	ldr	r5, [r0, #8]
     8ac:	4c0c      	ldr	r4, [pc, #48]	; (8e0 <findDWTComparator+0x50>)
     8ae:	402c      	ands	r4, r5
     8b0:	4294      	cmp	r4, r2
     8b2:	d110      	bne.n	8d6 <findDWTComparator+0x46>
     8b4:	6804      	ldr	r4, [r0, #0]
     8b6:	42b4      	cmp	r4, r6
     8b8:	d10d      	bne.n	8d6 <findDWTComparator+0x46>
     8ba:	f8d0 c004 	ldr.w	r12, [r0, #4]
     8be:	460d      	mov	r5, r1
     8c0:	2400      	movs	r4, #0
     8c2:	2d01      	cmp	r5, #1
     8c4:	d902      	bls.n	8cc <findDWTComparator+0x3c>
     8c6:	086d      	lsrs	r5, r5, #1
     8c8:	3401      	adds	r4, #1
     8ca:	e7fa      	b.n	8c2 <findDWTComparator+0x32>
     8cc:	45a4      	cmp	r12, r4
     8ce:	d102      	bne.n	8d6 <findDWTComparator+0x46>
     8d0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8d2:	2000      	movs	r0, #0
     8d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8d6:	3301      	adds	r3, #1
     8d8:	e7e0      	b.n	89c <findDWTComparator+0xc>
     8da:	bf00      	nop
     8dc:	e0001000 	.word	0xe0001000
     8e0:	000ffdaf 	.word	0x000ffdaf

000008e4 <getFPBCodeComparatorCount>:
     8e4:	4b04      	ldr	r3, [pc, #16]	; (8f8 <getFPBCodeComparatorCount+0x14>)
     8e6:	6819      	ldr	r1, [r3, #0]
     8e8:	f3c1 1003 	ubfx	r0, r1, #4, #4
     8ec:	f401 42e0 	and.w	r2, r1, #28672	; 0x7000
     8f0:	ea40 2012 	orr.w	r0, r0, r2, lsr #8
     8f4:	4770      	bx	lr
     8f6:	bf00      	nop
     8f8:	e0002000 	.word	0xe0002000

000008fc <prepareToAccessMPURegion>:
     8fc:	4b05      	ldr	r3, [pc, #20]	; (914 <prepareToAccessMPURegion+0x18>)
     8fe:	681a      	ldr	r2, [r3, #0]
     900:	f3c2 2107 	ubfx	r1, r2, #8, #8
     904:	4288      	cmp	r0, r1
     906:	d202      	bcs.n	90e <prepareToAccessMPURegion+0x12>
     908:	6098      	str	r0, [r3, #8]
     90a:	2001      	movs	r0, #1
     90c:	4770      	bx	lr
     90e:	2000      	movs	r0, #0
     910:	4770      	bx	lr
     912:	bf00      	nop
     914:	e000ed90 	.word	0xe000ed90

00000918 <displayMemFaultCauseToGdbConsole>:
     918:	b570      	push	{r4, r5, r6, lr}
     91a:	4d1e      	ldr	r5, [pc, #120]	; (994 <displayMemFaultCauseToGdbConsole+0x7c>)
     91c:	6aac      	ldr	r4, [r5, #40]	; 0x28
     91e:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     922:	d035      	beq.n	990 <displayMemFaultCauseToGdbConsole+0x78>
     924:	481c      	ldr	r0, [pc, #112]	; (998 <displayMemFaultCauseToGdbConsole+0x80>)
     926:	f001 ff96 	bl	2856 <__mriGdbConsole_WriteString>
     92a:	481c      	ldr	r0, [pc, #112]	; (99c <displayMemFaultCauseToGdbConsole+0x84>)
     92c:	f001 ff93 	bl	2856 <__mriGdbConsole_WriteString>
     930:	4630      	mov	r0, r6
     932:	f001 ffb7 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     936:	0622      	lsls	r2, r4, #24
     938:	d505      	bpl.n	946 <displayMemFaultCauseToGdbConsole+0x2e>
     93a:	4819      	ldr	r0, [pc, #100]	; (9a0 <displayMemFaultCauseToGdbConsole+0x88>)
     93c:	f001 ff8b 	bl	2856 <__mriGdbConsole_WriteString>
     940:	6b68      	ldr	r0, [r5, #52]	; 0x34
     942:	f001 ffaf 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     946:	06a3      	lsls	r3, r4, #26
     948:	d502      	bpl.n	950 <displayMemFaultCauseToGdbConsole+0x38>
     94a:	4816      	ldr	r0, [pc, #88]	; (9a4 <displayMemFaultCauseToGdbConsole+0x8c>)
     94c:	f001 ff83 	bl	2856 <__mriGdbConsole_WriteString>
     950:	06e0      	lsls	r0, r4, #27
     952:	d507      	bpl.n	964 <displayMemFaultCauseToGdbConsole+0x4c>
     954:	4814      	ldr	r0, [pc, #80]	; (9a8 <displayMemFaultCauseToGdbConsole+0x90>)
     956:	f001 ff7e 	bl	2856 <__mriGdbConsole_WriteString>
     95a:	4b14      	ldr	r3, [pc, #80]	; (9ac <displayMemFaultCauseToGdbConsole+0x94>)
     95c:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     960:	f001 ffa0 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     964:	0721      	lsls	r1, r4, #28
     966:	d507      	bpl.n	978 <displayMemFaultCauseToGdbConsole+0x60>
     968:	4811      	ldr	r0, [pc, #68]	; (9b0 <displayMemFaultCauseToGdbConsole+0x98>)
     96a:	f001 ff74 	bl	2856 <__mriGdbConsole_WriteString>
     96e:	480f      	ldr	r0, [pc, #60]	; (9ac <displayMemFaultCauseToGdbConsole+0x94>)
     970:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     974:	f001 ff96 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     978:	07a2      	lsls	r2, r4, #30
     97a:	d502      	bpl.n	982 <displayMemFaultCauseToGdbConsole+0x6a>
     97c:	480d      	ldr	r0, [pc, #52]	; (9b4 <displayMemFaultCauseToGdbConsole+0x9c>)
     97e:	f001 ff6a 	bl	2856 <__mriGdbConsole_WriteString>
     982:	07e3      	lsls	r3, r4, #31
     984:	d504      	bpl.n	990 <displayMemFaultCauseToGdbConsole+0x78>
     986:	480c      	ldr	r0, [pc, #48]	; (9b8 <displayMemFaultCauseToGdbConsole+0xa0>)
     988:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     98c:	f001 bf63 	b.w	2856 <__mriGdbConsole_WriteString>
     990:	bd70      	pop	{r4, r5, r6, pc}
     992:	bf00      	nop
     994:	e000ed00 	.word	0xe000ed00
     998:	0000382f 	.word	0x0000382f
     99c:	0000383e 	.word	0x0000383e
     9a0:	00003853 	.word	0x00003853
     9a4:	00003868 	.word	0x00003868
     9a8:	00003882 	.word	0x00003882
     9ac:	100001e0 	.word	0x100001e0
     9b0:	0000389f 	.word	0x0000389f
     9b4:	000038be 	.word	0x000038be
     9b8:	000038cf 	.word	0x000038cf

000009bc <displayBusFaultCauseToGdbConsole>:
     9bc:	b570      	push	{r4, r5, r6, lr}
     9be:	4d21      	ldr	r5, [pc, #132]	; (a44 <displayBusFaultCauseToGdbConsole+0x88>)
     9c0:	6aac      	ldr	r4, [r5, #40]	; 0x28
     9c2:	0a24      	lsrs	r4, r4, #8
     9c4:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     9c8:	d03a      	beq.n	a40 <displayBusFaultCauseToGdbConsole+0x84>
     9ca:	481f      	ldr	r0, [pc, #124]	; (a48 <displayBusFaultCauseToGdbConsole+0x8c>)
     9cc:	f001 ff43 	bl	2856 <__mriGdbConsole_WriteString>
     9d0:	481e      	ldr	r0, [pc, #120]	; (a4c <displayBusFaultCauseToGdbConsole+0x90>)
     9d2:	f001 ff40 	bl	2856 <__mriGdbConsole_WriteString>
     9d6:	4630      	mov	r0, r6
     9d8:	f001 ff64 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     9dc:	0623      	lsls	r3, r4, #24
     9de:	d505      	bpl.n	9ec <displayBusFaultCauseToGdbConsole+0x30>
     9e0:	481b      	ldr	r0, [pc, #108]	; (a50 <displayBusFaultCauseToGdbConsole+0x94>)
     9e2:	f001 ff38 	bl	2856 <__mriGdbConsole_WriteString>
     9e6:	6ba8      	ldr	r0, [r5, #56]	; 0x38
     9e8:	f001 ff5c 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     9ec:	06a0      	lsls	r0, r4, #26
     9ee:	d502      	bpl.n	9f6 <displayBusFaultCauseToGdbConsole+0x3a>
     9f0:	4818      	ldr	r0, [pc, #96]	; (a54 <displayBusFaultCauseToGdbConsole+0x98>)
     9f2:	f001 ff30 	bl	2856 <__mriGdbConsole_WriteString>
     9f6:	06e1      	lsls	r1, r4, #27
     9f8:	d507      	bpl.n	a0a <displayBusFaultCauseToGdbConsole+0x4e>
     9fa:	4817      	ldr	r0, [pc, #92]	; (a58 <displayBusFaultCauseToGdbConsole+0x9c>)
     9fc:	f001 ff2b 	bl	2856 <__mriGdbConsole_WriteString>
     a00:	4b16      	ldr	r3, [pc, #88]	; (a5c <displayBusFaultCauseToGdbConsole+0xa0>)
     a02:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     a06:	f001 ff4d 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     a0a:	0722      	lsls	r2, r4, #28
     a0c:	d507      	bpl.n	a1e <displayBusFaultCauseToGdbConsole+0x62>
     a0e:	4814      	ldr	r0, [pc, #80]	; (a60 <displayBusFaultCauseToGdbConsole+0xa4>)
     a10:	f001 ff21 	bl	2856 <__mriGdbConsole_WriteString>
     a14:	4811      	ldr	r0, [pc, #68]	; (a5c <displayBusFaultCauseToGdbConsole+0xa0>)
     a16:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     a1a:	f001 ff43 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     a1e:	0763      	lsls	r3, r4, #29
     a20:	d502      	bpl.n	a28 <displayBusFaultCauseToGdbConsole+0x6c>
     a22:	4810      	ldr	r0, [pc, #64]	; (a64 <displayBusFaultCauseToGdbConsole+0xa8>)
     a24:	f001 ff17 	bl	2856 <__mriGdbConsole_WriteString>
     a28:	07a0      	lsls	r0, r4, #30
     a2a:	d502      	bpl.n	a32 <displayBusFaultCauseToGdbConsole+0x76>
     a2c:	480e      	ldr	r0, [pc, #56]	; (a68 <displayBusFaultCauseToGdbConsole+0xac>)
     a2e:	f001 ff12 	bl	2856 <__mriGdbConsole_WriteString>
     a32:	07e1      	lsls	r1, r4, #31
     a34:	d504      	bpl.n	a40 <displayBusFaultCauseToGdbConsole+0x84>
     a36:	480d      	ldr	r0, [pc, #52]	; (a6c <displayBusFaultCauseToGdbConsole+0xb0>)
     a38:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     a3c:	f001 bf0b 	b.w	2856 <__mriGdbConsole_WriteString>
     a40:	bd70      	pop	{r4, r5, r6, pc}
     a42:	bf00      	nop
     a44:	e000ed00 	.word	0xe000ed00
     a48:	000038e6 	.word	0x000038e6
     a4c:	0000383e 	.word	0x0000383e
     a50:	00003853 	.word	0x00003853
     a54:	00003868 	.word	0x00003868
     a58:	00003882 	.word	0x00003882
     a5c:	100001e0 	.word	0x100001e0
     a60:	0000389f 	.word	0x0000389f
     a64:	000038f5 	.word	0x000038f5
     a68:	00003910 	.word	0x00003910
     a6c:	00003929 	.word	0x00003929

00000a70 <displayUsageFaultCauseToGdbConsole>:
     a70:	4b17      	ldr	r3, [pc, #92]	; (ad0 <displayUsageFaultCauseToGdbConsole+0x60>)
     a72:	b510      	push	{r4, lr}
     a74:	6a9c      	ldr	r4, [r3, #40]	; 0x28
     a76:	0c24      	lsrs	r4, r4, #16
     a78:	d028      	beq.n	acc <displayUsageFaultCauseToGdbConsole+0x5c>
     a7a:	4816      	ldr	r0, [pc, #88]	; (ad4 <displayUsageFaultCauseToGdbConsole+0x64>)
     a7c:	f001 feeb 	bl	2856 <__mriGdbConsole_WriteString>
     a80:	4815      	ldr	r0, [pc, #84]	; (ad8 <displayUsageFaultCauseToGdbConsole+0x68>)
     a82:	f001 fee8 	bl	2856 <__mriGdbConsole_WriteString>
     a86:	4620      	mov	r0, r4
     a88:	f001 ff0c 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     a8c:	05a1      	lsls	r1, r4, #22
     a8e:	d502      	bpl.n	a96 <displayUsageFaultCauseToGdbConsole+0x26>
     a90:	4812      	ldr	r0, [pc, #72]	; (adc <displayUsageFaultCauseToGdbConsole+0x6c>)
     a92:	f001 fee0 	bl	2856 <__mriGdbConsole_WriteString>
     a96:	05e2      	lsls	r2, r4, #23
     a98:	d502      	bpl.n	aa0 <displayUsageFaultCauseToGdbConsole+0x30>
     a9a:	4811      	ldr	r0, [pc, #68]	; (ae0 <displayUsageFaultCauseToGdbConsole+0x70>)
     a9c:	f001 fedb 	bl	2856 <__mriGdbConsole_WriteString>
     aa0:	0723      	lsls	r3, r4, #28
     aa2:	d502      	bpl.n	aaa <displayUsageFaultCauseToGdbConsole+0x3a>
     aa4:	480f      	ldr	r0, [pc, #60]	; (ae4 <displayUsageFaultCauseToGdbConsole+0x74>)
     aa6:	f001 fed6 	bl	2856 <__mriGdbConsole_WriteString>
     aaa:	0760      	lsls	r0, r4, #29
     aac:	d502      	bpl.n	ab4 <displayUsageFaultCauseToGdbConsole+0x44>
     aae:	480e      	ldr	r0, [pc, #56]	; (ae8 <displayUsageFaultCauseToGdbConsole+0x78>)
     ab0:	f001 fed1 	bl	2856 <__mriGdbConsole_WriteString>
     ab4:	07a1      	lsls	r1, r4, #30
     ab6:	d502      	bpl.n	abe <displayUsageFaultCauseToGdbConsole+0x4e>
     ab8:	480c      	ldr	r0, [pc, #48]	; (aec <displayUsageFaultCauseToGdbConsole+0x7c>)
     aba:	f001 fecc 	bl	2856 <__mriGdbConsole_WriteString>
     abe:	07e2      	lsls	r2, r4, #31
     ac0:	d504      	bpl.n	acc <displayUsageFaultCauseToGdbConsole+0x5c>
     ac2:	480b      	ldr	r0, [pc, #44]	; (af0 <displayUsageFaultCauseToGdbConsole+0x80>)
     ac4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     ac8:	f001 bec5 	b.w	2856 <__mriGdbConsole_WriteString>
     acc:	bd10      	pop	{r4, pc}
     ace:	bf00      	nop
     ad0:	e000ed00 	.word	0xe000ed00
     ad4:	00003943 	.word	0x00003943
     ad8:	0000383e 	.word	0x0000383e
     adc:	00003954 	.word	0x00003954
     ae0:	00003968 	.word	0x00003968
     ae4:	0000397e 	.word	0x0000397e
     ae8:	00003996 	.word	0x00003996
     aec:	000039ba 	.word	0x000039ba
     af0:	000039cd 	.word	0x000039cd

00000af4 <calculateFPBComparatorValue>:
     af4:	4b0c      	ldr	r3, [pc, #48]	; (b28 <calculateFPBComparatorValue+0x34>)
     af6:	4003      	ands	r3, r0
     af8:	b113      	cbz	r3, b00 <calculateFPBComparatorValue+0xc>
     afa:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     afe:	4770      	bx	lr
     b00:	f020 4260 	bic.w	r2, r0, #3758096384	; 0xe0000000
     b04:	f022 0303 	bic.w	r3, r2, #3
     b08:	f043 0201 	orr.w	r2, r3, #1
     b0c:	b939      	cbnz	r1, b1e <calculateFPBComparatorValue+0x2a>
     b0e:	f010 0f02 	tst.w	r0, #2
     b12:	bf0c      	ite	eq
     b14:	f04f 4080 	moveq.w	r0, #1073741824	; 0x40000000
     b18:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
     b1c:	e001      	b.n	b22 <calculateFPBComparatorValue+0x2e>
     b1e:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
     b22:	4310      	orrs	r0, r2
     b24:	4770      	bx	lr
     b26:	bf00      	nop
     b28:	e0000001 	.word	0xe0000001

00000b2c <findFPBBreakpointComparator>:
     b2c:	b538      	push	{r3, r4, r5, lr}
     b2e:	f7ff ffe1 	bl	af4 <calculateFPBComparatorValue>
     b32:	4604      	mov	r4, r0
     b34:	f7ff fed6 	bl	8e4 <getFPBCodeComparatorCount>
     b38:	4a08      	ldr	r2, [pc, #32]	; (b5c <findFPBBreakpointComparator+0x30>)
     b3a:	2300      	movs	r3, #0
     b3c:	4283      	cmp	r3, r0
     b3e:	4611      	mov	r1, r2
     b40:	d009      	beq.n	b56 <findFPBBreakpointComparator+0x2a>
     b42:	f852 5b04 	ldr.w	r5, [r2], #4
     b46:	f025 5500 	bic.w	r5, r5, #536870912	; 0x20000000
     b4a:	f025 0502 	bic.w	r5, r5, #2
     b4e:	42ac      	cmp	r4, r5
     b50:	d002      	beq.n	b58 <findFPBBreakpointComparator+0x2c>
     b52:	3301      	adds	r3, #1
     b54:	e7f2      	b.n	b3c <findFPBBreakpointComparator+0x10>
     b56:	2100      	movs	r1, #0
     b58:	4608      	mov	r0, r1
     b5a:	bd38      	pop	{r3, r4, r5, pc}
     b5c:	e0002008 	.word	0xe0002008

00000b60 <isMPUNotPresent>:
     b60:	4b04      	ldr	r3, [pc, #16]	; (b74 <isMPUNotPresent+0x14>)
     b62:	6818      	ldr	r0, [r3, #0]
     b64:	f3c0 2107 	ubfx	r1, r0, #8, #8
     b68:	f1d1 0001 	rsbs	r0, r1, #1
     b6c:	bf38      	it	cc
     b6e:	2000      	movcc	r0, #0
     b70:	4770      	bx	lr
     b72:	bf00      	nop
     b74:	e000ed90 	.word	0xe000ed90

00000b78 <sendRegisterForTResponse>:
     b78:	b573      	push	{r0, r1, r4, r5, r6, lr}
     b7a:	4604      	mov	r4, r0
     b7c:	ad02      	add	r5, sp, #8
     b7e:	f845 2d04 	str.w	r2, [r5, #-4]!
     b82:	f001 f8b7 	bl	1cf4 <__mriBuffer_WriteByteAsHex>
     b86:	4620      	mov	r0, r4
     b88:	213a      	movs	r1, #58	; 0x3a
     b8a:	f001 f88d 	bl	1ca8 <__mriBuffer_WriteChar>
     b8e:	3d01      	subs	r5, #1
     b90:	f10d 0607 	add.w	r6, sp, #7
     b94:	f815 1f01 	ldrb.w	r1, [r5, #1]!
     b98:	4620      	mov	r0, r4
     b9a:	f001 f8ab 	bl	1cf4 <__mriBuffer_WriteByteAsHex>
     b9e:	42b5      	cmp	r5, r6
     ba0:	d1f8      	bne.n	b94 <sendRegisterForTResponse+0x1c>
     ba2:	4620      	mov	r0, r4
     ba4:	213b      	movs	r1, #59	; 0x3b
     ba6:	f001 f87f 	bl	1ca8 <__mriBuffer_WriteChar>
     baa:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

00000bac <__mriPlatform_DisableSingleStep>:
     bac:	4b06      	ldr	r3, [pc, #24]	; (bc8 <__mriPlatform_DisableSingleStep+0x1c>)
     bae:	4907      	ldr	r1, [pc, #28]	; (bcc <__mriPlatform_DisableSingleStep+0x20>)
     bb0:	68da      	ldr	r2, [r3, #12]
     bb2:	f422 2080 	bic.w	r0, r2, #262144	; 0x40000
     bb6:	60d8      	str	r0, [r3, #12]
     bb8:	f8d1 3200 	ldr.w	r3, [r1, #512]	; 0x200
     bbc:	f023 0204 	bic.w	r2, r3, #4
     bc0:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
     bc4:	4770      	bx	lr
     bc6:	bf00      	nop
     bc8:	e000edf0 	.word	0xe000edf0
     bcc:	100001e0 	.word	0x100001e0

00000bd0 <__mriCortexMInit>:
     bd0:	b510      	push	{r4, lr}
     bd2:	2100      	movs	r1, #0
     bd4:	f44f 7240 	mov.w	r2, #768	; 0x300
     bd8:	4823      	ldr	r0, [pc, #140]	; (c68 <Stack_Size+0x68>)
     bda:	f002 fc0e 	bl	33fa <memset>
     bde:	4b23      	ldr	r3, [pc, #140]	; (c6c <Stack_Size+0x6c>)
     be0:	4923      	ldr	r1, [pc, #140]	; (c70 <Stack_Size+0x70>)
     be2:	68da      	ldr	r2, [r3, #12]
     be4:	f042 7080 	orr.w	r0, r2, #16777216	; 0x1000000
     be8:	60d8      	str	r0, [r3, #12]
     bea:	680c      	ldr	r4, [r1, #0]
     bec:	2300      	movs	r3, #0
     bee:	0f20      	lsrs	r0, r4, #28
     bf0:	f103 6260 	add.w	r2, r3, #234881024	; 0xe000000
     bf4:	f502 7181 	add.w	r1, r2, #258	; 0x102
     bf8:	010c      	lsls	r4, r1, #4
     bfa:	4283      	cmp	r3, r0
     bfc:	d00a      	beq.n	c14 <Stack_Size+0x14>
     bfe:	2100      	movs	r1, #0
     c00:	6021      	str	r1, [r4, #0]
     c02:	6061      	str	r1, [r4, #4]
     c04:	68a2      	ldr	r2, [r4, #8]
     c06:	3301      	adds	r3, #1
     c08:	f422 71d7 	bic.w	r1, r2, #430	; 0x1ae
     c0c:	f021 0201 	bic.w	r2, r1, #1
     c10:	60a2      	str	r2, [r4, #8]
     c12:	e7ed      	b.n	bf0 <__mriCortexMInit+0x20>
     c14:	f7ff fe66 	bl	8e4 <getFPBCodeComparatorCount>
     c18:	4a16      	ldr	r2, [pc, #88]	; (c74 <Stack_Size+0x74>)
     c1a:	6813      	ldr	r3, [r2, #0]
     c1c:	f3c3 2103 	ubfx	r1, r3, #8, #4
     c20:	1840      	adds	r0, r0, r1
     c22:	4915      	ldr	r1, [pc, #84]	; (c78 <Stack_Size+0x78>)
     c24:	2300      	movs	r3, #0
     c26:	4283      	cmp	r3, r0
     c28:	d004      	beq.n	c34 <Stack_Size+0x34>
     c2a:	2400      	movs	r4, #0
     c2c:	f841 4b04 	str.w	r4, [r1], #4
     c30:	3301      	adds	r3, #1
     c32:	e7f8      	b.n	c26 <Stack_Size+0x26>
     c34:	6810      	ldr	r0, [r2, #0]
     c36:	f040 0403 	orr.w	r4, r0, #3
     c3a:	6014      	str	r4, [r2, #0]
     c3c:	4c0f      	ldr	r4, [pc, #60]	; (c7c <Stack_Size+0x7c>)
     c3e:	2208      	movs	r2, #8
     c40:	77e2      	strb	r2, [r4, #31]
     c42:	f884 2022 	strb.w	r2, [r4, #34]	; 0x22
     c46:	f884 2023 	strb.w	r2, [r4, #35]	; 0x23
     c4a:	f7ff ffaf 	bl	bac <__mriPlatform_DisableSingleStep>
     c4e:	4b07      	ldr	r3, [pc, #28]	; (c6c <Stack_Size+0x6c>)
     c50:	2200      	movs	r2, #0
     c52:	68d9      	ldr	r1, [r3, #12]
     c54:	f421 3000 	bic.w	r0, r1, #131072	; 0x20000
     c58:	60d8      	str	r0, [r3, #12]
     c5a:	f884 2020 	strb.w	r2, [r4, #32]
     c5e:	68d9      	ldr	r1, [r3, #12]
     c60:	f441 3080 	orr.w	r0, r1, #65536	; 0x10000
     c64:	60d8      	str	r0, [r3, #12]
     c66:	bd10      	pop	{r4, pc}
     c68:	100001e0 	.word	0x100001e0
     c6c:	e000edf0 	.word	0xe000edf0
     c70:	e0001000 	.word	0xe0001000
     c74:	e0002000 	.word	0xe0002000
     c78:	e0002008 	.word	0xe0002008
     c7c:	e000ed00 	.word	0xe000ed00

00000c80 <__mriPlatform_EnableSingleStep>:
     c80:	b508      	push	{r3, lr}
     c82:	4b17      	ldr	r3, [pc, #92]	; (ce0 <__mriPlatform_EnableSingleStep+0x60>)
     c84:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
     c88:	f042 0004 	orr.w	r0, r2, #4
     c8c:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
     c90:	f8d3 3248 	ldr.w	r3, [r3, #584]	; 0x248
     c94:	8819      	ldrh	r1, [r3, #0]
     c96:	f021 020f 	bic.w	r2, r1, #15
     c9a:	b290      	uxth	r0, r2
     c9c:	f24f 3180 	movw	r1, #62336	; 0xf380
     ca0:	4288      	cmp	r0, r1
     ca2:	d110      	bne.n	cc6 <__mriPlatform_EnableSingleStep+0x46>
     ca4:	885b      	ldrh	r3, [r3, #2]
     ca6:	f648 0211 	movw	r2, #34833	; 0x8811
     caa:	4293      	cmp	r3, r2
     cac:	d002      	beq.n	cb4 <__mriPlatform_EnableSingleStep+0x34>
     cae:	1c50      	adds	r0, r2, #1
     cb0:	4283      	cmp	r3, r0
     cb2:	d108      	bne.n	cc6 <__mriPlatform_EnableSingleStep+0x46>
     cb4:	2008      	movs	r0, #8
     cb6:	f000 feb2 	bl	1a1e <__mriSetBASEPRI>
     cba:	480a      	ldr	r0, [pc, #40]	; (ce4 <__mriPlatform_EnableSingleStep+0x64>)
     cbc:	68c1      	ldr	r1, [r0, #12]
     cbe:	f441 2380 	orr.w	r3, r1, #262144	; 0x40000
     cc2:	60c3      	str	r3, [r0, #12]
     cc4:	bd08      	pop	{r3, pc}
     cc6:	f000 fead 	bl	1a24 <__mriGetBASEPRI>
     cca:	4905      	ldr	r1, [pc, #20]	; (ce0 <__mriPlatform_EnableSingleStep+0x60>)
     ccc:	f8d1 3200 	ldr.w	r3, [r1, #512]	; 0x200
     cd0:	f8c1 0268 	str.w	r0, [r1, #616]	; 0x268
     cd4:	f043 0208 	orr.w	r2, r3, #8
     cd8:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
     cdc:	e7ea      	b.n	cb4 <__mriPlatform_EnableSingleStep+0x34>
     cde:	bf00      	nop
     ce0:	100001e0 	.word	0x100001e0
     ce4:	e000edf0 	.word	0xe000edf0

00000ce8 <__mriPlatform_IsSingleStepping>:
     ce8:	4b02      	ldr	r3, [pc, #8]	; (cf4 <__mriPlatform_IsSingleStepping+0xc>)
     cea:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
     cee:	f000 0004 	and.w	r0, r0, #4
     cf2:	4770      	bx	lr
     cf4:	100001e0 	.word	0x100001e0

00000cf8 <__mriPlatform_GetPacketBuffer>:
     cf8:	4800      	ldr	r0, [pc, #0]	; (cfc <__mriPlatform_GetPacketBuffer+0x4>)
     cfa:	4770      	bx	lr
     cfc:	10000450 	.word	0x10000450

00000d00 <__mriPlatform_GetPacketBufferSize>:
     d00:	2089      	movs	r0, #137	; 0x89
     d02:	4770      	bx	lr

00000d04 <__mriPlatform_DetermineCauseOfException>:
     d04:	b510      	push	{r4, lr}
     d06:	f000 fe87 	bl	1a18 <__mriGetIPSR>
     d0a:	b2c0      	uxtb	r0, r0
     d0c:	1e81      	subs	r1, r0, #2
     d0e:	2916      	cmp	r1, #22
     d10:	d824      	bhi.n	d5c <__mriPlatform_DetermineCauseOfException+0x58>
     d12:	e8df f001 	tbb	[pc, r1]
     d16:	250c      	.short	0x250c
     d18:	23100e25 	.word	0x23100e25
     d1c:	23232323 	.word	0x23232323
     d20:	23232312 	.word	0x23232312
     d24:	23232323 	.word	0x23232323
     d28:	0c0c0c23 	.word	0x0c0c0c23
     d2c:	0c          	.byte	0x0c
     d2d:	00          	.byte	0x00
     d2e:	2002      	movs	r0, #2
     d30:	bd10      	pop	{r4, pc}
     d32:	200a      	movs	r0, #10
     d34:	bd10      	pop	{r4, pc}
     d36:	2004      	movs	r0, #4
     d38:	bd10      	pop	{r4, pc}
     d3a:	4b0a      	ldr	r3, [pc, #40]	; (d64 <__mriPlatform_DetermineCauseOfException+0x60>)
     d3c:	6b18      	ldr	r0, [r3, #48]	; 0x30
     d3e:	2300      	movs	r3, #0
     d40:	4a09      	ldr	r2, [pc, #36]	; (d68 <__mriPlatform_DetermineCauseOfException+0x64>)
     d42:	00dc      	lsls	r4, r3, #3
     d44:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
     d48:	4201      	tst	r1, r0
     d4a:	d004      	beq.n	d56 <__mriPlatform_DetermineCauseOfException+0x52>
     d4c:	4805      	ldr	r0, [pc, #20]	; (d64 <__mriPlatform_DetermineCauseOfException+0x60>)
     d4e:	1912      	adds	r2, r2, r4
     d50:	6301      	str	r1, [r0, #48]	; 0x30
     d52:	7910      	ldrb	r0, [r2, #4]
     d54:	bd10      	pop	{r4, pc}
     d56:	3301      	adds	r3, #1
     d58:	2b04      	cmp	r3, #4
     d5a:	d1f1      	bne.n	d40 <__mriPlatform_DetermineCauseOfException+0x3c>
     d5c:	2011      	movs	r0, #17
     d5e:	bd10      	pop	{r4, pc}
     d60:	200b      	movs	r0, #11
     d62:	bd10      	pop	{r4, pc}
     d64:	e000ed00 	.word	0xe000ed00
     d68:	000037ec 	.word	0x000037ec

00000d6c <__mriPlatform_DisplayFaultCauseToGdbConsole>:
     d6c:	b510      	push	{r4, lr}
     d6e:	f000 fe53 	bl	1a18 <__mriGetIPSR>
     d72:	b2c0      	uxtb	r0, r0
     d74:	1ec1      	subs	r1, r0, #3
     d76:	2903      	cmp	r1, #3
     d78:	d82f      	bhi.n	dda <__mriPlatform_DisplayFaultCauseToGdbConsole+0x6e>
     d7a:	e8df f001 	tbb	[pc, r1]
     d7e:	2102      	.short	0x2102
     d80:	2724      	.short	0x2724
     d82:	4b16      	ldr	r3, [pc, #88]	; (ddc <__mriPlatform_DisplayFaultCauseToGdbConsole+0x70>)
     d84:	4816      	ldr	r0, [pc, #88]	; (de0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x74>)
     d86:	6adc      	ldr	r4, [r3, #44]	; 0x2c
     d88:	f001 fd65 	bl	2856 <__mriGdbConsole_WriteString>
     d8c:	4815      	ldr	r0, [pc, #84]	; (de4 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x78>)
     d8e:	f001 fd62 	bl	2856 <__mriGdbConsole_WriteString>
     d92:	4620      	mov	r0, r4
     d94:	f001 fd86 	bl	28a4 <__mriGdbConsole_WriteHexValue>
     d98:	2c00      	cmp	r4, #0
     d9a:	da02      	bge.n	da2 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x36>
     d9c:	4812      	ldr	r0, [pc, #72]	; (de8 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x7c>)
     d9e:	f001 fd5a 	bl	2856 <__mriGdbConsole_WriteString>
     da2:	07a3      	lsls	r3, r4, #30
     da4:	d502      	bpl.n	dac <__mriPlatform_DisplayFaultCauseToGdbConsole+0x40>
     da6:	4811      	ldr	r0, [pc, #68]	; (dec <__mriPlatform_DisplayFaultCauseToGdbConsole+0x80>)
     da8:	f001 fd55 	bl	2856 <__mriGdbConsole_WriteString>
     dac:	0060      	lsls	r0, r4, #1
     dae:	d50f      	bpl.n	dd0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     db0:	480f      	ldr	r0, [pc, #60]	; (df0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x84>)
     db2:	f001 fd50 	bl	2856 <__mriGdbConsole_WriteString>
     db6:	f7ff fdaf 	bl	918 <displayMemFaultCauseToGdbConsole>
     dba:	f7ff fdff 	bl	9bc <displayBusFaultCauseToGdbConsole>
     dbe:	e005      	b.n	dcc <__mriPlatform_DisplayFaultCauseToGdbConsole+0x60>
     dc0:	f7ff fdaa 	bl	918 <displayMemFaultCauseToGdbConsole>
     dc4:	e004      	b.n	dd0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     dc6:	f7ff fdf9 	bl	9bc <displayBusFaultCauseToGdbConsole>
     dca:	e001      	b.n	dd0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     dcc:	f7ff fe50 	bl	a70 <displayUsageFaultCauseToGdbConsole>
     dd0:	4808      	ldr	r0, [pc, #32]	; (df4 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x88>)
     dd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dd6:	f001 bd3e 	b.w	2856 <__mriGdbConsole_WriteString>
     dda:	bd10      	pop	{r4, pc}
     ddc:	e000ed00 	.word	0xe000ed00
     de0:	000039e8 	.word	0x000039e8
     de4:	0000383e 	.word	0x0000383e
     de8:	000039f8 	.word	0x000039f8
     dec:	00003a09 	.word	0x00003a09
     df0:	00003a20 	.word	0x00003a20
     df4:	00003a2c 	.word	0x00003a2c

00000df8 <__mriPlatform_EnteringDebugger>:
     df8:	b510      	push	{r4, lr}
     dfa:	4c3b      	ldr	r4, [pc, #236]	; (ee8 <__mriPlatform_EnteringDebugger+0xf0>)
     dfc:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
     e00:	f8d4 224c 	ldr.w	r2, [r4, #588]	; 0x24c
     e04:	f8d4 1248 	ldr.w	r1, [r4, #584]	; 0x248
     e08:	f023 0002 	bic.w	r0, r3, #2
     e0c:	f402 7300 	and.w	r3, r2, #512	; 0x200
     e10:	f8c4 1250 	str.w	r1, [r4, #592]	; 0x250
     e14:	f8c4 0200 	str.w	r0, [r4, #512]	; 0x200
     e18:	f8c4 3254 	str.w	r3, [r4, #596]	; 0x254
     e1c:	f7ff fea0 	bl	b60 <isMPUNotPresent>
     e20:	4932      	ldr	r1, [pc, #200]	; (eec <__mriPlatform_EnteringDebugger+0xf4>)
     e22:	b908      	cbnz	r0, e28 <__mriPlatform_EnteringDebugger+0x30>
     e24:	6848      	ldr	r0, [r1, #4]
     e26:	e001      	b.n	e2c <__mriPlatform_EnteringDebugger+0x34>
     e28:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     e2c:	f8c4 0258 	str.w	r0, [r4, #600]	; 0x258
     e30:	688a      	ldr	r2, [r1, #8]
     e32:	f8c4 225c 	str.w	r2, [r4, #604]	; 0x25c
     e36:	680c      	ldr	r4, [r1, #0]
     e38:	f3c4 2307 	ubfx	r3, r4, #8, #8
     e3c:	1e58      	subs	r0, r3, #1
     e3e:	f7ff fd5d 	bl	8fc <prepareToAccessMPURegion>
     e42:	f7ff fe8d 	bl	b60 <isMPUNotPresent>
     e46:	b918      	cbnz	r0, e50 <__mriPlatform_EnteringDebugger+0x58>
     e48:	4928      	ldr	r1, [pc, #160]	; (eec <__mriPlatform_EnteringDebugger+0xf4>)
     e4a:	68c8      	ldr	r0, [r1, #12]
     e4c:	0942      	lsrs	r2, r0, #5
     e4e:	e000      	b.n	e52 <__mriPlatform_EnteringDebugger+0x5a>
     e50:	2200      	movs	r2, #0
     e52:	4c25      	ldr	r4, [pc, #148]	; (ee8 <__mriPlatform_EnteringDebugger+0xf0>)
     e54:	f8c4 2260 	str.w	r2, [r4, #608]	; 0x260
     e58:	f7ff fe82 	bl	b60 <isMPUNotPresent>
     e5c:	b910      	cbnz	r0, e64 <__mriPlatform_EnteringDebugger+0x6c>
     e5e:	4b23      	ldr	r3, [pc, #140]	; (eec <__mriPlatform_EnteringDebugger+0xf4>)
     e60:	6919      	ldr	r1, [r3, #16]
     e62:	e000      	b.n	e66 <__mriPlatform_EnteringDebugger+0x6e>
     e64:	2100      	movs	r1, #0
     e66:	f8c4 1264 	str.w	r1, [r4, #612]	; 0x264
     e6a:	f7ff fe79 	bl	b60 <isMPUNotPresent>
     e6e:	4c1f      	ldr	r4, [pc, #124]	; (eec <__mriPlatform_EnteringDebugger+0xf4>)
     e70:	b938      	cbnz	r0, e82 <__mriPlatform_EnteringDebugger+0x8a>
     e72:	6860      	ldr	r0, [r4, #4]
     e74:	f020 0201 	bic.w	r2, r0, #1
     e78:	6062      	str	r2, [r4, #4]
     e7a:	f000 fdd6 	bl	1a2a <__mriDSB>
     e7e:	f000 fdd7 	bl	1a30 <__mriISB>
     e82:	6823      	ldr	r3, [r4, #0]
     e84:	f3c3 2107 	ubfx	r1, r3, #8, #8
     e88:	1e48      	subs	r0, r1, #1
     e8a:	f7ff fd37 	bl	8fc <prepareToAccessMPURegion>
     e8e:	f7ff fe67 	bl	b60 <isMPUNotPresent>
     e92:	b908      	cbnz	r0, e98 <__mriPlatform_EnteringDebugger+0xa0>
     e94:	4c15      	ldr	r4, [pc, #84]	; (eec <__mriPlatform_EnteringDebugger+0xf4>)
     e96:	60e0      	str	r0, [r4, #12]
     e98:	f7ff fe62 	bl	b60 <isMPUNotPresent>
     e9c:	b910      	cbnz	r0, ea4 <__mriPlatform_EnteringDebugger+0xac>
     e9e:	4814      	ldr	r0, [pc, #80]	; (ef0 <__mriPlatform_EnteringDebugger+0xf8>)
     ea0:	4a12      	ldr	r2, [pc, #72]	; (eec <__mriPlatform_EnteringDebugger+0xf4>)
     ea2:	6110      	str	r0, [r2, #16]
     ea4:	f7ff fe5c 	bl	b60 <isMPUNotPresent>
     ea8:	b940      	cbnz	r0, ebc <__mriPlatform_EnteringDebugger+0xc4>
     eaa:	4b10      	ldr	r3, [pc, #64]	; (eec <__mriPlatform_EnteringDebugger+0xf4>)
     eac:	6859      	ldr	r1, [r3, #4]
     eae:	f041 0403 	orr.w	r4, r1, #3
     eb2:	605c      	str	r4, [r3, #4]
     eb4:	f000 fdb9 	bl	1a2a <__mriDSB>
     eb8:	f000 fdba 	bl	1a30 <__mriISB>
     ebc:	4c0a      	ldr	r4, [pc, #40]	; (ee8 <__mriPlatform_EnteringDebugger+0xf0>)
     ebe:	f8d4 0200 	ldr.w	r0, [r4, #512]	; 0x200
     ec2:	0702      	lsls	r2, r0, #28
     ec4:	d50c      	bpl.n	ee0 <__mriPlatform_EnteringDebugger+0xe8>
     ec6:	f8d4 2200 	ldr.w	r2, [r4, #512]	; 0x200
     eca:	f8d4 0268 	ldr.w	r0, [r4, #616]	; 0x268
     ece:	f022 0308 	bic.w	r3, r2, #8
     ed2:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
     ed6:	f000 fda2 	bl	1a1e <__mriSetBASEPRI>
     eda:	2100      	movs	r1, #0
     edc:	f8c4 1268 	str.w	r1, [r4, #616]	; 0x268
     ee0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     ee4:	f7ff be62 	b.w	bac <__mriPlatform_DisableSingleStep>
     ee8:	100001e0 	.word	0x100001e0
     eec:	e000ed90 	.word	0xe000ed90
     ef0:	0100003f 	.word	0x0100003f

00000ef4 <__mriPlatform_LeavingDebugger>:
     ef4:	b538      	push	{r3, r4, r5, lr}
     ef6:	f7ff fe33 	bl	b60 <isMPUNotPresent>
     efa:	4c24      	ldr	r4, [pc, #144]	; (f8c <__mriPlatform_LeavingDebugger+0x98>)
     efc:	b938      	cbnz	r0, f0e <__mriPlatform_LeavingDebugger+0x1a>
     efe:	6863      	ldr	r3, [r4, #4]
     f00:	f023 0001 	bic.w	r0, r3, #1
     f04:	6060      	str	r0, [r4, #4]
     f06:	f000 fd90 	bl	1a2a <__mriDSB>
     f0a:	f000 fd91 	bl	1a30 <__mriISB>
     f0e:	6821      	ldr	r1, [r4, #0]
     f10:	4c1f      	ldr	r4, [pc, #124]	; (f90 <__mriPlatform_LeavingDebugger+0x9c>)
     f12:	f3c1 2207 	ubfx	r2, r1, #8, #8
     f16:	1e50      	subs	r0, r2, #1
     f18:	f7ff fcf0 	bl	8fc <prepareToAccessMPURegion>
     f1c:	f8d4 5260 	ldr.w	r5, [r4, #608]	; 0x260
     f20:	f7ff fe1e 	bl	b60 <isMPUNotPresent>
     f24:	b910      	cbnz	r0, f2c <__mriPlatform_LeavingDebugger+0x38>
     f26:	4b19      	ldr	r3, [pc, #100]	; (f8c <__mriPlatform_LeavingDebugger+0x98>)
     f28:	016d      	lsls	r5, r5, #5
     f2a:	60dd      	str	r5, [r3, #12]
     f2c:	f8d4 4264 	ldr.w	r4, [r4, #612]	; 0x264
     f30:	f7ff fe16 	bl	b60 <isMPUNotPresent>
     f34:	b908      	cbnz	r0, f3a <__mriPlatform_LeavingDebugger+0x46>
     f36:	4815      	ldr	r0, [pc, #84]	; (f8c <__mriPlatform_LeavingDebugger+0x98>)
     f38:	6104      	str	r4, [r0, #16]
     f3a:	4c15      	ldr	r4, [pc, #84]	; (f90 <__mriPlatform_LeavingDebugger+0x9c>)
     f3c:	f8d4 025c 	ldr.w	r0, [r4, #604]	; 0x25c
     f40:	f7ff fcdc 	bl	8fc <prepareToAccessMPURegion>
     f44:	f8d4 4258 	ldr.w	r4, [r4, #600]	; 0x258
     f48:	f7ff fe0a 	bl	b60 <isMPUNotPresent>
     f4c:	b928      	cbnz	r0, f5a <__mriPlatform_LeavingDebugger+0x66>
     f4e:	490f      	ldr	r1, [pc, #60]	; (f8c <__mriPlatform_LeavingDebugger+0x98>)
     f50:	604c      	str	r4, [r1, #4]
     f52:	f000 fd6a 	bl	1a2a <__mriDSB>
     f56:	f000 fd6b 	bl	1a30 <__mriISB>
     f5a:	4b0d      	ldr	r3, [pc, #52]	; (f90 <__mriPlatform_LeavingDebugger+0x9c>)
     f5c:	461a      	mov	r2, r3
     f5e:	6811      	ldr	r1, [r2, #0]
     f60:	480c      	ldr	r0, [pc, #48]	; (f94 <__mriPlatform_LeavingDebugger+0xa0>)
     f62:	3304      	adds	r3, #4
     f64:	4281      	cmp	r1, r0
     f66:	490c      	ldr	r1, [pc, #48]	; (f98 <__mriPlatform_LeavingDebugger+0xa4>)
     f68:	d102      	bne.n	f70 <__mriPlatform_LeavingDebugger+0x7c>
     f6a:	428b      	cmp	r3, r1
     f6c:	461a      	mov	r2, r3
     f6e:	d3f5      	bcc.n	f5c <__mriPlatform_LeavingDebugger+0x68>
     f70:	4b07      	ldr	r3, [pc, #28]	; (f90 <__mriPlatform_LeavingDebugger+0x9c>)
     f72:	1a8a      	subs	r2, r1, r2
     f74:	f8d3 026c 	ldr.w	r0, [r3, #620]	; 0x26c
     f78:	4908      	ldr	r1, [pc, #32]	; (f9c <__mriPlatform_LeavingDebugger+0xa8>)
     f7a:	4282      	cmp	r2, r0
     f7c:	bfc8      	it	gt
     f7e:	f8c3 226c 	strgt.w	r2, [r3, #620]	; 0x26c
     f82:	68ca      	ldr	r2, [r1, #12]
     f84:	f422 3300 	bic.w	r3, r2, #131072	; 0x20000
     f88:	60cb      	str	r3, [r1, #12]
     f8a:	bd38      	pop	{r3, r4, r5, pc}
     f8c:	e000ed90 	.word	0xe000ed90
     f90:	100001e0 	.word	0x100001e0
     f94:	deadbeef 	.word	0xdeadbeef
     f98:	100003e0 	.word	0x100003e0
     f9c:	e000edf0 	.word	0xe000edf0

00000fa0 <__mriPlatform_GetProgramCounter>:
     fa0:	4b01      	ldr	r3, [pc, #4]	; (fa8 <__mriPlatform_GetProgramCounter+0x8>)
     fa2:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     fa6:	4770      	bx	lr
     fa8:	100001e0 	.word	0x100001e0

00000fac <__mriPlatform_SetProgramCounter>:
     fac:	4b01      	ldr	r3, [pc, #4]	; (fb4 <__mriPlatform_SetProgramCounter+0x8>)
     fae:	f8c3 0248 	str.w	r0, [r3, #584]	; 0x248
     fb2:	4770      	bx	lr
     fb4:	100001e0 	.word	0x100001e0

00000fb8 <__mriPlatform_AdvanceProgramCounterToNextInstruction>:
     fb8:	4b0b      	ldr	r3, [pc, #44]	; (fe8 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x30>)
     fba:	f8d3 2248 	ldr.w	r2, [r3, #584]	; 0x248
     fbe:	4618      	mov	r0, r3
     fc0:	8811      	ldrh	r1, [r2, #0]
     fc2:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
     fc6:	f5b1 4f68 	cmp.w	r1, #59392	; 0xe800
     fca:	d005      	beq.n	fd8 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x20>
     fcc:	f5b1 4f70 	cmp.w	r1, #61440	; 0xf000
     fd0:	d002      	beq.n	fd8 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x20>
     fd2:	f5b1 4f78 	cmp.w	r1, #63488	; 0xf800
     fd6:	d103      	bne.n	fe0 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x28>
     fd8:	1d13      	adds	r3, r2, #4
     fda:	f8c0 3248 	str.w	r3, [r0, #584]	; 0x248
     fde:	4770      	bx	lr
     fe0:	3202      	adds	r2, #2
     fe2:	f8c3 2248 	str.w	r2, [r3, #584]	; 0x248
     fe6:	4770      	bx	lr
     fe8:	100001e0 	.word	0x100001e0

00000fec <__mriPlatform_IsCurrentInstructionHardcodedBreakpoint>:
     fec:	4b04      	ldr	r3, [pc, #16]	; (1000 <__mriPlatform_IsCurrentInstructionHardcodedBreakpoint+0x14>)
     fee:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     ff2:	8801      	ldrh	r1, [r0, #0]
     ff4:	f5b1 423e 	subs.w	r2, r1, #48640	; 0xbe00
     ff8:	4253      	negs	r3, r2
     ffa:	eb53 0002 	adcs.w	r0, r3, r2
     ffe:	4770      	bx	lr
    1000:	100001e0 	.word	0x100001e0

00001004 <__mriPlatform_WasProgramCounterModifiedByUser>:
    1004:	4b04      	ldr	r3, [pc, #16]	; (1018 <__mriPlatform_WasProgramCounterModifiedByUser+0x14>)
    1006:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
    100a:	f8d3 1250 	ldr.w	r1, [r3, #592]	; 0x250
    100e:	1a40      	subs	r0, r0, r1
    1010:	bf18      	it	ne
    1012:	2001      	movne	r0, #1
    1014:	4770      	bx	lr
    1016:	bf00      	nop
    1018:	100001e0 	.word	0x100001e0

0000101c <__mriPlatform_TypeOfCurrentInstruction>:
    101c:	4b08      	ldr	r3, [pc, #32]	; (1040 <__mriPlatform_TypeOfCurrentInstruction+0x24>)
    101e:	f64b 62ab 	movw	r2, #48811	; 0xbeab
    1022:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
    1026:	8801      	ldrh	r1, [r0, #0]
    1028:	4291      	cmp	r1, r2
    102a:	d006      	beq.n	103a <__mriPlatform_TypeOfCurrentInstruction+0x1e>
    102c:	f64b 63ff 	movw	r3, #48895	; 0xbeff
    1030:	4299      	cmp	r1, r3
    1032:	bf0c      	ite	eq
    1034:	2002      	moveq	r0, #2
    1036:	2000      	movne	r0, #0
    1038:	4770      	bx	lr
    103a:	2001      	movs	r0, #1
    103c:	4770      	bx	lr
    103e:	bf00      	nop
    1040:	100001e0 	.word	0x100001e0

00001044 <__mriPlatform_GetSemihostCallParameters>:
    1044:	4a07      	ldr	r2, [pc, #28]	; (1064 <__mriPlatform_GetSemihostCallParameters+0x20>)
    1046:	b530      	push	{r4, r5, lr}
    1048:	f8d2 1218 	ldr.w	r1, [r2, #536]	; 0x218
    104c:	f8d2 5210 	ldr.w	r5, [r2, #528]	; 0x210
    1050:	f8d2 4214 	ldr.w	r4, [r2, #532]	; 0x214
    1054:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
    1058:	6084      	str	r4, [r0, #8]
    105a:	e880 0024 	stmia.w	r0, {r2, r5}
    105e:	60c1      	str	r1, [r0, #12]
    1060:	bd30      	pop	{r4, r5, pc}
    1062:	bf00      	nop
    1064:	100001e0 	.word	0x100001e0

00001068 <__mriPlatform_SetSemihostCallReturnValue>:
    1068:	4b01      	ldr	r3, [pc, #4]	; (1070 <__mriPlatform_SetSemihostCallReturnValue+0x8>)
    106a:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
    106e:	4770      	bx	lr
    1070:	100001e0 	.word	0x100001e0

00001074 <__mriPlatform_WasMemoryFaultEncountered>:
    1074:	b508      	push	{r3, lr}
    1076:	f000 fcd8 	bl	1a2a <__mriDSB>
    107a:	4b06      	ldr	r3, [pc, #24]	; (1094 <__mriPlatform_WasMemoryFaultEncountered+0x20>)
    107c:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
    1080:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
    1084:	f000 0002 	and.w	r0, r0, #2
    1088:	f022 0102 	bic.w	r1, r2, #2
    108c:	f8c3 1200 	str.w	r1, [r3, #512]	; 0x200
    1090:	bd08      	pop	{r3, pc}
    1092:	bf00      	nop
    1094:	100001e0 	.word	0x100001e0

00001098 <__mriPlatform_WriteTResponseRegistersToBuffer>:
    1098:	b538      	push	{r3, r4, r5, lr}
    109a:	4c0d      	ldr	r4, [pc, #52]	; (10d0 <__mriPlatform_WriteTResponseRegistersToBuffer+0x38>)
    109c:	4605      	mov	r5, r0
    109e:	210c      	movs	r1, #12
    10a0:	f8d4 223c 	ldr.w	r2, [r4, #572]	; 0x23c
    10a4:	f7ff fd68 	bl	b78 <sendRegisterForTResponse>
    10a8:	4628      	mov	r0, r5
    10aa:	210d      	movs	r1, #13
    10ac:	f8d4 2240 	ldr.w	r2, [r4, #576]	; 0x240
    10b0:	f7ff fd62 	bl	b78 <sendRegisterForTResponse>
    10b4:	4628      	mov	r0, r5
    10b6:	210e      	movs	r1, #14
    10b8:	f8d4 2244 	ldr.w	r2, [r4, #580]	; 0x244
    10bc:	f7ff fd5c 	bl	b78 <sendRegisterForTResponse>
    10c0:	f8d4 2248 	ldr.w	r2, [r4, #584]	; 0x248
    10c4:	4628      	mov	r0, r5
    10c6:	210f      	movs	r1, #15
    10c8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    10cc:	f7ff bd54 	b.w	b78 <sendRegisterForTResponse>
    10d0:	100001e0 	.word	0x100001e0

000010d4 <__mriPlatform_CopyContextToBuffer>:
    10d4:	b570      	push	{r4, r5, r6, lr}
    10d6:	4c06      	ldr	r4, [pc, #24]	; (10f0 <__mriPlatform_CopyContextToBuffer+0x1c>)
    10d8:	4606      	mov	r6, r0
    10da:	f104 0544 	add.w	r5, r4, #68	; 0x44
    10de:	f814 1f01 	ldrb.w	r1, [r4, #1]!
    10e2:	4630      	mov	r0, r6
    10e4:	f000 fe06 	bl	1cf4 <__mriBuffer_WriteByteAsHex>
    10e8:	42ac      	cmp	r4, r5
    10ea:	d1f8      	bne.n	10de <__mriPlatform_CopyContextToBuffer+0xa>
    10ec:	bd70      	pop	{r4, r5, r6, pc}
    10ee:	bf00      	nop
    10f0:	100003eb 	.word	0x100003eb

000010f4 <__mriPlatform_CopyContextFromBuffer>:
    10f4:	b570      	push	{r4, r5, r6, lr}
    10f6:	4c0b      	ldr	r4, [pc, #44]	; (1124 <__mriPlatform_CopyContextFromBuffer+0x30>)
    10f8:	4606      	mov	r6, r0
    10fa:	f104 0544 	add.w	r5, r4, #68	; 0x44
    10fe:	4630      	mov	r0, r6
    1100:	f000 fe14 	bl	1d2c <__mriBuffer_ReadByteAsHex>
    1104:	f804 0f01 	strb.w	r0, [r4, #1]!
    1108:	42ac      	cmp	r4, r5
    110a:	d1f8      	bne.n	10fe <__mriPlatform_CopyContextFromBuffer+0xa>
    110c:	4b06      	ldr	r3, [pc, #24]	; (1128 <__mriPlatform_CopyContextFromBuffer+0x34>)
    110e:	f8d3 224c 	ldr.w	r2, [r3, #588]	; 0x24c
    1112:	f8d3 0254 	ldr.w	r0, [r3, #596]	; 0x254
    1116:	f422 7100 	bic.w	r1, r2, #512	; 0x200
    111a:	ea41 0200 	orr.w	r2, r1, r0
    111e:	f8c3 224c 	str.w	r2, [r3, #588]	; 0x24c
    1122:	bd70      	pop	{r4, r5, r6, pc}
    1124:	100003eb 	.word	0x100003eb
    1128:	100001e0 	.word	0x100001e0

0000112c <__mriPlatform_SetHardwareBreakpoint>:
    112c:	4b19      	ldr	r3, [pc, #100]	; (1194 <__mriPlatform_SetHardwareBreakpoint+0x68>)
    112e:	b570      	push	{r4, r5, r6, lr}
    1130:	2400      	movs	r4, #0
    1132:	2902      	cmp	r1, #2
    1134:	4605      	mov	r5, r0
    1136:	601c      	str	r4, [r3, #0]
    1138:	d008      	beq.n	114c <__mriPlatform_SetHardwareBreakpoint+0x20>
    113a:	d301      	bcc.n	1140 <__mriPlatform_SetHardwareBreakpoint+0x14>
    113c:	2904      	cmp	r1, #4
    113e:	d904      	bls.n	114a <__mriPlatform_SetHardwareBreakpoint+0x1e>
    1140:	2204      	movs	r2, #4
    1142:	601a      	str	r2, [r3, #0]
    1144:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
    1148:	e000      	b.n	114c <__mriPlatform_SetHardwareBreakpoint+0x20>
    114a:	2401      	movs	r4, #1
    114c:	6818      	ldr	r0, [r3, #0]
    114e:	b9f8      	cbnz	r0, 1190 <__mriPlatform_SetHardwareBreakpoint+0x64>
    1150:	4628      	mov	r0, r5
    1152:	4621      	mov	r1, r4
    1154:	f7ff fcea 	bl	b2c <findFPBBreakpointComparator>
    1158:	4606      	mov	r6, r0
    115a:	b9c8      	cbnz	r0, 1190 <__mriPlatform_SetHardwareBreakpoint+0x64>
    115c:	f7ff fbc2 	bl	8e4 <getFPBCodeComparatorCount>
    1160:	4a0d      	ldr	r2, [pc, #52]	; (1198 <__mriPlatform_SetHardwareBreakpoint+0x6c>)
    1162:	4633      	mov	r3, r6
    1164:	4283      	cmp	r3, r0
    1166:	4616      	mov	r6, r2
    1168:	d00c      	beq.n	1184 <__mriPlatform_SetHardwareBreakpoint+0x58>
    116a:	f852 1b04 	ldr.w	r1, [r2], #4
    116e:	07c9      	lsls	r1, r1, #31
    1170:	d501      	bpl.n	1176 <__mriPlatform_SetHardwareBreakpoint+0x4a>
    1172:	3301      	adds	r3, #1
    1174:	e7f6      	b.n	1164 <__mriPlatform_SetHardwareBreakpoint+0x38>
    1176:	b12e      	cbz	r6, 1184 <__mriPlatform_SetHardwareBreakpoint+0x58>
    1178:	4628      	mov	r0, r5
    117a:	4621      	mov	r1, r4
    117c:	f7ff fcba 	bl	af4 <calculateFPBComparatorValue>
    1180:	6030      	str	r0, [r6, #0]
    1182:	bd70      	pop	{r4, r5, r6, pc}
    1184:	4803      	ldr	r0, [pc, #12]	; (1194 <__mriPlatform_SetHardwareBreakpoint+0x68>)
    1186:	6802      	ldr	r2, [r0, #0]
    1188:	2a08      	cmp	r2, #8
    118a:	bfb8      	it	lt
    118c:	2208      	movlt	r2, #8
    118e:	6002      	str	r2, [r0, #0]
    1190:	bd70      	pop	{r4, r5, r6, pc}
    1192:	bf00      	nop
    1194:	100001dc 	.word	0x100001dc
    1198:	e0002008 	.word	0xe0002008

0000119c <__mriPlatform_ClearHardwareBreakpoint>:
    119c:	4b0c      	ldr	r3, [pc, #48]	; (11d0 <__mriPlatform_ClearHardwareBreakpoint+0x34>)
    119e:	2200      	movs	r2, #0
    11a0:	2902      	cmp	r1, #2
    11a2:	b510      	push	{r4, lr}
    11a4:	601a      	str	r2, [r3, #0]
    11a6:	d003      	beq.n	11b0 <__mriPlatform_ClearHardwareBreakpoint+0x14>
    11a8:	d304      	bcc.n	11b4 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    11aa:	2904      	cmp	r1, #4
    11ac:	d802      	bhi.n	11b4 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    11ae:	e006      	b.n	11be <__mriPlatform_ClearHardwareBreakpoint+0x22>
    11b0:	4611      	mov	r1, r2
    11b2:	e005      	b.n	11c0 <__mriPlatform_ClearHardwareBreakpoint+0x24>
    11b4:	2104      	movs	r1, #4
    11b6:	6019      	str	r1, [r3, #0]
    11b8:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    11bc:	e000      	b.n	11c0 <__mriPlatform_ClearHardwareBreakpoint+0x24>
    11be:	2101      	movs	r1, #1
    11c0:	681c      	ldr	r4, [r3, #0]
    11c2:	b91c      	cbnz	r4, 11cc <__mriPlatform_ClearHardwareBreakpoint+0x30>
    11c4:	f7ff fcb2 	bl	b2c <findFPBBreakpointComparator>
    11c8:	b100      	cbz	r0, 11cc <__mriPlatform_ClearHardwareBreakpoint+0x30>
    11ca:	6004      	str	r4, [r0, #0]
    11cc:	bd10      	pop	{r4, pc}
    11ce:	bf00      	nop
    11d0:	100001dc 	.word	0x100001dc

000011d4 <__mriPlatform_SetHardwareWatchpoint>:
    11d4:	2a02      	cmp	r2, #2
    11d6:	bf98      	it	ls
    11d8:	4b1f      	ldrls	r3, [pc, #124]	; (1258 <__mriPlatform_SetHardwareWatchpoint+0x84>)
    11da:	b570      	push	{r4, r5, r6, lr}
    11dc:	bf94      	ite	ls
    11de:	5c9d      	ldrbls	r5, [r3, r2]
    11e0:	2500      	movhi	r5, #0
    11e2:	1e4b      	subs	r3, r1, #1
    11e4:	420b      	tst	r3, r1
    11e6:	4606      	mov	r6, r0
    11e8:	460c      	mov	r4, r1
    11ea:	d106      	bne.n	11fa <__mriPlatform_SetHardwareWatchpoint+0x26>
    11ec:	4248      	negs	r0, r1
    11ee:	4030      	ands	r0, r6
    11f0:	4286      	cmp	r6, r0
    11f2:	d102      	bne.n	11fa <__mriPlatform_SetHardwareWatchpoint+0x26>
    11f4:	1f69      	subs	r1, r5, #5
    11f6:	2902      	cmp	r1, #2
    11f8:	d905      	bls.n	1206 <__mriPlatform_SetHardwareWatchpoint+0x32>
    11fa:	4b18      	ldr	r3, [pc, #96]	; (125c <__mriPlatform_SetHardwareWatchpoint+0x88>)
    11fc:	6819      	ldr	r1, [r3, #0]
    11fe:	2904      	cmp	r1, #4
    1200:	bfb8      	it	lt
    1202:	2104      	movlt	r1, #4
    1204:	e026      	b.n	1254 <__mriPlatform_SetHardwareWatchpoint+0x80>
    1206:	4630      	mov	r0, r6
    1208:	4621      	mov	r1, r4
    120a:	462a      	mov	r2, r5
    120c:	f7ff fb40 	bl	890 <findDWTComparator>
    1210:	bb08      	cbnz	r0, 1256 <__mriPlatform_SetHardwareWatchpoint+0x82>
    1212:	4a13      	ldr	r2, [pc, #76]	; (1260 <__mriPlatform_SetHardwareWatchpoint+0x8c>)
    1214:	6813      	ldr	r3, [r2, #0]
    1216:	0f19      	lsrs	r1, r3, #28
    1218:	f100 6260 	add.w	r2, r0, #234881024	; 0xe000000
    121c:	f502 7381 	add.w	r3, r2, #258	; 0x102
    1220:	011b      	lsls	r3, r3, #4
    1222:	4288      	cmp	r0, r1
    1224:	d011      	beq.n	124a <__mriPlatform_SetHardwareWatchpoint+0x76>
    1226:	689a      	ldr	r2, [r3, #8]
    1228:	f012 020f 	ands.w	r2, r2, #15
    122c:	d001      	beq.n	1232 <__mriPlatform_SetHardwareWatchpoint+0x5e>
    122e:	3001      	adds	r0, #1
    1230:	e7f2      	b.n	1218 <__mriPlatform_SetHardwareWatchpoint+0x44>
    1232:	2c01      	cmp	r4, #1
    1234:	d902      	bls.n	123c <__mriPlatform_SetHardwareWatchpoint+0x68>
    1236:	0864      	lsrs	r4, r4, #1
    1238:	3201      	adds	r2, #1
    123a:	e7fa      	b.n	1232 <__mriPlatform_SetHardwareWatchpoint+0x5e>
    123c:	605a      	str	r2, [r3, #4]
    123e:	6858      	ldr	r0, [r3, #4]
    1240:	4290      	cmp	r0, r2
    1242:	d102      	bne.n	124a <__mriPlatform_SetHardwareWatchpoint+0x76>
    1244:	601e      	str	r6, [r3, #0]
    1246:	609d      	str	r5, [r3, #8]
    1248:	bd70      	pop	{r4, r5, r6, pc}
    124a:	4b04      	ldr	r3, [pc, #16]	; (125c <__mriPlatform_SetHardwareWatchpoint+0x88>)
    124c:	6819      	ldr	r1, [r3, #0]
    124e:	2908      	cmp	r1, #8
    1250:	bfb8      	it	lt
    1252:	2108      	movlt	r1, #8
    1254:	6019      	str	r1, [r3, #0]
    1256:	bd70      	pop	{r4, r5, r6, pc}
    1258:	0000382c 	.word	0x0000382c
    125c:	100001dc 	.word	0x100001dc
    1260:	e0001000 	.word	0xe0001000

00001264 <__mriPlatform_ClearHardwareWatchpoint>:
    1264:	2a02      	cmp	r2, #2
    1266:	bf98      	it	ls
    1268:	4b11      	ldrls	r3, [pc, #68]	; (12b0 <__mriPlatform_ClearHardwareWatchpoint+0x4c>)
    126a:	b510      	push	{r4, lr}
    126c:	bf94      	ite	ls
    126e:	5c9a      	ldrbls	r2, [r3, r2]
    1270:	2200      	movhi	r2, #0
    1272:	1e4c      	subs	r4, r1, #1
    1274:	400c      	ands	r4, r1
    1276:	d106      	bne.n	1286 <__mriPlatform_ClearHardwareWatchpoint+0x22>
    1278:	424b      	negs	r3, r1
    127a:	4003      	ands	r3, r0
    127c:	4298      	cmp	r0, r3
    127e:	d102      	bne.n	1286 <__mriPlatform_ClearHardwareWatchpoint+0x22>
    1280:	1f53      	subs	r3, r2, #5
    1282:	2b02      	cmp	r3, #2
    1284:	d906      	bls.n	1294 <__mriPlatform_ClearHardwareWatchpoint+0x30>
    1286:	480b      	ldr	r0, [pc, #44]	; (12b4 <__mriPlatform_ClearHardwareWatchpoint+0x50>)
    1288:	6802      	ldr	r2, [r0, #0]
    128a:	2a04      	cmp	r2, #4
    128c:	bfb8      	it	lt
    128e:	2204      	movlt	r2, #4
    1290:	6002      	str	r2, [r0, #0]
    1292:	bd10      	pop	{r4, pc}
    1294:	f7ff fafc 	bl	890 <findDWTComparator>
    1298:	b140      	cbz	r0, 12ac <__mriPlatform_ClearHardwareWatchpoint+0x48>
    129a:	6004      	str	r4, [r0, #0]
    129c:	6044      	str	r4, [r0, #4]
    129e:	6881      	ldr	r1, [r0, #8]
    12a0:	f421 73d7 	bic.w	r3, r1, #430	; 0x1ae
    12a4:	f023 0201 	bic.w	r2, r3, #1
    12a8:	6082      	str	r2, [r0, #8]
    12aa:	bd10      	pop	{r4, pc}
    12ac:	bd10      	pop	{r4, pc}
    12ae:	bf00      	nop
    12b0:	0000382c 	.word	0x0000382c
    12b4:	100001dc 	.word	0x100001dc

000012b8 <__mriPlatform_GetTargetXmlSize>:
    12b8:	f240 20b9 	movw	r0, #697	; 0x2b9
    12bc:	4770      	bx	lr
	...

000012c0 <__mriPlatform_GetTargetXml>:
    12c0:	4800      	ldr	r0, [pc, #0]	; (12c4 <__mriPlatform_GetTargetXml+0x4>)
    12c2:	4770      	bx	lr
    12c4:	0000352f 	.word	0x0000352f

000012c8 <__mriPlatform_CommUartIndex>:
    12c8:	4b03      	ldr	r3, [pc, #12]	; (12d8 <__mriPlatform_CommUartIndex+0x10>)
    12ca:	4804      	ldr	r0, [pc, #16]	; (12dc <__mriPlatform_CommUartIndex+0x14>)
    12cc:	681a      	ldr	r2, [r3, #0]
    12ce:	1a11      	subs	r1, r2, r0
    12d0:	4803      	ldr	r0, [pc, #12]	; (12e0 <__mriPlatform_CommUartIndex+0x18>)
    12d2:	108b      	asrs	r3, r1, #2
    12d4:	4358      	muls	r0, r3
    12d6:	4770      	bx	lr
    12d8:	100004e0 	.word	0x100004e0
    12dc:	100000c8 	.word	0x100000c8
    12e0:	38e38e39 	.word	0x38e38e39

000012e4 <__mriPlatform_CommHasReceiveData>:
    12e4:	4b03      	ldr	r3, [pc, #12]	; (12f4 <__mriPlatform_CommHasReceiveData+0x10>)
    12e6:	6818      	ldr	r0, [r3, #0]
    12e8:	68c1      	ldr	r1, [r0, #12]
    12ea:	7d0a      	ldrb	r2, [r1, #20]
    12ec:	f002 0001 	and.w	r0, r2, #1
    12f0:	4770      	bx	lr
    12f2:	bf00      	nop
    12f4:	100004e0 	.word	0x100004e0

000012f8 <__mriPlatform_CommReceiveChar>:
    12f8:	b508      	push	{r3, lr}
    12fa:	f7ff fff3 	bl	12e4 <__mriPlatform_CommHasReceiveData>
    12fe:	2800      	cmp	r0, #0
    1300:	d0fb      	beq.n	12fa <__mriPlatform_CommReceiveChar+0x2>
    1302:	4b02      	ldr	r3, [pc, #8]	; (130c <__mriPlatform_CommReceiveChar+0x14>)
    1304:	6818      	ldr	r0, [r3, #0]
    1306:	68c1      	ldr	r1, [r0, #12]
    1308:	7808      	ldrb	r0, [r1, #0]
    130a:	bd08      	pop	{r3, pc}
    130c:	100004e0 	.word	0x100004e0

00001310 <__mriPlatform_CommSendChar>:
    1310:	4b05      	ldr	r3, [pc, #20]	; (1328 <__mriPlatform_CommSendChar+0x18>)
    1312:	6819      	ldr	r1, [r3, #0]
    1314:	68cb      	ldr	r3, [r1, #12]
    1316:	7d1a      	ldrb	r2, [r3, #20]
    1318:	f002 0120 	and.w	r1, r2, #32
    131c:	b2ca      	uxtb	r2, r1
    131e:	2a00      	cmp	r2, #0
    1320:	d0f9      	beq.n	1316 <__mriPlatform_CommSendChar+0x6>
    1322:	b2c0      	uxtb	r0, r0
    1324:	7018      	strb	r0, [r3, #0]
    1326:	4770      	bx	lr
    1328:	100004e0 	.word	0x100004e0

0000132c <__mriPlatform_CommCausedInterrupt>:
    132c:	b510      	push	{r4, lr}
    132e:	f000 fb73 	bl	1a18 <__mriGetIPSR>
    1332:	4604      	mov	r4, r0
    1334:	f7ff ffc8 	bl	12c8 <__mriPlatform_CommUartIndex>
    1338:	b2e3      	uxtb	r3, r4
    133a:	3015      	adds	r0, #21
    133c:	1a19      	subs	r1, r3, r0
    133e:	4248      	negs	r0, r1
    1340:	4148      	adcs	r0, r1
    1342:	bd10      	pop	{r4, pc}

00001344 <__mriPlatform_CommClearInterrupt>:
    1344:	4b02      	ldr	r3, [pc, #8]	; (1350 <__mriPlatform_CommClearInterrupt+0xc>)
    1346:	6818      	ldr	r0, [r3, #0]
    1348:	68c1      	ldr	r1, [r0, #12]
    134a:	688b      	ldr	r3, [r1, #8]
    134c:	4770      	bx	lr
    134e:	bf00      	nop
    1350:	100004e0 	.word	0x100004e0

00001354 <__mriPlatform_CommSharingWithApplication>:
    1354:	4b02      	ldr	r3, [pc, #8]	; (1360 <__mriPlatform_CommSharingWithApplication+0xc>)
    1356:	6858      	ldr	r0, [r3, #4]
    1358:	f000 0001 	and.w	r0, r0, #1
    135c:	4770      	bx	lr
    135e:	bf00      	nop
    1360:	100004e0 	.word	0x100004e0

00001364 <__mriPlatform_CommShouldWaitForGdbConnect>:
    1364:	4b05      	ldr	r3, [pc, #20]	; (137c <__mriPlatform_CommShouldWaitForGdbConnect+0x18>)
    1366:	6858      	ldr	r0, [r3, #4]
    1368:	0782      	lsls	r2, r0, #30
    136a:	d404      	bmi.n	1376 <__mriPlatform_CommShouldWaitForGdbConnect+0x12>
    136c:	f000 0101 	and.w	r1, r0, #1
    1370:	f081 0001 	eor.w	r0, r1, #1
    1374:	4770      	bx	lr
    1376:	2000      	movs	r0, #0
    1378:	4770      	bx	lr
    137a:	bf00      	nop
    137c:	100004e0 	.word	0x100004e0

00001380 <__mriPlatform_CommIsWaitingForGdbToConnect>:
    1380:	b508      	push	{r3, lr}
    1382:	f7ff ffef 	bl	1364 <__mriPlatform_CommShouldWaitForGdbConnect>
    1386:	b128      	cbz	r0, 1394 <__mriPlatform_CommIsWaitingForGdbToConnect+0x14>
    1388:	4b03      	ldr	r3, [pc, #12]	; (1398 <__mriPlatform_CommIsWaitingForGdbToConnect+0x18>)
    138a:	6818      	ldr	r0, [r3, #0]
    138c:	68c1      	ldr	r1, [r0, #12]
    138e:	6a0a      	ldr	r2, [r1, #32]
    1390:	f002 0001 	and.w	r0, r2, #1
    1394:	bd08      	pop	{r3, pc}
    1396:	bf00      	nop
    1398:	100004e0 	.word	0x100004e0

0000139c <__mriPlatform_CommPrepareToWaitForGdbConnection>:
    139c:	b508      	push	{r3, lr}
    139e:	f7ff ffe1 	bl	1364 <__mriPlatform_CommShouldWaitForGdbConnect>
    13a2:	b120      	cbz	r0, 13ae <__mriPlatform_CommPrepareToWaitForGdbConnection+0x12>
    13a4:	4b02      	ldr	r3, [pc, #8]	; (13b0 <__mriPlatform_CommPrepareToWaitForGdbConnection+0x14>)
    13a6:	2207      	movs	r2, #7
    13a8:	6818      	ldr	r0, [r3, #0]
    13aa:	68c1      	ldr	r1, [r0, #12]
    13ac:	620a      	str	r2, [r1, #32]
    13ae:	bd08      	pop	{r3, pc}
    13b0:	100004e0 	.word	0x100004e0

000013b4 <__mriLpc176xUart_Init>:
    13b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    13b8:	b087      	sub	sp, #28
    13ba:	4604      	mov	r4, r0
    13bc:	2100      	movs	r1, #0
    13be:	220c      	movs	r2, #12
    13c0:	a803      	add	r0, sp, #12
    13c2:	f002 f81a 	bl	33fa <memset>
    13c6:	4995      	ldr	r1, [pc, #596]	; (161c <__mriLpc176xUart_Init+0x268>)
    13c8:	4620      	mov	r0, r4
    13ca:	f7ff fa35 	bl	838 <__mriToken_MatchingString>
    13ce:	4620      	mov	r0, r4
    13d0:	4993      	ldr	r1, [pc, #588]	; (1620 <__mriLpc176xUart_Init+0x26c>)
    13d2:	f7ff fa31 	bl	838 <__mriToken_MatchingString>
    13d6:	b108      	cbz	r0, 13dc <__mriLpc176xUart_Init+0x28>
    13d8:	2303      	movs	r3, #3
    13da:	9304      	str	r3, [sp, #16]
    13dc:	4620      	mov	r0, r4
    13de:	4991      	ldr	r1, [pc, #580]	; (1624 <__mriLpc176xUart_Init+0x270>)
    13e0:	f7ff fa2a 	bl	838 <__mriToken_MatchingString>
    13e4:	b108      	cbz	r0, 13ea <__mriLpc176xUart_Init+0x36>
    13e6:	2001      	movs	r0, #1
    13e8:	9004      	str	r0, [sp, #16]
    13ea:	4620      	mov	r0, r4
    13ec:	498e      	ldr	r1, [pc, #568]	; (1628 <__mriLpc176xUart_Init+0x274>)
    13ee:	f7ff fa23 	bl	838 <__mriToken_MatchingString>
    13f2:	b108      	cbz	r0, 13f8 <__mriLpc176xUart_Init+0x44>
    13f4:	2102      	movs	r1, #2
    13f6:	9104      	str	r1, [sp, #16]
    13f8:	4620      	mov	r0, r4
    13fa:	498c      	ldr	r1, [pc, #560]	; (162c <__mriLpc176xUart_Init+0x278>)
    13fc:	f7ff fa1c 	bl	838 <__mriToken_MatchingString>
    1400:	b108      	cbz	r0, 1406 <__mriLpc176xUart_Init+0x52>
    1402:	2200      	movs	r2, #0
    1404:	9204      	str	r2, [sp, #16]
    1406:	4620      	mov	r0, r4
    1408:	4989      	ldr	r1, [pc, #548]	; (1630 <__mriLpc176xUart_Init+0x27c>)
    140a:	f7ff fa15 	bl	838 <__mriToken_MatchingString>
    140e:	b108      	cbz	r0, 1414 <__mriLpc176xUart_Init+0x60>
    1410:	2701      	movs	r7, #1
    1412:	9704      	str	r7, [sp, #16]
    1414:	4620      	mov	r0, r4
    1416:	4987      	ldr	r1, [pc, #540]	; (1634 <__mriLpc176xUart_Init+0x280>)
    1418:	f7ff fa0e 	bl	838 <__mriToken_MatchingString>
    141c:	b108      	cbz	r0, 1422 <__mriLpc176xUart_Init+0x6e>
    141e:	2302      	movs	r3, #2
    1420:	9304      	str	r3, [sp, #16]
    1422:	4620      	mov	r0, r4
    1424:	4984      	ldr	r1, [pc, #528]	; (1638 <__mriLpc176xUart_Init+0x284>)
    1426:	f7ff fa07 	bl	838 <__mriToken_MatchingString>
    142a:	b108      	cbz	r0, 1430 <__mriLpc176xUart_Init+0x7c>
    142c:	2003      	movs	r0, #3
    142e:	9004      	str	r0, [sp, #16]
    1430:	4620      	mov	r0, r4
    1432:	4982      	ldr	r1, [pc, #520]	; (163c <__mriLpc176xUart_Init+0x288>)
    1434:	f7ff fa15 	bl	862 <__mriToken_MatchingStringPrefix>
    1438:	b1d8      	cbz	r0, 1472 <__mriLpc176xUart_Init+0xbe>
    143a:	300e      	adds	r0, #14
    143c:	2300      	movs	r3, #0
    143e:	f810 1b01 	ldrb.w	r1, [r0], #1
    1442:	b1a9      	cbz	r1, 1470 <__mriLpc176xUart_Init+0xbc>
    1444:	4a7e      	ldr	r2, [pc, #504]	; (1640 <__mriLpc176xUart_Init+0x28c>)
    1446:	2500      	movs	r5, #0
    1448:	6015      	str	r5, [r2, #0]
    144a:	f810 1c01 	ldrb.w	r1, [r0, #-1]
    144e:	3930      	subs	r1, #48	; 0x30
    1450:	b2ce      	uxtb	r6, r1
    1452:	2e09      	cmp	r6, #9
    1454:	d902      	bls.n	145c <__mriLpc176xUart_Init+0xa8>
    1456:	2709      	movs	r7, #9
    1458:	6017      	str	r7, [r2, #0]
    145a:	4629      	mov	r1, r5
    145c:	6812      	ldr	r2, [r2, #0]
    145e:	b11a      	cbz	r2, 1468 <__mriLpc176xUart_Init+0xb4>
    1460:	4977      	ldr	r1, [pc, #476]	; (1640 <__mriLpc176xUart_Init+0x28c>)
    1462:	2000      	movs	r0, #0
    1464:	6008      	str	r0, [r1, #0]
    1466:	e003      	b.n	1470 <__mriLpc176xUart_Init+0xbc>
    1468:	270a      	movs	r7, #10
    146a:	fb07 1303 	mla	r3, r7, r3, r1
    146e:	e7e6      	b.n	143e <__mriLpc176xUart_Init+0x8a>
    1470:	9305      	str	r3, [sp, #20]
    1472:	4620      	mov	r0, r4
    1474:	4973      	ldr	r1, [pc, #460]	; (1644 <__mriLpc176xUart_Init+0x290>)
    1476:	f7ff f9df 	bl	838 <__mriToken_MatchingString>
    147a:	b108      	cbz	r0, 1480 <__mriLpc176xUart_Init+0xcc>
    147c:	2201      	movs	r2, #1
    147e:	9203      	str	r2, [sp, #12]
    1480:	9f04      	ldr	r7, [sp, #16]
    1482:	2124      	movs	r1, #36	; 0x24
    1484:	4379      	muls	r1, r7
    1486:	4870      	ldr	r0, [pc, #448]	; (1648 <__mriLpc176xUart_Init+0x294>)
    1488:	4a70      	ldr	r2, [pc, #448]	; (164c <__mriLpc176xUart_Init+0x298>)
    148a:	9f03      	ldr	r7, [sp, #12]
    148c:	1843      	adds	r3, r0, r1
    148e:	6013      	str	r3, [r2, #0]
    1490:	b127      	cbz	r7, 149c <__mriLpc176xUart_Init+0xe8>
    1492:	6851      	ldr	r1, [r2, #4]
    1494:	f041 0301 	orr.w	r3, r1, #1
    1498:	6053      	str	r3, [r2, #4]
    149a:	e0bb      	b.n	1614 <__mriLpc176xUart_Init+0x260>
    149c:	4a6c      	ldr	r2, [pc, #432]	; (1650 <__mriLpc176xUart_Init+0x29c>)
    149e:	691c      	ldr	r4, [r3, #16]
    14a0:	f8d2 50c4 	ldr.w	r5, [r2, #196]	; 0xc4
    14a4:	4325      	orrs	r5, r4
    14a6:	f8c2 50c4 	str.w	r5, [r2, #196]	; 0xc4
    14aa:	5842      	ldr	r2, [r0, r1]
    14ac:	6959      	ldr	r1, [r3, #20]
    14ae:	6810      	ldr	r0, [r2, #0]
    14b0:	ea20 0401 	bic.w	r4, r0, r1
    14b4:	6014      	str	r4, [r2, #0]
    14b6:	6958      	ldr	r0, [r3, #20]
    14b8:	6815      	ldr	r5, [r2, #0]
    14ba:	f000 3155 	and.w	r1, r0, #1431655765	; 0x55555555
    14be:	4329      	orrs	r1, r5
    14c0:	6011      	str	r1, [r2, #0]
    14c2:	68da      	ldr	r2, [r3, #12]
    14c4:	2510      	movs	r5, #16
    14c6:	f882 5028 	strb.w	r5, [r2, #40]	; 0x28
    14ca:	68dc      	ldr	r4, [r3, #12]
    14cc:	2101      	movs	r1, #1
    14ce:	7221      	strb	r1, [r4, #8]
    14d0:	68da      	ldr	r2, [r3, #12]
    14d2:	2003      	movs	r0, #3
    14d4:	7310      	strb	r0, [r2, #12]
    14d6:	9a05      	ldr	r2, [sp, #20]
    14d8:	2a00      	cmp	r2, #0
    14da:	d05b      	beq.n	1594 <__mriLpc176xUart_Init+0x1e0>
    14dc:	4c5d      	ldr	r4, [pc, #372]	; (1654 <__mriLpc176xUart_Init+0x2a0>)
    14de:	6820      	ldr	r0, [r4, #0]
    14e0:	ea4f 1c10 	mov.w	r12, r0, lsr #4
    14e4:	fbbc f4f2 	udiv	r4, r12, r2
    14e8:	fb02 f004 	mul.w	r0, r2, r4
    14ec:	4560      	cmp	r0, r12
    14ee:	d03a      	beq.n	1566 <__mriLpc176xUart_Init+0x1b2>
    14f0:	0116      	lsls	r6, r2, #4
    14f2:	ea4f 2c0c 	mov.w	r12, r12, lsl #8
    14f6:	9601      	str	r6, [sp, #4]
    14f8:	460d      	mov	r5, r1
    14fa:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
    14fe:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    1502:	4616      	mov	r6, r2
    1504:	2001      	movs	r0, #1
    1506:	4288      	cmp	r0, r1
    1508:	d228      	bcs.n	155c <__mriLpc176xUart_Init+0x1a8>
    150a:	ea4f 1906 	mov.w	r9, r6, lsl #4
    150e:	fbb9 fafe 	udiv	r10, r9, lr
    1512:	eb0a 0b02 	add.w	r11, r10, r2
    1516:	fbbc f9fb 	udiv	r9, r12, r11
    151a:	f109 0a80 	add.w	r10, r9, #128	; 0x80
    151e:	ea4f 291a 	mov.w	r9, r10, lsr #8
    1522:	ea4f 1a09 	mov.w	r10, r9, lsl #4
    1526:	fb00 fb0a 	mul.w	r11, r0, r10
    152a:	ea4f 1b0b 	mov.w	r11, r11, lsl #4
    152e:	fbbb fbfe 	udiv	r11, r11, lr
    1532:	44da      	add	r10, r11
    1534:	f8dd b004 	ldr.w	r11, [sp, #4]
    1538:	fbbc fafa 	udiv	r10, r12, r10
    153c:	ebcb 0a0a 	rsb	r10, r11, r10
    1540:	f1ba 0f00 	cmp.w	r10, #0
    1544:	bfb8      	it	lt
    1546:	f1ca 0a00 	rsblt	r10, r10, #0
    154a:	45c2      	cmp	r10, r8
    154c:	d203      	bcs.n	1556 <__mriLpc176xUart_Init+0x1a2>
    154e:	4607      	mov	r7, r0
    1550:	460d      	mov	r5, r1
    1552:	464c      	mov	r4, r9
    1554:	46d0      	mov	r8, r10
    1556:	3001      	adds	r0, #1
    1558:	18b6      	adds	r6, r6, r2
    155a:	e7d4      	b.n	1506 <__mriLpc176xUart_Init+0x152>
    155c:	3101      	adds	r1, #1
    155e:	2910      	cmp	r1, #16
    1560:	d1cd      	bne.n	14fe <__mriLpc176xUart_Init+0x14a>
    1562:	ea47 1505 	orr.w	r5, r7, r5, lsl #4
    1566:	68d8      	ldr	r0, [r3, #12]
    1568:	b2ed      	uxtb	r5, r5
    156a:	7b01      	ldrb	r1, [r0, #12]
    156c:	f041 0280 	orr.w	r2, r1, #128	; 0x80
    1570:	b2e1      	uxtb	r1, r4
    1572:	f3c4 2407 	ubfx	r4, r4, #8, #8
    1576:	7302      	strb	r2, [r0, #12]
    1578:	7001      	strb	r1, [r0, #0]
    157a:	7104      	strb	r4, [r0, #4]
    157c:	f880 5028 	strb.w	r5, [r0, #40]	; 0x28
    1580:	68d8      	ldr	r0, [r3, #12]
    1582:	4c32      	ldr	r4, [pc, #200]	; (164c <__mriLpc176xUart_Init+0x298>)
    1584:	7b02      	ldrb	r2, [r0, #12]
    1586:	f002 017f 	and.w	r1, r2, #127	; 0x7f
    158a:	7301      	strb	r1, [r0, #12]
    158c:	6860      	ldr	r0, [r4, #4]
    158e:	f040 0202 	orr.w	r2, r0, #2
    1592:	6062      	str	r2, [r4, #4]
    1594:	685a      	ldr	r2, [r3, #4]
    1596:	6999      	ldr	r1, [r3, #24]
    1598:	6814      	ldr	r4, [r2, #0]
    159a:	6a18      	ldr	r0, [r3, #32]
    159c:	ea24 0401 	bic.w	r4, r4, r1
    15a0:	4008      	ands	r0, r1
    15a2:	4304      	orrs	r4, r0
    15a4:	6014      	str	r4, [r2, #0]
    15a6:	689a      	ldr	r2, [r3, #8]
    15a8:	69d9      	ldr	r1, [r3, #28]
    15aa:	6814      	ldr	r4, [r2, #0]
    15ac:	6a18      	ldr	r0, [r3, #32]
    15ae:	ea24 0401 	bic.w	r4, r4, r1
    15b2:	4008      	ands	r0, r1
    15b4:	ea44 0100 	orr.w	r1, r4, r0
    15b8:	6011      	str	r1, [r2, #0]
    15ba:	68da      	ldr	r2, [r3, #12]
    15bc:	7b11      	ldrb	r1, [r2, #12]
    15be:	7b10      	ldrb	r0, [r2, #12]
    15c0:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    15c4:	7310      	strb	r0, [r2, #12]
    15c6:	68da      	ldr	r2, [r3, #12]
    15c8:	2001      	movs	r0, #1
    15ca:	6050      	str	r0, [r2, #4]
    15cc:	68db      	ldr	r3, [r3, #12]
    15ce:	7319      	strb	r1, [r3, #12]
    15d0:	f7ff fee4 	bl	139c <__mriPlatform_CommPrepareToWaitForGdbConnection>
    15d4:	f7ff fe78 	bl	12c8 <__mriPlatform_CommUartIndex>
    15d8:	1d41      	adds	r1, r0, #5
    15da:	b2c8      	uxtb	r0, r1
    15dc:	b2c2      	uxtb	r2, r0
    15de:	b253      	sxtb	r3, r2
    15e0:	2b00      	cmp	r3, #0
    15e2:	da06      	bge.n	15f2 <__mriLpc176xUart_Init+0x23e>
    15e4:	4b1c      	ldr	r3, [pc, #112]	; (1658 <__mriLpc176xUart_Init+0x2a4>)
    15e6:	f000 010f 	and.w	r1, r0, #15
    15ea:	18cb      	adds	r3, r1, r3
    15ec:	2100      	movs	r1, #0
    15ee:	7619      	strb	r1, [r3, #24]
    15f0:	e006      	b.n	1600 <__mriLpc176xUart_Init+0x24c>
    15f2:	f103 4160 	add.w	r1, r3, #3758096384	; 0xe0000000
    15f6:	f501 4361 	add.w	r3, r1, #57600	; 0xe100
    15fa:	2100      	movs	r1, #0
    15fc:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
    1600:	b252      	sxtb	r2, r2
    1602:	f000 001f 	and.w	r0, r0, #31
    1606:	2301      	movs	r3, #1
    1608:	0951      	lsrs	r1, r2, #5
    160a:	fa03 f200 	lsl.w	r2, r3, r0
    160e:	4813      	ldr	r0, [pc, #76]	; (165c <__mriLpc176xUart_Init+0x2a8>)
    1610:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
    1614:	b007      	add	sp, #28
    1616:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    161a:	bf00      	nop
    161c:	00003a3d 	.word	0x00003a3d
    1620:	00003a4f 	.word	0x00003a4f
    1624:	00003a64 	.word	0x00003a64
    1628:	00003a7a 	.word	0x00003a7a
    162c:	00003a90 	.word	0x00003a90
    1630:	00003a9b 	.word	0x00003a9b
    1634:	00003aa6 	.word	0x00003aa6
    1638:	00003ab1 	.word	0x00003ab1
    163c:	00003a2e 	.word	0x00003a2e
    1640:	100001dc 	.word	0x100001dc
    1644:	00003abc 	.word	0x00003abc
    1648:	100000c8 	.word	0x100000c8
    164c:	100004e0 	.word	0x100004e0
    1650:	400fc000 	.word	0x400fc000
    1654:	10000158 	.word	0x10000158
    1658:	e000ecfc 	.word	0xe000ecfc
    165c:	e000e100 	.word	0xe000e100

00001660 <__mriPlatform_CommWaitForReceiveDataToStop>:
    1660:	b538      	push	{r3, r4, r5, lr}
    1662:	4b13      	ldr	r3, [pc, #76]	; (16b0 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    1664:	681c      	ldr	r4, [r3, #0]
    1666:	685d      	ldr	r5, [r3, #4]
    1668:	68da      	ldr	r2, [r3, #12]
    166a:	f022 407f 	bic.w	r0, r2, #4278190080	; 0xff000000
    166e:	b140      	cbz	r0, 1682 <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    1670:	2200      	movs	r2, #0
    1672:	601a      	str	r2, [r3, #0]
    1674:	68d9      	ldr	r1, [r3, #12]
    1676:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    167a:	6058      	str	r0, [r3, #4]
    167c:	609a      	str	r2, [r3, #8]
    167e:	2205      	movs	r2, #5
    1680:	601a      	str	r2, [r3, #0]
    1682:	f7ff fe2f 	bl	12e4 <__mriPlatform_CommHasReceiveData>
    1686:	4b0a      	ldr	r3, [pc, #40]	; (16b0 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    1688:	b930      	cbnz	r0, 1698 <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    168a:	68d9      	ldr	r1, [r3, #12]
    168c:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    1690:	b110      	cbz	r0, 1698 <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    1692:	681a      	ldr	r2, [r3, #0]
    1694:	03d1      	lsls	r1, r2, #15
    1696:	d5f4      	bpl.n	1682 <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    1698:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
    169c:	605d      	str	r5, [r3, #4]
    169e:	601c      	str	r4, [r3, #0]
    16a0:	f7ff fe20 	bl	12e4 <__mriPlatform_CommHasReceiveData>
    16a4:	b110      	cbz	r0, 16ac <__mriPlatform_CommWaitForReceiveDataToStop+0x4c>
    16a6:	f7ff fe27 	bl	12f8 <__mriPlatform_CommReceiveChar>
    16aa:	e7da      	b.n	1662 <__mriPlatform_CommWaitForReceiveDataToStop+0x2>
    16ac:	bd38      	pop	{r3, r4, r5, pc}
    16ae:	bf00      	nop
    16b0:	e000e010 	.word	0xe000e010

000016b4 <__mriLpc176x_Init>:
    16b4:	b538      	push	{r3, r4, r5, lr}
    16b6:	4c0c      	ldr	r4, [pc, #48]	; (16e8 <__mriLpc176x_Init+0x34>)
    16b8:	2300      	movs	r3, #0
    16ba:	6023      	str	r3, [r4, #0]
    16bc:	4605      	mov	r5, r0
    16be:	f7ff fa87 	bl	bd0 <__mriCortexMInit>
    16c2:	6823      	ldr	r3, [r4, #0]
    16c4:	b973      	cbnz	r3, 16e4 <__mriLpc176x_Init+0x30>
    16c6:	f103 4260 	add.w	r2, r3, #3758096384	; 0xe0000000
    16ca:	3301      	adds	r3, #1
    16cc:	2108      	movs	r1, #8
    16ce:	f502 4061 	add.w	r0, r2, #57600	; 0xe100
    16d2:	2b23      	cmp	r3, #35	; 0x23
    16d4:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
    16d8:	d1f5      	bne.n	16c6 <__mriLpc176x_Init+0x12>
    16da:	4628      	mov	r0, r5
    16dc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    16e0:	f7ff be68 	b.w	13b4 <__mriLpc176xUart_Init>
    16e4:	bd38      	pop	{r3, r4, r5, pc}
    16e6:	bf00      	nop
    16e8:	100001dc 	.word	0x100001dc

000016ec <__mriPlatform_GetDeviceMemoryMapXmlSize>:
    16ec:	f240 50c6 	movw	r0, #1478	; 0x5c6
    16f0:	4770      	bx	lr
	...

000016f4 <__mriPlatform_GetDeviceMemoryMapXml>:
    16f4:	4800      	ldr	r0, [pc, #0]	; (16f8 <__mriPlatform_GetDeviceMemoryMapXml+0x4>)
    16f6:	4770      	bx	lr
    16f8:	00003acb 	.word	0x00003acb

000016fc <__mriPlatform_Init>:
    16fc:	4a1f      	ldr	r2, [pc, #124]	; (177c <__mriPlatform_Init+0x80>)
    16fe:	2300      	movs	r3, #0
    1700:	b570      	push	{r4, r5, r6, lr}
    1702:	f842 3b04 	str.w	r3, [r2], #4
    1706:	4b1e      	ldr	r3, [pc, #120]	; (1780 <__mriPlatform_Init+0x84>)
    1708:	4606      	mov	r6, r0
    170a:	f103 0520 	add.w	r5, r3, #32
    170e:	6818      	ldr	r0, [r3, #0]
    1710:	6859      	ldr	r1, [r3, #4]
    1712:	4614      	mov	r4, r2
    1714:	c403      	stmia	r4!, {r0, r1}
    1716:	3308      	adds	r3, #8
    1718:	42ab      	cmp	r3, r5
    171a:	4622      	mov	r2, r4
    171c:	d1f7      	bne.n	170e <__mriPlatform_Init+0x12>
    171e:	6818      	ldr	r0, [r3, #0]
    1720:	4918      	ldr	r1, [pc, #96]	; (1784 <__mriPlatform_Init+0x88>)
    1722:	6020      	str	r0, [r4, #0]
    1724:	680b      	ldr	r3, [r1, #0]
    1726:	4c18      	ldr	r4, [pc, #96]	; (1788 <__mriPlatform_Init+0x8c>)
    1728:	2500      	movs	r5, #0
    172a:	07d8      	lsls	r0, r3, #31
    172c:	6025      	str	r5, [r4, #0]
    172e:	d51b      	bpl.n	1768 <__mriPlatform_Init+0x6c>
    1730:	4816      	ldr	r0, [pc, #88]	; (178c <__mriPlatform_Init+0x90>)
    1732:	f000 fa51 	bl	1bd8 <__mriGetMbedUid>
    1736:	f000 fa43 	bl	1bc0 <__mriDisableMbed>
    173a:	6025      	str	r5, [r4, #0]
    173c:	f241 3089 	movw	r0, #5001	; 0x1389
    1740:	3801      	subs	r0, #1
    1742:	4a10      	ldr	r2, [pc, #64]	; (1784 <__mriPlatform_Init+0x88>)
    1744:	d002      	beq.n	174c <__mriPlatform_Init+0x50>
    1746:	6811      	ldr	r1, [r2, #0]
    1748:	07c9      	lsls	r1, r1, #31
    174a:	d4f9      	bmi.n	1740 <__mriPlatform_Init+0x44>
    174c:	6813      	ldr	r3, [r2, #0]
    174e:	480e      	ldr	r0, [pc, #56]	; (1788 <__mriPlatform_Init+0x8c>)
    1750:	f013 0f01 	tst.w	r3, #1
    1754:	d001      	beq.n	175a <__mriPlatform_Init+0x5e>
    1756:	2205      	movs	r2, #5
    1758:	6002      	str	r2, [r0, #0]
    175a:	6801      	ldr	r1, [r0, #0]
    175c:	b921      	cbnz	r1, 1768 <__mriPlatform_Init+0x6c>
    175e:	4b07      	ldr	r3, [pc, #28]	; (177c <__mriPlatform_Init+0x80>)
    1760:	6818      	ldr	r0, [r3, #0]
    1762:	f040 0201 	orr.w	r2, r0, #1
    1766:	601a      	str	r2, [r3, #0]
    1768:	4907      	ldr	r1, [pc, #28]	; (1788 <__mriPlatform_Init+0x8c>)
    176a:	680b      	ldr	r3, [r1, #0]
    176c:	b923      	cbnz	r3, 1778 <__mriPlatform_Init+0x7c>
    176e:	4630      	mov	r0, r6
    1770:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1774:	f7ff bf9e 	b.w	16b4 <__mriLpc176x_Init>
    1778:	bd70      	pop	{r4, r5, r6, pc}
    177a:	bf00      	nop
    177c:	100001a8 	.word	0x100001a8
    1780:	00004092 	.word	0x00004092
    1784:	e000edf0 	.word	0xe000edf0
    1788:	100001dc 	.word	0x100001dc
    178c:	100001ac 	.word	0x100001ac

00001790 <__mriMbed1768_GetMbedUid>:
    1790:	4800      	ldr	r0, [pc, #0]	; (1794 <__mriMbed1768_GetMbedUid+0x4>)
    1792:	4770      	bx	lr
    1794:	100001ac 	.word	0x100001ac

00001798 <__mriSemihost_IsDebuggeeMakingSemihostCall>:
    1798:	b508      	push	{r3, lr}
    179a:	f7ff fc3f 	bl	101c <__mriPlatform_TypeOfCurrentInstruction>
    179e:	3801      	subs	r0, #1
    17a0:	b2c0      	uxtb	r0, r0
    17a2:	2801      	cmp	r0, #1
    17a4:	bf8c      	ite	hi
    17a6:	2000      	movhi	r0, #0
    17a8:	2001      	movls	r0, #1
    17aa:	bd08      	pop	{r3, pc}

000017ac <__mriSemihost_HandleSemihostRequest>:
    17ac:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    17ae:	f7ff fc35 	bl	101c <__mriPlatform_TypeOfCurrentInstruction>
    17b2:	4604      	mov	r4, r0
    17b4:	4668      	mov	r0, sp
    17b6:	f7ff fc45 	bl	1044 <__mriPlatform_GetSemihostCallParameters>
    17ba:	2c01      	cmp	r4, #1
    17bc:	d103      	bne.n	17c6 <__mriSemihost_HandleSemihostRequest+0x1a>
    17be:	4668      	mov	r0, sp
    17c0:	f000 f894 	bl	18ec <__mriSemihost_HandleMbedSemihostRequest>
    17c4:	e006      	b.n	17d4 <__mriSemihost_HandleSemihostRequest+0x28>
    17c6:	2c02      	cmp	r4, #2
    17c8:	d103      	bne.n	17d2 <__mriSemihost_HandleSemihostRequest+0x26>
    17ca:	4668      	mov	r0, sp
    17cc:	f000 f804 	bl	17d8 <__mriSemihost_HandleNewlibSemihostRequest>
    17d0:	e000      	b.n	17d4 <__mriSemihost_HandleSemihostRequest+0x28>
    17d2:	2000      	movs	r0, #0
    17d4:	b004      	add	sp, #16
    17d6:	bd10      	pop	{r4, pc}

000017d8 <__mriSemihost_HandleNewlibSemihostRequest>:
    17d8:	b510      	push	{r4, lr}
    17da:	b08c      	sub	sp, #48	; 0x30
    17dc:	4604      	mov	r4, r0
    17de:	f7ff fbdf 	bl	fa0 <__mriPlatform_GetProgramCounter>
    17e2:	4b33      	ldr	r3, [pc, #204]	; (18b0 <CFSR_STACK_ERROR_BITS+0x98>)
    17e4:	f040 0001 	orr.w	r0, r0, #1
    17e8:	4298      	cmp	r0, r3
    17ea:	d109      	bne.n	1800 <__mriSemihost_HandleNewlibSemihostRequest+0x28>
    17ec:	6820      	ldr	r0, [r4, #0]
    17ee:	6863      	ldr	r3, [r4, #4]
    17f0:	68a1      	ldr	r1, [r4, #8]
    17f2:	9002      	str	r0, [sp, #8]
    17f4:	a802      	add	r0, sp, #8
    17f6:	9303      	str	r3, [sp, #12]
    17f8:	9104      	str	r1, [sp, #16]
    17fa:	f000 fd3d 	bl	2278 <__mriIssueGdbFileWriteRequest>
    17fe:	e055      	b.n	18ac <CFSR_STACK_ERROR_BITS+0x94>
    1800:	492c      	ldr	r1, [pc, #176]	; (18b4 <CFSR_STACK_ERROR_BITS+0x9c>)
    1802:	4288      	cmp	r0, r1
    1804:	d109      	bne.n	181a <CFSR_STACK_ERROR_BITS+0x2>
    1806:	6823      	ldr	r3, [r4, #0]
    1808:	6861      	ldr	r1, [r4, #4]
    180a:	68a2      	ldr	r2, [r4, #8]
    180c:	a802      	add	r0, sp, #8
    180e:	9302      	str	r3, [sp, #8]
    1810:	9103      	str	r1, [sp, #12]
    1812:	9204      	str	r2, [sp, #16]
    1814:	f000 fd54 	bl	22c0 <__mriIssueGdbFileReadRequest>
    1818:	e048      	b.n	18ac <CFSR_STACK_ERROR_BITS+0x94>
    181a:	4a27      	ldr	r2, [pc, #156]	; (18b8 <CFSR_STACK_ERROR_BITS+0xa0>)
    181c:	4290      	cmp	r0, r2
    181e:	d10c      	bne.n	183a <CFSR_STACK_ERROR_BITS+0x22>
    1820:	6820      	ldr	r0, [r4, #0]
    1822:	9008      	str	r0, [sp, #32]
    1824:	f001 fdfc 	bl	3420 <strlen>
    1828:	9009      	str	r0, [sp, #36]	; 0x24
    182a:	68a0      	ldr	r0, [r4, #8]
    182c:	6862      	ldr	r2, [r4, #4]
    182e:	900b      	str	r0, [sp, #44]	; 0x2c
    1830:	a808      	add	r0, sp, #32
    1832:	920a      	str	r2, [sp, #40]	; 0x28
    1834:	f000 fcf2 	bl	221c <__mriIssueGdbFileOpenRequest>
    1838:	e038      	b.n	18ac <CFSR_STACK_ERROR_BITS+0x94>
    183a:	4b20      	ldr	r3, [pc, #128]	; (18bc <CFSR_STACK_ERROR_BITS+0xa4>)
    183c:	4298      	cmp	r0, r3
    183e:	d108      	bne.n	1852 <CFSR_STACK_ERROR_BITS+0x3a>
    1840:	6820      	ldr	r0, [r4, #0]
    1842:	9000      	str	r0, [sp, #0]
    1844:	f001 fdec 	bl	3420 <strlen>
    1848:	9001      	str	r0, [sp, #4]
    184a:	4668      	mov	r0, sp
    184c:	f000 fdb2 	bl	23b4 <__mriIssueGdbFileUnlinkRequest>
    1850:	e02c      	b.n	18ac <CFSR_STACK_ERROR_BITS+0x94>
    1852:	491b      	ldr	r1, [pc, #108]	; (18c0 <CFSR_STACK_ERROR_BITS+0xa8>)
    1854:	4288      	cmp	r0, r1
    1856:	d109      	bne.n	186c <CFSR_STACK_ERROR_BITS+0x54>
    1858:	6820      	ldr	r0, [r4, #0]
    185a:	6863      	ldr	r3, [r4, #4]
    185c:	68a1      	ldr	r1, [r4, #8]
    185e:	9005      	str	r0, [sp, #20]
    1860:	a805      	add	r0, sp, #20
    1862:	9306      	str	r3, [sp, #24]
    1864:	9107      	str	r1, [sp, #28]
    1866:	f000 fd63 	bl	2330 <__mriIssueGdbFileSeekRequest>
    186a:	e01f      	b.n	18ac <CFSR_STACK_ERROR_BITS+0x94>
    186c:	4a15      	ldr	r2, [pc, #84]	; (18c4 <CFSR_STACK_ERROR_BITS+0xac>)
    186e:	4290      	cmp	r0, r2
    1870:	d103      	bne.n	187a <CFSR_STACK_ERROR_BITS+0x62>
    1872:	6820      	ldr	r0, [r4, #0]
    1874:	f000 fd48 	bl	2308 <__mriIssueGdbFileCloseRequest>
    1878:	e018      	b.n	18ac <CFSR_STACK_ERROR_BITS+0x94>
    187a:	4b13      	ldr	r3, [pc, #76]	; (18c8 <CFSR_STACK_ERROR_BITS+0xb0>)
    187c:	4298      	cmp	r0, r3
    187e:	d104      	bne.n	188a <CFSR_STACK_ERROR_BITS+0x72>
    1880:	e894 0003 	ldmia.w	r4, {r0, r1}
    1884:	f000 fd78 	bl	2378 <__mriIssueGdbFileFStatRequest>
    1888:	e010      	b.n	18ac <CFSR_STACK_ERROR_BITS+0x94>
    188a:	4910      	ldr	r1, [pc, #64]	; (18cc <CFSR_STACK_ERROR_BITS+0xb4>)
    188c:	4288      	cmp	r0, r1
    188e:	d104      	bne.n	189a <CFSR_STACK_ERROR_BITS+0x82>
    1890:	e894 0003 	ldmia.w	r4, {r0, r1}
    1894:	f000 fdac 	bl	23f0 <__mriIssueGdbFileStatRequest>
    1898:	e008      	b.n	18ac <CFSR_STACK_ERROR_BITS+0x94>
    189a:	4a0d      	ldr	r2, [pc, #52]	; (18d0 <CFSR_STACK_ERROR_BITS+0xb8>)
    189c:	4290      	cmp	r0, r2
    189e:	d104      	bne.n	18aa <CFSR_STACK_ERROR_BITS+0x92>
    18a0:	e894 0003 	ldmia.w	r4, {r0, r1}
    18a4:	f000 fdcc 	bl	2440 <__mriIssueGdbFileRenameRequest>
    18a8:	e000      	b.n	18ac <CFSR_STACK_ERROR_BITS+0x94>
    18aa:	2000      	movs	r0, #0
    18ac:	b00c      	add	sp, #48	; 0x30
    18ae:	bd10      	pop	{r4, pc}
    18b0:	00001bed 	.word	0x00001bed
    18b4:	00001bf1 	.word	0x00001bf1
    18b8:	00001bf5 	.word	0x00001bf5
    18bc:	00001bfd 	.word	0x00001bfd
    18c0:	00001c05 	.word	0x00001c05
    18c4:	00001c09 	.word	0x00001c09
    18c8:	00001c0d 	.word	0x00001c0d
    18cc:	00001c01 	.word	0x00001c01
    18d0:	00001bf9 	.word	0x00001bf9

000018d4 <convertBytesTransferredToBytesNotTransferred>:
    18d4:	b510      	push	{r4, lr}
    18d6:	4604      	mov	r4, r0
    18d8:	f7fe fdea 	bl	4b0 <__mriCore_GetSemihostReturnCode>
    18dc:	1e03      	subs	r3, r0, #0
    18de:	bfa8      	it	ge
    18e0:	ebc3 0004 	rsbge	r0, r3, r4
    18e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    18e8:	f7ff bbbe 	b.w	1068 <__mriPlatform_SetSemihostCallReturnValue>

000018ec <__mriSemihost_HandleMbedSemihostRequest>:
    18ec:	b530      	push	{r4, r5, lr}
    18ee:	6803      	ldr	r3, [r0, #0]
    18f0:	b099      	sub	sp, #100	; 0x64
    18f2:	2b09      	cmp	r3, #9
    18f4:	f000 8084 	beq.w	1a00 <__mriSemihost_HandleMbedSemihostRequest+0x114>
    18f8:	d80f      	bhi.n	191a <__mriSemihost_HandleMbedSemihostRequest+0x2e>
    18fa:	2b02      	cmp	r3, #2
    18fc:	d051      	beq.n	19a2 <__mriSemihost_HandleMbedSemihostRequest+0xb6>
    18fe:	d803      	bhi.n	1908 <__mriSemihost_HandleMbedSemihostRequest+0x1c>
    1900:	2b01      	cmp	r3, #1
    1902:	f040 8084 	bne.w	1a0e <__mriSemihost_HandleMbedSemihostRequest+0x122>
    1906:	e02c      	b.n	1962 <__mriSemihost_HandleMbedSemihostRequest+0x76>
    1908:	2b05      	cmp	r3, #5
    190a:	d050      	beq.n	19ae <__mriSemihost_HandleMbedSemihostRequest+0xc2>
    190c:	2b06      	cmp	r3, #6
    190e:	d17e      	bne.n	1a0e <__mriSemihost_HandleMbedSemihostRequest+0x122>
    1910:	6845      	ldr	r5, [r0, #4]
    1912:	4628      	mov	r0, r5
    1914:	f000 fcd4 	bl	22c0 <__mriIssueGdbFileReadRequest>
    1918:	e04d      	b.n	19b6 <__mriSemihost_HandleMbedSemihostRequest+0xca>
    191a:	2b0c      	cmp	r3, #12
    191c:	d051      	beq.n	19c2 <__mriSemihost_HandleMbedSemihostRequest+0xd6>
    191e:	d80c      	bhi.n	193a <__mriSemihost_HandleMbedSemihostRequest+0x4e>
    1920:	2b0a      	cmp	r3, #10
    1922:	d174      	bne.n	1a0e <__mriSemihost_HandleMbedSemihostRequest+0x122>
    1924:	6843      	ldr	r3, [r0, #4]
    1926:	2000      	movs	r0, #0
    1928:	681a      	ldr	r2, [r3, #0]
    192a:	6859      	ldr	r1, [r3, #4]
    192c:	9003      	str	r0, [sp, #12]
    192e:	a801      	add	r0, sp, #4
    1930:	9201      	str	r2, [sp, #4]
    1932:	9102      	str	r1, [sp, #8]
    1934:	f000 fcfc 	bl	2330 <__mriIssueGdbFileSeekRequest>
    1938:	e037      	b.n	19aa <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    193a:	2b0e      	cmp	r3, #14
    193c:	d05c      	beq.n	19f8 <__mriSemihost_HandleMbedSemihostRequest+0x10c>
    193e:	f240 1401 	movw	r4, #257	; 0x101
    1942:	42a3      	cmp	r3, r4
    1944:	d163      	bne.n	1a0e <__mriSemihost_HandleMbedSemihostRequest+0x122>
    1946:	6845      	ldr	r5, [r0, #4]
    1948:	686c      	ldr	r4, [r5, #4]
    194a:	682d      	ldr	r5, [r5, #0]
    194c:	f7ff ff20 	bl	1790 <__mriMbed1768_GetMbedUid>
    1950:	2c24      	cmp	r4, #36	; 0x24
    1952:	bf34      	ite	cc
    1954:	4622      	movcc	r2, r4
    1956:	2224      	movcs	r2, #36	; 0x24
    1958:	4601      	mov	r1, r0
    195a:	4628      	mov	r0, r5
    195c:	f001 fd44 	bl	33e8 <memcpy>
    1960:	e04e      	b.n	1a00 <__mriSemihost_HandleMbedSemihostRequest+0x114>
    1962:	6840      	ldr	r0, [r0, #4]
    1964:	6802      	ldr	r2, [r0, #0]
    1966:	6841      	ldr	r1, [r0, #4]
    1968:	9204      	str	r2, [sp, #16]
    196a:	074a      	lsls	r2, r1, #29
    196c:	d405      	bmi.n	197a <__mriSemihost_HandleMbedSemihostRequest+0x8e>
    196e:	f011 0408 	ands.w	r4, r1, #8
    1972:	d005      	beq.n	1980 <__mriSemihost_HandleMbedSemihostRequest+0x94>
    1974:	f44f 7402 	mov.w	r4, #520	; 0x208
    1978:	e003      	b.n	1982 <__mriSemihost_HandleMbedSemihostRequest+0x96>
    197a:	f44f 64c0 	mov.w	r4, #1536	; 0x600
    197e:	e000      	b.n	1982 <__mriSemihost_HandleMbedSemihostRequest+0x96>
    1980:	4623      	mov	r3, r4
    1982:	f011 0f02 	tst.w	r1, #2
    1986:	6880      	ldr	r0, [r0, #8]
    1988:	bf18      	it	ne
    198a:	2302      	movne	r3, #2
    198c:	ea43 0204 	orr.w	r2, r3, r4
    1990:	f44f 71db 	mov.w	r1, #438	; 0x1b6
    1994:	9005      	str	r0, [sp, #20]
    1996:	a804      	add	r0, sp, #16
    1998:	9206      	str	r2, [sp, #24]
    199a:	9107      	str	r1, [sp, #28]
    199c:	f000 fc3e 	bl	221c <__mriIssueGdbFileOpenRequest>
    19a0:	e003      	b.n	19aa <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    19a2:	6844      	ldr	r4, [r0, #4]
    19a4:	6820      	ldr	r0, [r4, #0]
    19a6:	f000 fcaf 	bl	2308 <__mriIssueGdbFileCloseRequest>
    19aa:	4604      	mov	r4, r0
    19ac:	e030      	b.n	1a10 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19ae:	6845      	ldr	r5, [r0, #4]
    19b0:	4628      	mov	r0, r5
    19b2:	f000 fc61 	bl	2278 <__mriIssueGdbFileWriteRequest>
    19b6:	4604      	mov	r4, r0
    19b8:	b350      	cbz	r0, 1a10 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19ba:	68a8      	ldr	r0, [r5, #8]
    19bc:	f7ff ff8a 	bl	18d4 <convertBytesTransferredToBytesNotTransferred>
    19c0:	e026      	b.n	1a10 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19c2:	6843      	ldr	r3, [r0, #4]
    19c4:	a908      	add	r1, sp, #32
    19c6:	6818      	ldr	r0, [r3, #0]
    19c8:	f000 fcd6 	bl	2378 <__mriIssueGdbFileFStatRequest>
    19cc:	4604      	mov	r4, r0
    19ce:	b1f8      	cbz	r0, 1a10 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19d0:	f7fe fd6e 	bl	4b0 <__mriCore_GetSemihostReturnCode>
    19d4:	b9e0      	cbnz	r0, 1a10 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19d6:	f89d 1041 	ldrb.w	r1, [sp, #65]	; 0x41
    19da:	f89d 2042 	ldrb.w	r2, [sp, #66]	; 0x42
    19de:	0408      	lsls	r0, r1, #16
    19e0:	ea40 2302 	orr.w	r3, r0, r2, lsl #8
    19e4:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
    19e8:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
    19ec:	4313      	orrs	r3, r2
    19ee:	ea43 6001 	orr.w	r0, r3, r1, lsl #24
    19f2:	f7ff fb39 	bl	1068 <__mriPlatform_SetSemihostCallReturnValue>
    19f6:	e00b      	b.n	1a10 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19f8:	6840      	ldr	r0, [r0, #4]
    19fa:	f000 fcdb 	bl	23b4 <__mriIssueGdbFileUnlinkRequest>
    19fe:	e7d4      	b.n	19aa <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    1a00:	f7ff fada 	bl	fb8 <__mriPlatform_AdvanceProgramCounterToNextInstruction>
    1a04:	2000      	movs	r0, #0
    1a06:	f7ff fb2f 	bl	1068 <__mriPlatform_SetSemihostCallReturnValue>
    1a0a:	2401      	movs	r4, #1
    1a0c:	e000      	b.n	1a10 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1a0e:	2400      	movs	r4, #0
    1a10:	4620      	mov	r0, r4
    1a12:	b019      	add	sp, #100	; 0x64
    1a14:	bd30      	pop	{r4, r5, pc}
	...

00001a18 <__mriGetIPSR>:
    1a18:	f3ef 8005 	mrs	r0, IPSR
    1a1c:	4770      	bx	lr

00001a1e <__mriSetBASEPRI>:
    1a1e:	f380 8811 	msr	BASEPRI, r0
    1a22:	4770      	bx	lr

00001a24 <__mriGetBASEPRI>:
    1a24:	f3ef 8011 	mrs	r0, BASEPRI
    1a28:	4770      	bx	lr

00001a2a <__mriDSB>:
    1a2a:	f3bf 8f4f 	dsb	sy
    1a2e:	4770      	bx	lr

00001a30 <__mriISB>:
    1a30:	f3bf 8f6f 	isb	sy
    1a34:	4770      	bx	lr

00001a36 <mriExceptionHandler>:
    1a36:	4857      	ldr	r0, [pc, #348]	; (1b94 <UART3_IRQHandler+0x6>)
    1a38:	f000 b803 	b.w	1a42 <mriGetSPAndCallHandler>

00001a3c <mriFaultHandler>:
    1a3c:	4856      	ldr	r0, [pc, #344]	; (1b98 <UART3_IRQHandler+0xa>)
    1a3e:	f000 b800 	b.w	1a42 <mriGetSPAndCallHandler>

00001a42 <mriGetSPAndCallHandler>:
    1a42:	f01e 0f04 	tst.w	lr, #4
    1a46:	bf0c      	ite	eq
    1a48:	f3ef 8108 	mrseq	r1, MSP
    1a4c:	f3ef 8109 	mrsne	r1, PSP
    1a50:	4a52      	ldr	r2, [pc, #328]	; (1b9c <UART3_IRQHandler+0xe>)
    1a52:	6011      	str	r1, [r2, #0]
    1a54:	4687      	mov	pc, r0

00001a56 <checkForStackError>:
    1a56:	4852      	ldr	r0, [pc, #328]	; (1ba0 <UART3_IRQHandler+0x12>)
    1a58:	4a52      	ldr	r2, [pc, #328]	; (1ba4 <UART3_IRQHandler+0x16>)
    1a5a:	6800      	ldr	r0, [r0, #0]
    1a5c:	4210      	tst	r0, r2
    1a5e:	f000 8003 	beq.w	1a68 <mriSaveRestoreContext>
    1a62:	4951      	ldr	r1, [pc, #324]	; (1ba8 <UART3_IRQHandler+0x1a>)
    1a64:	f000 b800 	b.w	1a68 <mriSaveRestoreContext>

00001a68 <mriSaveRestoreContext>:
    1a68:	4850      	ldr	r0, [pc, #320]	; (1bac <UART3_IRQHandler+0x1e>)
    1a6a:	6802      	ldr	r2, [r0, #0]
    1a6c:	f012 0f01 	tst.w	r2, #1
    1a70:	bf1e      	ittt	ne
    1a72:	f042 0202 	orrne.w	r2, r2, #2
    1a76:	6002      	strne	r2, [r0, #0]
    1a78:	f000 b858 	bne.w	1b2c <mriAdvancePCAndReturn>
    1a7c:	f042 0201 	orr.w	r2, r2, #1
    1a80:	6002      	str	r2, [r0, #0]
    1a82:	2040      	movs	r0, #64	; 0x40
    1a84:	f8df c124 	ldr.w	r12, [pc, #292]	; 1bac <UART3_IRQHandler+0x1e>
    1a88:	4a49      	ldr	r2, [pc, #292]	; (1bb0 <UART3_IRQHandler+0x22>)
    1a8a:	4613      	mov	r3, r2
    1a8c:	e96c 2302 	strd	r2, r3, [r12, #-8]!
    1a90:	3801      	subs	r0, #1
    1a92:	d1fb      	bne.n	1a8c <mriSaveRestoreContext+0x24>
    1a94:	f3ef 8208 	mrs	r2, MSP
    1a98:	4846      	ldr	r0, [pc, #280]	; (1bb4 <UART3_IRQHandler+0x26>)
    1a9a:	6002      	str	r2, [r0, #0]
    1a9c:	4843      	ldr	r0, [pc, #268]	; (1bac <UART3_IRQHandler+0x1e>)
    1a9e:	f380 8808 	msr	MSP, r0
    1aa2:	4845      	ldr	r0, [pc, #276]	; (1bb8 <UART3_IRQHandler+0x2a>)
    1aa4:	e92d 5000 	stmdb	sp!, {r12, lr}
    1aa8:	e8b1 500c 	ldmia.w	r1!, {r2, r3, r12, lr}
    1aac:	e8a0 500c 	stmia.w	r0!, {r2, r3, r12, lr}
    1ab0:	e8a0 0ff0 	stmia.w	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    1ab4:	c93c      	ldmia	r1!, {r2, r3, r4, r5}
    1ab6:	f840 2b08 	str.w	r2, [r0], #8
    1aba:	c038      	stmia	r0!, {r3, r4, r5}
    1abc:	f415 7f00 	tst.w	r5, #512	; 0x200
    1ac0:	bf18      	it	ne
    1ac2:	3104      	addne	r1, #4
    1ac4:	f840 1c10 	str.w	r1, [r0, #-16]
    1ac8:	f7fe fd50 	bl	56c <__mriDebugException>
    1acc:	483b      	ldr	r0, [pc, #236]	; (1bbc <UART3_IRQHandler+0x2e>)
    1ace:	f850 1c0c 	ldr.w	r1, [r0, #-12]
    1ad2:	6802      	ldr	r2, [r0, #0]
    1ad4:	f412 7f00 	tst.w	r2, #512	; 0x200
    1ad8:	bf18      	it	ne
    1ada:	3904      	subne	r1, #4
    1adc:	f841 2d04 	str.w	r2, [r1, #-4]!
    1ae0:	e930 000c 	ldmdb	r0!, {r2, r3}
    1ae4:	e921 000c 	stmdb	r1!, {r2, r3}
    1ae8:	f850 cd08 	ldr.w	r12, [r0, #-8]!
    1aec:	f841 cd04 	str.w	r12, [r1, #-4]!
    1af0:	e930 0ff0 	ldmdb	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    1af4:	e930 500c 	ldmdb	r0!, {r2, r3, r12, lr}
    1af8:	e921 500c 	stmdb	r1!, {r2, r3, r12, lr}
    1afc:	e8bd 5000 	ldmia.w	sp!, {r12, lr}
    1b00:	482c      	ldr	r0, [pc, #176]	; (1bb4 <UART3_IRQHandler+0x26>)
    1b02:	6802      	ldr	r2, [r0, #0]
    1b04:	f382 8808 	msr	MSP, r2
    1b08:	f01e 0f04 	tst.w	lr, #4
    1b0c:	bf0c      	ite	eq
    1b0e:	f381 8808 	msreq	MSP, r1
    1b12:	f381 8809 	msrne	PSP, r1
    1b16:	4825      	ldr	r0, [pc, #148]	; (1bac <UART3_IRQHandler+0x1e>)
    1b18:	6801      	ldr	r1, [r0, #0]
    1b1a:	f021 0101 	bic.w	r1, r1, #1
    1b1e:	6001      	str	r1, [r0, #0]
    1b20:	f3bf 8f4f 	dsb	sy
    1b24:	f3bf 8f6f 	isb	sy
    1b28:	f000 b81b 	b.w	1b62 <mriClearFaultStatusBitsAndReturn>

00001b2c <mriAdvancePCAndReturn>:
    1b2c:	481c      	ldr	r0, [pc, #112]	; (1ba0 <UART3_IRQHandler+0x12>)
    1b2e:	6800      	ldr	r0, [r0, #0]
    1b30:	f410 6f80 	tst.w	r0, #1024	; 0x400
    1b34:	f040 8015 	bne.w	1b62 <mriClearFaultStatusBitsAndReturn>
    1b38:	6988      	ldr	r0, [r1, #24]
    1b3a:	8802      	ldrh	r2, [r0, #0]
    1b3c:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
    1b40:	f5b2 4f68 	cmp.w	r2, #59392	; 0xe800
    1b44:	d008      	beq.n	1b58 <mriAdvancePCAndReturn+0x2c>
    1b46:	f5b2 4f70 	cmp.w	r2, #61440	; 0xf000
    1b4a:	d005      	beq.n	1b58 <mriAdvancePCAndReturn+0x2c>
    1b4c:	f5b2 4f78 	cmp.w	r2, #63488	; 0xf800
    1b50:	d002      	beq.n	1b58 <mriAdvancePCAndReturn+0x2c>
    1b52:	f100 0002 	add.w	r0, r0, #2
    1b56:	e001      	b.n	1b5c <mriAdvancePCAndReturn+0x30>
    1b58:	f100 0004 	add.w	r0, r0, #4
    1b5c:	6188      	str	r0, [r1, #24]
    1b5e:	f000 b800 	b.w	1b62 <mriClearFaultStatusBitsAndReturn>

00001b62 <mriClearFaultStatusBitsAndReturn>:
    1b62:	480f      	ldr	r0, [pc, #60]	; (1ba0 <UART3_IRQHandler+0x12>)
    1b64:	6801      	ldr	r1, [r0, #0]
    1b66:	6001      	str	r1, [r0, #0]
    1b68:	6841      	ldr	r1, [r0, #4]
    1b6a:	6041      	str	r1, [r0, #4]
    1b6c:	4770      	bx	lr

00001b6e <HardFault_Handler>:
    1b6e:	f7ff bf65 	b.w	1a3c <mriFaultHandler>

00001b72 <MemManage_Handler>:
    1b72:	f7ff bf63 	b.w	1a3c <mriFaultHandler>

00001b76 <BusFault_Handler>:
    1b76:	f7ff bf61 	b.w	1a3c <mriFaultHandler>

00001b7a <UsageFault_Handler>:
    1b7a:	f7ff bf5c 	b.w	1a36 <mriExceptionHandler>

00001b7e <DebugMon_Handler>:
    1b7e:	f7ff bf5a 	b.w	1a36 <mriExceptionHandler>

00001b82 <UART0_IRQHandler>:
    1b82:	f7ff bf58 	b.w	1a36 <mriExceptionHandler>

00001b86 <UART1_IRQHandler>:
    1b86:	f7ff bf56 	b.w	1a36 <mriExceptionHandler>

00001b8a <UART2_IRQHandler>:
    1b8a:	f7ff bf54 	b.w	1a36 <mriExceptionHandler>

00001b8e <UART3_IRQHandler>:
    1b8e:	f7ff bf52 	b.w	1a36 <mriExceptionHandler>
    1b92:	0000      	.short	0x0000
    1b94:	00001a69 	.word	0x00001a69
    1b98:	00001a57 	.word	0x00001a57
    1b9c:	100003e8 	.word	0x100003e8
    1ba0:	e000ed28 	.word	0xe000ed28
    1ba4:	00001818 	.word	0x00001818
    1ba8:	0000380c 	.word	0x0000380c
    1bac:	100003e0 	.word	0x100003e0
    1bb0:	deadbeef 	.word	0xdeadbeef
    1bb4:	100003e4 	.word	0x100003e4
    1bb8:	100003ec 	.word	0x100003ec
    1bbc:	1000042c 	.word	0x1000042c

00001bc0 <__mriDisableMbed>:
    1bc0:	b082      	sub	sp, #8
    1bc2:	a901      	add	r1, sp, #4
    1bc4:	f240 1005 	movw	r0, #261	; 0x105
    1bc8:	beab      	bkpt	0x00ab
    1bca:	2800      	cmp	r0, #0
    1bcc:	bf0c      	ite	eq
    1bce:	9801      	ldreq	r0, [sp, #4]
    1bd0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    1bd4:	b002      	add	sp, #8
    1bd6:	4770      	bx	lr

00001bd8 <__mriGetMbedUid>:
    1bd8:	b082      	sub	sp, #8
    1bda:	9000      	str	r0, [sp, #0]
    1bdc:	2021      	movs	r0, #33	; 0x21
    1bde:	9001      	str	r0, [sp, #4]
    1be0:	4669      	mov	r1, sp
    1be2:	f240 1001 	movw	r0, #257	; 0x101
    1be6:	beab      	bkpt	0x00ab
    1be8:	b002      	add	sp, #8
    1bea:	4770      	bx	lr

00001bec <__mriNewlib_SemihostWrite>:
    1bec:	beff      	bkpt	0x00ff
    1bee:	4770      	bx	lr

00001bf0 <__mriNewlib_SemihostRead>:
    1bf0:	beff      	bkpt	0x00ff
    1bf2:	4770      	bx	lr

00001bf4 <__mriNewLib_SemihostOpen>:
    1bf4:	beff      	bkpt	0x00ff
    1bf6:	4770      	bx	lr

00001bf8 <__mriNewLib_SemihostRename>:
    1bf8:	beff      	bkpt	0x00ff
    1bfa:	4770      	bx	lr

00001bfc <__mriNewLib_SemihostUnlink>:
    1bfc:	beff      	bkpt	0x00ff
    1bfe:	4770      	bx	lr

00001c00 <__mriNewLib_SemihostStat>:
    1c00:	beff      	bkpt	0x00ff
    1c02:	4770      	bx	lr

00001c04 <__mriNewlib_SemihostLSeek>:
    1c04:	beff      	bkpt	0x00ff
    1c06:	4770      	bx	lr

00001c08 <__mriNewlib_SemihostClose>:
    1c08:	beff      	bkpt	0x00ff
    1c0a:	4770      	bx	lr

00001c0c <__mriNewlib_SemihostFStat>:
    1c0c:	beff      	bkpt	0x00ff
    1c0e:	4770      	bx	lr

00001c10 <HexCharToNibble>:
    1c10:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    1c14:	2b05      	cmp	r3, #5
    1c16:	d801      	bhi.n	1c1c <HexCharToNibble+0xc>
    1c18:	3857      	subs	r0, #87	; 0x57
    1c1a:	4770      	bx	lr
    1c1c:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
    1c20:	2905      	cmp	r1, #5
    1c22:	d801      	bhi.n	1c28 <HexCharToNibble+0x18>
    1c24:	3837      	subs	r0, #55	; 0x37
    1c26:	4770      	bx	lr
    1c28:	3830      	subs	r0, #48	; 0x30
    1c2a:	b2c2      	uxtb	r2, r0
    1c2c:	2a09      	cmp	r2, #9
    1c2e:	d907      	bls.n	1c40 <HexCharToNibble+0x30>
    1c30:	4804      	ldr	r0, [pc, #16]	; (1c44 <HexCharToNibble+0x34>)
    1c32:	6803      	ldr	r3, [r0, #0]
    1c34:	2b02      	cmp	r3, #2
    1c36:	bfb8      	it	lt
    1c38:	2302      	movlt	r3, #2
    1c3a:	6003      	str	r3, [r0, #0]
    1c3c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1c40:	4770      	bx	lr
    1c42:	bf00      	nop
    1c44:	100001dc 	.word	0x100001dc

00001c48 <__mriBuffer_Init>:
    1c48:	188a      	adds	r2, r1, r2
    1c4a:	6001      	str	r1, [r0, #0]
    1c4c:	6042      	str	r2, [r0, #4]
    1c4e:	6081      	str	r1, [r0, #8]
    1c50:	4770      	bx	lr

00001c52 <__mriBuffer_Reset>:
    1c52:	6803      	ldr	r3, [r0, #0]
    1c54:	6083      	str	r3, [r0, #8]
    1c56:	4770      	bx	lr

00001c58 <__mriBuffer_SetEndOfBuffer>:
    1c58:	6883      	ldr	r3, [r0, #8]
    1c5a:	6043      	str	r3, [r0, #4]
    1c5c:	4770      	bx	lr

00001c5e <__mriBuffer_BytesLeft>:
    1c5e:	6883      	ldr	r3, [r0, #8]
    1c60:	6840      	ldr	r0, [r0, #4]
    1c62:	4283      	cmp	r3, r0
    1c64:	bf94      	ite	ls
    1c66:	ebc3 0000 	rsbls	r0, r3, r0
    1c6a:	2000      	movhi	r0, #0
    1c6c:	4770      	bx	lr
	...

00001c70 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>:
    1c70:	b538      	push	{r3, r4, r5, lr}
    1c72:	460d      	mov	r5, r1
    1c74:	4604      	mov	r4, r0
    1c76:	f7ff fff2 	bl	1c5e <__mriBuffer_BytesLeft>
    1c7a:	42a8      	cmp	r0, r5
    1c7c:	d208      	bcs.n	1c90 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x20>
    1c7e:	4905      	ldr	r1, [pc, #20]	; (1c94 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x24>)
    1c80:	6863      	ldr	r3, [r4, #4]
    1c82:	680a      	ldr	r2, [r1, #0]
    1c84:	1c58      	adds	r0, r3, #1
    1c86:	2a01      	cmp	r2, #1
    1c88:	bfb8      	it	lt
    1c8a:	2201      	movlt	r2, #1
    1c8c:	60a0      	str	r0, [r4, #8]
    1c8e:	600a      	str	r2, [r1, #0]
    1c90:	bd38      	pop	{r3, r4, r5, pc}
    1c92:	bf00      	nop
    1c94:	100001dc 	.word	0x100001dc

00001c98 <__mriBuffer_OverrunDetected>:
    1c98:	6882      	ldr	r2, [r0, #8]
    1c9a:	6840      	ldr	r0, [r0, #4]
    1c9c:	4282      	cmp	r2, r0
    1c9e:	bf94      	ite	ls
    1ca0:	2000      	movls	r0, #0
    1ca2:	2001      	movhi	r0, #1
    1ca4:	4770      	bx	lr
	...

00001ca8 <__mriBuffer_WriteChar>:
    1ca8:	b570      	push	{r4, r5, r6, lr}
    1caa:	4d07      	ldr	r5, [pc, #28]	; (1cc8 <__mriBuffer_WriteChar+0x20>)
    1cac:	2300      	movs	r3, #0
    1cae:	460e      	mov	r6, r1
    1cb0:	2101      	movs	r1, #1
    1cb2:	4604      	mov	r4, r0
    1cb4:	602b      	str	r3, [r5, #0]
    1cb6:	f7ff ffdb 	bl	1c70 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1cba:	6828      	ldr	r0, [r5, #0]
    1cbc:	b918      	cbnz	r0, 1cc6 <__mriBuffer_WriteChar+0x1e>
    1cbe:	68a1      	ldr	r1, [r4, #8]
    1cc0:	f801 6b01 	strb.w	r6, [r1], #1
    1cc4:	60a1      	str	r1, [r4, #8]
    1cc6:	bd70      	pop	{r4, r5, r6, pc}
    1cc8:	100001dc 	.word	0x100001dc

00001ccc <__mriBuffer_ReadChar>:
    1ccc:	b570      	push	{r4, r5, r6, lr}
    1cce:	4e08      	ldr	r6, [pc, #32]	; (1cf0 <__mriBuffer_ReadChar+0x24>)
    1cd0:	2400      	movs	r4, #0
    1cd2:	2101      	movs	r1, #1
    1cd4:	4605      	mov	r5, r0
    1cd6:	6034      	str	r4, [r6, #0]
    1cd8:	f7ff ffca 	bl	1c70 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1cdc:	6833      	ldr	r3, [r6, #0]
    1cde:	b923      	cbnz	r3, 1cea <__mriBuffer_ReadChar+0x1e>
    1ce0:	68a9      	ldr	r1, [r5, #8]
    1ce2:	f811 0b01 	ldrb.w	r0, [r1], #1
    1ce6:	60a9      	str	r1, [r5, #8]
    1ce8:	bd70      	pop	{r4, r5, r6, pc}
    1cea:	4620      	mov	r0, r4
    1cec:	bd70      	pop	{r4, r5, r6, pc}
    1cee:	bf00      	nop
    1cf0:	100001dc 	.word	0x100001dc

00001cf4 <__mriBuffer_WriteByteAsHex>:
    1cf4:	b570      	push	{r4, r5, r6, lr}
    1cf6:	4e0b      	ldr	r6, [pc, #44]	; (1d24 <__mriBuffer_WriteByteAsHex+0x30>)
    1cf8:	2300      	movs	r3, #0
    1cfa:	460d      	mov	r5, r1
    1cfc:	2102      	movs	r1, #2
    1cfe:	4604      	mov	r4, r0
    1d00:	6033      	str	r3, [r6, #0]
    1d02:	f7ff ffb5 	bl	1c70 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1d06:	6830      	ldr	r0, [r6, #0]
    1d08:	b950      	cbnz	r0, 1d20 <__mriBuffer_WriteByteAsHex+0x2c>
    1d0a:	4a07      	ldr	r2, [pc, #28]	; (1d28 <__mriBuffer_WriteByteAsHex+0x34>)
    1d0c:	0929      	lsrs	r1, r5, #4
    1d0e:	f005 050f 	and.w	r5, r5, #15
    1d12:	68a3      	ldr	r3, [r4, #8]
    1d14:	5c50      	ldrb	r0, [r2, r1]
    1d16:	5d52      	ldrb	r2, [r2, r5]
    1d18:	7018      	strb	r0, [r3, #0]
    1d1a:	705a      	strb	r2, [r3, #1]
    1d1c:	3302      	adds	r3, #2
    1d1e:	60a3      	str	r3, [r4, #8]
    1d20:	bd70      	pop	{r4, r5, r6, pc}
    1d22:	bf00      	nop
    1d24:	100001dc 	.word	0x100001dc
    1d28:	000040b6 	.word	0x000040b6

00001d2c <__mriBuffer_ReadByteAsHex>:
    1d2c:	b570      	push	{r4, r5, r6, lr}
    1d2e:	4e11      	ldr	r6, [pc, #68]	; (1d74 <__mriBuffer_ReadByteAsHex+0x48>)
    1d30:	2300      	movs	r3, #0
    1d32:	2102      	movs	r1, #2
    1d34:	4604      	mov	r4, r0
    1d36:	6033      	str	r3, [r6, #0]
    1d38:	f7ff ff9a 	bl	1c70 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1d3c:	6830      	ldr	r0, [r6, #0]
    1d3e:	b108      	cbz	r0, 1d44 <__mriBuffer_ReadByteAsHex+0x18>
    1d40:	2500      	movs	r5, #0
    1d42:	e014      	b.n	1d6e <__mriBuffer_ReadByteAsHex+0x42>
    1d44:	68a1      	ldr	r1, [r4, #8]
    1d46:	7808      	ldrb	r0, [r1, #0]
    1d48:	f7ff ff62 	bl	1c10 <HexCharToNibble>
    1d4c:	6833      	ldr	r3, [r6, #0]
    1d4e:	0102      	lsls	r2, r0, #4
    1d50:	b2d5      	uxtb	r5, r2
    1d52:	b92b      	cbnz	r3, 1d60 <__mriBuffer_ReadByteAsHex+0x34>
    1d54:	68a0      	ldr	r0, [r4, #8]
    1d56:	7840      	ldrb	r0, [r0, #1]
    1d58:	f7ff ff5a 	bl	1c10 <HexCharToNibble>
    1d5c:	4328      	orrs	r0, r5
    1d5e:	b2c5      	uxtb	r5, r0
    1d60:	4904      	ldr	r1, [pc, #16]	; (1d74 <__mriBuffer_ReadByteAsHex+0x48>)
    1d62:	680a      	ldr	r2, [r1, #0]
    1d64:	2a00      	cmp	r2, #0
    1d66:	d1eb      	bne.n	1d40 <__mriBuffer_ReadByteAsHex+0x14>
    1d68:	68a3      	ldr	r3, [r4, #8]
    1d6a:	1c98      	adds	r0, r3, #2
    1d6c:	60a0      	str	r0, [r4, #8]
    1d6e:	4628      	mov	r0, r5
    1d70:	bd70      	pop	{r4, r5, r6, pc}
    1d72:	bf00      	nop
    1d74:	100001dc 	.word	0x100001dc

00001d78 <__mriBuffer_WriteSizedString>:
    1d78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1d7a:	4f0b      	ldr	r7, [pc, #44]	; (1da8 <__mriBuffer_WriteSizedString+0x30>)
    1d7c:	2300      	movs	r3, #0
    1d7e:	460c      	mov	r4, r1
    1d80:	4611      	mov	r1, r2
    1d82:	4605      	mov	r5, r0
    1d84:	4616      	mov	r6, r2
    1d86:	603b      	str	r3, [r7, #0]
    1d88:	f7ff ff72 	bl	1c70 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1d8c:	6838      	ldr	r0, [r7, #0]
    1d8e:	b948      	cbnz	r0, 1da4 <__mriBuffer_WriteSizedString+0x2c>
    1d90:	19a6      	adds	r6, r4, r6
    1d92:	42b4      	cmp	r4, r6
    1d94:	d006      	beq.n	1da4 <__mriBuffer_WriteSizedString+0x2c>
    1d96:	f814 2b01 	ldrb.w	r2, [r4], #1
    1d9a:	68a9      	ldr	r1, [r5, #8]
    1d9c:	f801 2b01 	strb.w	r2, [r1], #1
    1da0:	60a9      	str	r1, [r5, #8]
    1da2:	e7f6      	b.n	1d92 <__mriBuffer_WriteSizedString+0x1a>
    1da4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1da6:	bf00      	nop
    1da8:	100001dc 	.word	0x100001dc

00001dac <__mriBuffer_WriteString>:
    1dac:	b538      	push	{r3, r4, r5, lr}
    1dae:	4605      	mov	r5, r0
    1db0:	4608      	mov	r0, r1
    1db2:	460c      	mov	r4, r1
    1db4:	f001 fb34 	bl	3420 <strlen>
    1db8:	4621      	mov	r1, r4
    1dba:	4602      	mov	r2, r0
    1dbc:	4628      	mov	r0, r5
    1dbe:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1dc2:	f7ff bfd9 	b.w	1d78 <__mriBuffer_WriteSizedString>
	...

00001dc8 <__mriBuffer_ReadUIntegerAsHex>:
    1dc8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1dca:	2500      	movs	r5, #0
    1dcc:	4604      	mov	r4, r0
    1dce:	462e      	mov	r6, r5
    1dd0:	4f13      	ldr	r7, [pc, #76]	; (1e20 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1dd2:	2300      	movs	r3, #0
    1dd4:	4620      	mov	r0, r4
    1dd6:	603b      	str	r3, [r7, #0]
    1dd8:	f7ff ff78 	bl	1ccc <__mriBuffer_ReadChar>
    1ddc:	6839      	ldr	r1, [r7, #0]
    1dde:	b961      	cbnz	r1, 1dfa <__mriBuffer_ReadUIntegerAsHex+0x32>
    1de0:	f7ff ff16 	bl	1c10 <HexCharToNibble>
    1de4:	683a      	ldr	r2, [r7, #0]
    1de6:	b132      	cbz	r2, 1df6 <__mriBuffer_ReadUIntegerAsHex+0x2e>
    1de8:	68a0      	ldr	r0, [r4, #8]
    1dea:	6823      	ldr	r3, [r4, #0]
    1dec:	4298      	cmp	r0, r3
    1dee:	d904      	bls.n	1dfa <__mriBuffer_ReadUIntegerAsHex+0x32>
    1df0:	1e41      	subs	r1, r0, #1
    1df2:	60a1      	str	r1, [r4, #8]
    1df4:	e001      	b.n	1dfa <__mriBuffer_ReadUIntegerAsHex+0x32>
    1df6:	eb00 1505 	add.w	r5, r0, r5, lsl #4
    1dfa:	4809      	ldr	r0, [pc, #36]	; (1e20 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1dfc:	6802      	ldr	r2, [r0, #0]
    1dfe:	b90a      	cbnz	r2, 1e04 <__mriBuffer_ReadUIntegerAsHex+0x3c>
    1e00:	3601      	adds	r6, #1
    1e02:	e7e5      	b.n	1dd0 <__mriBuffer_ReadUIntegerAsHex+0x8>
    1e04:	2300      	movs	r3, #0
    1e06:	6861      	ldr	r1, [r4, #4]
    1e08:	6003      	str	r3, [r0, #0]
    1e0a:	68a0      	ldr	r0, [r4, #8]
    1e0c:	4288      	cmp	r0, r1
    1e0e:	bf88      	it	hi
    1e10:	60a1      	strhi	r1, [r4, #8]
    1e12:	b91e      	cbnz	r6, 1e1c <__mriBuffer_ReadUIntegerAsHex+0x54>
    1e14:	4a02      	ldr	r2, [pc, #8]	; (1e20 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1e16:	2503      	movs	r5, #3
    1e18:	6015      	str	r5, [r2, #0]
    1e1a:	4635      	mov	r5, r6
    1e1c:	4628      	mov	r0, r5
    1e1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1e20:	100001dc 	.word	0x100001dc

00001e24 <__mriBuffer_WriteUIntegerAsHex>:
    1e24:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1e28:	4680      	mov	r8, r0
    1e2a:	460e      	mov	r6, r1
    1e2c:	b919      	cbnz	r1, 1e36 <__mriBuffer_WriteUIntegerAsHex+0x12>
    1e2e:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    1e32:	f7ff bf5f 	b.w	1cf4 <__mriBuffer_WriteByteAsHex>
    1e36:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    1e3a:	2400      	movs	r4, #0
    1e3c:	4233      	tst	r3, r6
    1e3e:	d103      	bne.n	1e48 <__mriBuffer_WriteUIntegerAsHex+0x24>
    1e40:	3401      	adds	r4, #1
    1e42:	0a1b      	lsrs	r3, r3, #8
    1e44:	2c04      	cmp	r4, #4
    1e46:	d1f9      	bne.n	1e3c <__mriBuffer_WriteUIntegerAsHex+0x18>
    1e48:	f1c4 0403 	rsb	r4, r4, #3
    1e4c:	00e5      	lsls	r5, r4, #3
    1e4e:	1c63      	adds	r3, r4, #1
    1e50:	d00d      	beq.n	1e6e <__mriBuffer_WriteUIntegerAsHex+0x4a>
    1e52:	fa26 f105 	lsr.w	r1, r6, r5
    1e56:	4f07      	ldr	r7, [pc, #28]	; (1e74 <__mriBuffer_WriteUIntegerAsHex+0x50>)
    1e58:	2000      	movs	r0, #0
    1e5a:	6038      	str	r0, [r7, #0]
    1e5c:	b2c9      	uxtb	r1, r1
    1e5e:	4640      	mov	r0, r8
    1e60:	f7ff ff48 	bl	1cf4 <__mriBuffer_WriteByteAsHex>
    1e64:	683a      	ldr	r2, [r7, #0]
    1e66:	3c01      	subs	r4, #1
    1e68:	3d08      	subs	r5, #8
    1e6a:	2a00      	cmp	r2, #0
    1e6c:	d0ef      	beq.n	1e4e <__mriBuffer_WriteUIntegerAsHex+0x2a>
    1e6e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1e72:	bf00      	nop
    1e74:	100001dc 	.word	0x100001dc

00001e78 <__mriBuffer_WriteIntegerAsHex>:
    1e78:	4b0a      	ldr	r3, [pc, #40]	; (1ea4 <__mriBuffer_WriteIntegerAsHex+0x2c>)
    1e7a:	b570      	push	{r4, r5, r6, lr}
    1e7c:	2200      	movs	r2, #0
    1e7e:	1e0c      	subs	r4, r1, #0
    1e80:	4606      	mov	r6, r0
    1e82:	601a      	str	r2, [r3, #0]
    1e84:	461d      	mov	r5, r3
    1e86:	da03      	bge.n	1e90 <__mriBuffer_WriteIntegerAsHex+0x18>
    1e88:	212d      	movs	r1, #45	; 0x2d
    1e8a:	4264      	negs	r4, r4
    1e8c:	f7ff ff0c 	bl	1ca8 <__mriBuffer_WriteChar>
    1e90:	6828      	ldr	r0, [r5, #0]
    1e92:	b928      	cbnz	r0, 1ea0 <__mriBuffer_WriteIntegerAsHex+0x28>
    1e94:	4630      	mov	r0, r6
    1e96:	4621      	mov	r1, r4
    1e98:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1e9c:	f7ff bfc2 	b.w	1e24 <__mriBuffer_WriteUIntegerAsHex>
    1ea0:	bd70      	pop	{r4, r5, r6, pc}
    1ea2:	bf00      	nop
    1ea4:	100001dc 	.word	0x100001dc

00001ea8 <__mriBuffer_IsNextCharEqualTo>:
    1ea8:	b570      	push	{r4, r5, r6, lr}
    1eaa:	4d0b      	ldr	r5, [pc, #44]	; (1ed8 <__mriBuffer_IsNextCharEqualTo+0x30>)
    1eac:	2300      	movs	r3, #0
    1eae:	460e      	mov	r6, r1
    1eb0:	4604      	mov	r4, r0
    1eb2:	602b      	str	r3, [r5, #0]
    1eb4:	f7ff fed3 	bl	1c5e <__mriBuffer_BytesLeft>
    1eb8:	4629      	mov	r1, r5
    1eba:	b908      	cbnz	r0, 1ec0 <__mriBuffer_IsNextCharEqualTo+0x18>
    1ebc:	2201      	movs	r2, #1
    1ebe:	602a      	str	r2, [r5, #0]
    1ec0:	6808      	ldr	r0, [r1, #0]
    1ec2:	b938      	cbnz	r0, 1ed4 <__mriBuffer_IsNextCharEqualTo+0x2c>
    1ec4:	68a3      	ldr	r3, [r4, #8]
    1ec6:	7819      	ldrb	r1, [r3, #0]
    1ec8:	42b1      	cmp	r1, r6
    1eca:	d104      	bne.n	1ed6 <__mriBuffer_IsNextCharEqualTo+0x2e>
    1ecc:	1c58      	adds	r0, r3, #1
    1ece:	60a0      	str	r0, [r4, #8]
    1ed0:	2001      	movs	r0, #1
    1ed2:	bd70      	pop	{r4, r5, r6, pc}
    1ed4:	2000      	movs	r0, #0
    1ed6:	bd70      	pop	{r4, r5, r6, pc}
    1ed8:	100001dc 	.word	0x100001dc

00001edc <__mriBuffer_ReadIntegerAsHex>:
    1edc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1ede:	4c13      	ldr	r4, [pc, #76]	; (1f2c <__mriBuffer_ReadIntegerAsHex+0x50>)
    1ee0:	2500      	movs	r5, #0
    1ee2:	212d      	movs	r1, #45	; 0x2d
    1ee4:	4607      	mov	r7, r0
    1ee6:	6025      	str	r5, [r4, #0]
    1ee8:	f7ff ffde 	bl	1ea8 <__mriBuffer_IsNextCharEqualTo>
    1eec:	6823      	ldr	r3, [r4, #0]
    1eee:	4606      	mov	r6, r0
    1ef0:	b91b      	cbnz	r3, 1efa <__mriBuffer_ReadIntegerAsHex+0x1e>
    1ef2:	4638      	mov	r0, r7
    1ef4:	f7ff ff68 	bl	1dc8 <__mriBuffer_ReadUIntegerAsHex>
    1ef8:	e000      	b.n	1efc <__mriBuffer_ReadIntegerAsHex+0x20>
    1efa:	4628      	mov	r0, r5
    1efc:	6822      	ldr	r2, [r4, #0]
    1efe:	490b      	ldr	r1, [pc, #44]	; (1f2c <__mriBuffer_ReadIntegerAsHex+0x50>)
    1f00:	b98a      	cbnz	r2, 1f26 <__mriBuffer_ReadIntegerAsHex+0x4a>
    1f02:	b936      	cbnz	r6, 1f12 <__mriBuffer_ReadIntegerAsHex+0x36>
    1f04:	2800      	cmp	r0, #0
    1f06:	da0f      	bge.n	1f28 <__mriBuffer_ReadIntegerAsHex+0x4c>
    1f08:	2303      	movs	r3, #3
    1f0a:	600b      	str	r3, [r1, #0]
    1f0c:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
    1f10:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1f12:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
    1f16:	d904      	bls.n	1f22 <__mriBuffer_ReadIntegerAsHex+0x46>
    1f18:	2003      	movs	r0, #3
    1f1a:	6008      	str	r0, [r1, #0]
    1f1c:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
    1f20:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1f22:	4240      	negs	r0, r0
    1f24:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1f26:	2000      	movs	r0, #0
    1f28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1f2a:	bf00      	nop
    1f2c:	100001dc 	.word	0x100001dc

00001f30 <__mriBuffer_MatchesString>:
    1f30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1f34:	4e12      	ldr	r6, [pc, #72]	; (1f80 <__mriBuffer_MatchesString+0x50>)
    1f36:	2300      	movs	r3, #0
    1f38:	4614      	mov	r4, r2
    1f3a:	4605      	mov	r5, r0
    1f3c:	4688      	mov	r8, r1
    1f3e:	6033      	str	r3, [r6, #0]
    1f40:	f7ff fe8d 	bl	1c5e <__mriBuffer_BytesLeft>
    1f44:	42a0      	cmp	r0, r4
    1f46:	d201      	bcs.n	1f4c <__mriBuffer_MatchesString+0x1c>
    1f48:	2001      	movs	r0, #1
    1f4a:	6030      	str	r0, [r6, #0]
    1f4c:	6837      	ldr	r7, [r6, #0]
    1f4e:	b97f      	cbnz	r7, 1f70 <__mriBuffer_MatchesString+0x40>
    1f50:	68ae      	ldr	r6, [r5, #8]
    1f52:	4641      	mov	r1, r8
    1f54:	4630      	mov	r0, r6
    1f56:	4622      	mov	r2, r4
    1f58:	f001 fa6a 	bl	3430 <strncmp>
    1f5c:	4680      	mov	r8, r0
    1f5e:	b938      	cbnz	r0, 1f70 <__mriBuffer_MatchesString+0x40>
    1f60:	4628      	mov	r0, r5
    1f62:	f7ff fe7c 	bl	1c5e <__mriBuffer_BytesLeft>
    1f66:	42a0      	cmp	r0, r4
    1f68:	d005      	beq.n	1f76 <__mriBuffer_MatchesString+0x46>
    1f6a:	5d31      	ldrb	r1, [r6, r4]
    1f6c:	293a      	cmp	r1, #58	; 0x3a
    1f6e:	d002      	beq.n	1f76 <__mriBuffer_MatchesString+0x46>
    1f70:	2000      	movs	r0, #0
    1f72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1f76:	1934      	adds	r4, r6, r4
    1f78:	60ac      	str	r4, [r5, #8]
    1f7a:	2001      	movs	r0, #1
    1f7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1f80:	100001dc 	.word	0x100001dc

00001f84 <handleBreakpointWatchpointException>:
    1f84:	4b05      	ldr	r3, [pc, #20]	; (1f9c <handleBreakpointWatchpointException+0x18>)
    1f86:	6818      	ldr	r0, [r3, #0]
    1f88:	2804      	cmp	r0, #4
    1f8a:	d003      	beq.n	1f94 <handleBreakpointWatchpointException+0x10>
    1f8c:	2808      	cmp	r0, #8
    1f8e:	d104      	bne.n	1f9a <handleBreakpointWatchpointException+0x16>
    1f90:	4803      	ldr	r0, [pc, #12]	; (1fa0 <handleBreakpointWatchpointException+0x1c>)
    1f92:	e000      	b.n	1f96 <handleBreakpointWatchpointException+0x12>
    1f94:	4803      	ldr	r0, [pc, #12]	; (1fa4 <handleBreakpointWatchpointException+0x20>)
    1f96:	f7fe ba27 	b.w	3e8 <__mriCore_PrepareStringResponse>
    1f9a:	4770      	bx	lr
    1f9c:	100001dc 	.word	0x100001dc
    1fa0:	000040ca 	.word	0x000040ca
    1fa4:	000040c6 	.word	0x000040c6

00001fa8 <parseBreakpointWatchpointCommandArguments>:
    1fa8:	b570      	push	{r4, r5, r6, lr}
    1faa:	4606      	mov	r6, r0
    1fac:	f7fe fa86 	bl	4bc <__mriCore_GetBuffer>
    1fb0:	4c0f      	ldr	r4, [pc, #60]	; (1ff0 <parseBreakpointWatchpointCommandArguments+0x48>)
    1fb2:	2300      	movs	r3, #0
    1fb4:	4605      	mov	r5, r0
    1fb6:	6023      	str	r3, [r4, #0]
    1fb8:	f7ff fe88 	bl	1ccc <__mriBuffer_ReadChar>
    1fbc:	7230      	strb	r0, [r6, #8]
    1fbe:	6820      	ldr	r0, [r4, #0]
    1fc0:	b9a8      	cbnz	r0, 1fee <parseBreakpointWatchpointCommandArguments+0x46>
    1fc2:	212c      	movs	r1, #44	; 0x2c
    1fc4:	4628      	mov	r0, r5
    1fc6:	f000 f8bf 	bl	2148 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    1fca:	6821      	ldr	r1, [r4, #0]
    1fcc:	b979      	cbnz	r1, 1fee <parseBreakpointWatchpointCommandArguments+0x46>
    1fce:	4628      	mov	r0, r5
    1fd0:	f000 f8ac 	bl	212c <__mriCmd_ReadUIntegerArgument>
    1fd4:	6822      	ldr	r2, [r4, #0]
    1fd6:	6030      	str	r0, [r6, #0]
    1fd8:	b94a      	cbnz	r2, 1fee <parseBreakpointWatchpointCommandArguments+0x46>
    1fda:	4628      	mov	r0, r5
    1fdc:	212c      	movs	r1, #44	; 0x2c
    1fde:	f000 f8b3 	bl	2148 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    1fe2:	6823      	ldr	r3, [r4, #0]
    1fe4:	b91b      	cbnz	r3, 1fee <parseBreakpointWatchpointCommandArguments+0x46>
    1fe6:	4628      	mov	r0, r5
    1fe8:	f000 f8a0 	bl	212c <__mriCmd_ReadUIntegerArgument>
    1fec:	6070      	str	r0, [r6, #4]
    1fee:	bd70      	pop	{r4, r5, r6, pc}
    1ff0:	100001dc 	.word	0x100001dc

00001ff4 <handleWatchpointRemoveCommand>:
    1ff4:	b510      	push	{r4, lr}
    1ff6:	4c09      	ldr	r4, [pc, #36]	; (201c <handleWatchpointRemoveCommand+0x28>)
    1ff8:	4602      	mov	r2, r0
    1ffa:	2300      	movs	r3, #0
    1ffc:	c903      	ldmia	r1, {r0, r1}
    1ffe:	6023      	str	r3, [r4, #0]
    2000:	f7ff f930 	bl	1264 <__mriPlatform_ClearHardwareWatchpoint>
    2004:	6820      	ldr	r0, [r4, #0]
    2006:	b118      	cbz	r0, 2010 <handleWatchpointRemoveCommand+0x1c>
    2008:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    200c:	f7ff bfba 	b.w	1f84 <handleBreakpointWatchpointException>
    2010:	4803      	ldr	r0, [pc, #12]	; (2020 <handleWatchpointRemoveCommand+0x2c>)
    2012:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2016:	f7fe b9e7 	b.w	3e8 <__mriCore_PrepareStringResponse>
    201a:	bf00      	nop
    201c:	100001dc 	.word	0x100001dc
    2020:	000040ce 	.word	0x000040ce

00002024 <handleWatchpointSetCommand>:
    2024:	b510      	push	{r4, lr}
    2026:	4c09      	ldr	r4, [pc, #36]	; (204c <handleWatchpointSetCommand+0x28>)
    2028:	4602      	mov	r2, r0
    202a:	2300      	movs	r3, #0
    202c:	c903      	ldmia	r1, {r0, r1}
    202e:	6023      	str	r3, [r4, #0]
    2030:	f7ff f8d0 	bl	11d4 <__mriPlatform_SetHardwareWatchpoint>
    2034:	6820      	ldr	r0, [r4, #0]
    2036:	b118      	cbz	r0, 2040 <handleWatchpointSetCommand+0x1c>
    2038:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    203c:	f7ff bfa2 	b.w	1f84 <handleBreakpointWatchpointException>
    2040:	4803      	ldr	r0, [pc, #12]	; (2050 <handleWatchpointSetCommand+0x2c>)
    2042:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2046:	f7fe b9cf 	b.w	3e8 <__mriCore_PrepareStringResponse>
    204a:	bf00      	nop
    204c:	100001dc 	.word	0x100001dc
    2050:	000040ce 	.word	0x000040ce

00002054 <__mriCmd_HandleBreakpointWatchpointSetCommand>:
    2054:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2056:	4c16      	ldr	r4, [pc, #88]	; (20b0 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x5c>)
    2058:	2300      	movs	r3, #0
    205a:	a801      	add	r0, sp, #4
    205c:	6023      	str	r3, [r4, #0]
    205e:	f7ff ffa3 	bl	1fa8 <parseBreakpointWatchpointCommandArguments>
    2062:	6820      	ldr	r0, [r4, #0]
    2064:	b108      	cbz	r0, 206a <__mriCmd_HandleBreakpointWatchpointSetCommand+0x16>
    2066:	4813      	ldr	r0, [pc, #76]	; (20b4 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x60>)
    2068:	e01d      	b.n	20a6 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    206a:	f89d 100c 	ldrb.w	r1, [sp, #12]
    206e:	3931      	subs	r1, #49	; 0x31
    2070:	2903      	cmp	r1, #3
    2072:	d817      	bhi.n	20a4 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x50>
    2074:	e8df f001 	tbb	[pc, r1]
    2078:	110f0d02 	.word	0x110f0d02
    207c:	9801      	ldr	r0, [sp, #4]
    207e:	9902      	ldr	r1, [sp, #8]
    2080:	f7ff f854 	bl	112c <__mriPlatform_SetHardwareBreakpoint>
    2084:	6822      	ldr	r2, [r4, #0]
    2086:	b112      	cbz	r2, 208e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x3a>
    2088:	f7ff ff7c 	bl	1f84 <handleBreakpointWatchpointException>
    208c:	e00d      	b.n	20aa <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    208e:	480a      	ldr	r0, [pc, #40]	; (20b8 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x64>)
    2090:	e009      	b.n	20a6 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    2092:	2000      	movs	r0, #0
    2094:	e002      	b.n	209c <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    2096:	2001      	movs	r0, #1
    2098:	e000      	b.n	209c <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    209a:	2002      	movs	r0, #2
    209c:	a901      	add	r1, sp, #4
    209e:	f7ff ffc1 	bl	2024 <handleWatchpointSetCommand>
    20a2:	e002      	b.n	20aa <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    20a4:	4805      	ldr	r0, [pc, #20]	; (20bc <__mriCmd_HandleBreakpointWatchpointSetCommand+0x68>)
    20a6:	f7fe f99f 	bl	3e8 <__mriCore_PrepareStringResponse>
    20aa:	2000      	movs	r0, #0
    20ac:	b004      	add	sp, #16
    20ae:	bd10      	pop	{r4, pc}
    20b0:	100001dc 	.word	0x100001dc
    20b4:	000040c6 	.word	0x000040c6
    20b8:	000040ce 	.word	0x000040ce
    20bc:	0000352e 	.word	0x0000352e

000020c0 <__mriCmd_HandleBreakpointWatchpointRemoveCommand>:
    20c0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    20c2:	4c16      	ldr	r4, [pc, #88]	; (211c <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x5c>)
    20c4:	2300      	movs	r3, #0
    20c6:	a801      	add	r0, sp, #4
    20c8:	6023      	str	r3, [r4, #0]
    20ca:	f7ff ff6d 	bl	1fa8 <parseBreakpointWatchpointCommandArguments>
    20ce:	6820      	ldr	r0, [r4, #0]
    20d0:	b108      	cbz	r0, 20d6 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x16>
    20d2:	4813      	ldr	r0, [pc, #76]	; (2120 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x60>)
    20d4:	e01d      	b.n	2112 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    20d6:	f89d 100c 	ldrb.w	r1, [sp, #12]
    20da:	3931      	subs	r1, #49	; 0x31
    20dc:	2903      	cmp	r1, #3
    20de:	d817      	bhi.n	2110 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x50>
    20e0:	e8df f001 	tbb	[pc, r1]
    20e4:	110f0d02 	.word	0x110f0d02
    20e8:	9801      	ldr	r0, [sp, #4]
    20ea:	9902      	ldr	r1, [sp, #8]
    20ec:	f7ff f856 	bl	119c <__mriPlatform_ClearHardwareBreakpoint>
    20f0:	6822      	ldr	r2, [r4, #0]
    20f2:	b112      	cbz	r2, 20fa <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x3a>
    20f4:	f7ff ff46 	bl	1f84 <handleBreakpointWatchpointException>
    20f8:	e00d      	b.n	2116 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    20fa:	480a      	ldr	r0, [pc, #40]	; (2124 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x64>)
    20fc:	e009      	b.n	2112 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    20fe:	2000      	movs	r0, #0
    2100:	e002      	b.n	2108 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    2102:	2001      	movs	r0, #1
    2104:	e000      	b.n	2108 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    2106:	2002      	movs	r0, #2
    2108:	a901      	add	r1, sp, #4
    210a:	f7ff ff73 	bl	1ff4 <handleWatchpointRemoveCommand>
    210e:	e002      	b.n	2116 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    2110:	4805      	ldr	r0, [pc, #20]	; (2128 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x68>)
    2112:	f7fe f969 	bl	3e8 <__mriCore_PrepareStringResponse>
    2116:	2000      	movs	r0, #0
    2118:	b004      	add	sp, #16
    211a:	bd10      	pop	{r4, pc}
    211c:	100001dc 	.word	0x100001dc
    2120:	000040c6 	.word	0x000040c6
    2124:	000040ce 	.word	0x000040ce
    2128:	0000352e 	.word	0x0000352e

0000212c <__mriCmd_ReadUIntegerArgument>:
    212c:	b510      	push	{r4, lr}
    212e:	4c05      	ldr	r4, [pc, #20]	; (2144 <__mriCmd_ReadUIntegerArgument+0x18>)
    2130:	2300      	movs	r3, #0
    2132:	6023      	str	r3, [r4, #0]
    2134:	f7ff fe48 	bl	1dc8 <__mriBuffer_ReadUIntegerAsHex>
    2138:	6821      	ldr	r1, [r4, #0]
    213a:	2900      	cmp	r1, #0
    213c:	bf18      	it	ne
    213e:	2000      	movne	r0, #0
    2140:	bd10      	pop	{r4, pc}
    2142:	bf00      	nop
    2144:	100001dc 	.word	0x100001dc

00002148 <__mriCmd_ThrowIfNextCharIsNotEqualTo>:
    2148:	b508      	push	{r3, lr}
    214a:	f7ff fead 	bl	1ea8 <__mriBuffer_IsNextCharEqualTo>
    214e:	b928      	cbnz	r0, 215c <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x14>
    2150:	4b03      	ldr	r3, [pc, #12]	; (2160 <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x18>)
    2152:	681a      	ldr	r2, [r3, #0]
    2154:	2a04      	cmp	r2, #4
    2156:	bfb8      	it	lt
    2158:	2204      	movlt	r2, #4
    215a:	601a      	str	r2, [r3, #0]
    215c:	bd08      	pop	{r3, pc}
    215e:	bf00      	nop
    2160:	100001dc 	.word	0x100001dc

00002164 <__mriCmd_ReadAddressAndLengthArguments>:
    2164:	b570      	push	{r4, r5, r6, lr}
    2166:	4c0a      	ldr	r4, [pc, #40]	; (2190 <__mriCmd_ReadAddressAndLengthArguments+0x2c>)
    2168:	2300      	movs	r3, #0
    216a:	460d      	mov	r5, r1
    216c:	4606      	mov	r6, r0
    216e:	6023      	str	r3, [r4, #0]
    2170:	f7ff ffdc 	bl	212c <__mriCmd_ReadUIntegerArgument>
    2174:	6028      	str	r0, [r5, #0]
    2176:	6820      	ldr	r0, [r4, #0]
    2178:	b948      	cbnz	r0, 218e <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    217a:	212c      	movs	r1, #44	; 0x2c
    217c:	4630      	mov	r0, r6
    217e:	f7ff ffe3 	bl	2148 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2182:	6821      	ldr	r1, [r4, #0]
    2184:	b919      	cbnz	r1, 218e <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    2186:	4630      	mov	r0, r6
    2188:	f7ff ffd0 	bl	212c <__mriCmd_ReadUIntegerArgument>
    218c:	6068      	str	r0, [r5, #4]
    218e:	bd70      	pop	{r4, r5, r6, pc}
    2190:	100001dc 	.word	0x100001dc

00002194 <__mriCmd_ReadAddressAndLengthArgumentsWithColon>:
    2194:	b538      	push	{r3, r4, r5, lr}
    2196:	4c07      	ldr	r4, [pc, #28]	; (21b4 <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x20>)
    2198:	2300      	movs	r3, #0
    219a:	4605      	mov	r5, r0
    219c:	6023      	str	r3, [r4, #0]
    219e:	f7ff ffe1 	bl	2164 <__mriCmd_ReadAddressAndLengthArguments>
    21a2:	6820      	ldr	r0, [r4, #0]
    21a4:	b928      	cbnz	r0, 21b2 <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x1e>
    21a6:	4628      	mov	r0, r5
    21a8:	213a      	movs	r1, #58	; 0x3a
    21aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    21ae:	f7ff bfcb 	b.w	2148 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    21b2:	bd38      	pop	{r3, r4, r5, pc}
    21b4:	100001dc 	.word	0x100001dc

000021b8 <__mriCmd_HandleContinueCommand>:
    21b8:	b570      	push	{r4, r5, r6, lr}
    21ba:	f7fe f97f 	bl	4bc <__mriCore_GetBuffer>
    21be:	4606      	mov	r6, r0
    21c0:	f7fe ff20 	bl	1004 <__mriPlatform_WasProgramCounterModifiedByUser>
    21c4:	b910      	cbnz	r0, 21cc <__mriCmd_HandleContinueCommand+0x14>
    21c6:	f7fe ff11 	bl	fec <__mriPlatform_IsCurrentInstructionHardcodedBreakpoint>
    21ca:	b968      	cbnz	r0, 21e8 <__mriCmd_HandleContinueCommand+0x30>
    21cc:	2400      	movs	r4, #0
    21ce:	4d08      	ldr	r5, [pc, #32]	; (21f0 <__mriCmd_HandleContinueCommand+0x38>)
    21d0:	2300      	movs	r3, #0
    21d2:	4630      	mov	r0, r6
    21d4:	602b      	str	r3, [r5, #0]
    21d6:	f7ff ffa9 	bl	212c <__mriCmd_ReadUIntegerArgument>
    21da:	6829      	ldr	r1, [r5, #0]
    21dc:	b909      	cbnz	r1, 21e2 <__mriCmd_HandleContinueCommand+0x2a>
    21de:	f7fe fee5 	bl	fac <__mriPlatform_SetProgramCounter>
    21e2:	f044 0003 	orr.w	r0, r4, #3
    21e6:	bd70      	pop	{r4, r5, r6, pc}
    21e8:	f7fe fee6 	bl	fb8 <__mriPlatform_AdvanceProgramCounterToNextInstruction>
    21ec:	2404      	movs	r4, #4
    21ee:	e7ee      	b.n	21ce <__mriCmd_HandleContinueCommand+0x16>
    21f0:	100001dc 	.word	0x100001dc

000021f4 <processGdbFileResponseCommands>:
    21f4:	b508      	push	{r3, lr}
    21f6:	f7fe f989 	bl	50c <__mriCore_GdbCommandHandlingLoop>
    21fa:	f7fe f901 	bl	400 <__mriCore_WasControlCFlagSentFromGdb>
    21fe:	b148      	cbz	r0, 2214 <processGdbFileResponseCommands+0x20>
    2200:	f7fe f920 	bl	444 <__mriCore_WasSemihostCallCancelledByGdb>
    2204:	b908      	cbnz	r0, 220a <processGdbFileResponseCommands+0x16>
    2206:	f7fe f927 	bl	458 <__mriCore_FlagSemihostCallAsHandled>
    220a:	2002      	movs	r0, #2
    220c:	f7fe f93e 	bl	48c <__mriCore_SetSignalValue>
    2210:	2000      	movs	r0, #0
    2212:	bd08      	pop	{r3, pc}
    2214:	f7fe f920 	bl	458 <__mriCore_FlagSemihostCallAsHandled>
    2218:	2001      	movs	r0, #1
    221a:	bd08      	pop	{r3, pc}

0000221c <__mriIssueGdbFileOpenRequest>:
    221c:	b538      	push	{r3, r4, r5, lr}
    221e:	4605      	mov	r5, r0
    2220:	f7fe f950 	bl	4c4 <__mriCore_GetInitializedBuffer>
    2224:	4913      	ldr	r1, [pc, #76]	; (2274 <__mriIssueGdbFileOpenRequest+0x58>)
    2226:	4604      	mov	r4, r0
    2228:	f7ff fdc0 	bl	1dac <__mriBuffer_WriteString>
    222c:	4620      	mov	r0, r4
    222e:	6829      	ldr	r1, [r5, #0]
    2230:	f7ff fdf8 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2234:	4620      	mov	r0, r4
    2236:	212f      	movs	r1, #47	; 0x2f
    2238:	f7ff fd36 	bl	1ca8 <__mriBuffer_WriteChar>
    223c:	6869      	ldr	r1, [r5, #4]
    223e:	4620      	mov	r0, r4
    2240:	3101      	adds	r1, #1
    2242:	f7ff fdef 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2246:	4620      	mov	r0, r4
    2248:	212c      	movs	r1, #44	; 0x2c
    224a:	f7ff fd2d 	bl	1ca8 <__mriBuffer_WriteChar>
    224e:	4620      	mov	r0, r4
    2250:	68a9      	ldr	r1, [r5, #8]
    2252:	f7ff fde7 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2256:	4620      	mov	r0, r4
    2258:	212c      	movs	r1, #44	; 0x2c
    225a:	f7ff fd25 	bl	1ca8 <__mriBuffer_WriteChar>
    225e:	4620      	mov	r0, r4
    2260:	68e9      	ldr	r1, [r5, #12]
    2262:	f7ff fddf 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2266:	f7fe f935 	bl	4d4 <__mriCore_SendPacketToGdb>
    226a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    226e:	f7ff bfc1 	b.w	21f4 <processGdbFileResponseCommands>
    2272:	bf00      	nop
    2274:	000040f4 	.word	0x000040f4

00002278 <__mriIssueGdbFileWriteRequest>:
    2278:	b538      	push	{r3, r4, r5, lr}
    227a:	4605      	mov	r5, r0
    227c:	f7fe f922 	bl	4c4 <__mriCore_GetInitializedBuffer>
    2280:	490e      	ldr	r1, [pc, #56]	; (22bc <__mriIssueGdbFileWriteRequest+0x44>)
    2282:	4604      	mov	r4, r0
    2284:	f7ff fd92 	bl	1dac <__mriBuffer_WriteString>
    2288:	4620      	mov	r0, r4
    228a:	6829      	ldr	r1, [r5, #0]
    228c:	f7ff fdca 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2290:	4620      	mov	r0, r4
    2292:	212c      	movs	r1, #44	; 0x2c
    2294:	f7ff fd08 	bl	1ca8 <__mriBuffer_WriteChar>
    2298:	4620      	mov	r0, r4
    229a:	6869      	ldr	r1, [r5, #4]
    229c:	f7ff fdc2 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    22a0:	4620      	mov	r0, r4
    22a2:	212c      	movs	r1, #44	; 0x2c
    22a4:	f7ff fd00 	bl	1ca8 <__mriBuffer_WriteChar>
    22a8:	4620      	mov	r0, r4
    22aa:	68a9      	ldr	r1, [r5, #8]
    22ac:	f7ff fdba 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    22b0:	f7fe f910 	bl	4d4 <__mriCore_SendPacketToGdb>
    22b4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    22b8:	f7ff bf9c 	b.w	21f4 <processGdbFileResponseCommands>
    22bc:	000040ec 	.word	0x000040ec

000022c0 <__mriIssueGdbFileReadRequest>:
    22c0:	b538      	push	{r3, r4, r5, lr}
    22c2:	4605      	mov	r5, r0
    22c4:	f7fe f8fe 	bl	4c4 <__mriCore_GetInitializedBuffer>
    22c8:	490e      	ldr	r1, [pc, #56]	; (2304 <__mriIssueGdbFileReadRequest+0x44>)
    22ca:	4604      	mov	r4, r0
    22cc:	f7ff fd6e 	bl	1dac <__mriBuffer_WriteString>
    22d0:	4620      	mov	r0, r4
    22d2:	6829      	ldr	r1, [r5, #0]
    22d4:	f7ff fda6 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    22d8:	4620      	mov	r0, r4
    22da:	212c      	movs	r1, #44	; 0x2c
    22dc:	f7ff fce4 	bl	1ca8 <__mriBuffer_WriteChar>
    22e0:	4620      	mov	r0, r4
    22e2:	6869      	ldr	r1, [r5, #4]
    22e4:	f7ff fd9e 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    22e8:	4620      	mov	r0, r4
    22ea:	212c      	movs	r1, #44	; 0x2c
    22ec:	f7ff fcdc 	bl	1ca8 <__mriBuffer_WriteChar>
    22f0:	4620      	mov	r0, r4
    22f2:	68a9      	ldr	r1, [r5, #8]
    22f4:	f7ff fd96 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    22f8:	f7fe f8ec 	bl	4d4 <__mriCore_SendPacketToGdb>
    22fc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2300:	f7ff bf78 	b.w	21f4 <processGdbFileResponseCommands>
    2304:	00004103 	.word	0x00004103

00002308 <__mriIssueGdbFileCloseRequest>:
    2308:	b538      	push	{r3, r4, r5, lr}
    230a:	4604      	mov	r4, r0
    230c:	f7fe f8da 	bl	4c4 <__mriCore_GetInitializedBuffer>
    2310:	4906      	ldr	r1, [pc, #24]	; (232c <__mriIssueGdbFileCloseRequest+0x24>)
    2312:	4605      	mov	r5, r0
    2314:	f7ff fd4a 	bl	1dac <__mriBuffer_WriteString>
    2318:	4628      	mov	r0, r5
    231a:	4621      	mov	r1, r4
    231c:	f7ff fd82 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2320:	f7fe f8d8 	bl	4d4 <__mriCore_SendPacketToGdb>
    2324:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2328:	f7ff bf64 	b.w	21f4 <processGdbFileResponseCommands>
    232c:	000040d1 	.word	0x000040d1

00002330 <__mriIssueGdbFileSeekRequest>:
    2330:	b538      	push	{r3, r4, r5, lr}
    2332:	4605      	mov	r5, r0
    2334:	f7fe f8c6 	bl	4c4 <__mriCore_GetInitializedBuffer>
    2338:	490e      	ldr	r1, [pc, #56]	; (2374 <__mriIssueGdbFileSeekRequest+0x44>)
    233a:	4604      	mov	r4, r0
    233c:	f7ff fd36 	bl	1dac <__mriBuffer_WriteString>
    2340:	4620      	mov	r0, r4
    2342:	6829      	ldr	r1, [r5, #0]
    2344:	f7ff fd6e 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2348:	4620      	mov	r0, r4
    234a:	212c      	movs	r1, #44	; 0x2c
    234c:	f7ff fcac 	bl	1ca8 <__mriBuffer_WriteChar>
    2350:	4620      	mov	r0, r4
    2352:	6869      	ldr	r1, [r5, #4]
    2354:	f7ff fd90 	bl	1e78 <__mriBuffer_WriteIntegerAsHex>
    2358:	4620      	mov	r0, r4
    235a:	212c      	movs	r1, #44	; 0x2c
    235c:	f7ff fca4 	bl	1ca8 <__mriBuffer_WriteChar>
    2360:	4620      	mov	r0, r4
    2362:	68a9      	ldr	r1, [r5, #8]
    2364:	f7ff fd88 	bl	1e78 <__mriBuffer_WriteIntegerAsHex>
    2368:	f7fe f8b4 	bl	4d4 <__mriCore_SendPacketToGdb>
    236c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2370:	f7ff bf40 	b.w	21f4 <processGdbFileResponseCommands>
    2374:	0000410a 	.word	0x0000410a

00002378 <__mriIssueGdbFileFStatRequest>:
    2378:	b570      	push	{r4, r5, r6, lr}
    237a:	460d      	mov	r5, r1
    237c:	4606      	mov	r6, r0
    237e:	f7fe f8a1 	bl	4c4 <__mriCore_GetInitializedBuffer>
    2382:	490b      	ldr	r1, [pc, #44]	; (23b0 <__mriIssueGdbFileFStatRequest+0x38>)
    2384:	4604      	mov	r4, r0
    2386:	f7ff fd11 	bl	1dac <__mriBuffer_WriteString>
    238a:	4620      	mov	r0, r4
    238c:	4631      	mov	r1, r6
    238e:	f7ff fd49 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2392:	4620      	mov	r0, r4
    2394:	212c      	movs	r1, #44	; 0x2c
    2396:	f7ff fc87 	bl	1ca8 <__mriBuffer_WriteChar>
    239a:	4620      	mov	r0, r4
    239c:	4629      	mov	r1, r5
    239e:	f7ff fd41 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    23a2:	f7fe f897 	bl	4d4 <__mriCore_SendPacketToGdb>
    23a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    23aa:	f7ff bf23 	b.w	21f4 <processGdbFileResponseCommands>
    23ae:	bf00      	nop
    23b0:	000040fb 	.word	0x000040fb

000023b4 <__mriIssueGdbFileUnlinkRequest>:
    23b4:	b538      	push	{r3, r4, r5, lr}
    23b6:	4605      	mov	r5, r0
    23b8:	f7fe f884 	bl	4c4 <__mriCore_GetInitializedBuffer>
    23bc:	490b      	ldr	r1, [pc, #44]	; (23ec <__mriIssueGdbFileUnlinkRequest+0x38>)
    23be:	4604      	mov	r4, r0
    23c0:	f7ff fcf4 	bl	1dac <__mriBuffer_WriteString>
    23c4:	4620      	mov	r0, r4
    23c6:	6829      	ldr	r1, [r5, #0]
    23c8:	f7ff fd2c 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    23cc:	4620      	mov	r0, r4
    23ce:	212f      	movs	r1, #47	; 0x2f
    23d0:	f7ff fc6a 	bl	1ca8 <__mriBuffer_WriteChar>
    23d4:	6869      	ldr	r1, [r5, #4]
    23d6:	4620      	mov	r0, r4
    23d8:	3101      	adds	r1, #1
    23da:	f7ff fd23 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    23de:	f7fe f879 	bl	4d4 <__mriCore_SendPacketToGdb>
    23e2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    23e6:	f7ff bf05 	b.w	21f4 <processGdbFileResponseCommands>
    23ea:	bf00      	nop
    23ec:	00004112 	.word	0x00004112

000023f0 <__mriIssueGdbFileStatRequest>:
    23f0:	b570      	push	{r4, r5, r6, lr}
    23f2:	4605      	mov	r5, r0
    23f4:	460e      	mov	r6, r1
    23f6:	f7fe f865 	bl	4c4 <__mriCore_GetInitializedBuffer>
    23fa:	4910      	ldr	r1, [pc, #64]	; (243c <__mriIssueGdbFileStatRequest+0x4c>)
    23fc:	4604      	mov	r4, r0
    23fe:	f7ff fcd5 	bl	1dac <__mriBuffer_WriteString>
    2402:	4620      	mov	r0, r4
    2404:	4629      	mov	r1, r5
    2406:	f7ff fd0d 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    240a:	212f      	movs	r1, #47	; 0x2f
    240c:	4620      	mov	r0, r4
    240e:	f7ff fc4b 	bl	1ca8 <__mriBuffer_WriteChar>
    2412:	4628      	mov	r0, r5
    2414:	f001 f804 	bl	3420 <strlen>
    2418:	1c41      	adds	r1, r0, #1
    241a:	4620      	mov	r0, r4
    241c:	f7ff fd02 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2420:	4620      	mov	r0, r4
    2422:	212c      	movs	r1, #44	; 0x2c
    2424:	f7ff fc40 	bl	1ca8 <__mriBuffer_WriteChar>
    2428:	4620      	mov	r0, r4
    242a:	4631      	mov	r1, r6
    242c:	f7ff fcfa 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2430:	f7fe f850 	bl	4d4 <__mriCore_SendPacketToGdb>
    2434:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2438:	f7ff bedc 	b.w	21f4 <processGdbFileResponseCommands>
    243c:	000040d9 	.word	0x000040d9

00002440 <__mriIssueGdbFileRenameRequest>:
    2440:	b570      	push	{r4, r5, r6, lr}
    2442:	460d      	mov	r5, r1
    2444:	4606      	mov	r6, r0
    2446:	f7fe f83d 	bl	4c4 <__mriCore_GetInitializedBuffer>
    244a:	4916      	ldr	r1, [pc, #88]	; (24a4 <__mriIssueGdbFileRenameRequest+0x64>)
    244c:	4604      	mov	r4, r0
    244e:	f7ff fcad 	bl	1dac <__mriBuffer_WriteString>
    2452:	4620      	mov	r0, r4
    2454:	4631      	mov	r1, r6
    2456:	f7ff fce5 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    245a:	212f      	movs	r1, #47	; 0x2f
    245c:	4620      	mov	r0, r4
    245e:	f7ff fc23 	bl	1ca8 <__mriBuffer_WriteChar>
    2462:	4630      	mov	r0, r6
    2464:	f000 ffdc 	bl	3420 <strlen>
    2468:	1c41      	adds	r1, r0, #1
    246a:	4620      	mov	r0, r4
    246c:	f7ff fcda 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2470:	4620      	mov	r0, r4
    2472:	212c      	movs	r1, #44	; 0x2c
    2474:	f7ff fc18 	bl	1ca8 <__mriBuffer_WriteChar>
    2478:	4620      	mov	r0, r4
    247a:	4629      	mov	r1, r5
    247c:	f7ff fcd2 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2480:	212f      	movs	r1, #47	; 0x2f
    2482:	4620      	mov	r0, r4
    2484:	f7ff fc10 	bl	1ca8 <__mriBuffer_WriteChar>
    2488:	4628      	mov	r0, r5
    248a:	f000 ffc9 	bl	3420 <strlen>
    248e:	1c41      	adds	r1, r0, #1
    2490:	4620      	mov	r0, r4
    2492:	f7ff fcc7 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2496:	f7fe f81d 	bl	4d4 <__mriCore_SendPacketToGdb>
    249a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    249e:	f7ff bea9 	b.w	21f4 <processGdbFileResponseCommands>
    24a2:	bf00      	nop
    24a4:	000040e3 	.word	0x000040e3

000024a8 <__mriHandleFileIOCommand>:
    24a8:	b570      	push	{r4, r5, r6, lr}
    24aa:	f7fe f807 	bl	4bc <__mriCore_GetBuffer>
    24ae:	4604      	mov	r4, r0
    24b0:	f7ff fd14 	bl	1edc <__mriBuffer_ReadIntegerAsHex>
    24b4:	212c      	movs	r1, #44	; 0x2c
    24b6:	4606      	mov	r6, r0
    24b8:	4620      	mov	r0, r4
    24ba:	f7ff fcf5 	bl	1ea8 <__mriBuffer_IsNextCharEqualTo>
    24be:	b150      	cbz	r0, 24d6 <__mriHandleFileIOCommand+0x2e>
    24c0:	4620      	mov	r0, r4
    24c2:	f7ff fd0b 	bl	1edc <__mriBuffer_ReadIntegerAsHex>
    24c6:	4909      	ldr	r1, [pc, #36]	; (24ec <__mriHandleFileIOCommand+0x44>)
    24c8:	4605      	mov	r5, r0
    24ca:	2202      	movs	r2, #2
    24cc:	4620      	mov	r0, r4
    24ce:	f7ff fd2f 	bl	1f30 <__mriBuffer_MatchesString>
    24d2:	4604      	mov	r4, r0
    24d4:	e001      	b.n	24da <__mriHandleFileIOCommand+0x32>
    24d6:	4604      	mov	r4, r0
    24d8:	4605      	mov	r5, r0
    24da:	4630      	mov	r0, r6
    24dc:	4629      	mov	r1, r5
    24de:	f7fd ffe1 	bl	4a4 <__mriCore_SetSemihostReturnValues>
    24e2:	4620      	mov	r0, r4
    24e4:	f7fd ffa2 	bl	42c <__mriCore_RecordControlCFlagSentFromGdb>
    24e8:	2003      	movs	r0, #3
    24ea:	bd70      	pop	{r4, r5, r6, pc}
    24ec:	000040e0 	.word	0x000040e0

000024f0 <__mriCmd_HandleMemoryReadCommand>:
    24f0:	b537      	push	{r0, r1, r2, r4, r5, lr}
    24f2:	f7fd ffe3 	bl	4bc <__mriCore_GetBuffer>
    24f6:	4c0b      	ldr	r4, [pc, #44]	; (2524 <__mriCmd_HandleMemoryReadCommand+0x34>)
    24f8:	2300      	movs	r3, #0
    24fa:	4669      	mov	r1, sp
    24fc:	4605      	mov	r5, r0
    24fe:	6023      	str	r3, [r4, #0]
    2500:	f7ff fe30 	bl	2164 <__mriCmd_ReadAddressAndLengthArguments>
    2504:	6820      	ldr	r0, [r4, #0]
    2506:	b118      	cbz	r0, 2510 <__mriCmd_HandleMemoryReadCommand+0x20>
    2508:	4807      	ldr	r0, [pc, #28]	; (2528 <__mriCmd_HandleMemoryReadCommand+0x38>)
    250a:	f7fd ff6d 	bl	3e8 <__mriCore_PrepareStringResponse>
    250e:	e006      	b.n	251e <__mriCmd_HandleMemoryReadCommand+0x2e>
    2510:	f7fd ff5a 	bl	3c8 <__mriCore_InitBuffer>
    2514:	e89d 0006 	ldmia.w	sp, {r1, r2}
    2518:	4628      	mov	r0, r5
    251a:	f000 fa48 	bl	29ae <__mriMem_ReadMemoryIntoHexBuffer>
    251e:	2000      	movs	r0, #0
    2520:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    2522:	bf00      	nop
    2524:	100001dc 	.word	0x100001dc
    2528:	000040c6 	.word	0x000040c6

0000252c <__mriCmd_HandleMemoryWriteCommand>:
    252c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    252e:	f7fd ffc5 	bl	4bc <__mriCore_GetBuffer>
    2532:	4c0c      	ldr	r4, [pc, #48]	; (2564 <__mriCmd_HandleMemoryWriteCommand+0x38>)
    2534:	2300      	movs	r3, #0
    2536:	4669      	mov	r1, sp
    2538:	4605      	mov	r5, r0
    253a:	6023      	str	r3, [r4, #0]
    253c:	f7ff fe2a 	bl	2194 <__mriCmd_ReadAddressAndLengthArgumentsWithColon>
    2540:	6820      	ldr	r0, [r4, #0]
    2542:	b108      	cbz	r0, 2548 <__mriCmd_HandleMemoryWriteCommand+0x1c>
    2544:	4808      	ldr	r0, [pc, #32]	; (2568 <__mriCmd_HandleMemoryWriteCommand+0x3c>)
    2546:	e008      	b.n	255a <__mriCmd_HandleMemoryWriteCommand+0x2e>
    2548:	4628      	mov	r0, r5
    254a:	e89d 0006 	ldmia.w	sp, {r1, r2}
    254e:	f000 fa5b 	bl	2a08 <__mriMem_WriteHexBufferToMemory>
    2552:	b108      	cbz	r0, 2558 <__mriCmd_HandleMemoryWriteCommand+0x2c>
    2554:	4805      	ldr	r0, [pc, #20]	; (256c <__mriCmd_HandleMemoryWriteCommand+0x40>)
    2556:	e000      	b.n	255a <__mriCmd_HandleMemoryWriteCommand+0x2e>
    2558:	4805      	ldr	r0, [pc, #20]	; (2570 <__mriCmd_HandleMemoryWriteCommand+0x44>)
    255a:	f7fd ff45 	bl	3e8 <__mriCore_PrepareStringResponse>
    255e:	2000      	movs	r0, #0
    2560:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    2562:	bf00      	nop
    2564:	100001dc 	.word	0x100001dc
    2568:	000040c6 	.word	0x000040c6
    256c:	000040ce 	.word	0x000040ce
    2570:	0000411b 	.word	0x0000411b

00002574 <__mriCmd_HandleBinaryMemoryWriteCommand>:
    2574:	b537      	push	{r0, r1, r2, r4, r5, lr}
    2576:	f7fd ffa1 	bl	4bc <__mriCore_GetBuffer>
    257a:	4d12      	ldr	r5, [pc, #72]	; (25c4 <__mriCmd_HandleBinaryMemoryWriteCommand+0x50>)
    257c:	2300      	movs	r3, #0
    257e:	4669      	mov	r1, sp
    2580:	4604      	mov	r4, r0
    2582:	602b      	str	r3, [r5, #0]
    2584:	f7ff fdee 	bl	2164 <__mriCmd_ReadAddressAndLengthArguments>
    2588:	6828      	ldr	r0, [r5, #0]
    258a:	b918      	cbnz	r0, 2594 <__mriCmd_HandleBinaryMemoryWriteCommand+0x20>
    258c:	4620      	mov	r0, r4
    258e:	213a      	movs	r1, #58	; 0x3a
    2590:	f7ff fdda 	bl	2148 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2594:	6829      	ldr	r1, [r5, #0]
    2596:	b109      	cbz	r1, 259c <__mriCmd_HandleBinaryMemoryWriteCommand+0x28>
    2598:	480b      	ldr	r0, [pc, #44]	; (25c8 <__mriCmd_HandleBinaryMemoryWriteCommand+0x54>)
    259a:	e00e      	b.n	25ba <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    259c:	4620      	mov	r0, r4
    259e:	e89d 0006 	ldmia.w	sp, {r1, r2}
    25a2:	f000 fa59 	bl	2a58 <__mriMem_WriteBinaryBufferToMemory>
    25a6:	b108      	cbz	r0, 25ac <__mriCmd_HandleBinaryMemoryWriteCommand+0x38>
    25a8:	4808      	ldr	r0, [pc, #32]	; (25cc <__mriCmd_HandleBinaryMemoryWriteCommand+0x58>)
    25aa:	e006      	b.n	25ba <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    25ac:	4620      	mov	r0, r4
    25ae:	f7ff fb73 	bl	1c98 <__mriBuffer_OverrunDetected>
    25b2:	b108      	cbz	r0, 25b8 <__mriCmd_HandleBinaryMemoryWriteCommand+0x44>
    25b4:	4806      	ldr	r0, [pc, #24]	; (25d0 <__mriCmd_HandleBinaryMemoryWriteCommand+0x5c>)
    25b6:	e000      	b.n	25ba <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    25b8:	4806      	ldr	r0, [pc, #24]	; (25d4 <__mriCmd_HandleBinaryMemoryWriteCommand+0x60>)
    25ba:	f7fd ff15 	bl	3e8 <__mriCore_PrepareStringResponse>
    25be:	2000      	movs	r0, #0
    25c0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    25c2:	bf00      	nop
    25c4:	100001dc 	.word	0x100001dc
    25c8:	000040c6 	.word	0x000040c6
    25cc:	000040ce 	.word	0x000040ce
    25d0:	000034b8 	.word	0x000034b8
    25d4:	0000411b 	.word	0x0000411b

000025d8 <handleQueryTransferReadCommand>:
    25d8:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    25dc:	4604      	mov	r4, r0
    25de:	f7fd ff6d 	bl	4bc <__mriCore_GetBuffer>
    25e2:	1d25      	adds	r5, r4, #4
    25e4:	e895 01a0 	ldmia.w	r5, {r5, r7, r8}
    25e8:	42af      	cmp	r7, r5
    25ea:	4606      	mov	r6, r0
    25ec:	d203      	bcs.n	25f6 <handleQueryTransferReadCommand+0x1e>
    25ee:	1bed      	subs	r5, r5, r7
    25f0:	f04f 096d 	mov.w	r9, #109	; 0x6d
    25f4:	e003      	b.n	25fe <handleQueryTransferReadCommand+0x26>
    25f6:	2500      	movs	r5, #0
    25f8:	46a8      	mov	r8, r5
    25fa:	f04f 096c 	mov.w	r9, #108	; 0x6c
    25fe:	f7fd fee3 	bl	3c8 <__mriCore_InitBuffer>
    2602:	4630      	mov	r0, r6
    2604:	f7ff fb2b 	bl	1c5e <__mriBuffer_BytesLeft>
    2608:	4540      	cmp	r0, r8
    260a:	bf38      	it	cc
    260c:	4680      	movcc	r8, r0
    260e:	45a8      	cmp	r8, r5
    2610:	bf88      	it	hi
    2612:	f04f 096c 	movhi.w	r9, #108	; 0x6c
    2616:	4630      	mov	r0, r6
    2618:	4649      	mov	r1, r9
    261a:	bf88      	it	hi
    261c:	46a8      	movhi	r8, r5
    261e:	f7ff fb43 	bl	1ca8 <__mriBuffer_WriteChar>
    2622:	6821      	ldr	r1, [r4, #0]
    2624:	4630      	mov	r0, r6
    2626:	19c9      	adds	r1, r1, r7
    2628:	4642      	mov	r2, r8
    262a:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    262e:	f7ff bba3 	b.w	1d78 <__mriBuffer_WriteSizedString>
	...

00002634 <readQueryTransferReadArguments>:
    2634:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    2636:	4604      	mov	r4, r0
    2638:	460e      	mov	r6, r1
    263a:	4608      	mov	r0, r1
    263c:	2210      	movs	r2, #16
    263e:	2100      	movs	r1, #0
    2640:	f000 fedb 	bl	33fa <memset>
    2644:	4620      	mov	r0, r4
    2646:	213a      	movs	r1, #58	; 0x3a
    2648:	f7ff fc2e 	bl	1ea8 <__mriBuffer_IsNextCharEqualTo>
    264c:	b930      	cbnz	r0, 265c <readQueryTransferReadArguments+0x28>
    264e:	481f      	ldr	r0, [pc, #124]	; (26cc <readQueryTransferReadArguments+0x98>)
    2650:	6802      	ldr	r2, [r0, #0]
    2652:	2a04      	cmp	r2, #4
    2654:	bfb8      	it	lt
    2656:	2204      	movlt	r2, #4
    2658:	6002      	str	r2, [r0, #0]
    265a:	e036      	b.n	26ca <readQueryTransferReadArguments+0x96>
    265c:	4620      	mov	r0, r4
    265e:	491c      	ldr	r1, [pc, #112]	; (26d0 <readQueryTransferReadArguments+0x9c>)
    2660:	2204      	movs	r2, #4
    2662:	f7ff fc65 	bl	1f30 <__mriBuffer_MatchesString>
    2666:	2800      	cmp	r0, #0
    2668:	d0f1      	beq.n	264e <readQueryTransferReadArguments+0x1a>
    266a:	4620      	mov	r0, r4
    266c:	213a      	movs	r1, #58	; 0x3a
    266e:	f7ff fc1b 	bl	1ea8 <__mriBuffer_IsNextCharEqualTo>
    2672:	2800      	cmp	r0, #0
    2674:	d0eb      	beq.n	264e <readQueryTransferReadArguments+0x1a>
    2676:	4d15      	ldr	r5, [pc, #84]	; (26cc <readQueryTransferReadArguments+0x98>)
    2678:	2300      	movs	r3, #0
    267a:	4620      	mov	r0, r4
    267c:	4915      	ldr	r1, [pc, #84]	; (26d4 <readQueryTransferReadArguments+0xa0>)
    267e:	220a      	movs	r2, #10
    2680:	602b      	str	r3, [r5, #0]
    2682:	f7ff fc55 	bl	1f30 <__mriBuffer_MatchesString>
    2686:	4607      	mov	r7, r0
    2688:	b190      	cbz	r0, 26b0 <readQueryTransferReadArguments+0x7c>
    268a:	4620      	mov	r0, r4
    268c:	213a      	movs	r1, #58	; 0x3a
    268e:	f7ff fc0b 	bl	1ea8 <__mriBuffer_IsNextCharEqualTo>
    2692:	b1a0      	cbz	r0, 26be <readQueryTransferReadArguments+0x8a>
    2694:	480f      	ldr	r0, [pc, #60]	; (26d4 <readQueryTransferReadArguments+0xa0>)
    2696:	6030      	str	r0, [r6, #0]
    2698:	480c      	ldr	r0, [pc, #48]	; (26cc <readQueryTransferReadArguments+0x98>)
    269a:	6802      	ldr	r2, [r0, #0]
    269c:	b9aa      	cbnz	r2, 26ca <readQueryTransferReadArguments+0x96>
    269e:	4669      	mov	r1, sp
    26a0:	4620      	mov	r0, r4
    26a2:	f7ff fd5f 	bl	2164 <__mriCmd_ReadAddressAndLengthArguments>
    26a6:	9b00      	ldr	r3, [sp, #0]
    26a8:	9901      	ldr	r1, [sp, #4]
    26aa:	60b3      	str	r3, [r6, #8]
    26ac:	60f1      	str	r1, [r6, #12]
    26ae:	e00c      	b.n	26ca <readQueryTransferReadArguments+0x96>
    26b0:	4620      	mov	r0, r4
    26b2:	213a      	movs	r1, #58	; 0x3a
    26b4:	f7ff fbf8 	bl	1ea8 <__mriBuffer_IsNextCharEqualTo>
    26b8:	b108      	cbz	r0, 26be <readQueryTransferReadArguments+0x8a>
    26ba:	4638      	mov	r0, r7
    26bc:	e7eb      	b.n	2696 <readQueryTransferReadArguments+0x62>
    26be:	6829      	ldr	r1, [r5, #0]
    26c0:	2904      	cmp	r1, #4
    26c2:	bfb8      	it	lt
    26c4:	2104      	movlt	r1, #4
    26c6:	6029      	str	r1, [r5, #0]
    26c8:	e7e5      	b.n	2696 <readQueryTransferReadArguments+0x62>
    26ca:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    26cc:	100001dc 	.word	0x100001dc
    26d0:	0000411f 	.word	0x0000411f
    26d4:	00004133 	.word	0x00004133

000026d8 <__mriCmd_HandleQueryCommand>:
    26d8:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    26da:	f7fd feef 	bl	4bc <__mriCore_GetBuffer>
    26de:	4935      	ldr	r1, [pc, #212]	; (27b4 <__mriCmd_HandleQueryCommand+0xdc>)
    26e0:	2209      	movs	r2, #9
    26e2:	4604      	mov	r4, r0
    26e4:	f7ff fc24 	bl	1f30 <__mriBuffer_MatchesString>
    26e8:	4606      	mov	r6, r0
    26ea:	b168      	cbz	r0, 2708 <__mriCmd_HandleQueryCommand+0x30>
    26ec:	f7fe fb08 	bl	d00 <__mriPlatform_GetPacketBufferSize>
    26f0:	4604      	mov	r4, r0
    26f2:	f7fd fee7 	bl	4c4 <__mriCore_GetInitializedBuffer>
    26f6:	4930      	ldr	r1, [pc, #192]	; (27b8 <__mriCmd_HandleQueryCommand+0xe0>)
    26f8:	4605      	mov	r5, r0
    26fa:	f7ff fb57 	bl	1dac <__mriBuffer_WriteString>
    26fe:	4628      	mov	r0, r5
    2700:	4621      	mov	r1, r4
    2702:	f7ff fb8f 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    2706:	e051      	b.n	27ac <__mriCmd_HandleQueryCommand+0xd4>
    2708:	4620      	mov	r0, r4
    270a:	492c      	ldr	r1, [pc, #176]	; (27bc <__mriCmd_HandleQueryCommand+0xe4>)
    270c:	2204      	movs	r2, #4
    270e:	f7ff fc0f 	bl	1f30 <__mriBuffer_MatchesString>
    2712:	2800      	cmp	r0, #0
    2714:	d047      	beq.n	27a6 <__mriCmd_HandleQueryCommand+0xce>
    2716:	f7fd fed1 	bl	4bc <__mriCore_GetBuffer>
    271a:	213a      	movs	r1, #58	; 0x3a
    271c:	4604      	mov	r4, r0
    271e:	f7ff fbc3 	bl	1ea8 <__mriBuffer_IsNextCharEqualTo>
    2722:	2800      	cmp	r0, #0
    2724:	d033      	beq.n	278e <__mriCmd_HandleQueryCommand+0xb6>
    2726:	4620      	mov	r0, r4
    2728:	4925      	ldr	r1, [pc, #148]	; (27c0 <__mriCmd_HandleQueryCommand+0xe8>)
    272a:	220a      	movs	r2, #10
    272c:	f7ff fc00 	bl	1f30 <__mriBuffer_MatchesString>
    2730:	4605      	mov	r5, r0
    2732:	b1a0      	cbz	r0, 275e <__mriCmd_HandleQueryCommand+0x86>
    2734:	4c23      	ldr	r4, [pc, #140]	; (27c4 <__mriCmd_HandleQueryCommand+0xec>)
    2736:	f7fd fec1 	bl	4bc <__mriCore_GetBuffer>
    273a:	4669      	mov	r1, sp
    273c:	6026      	str	r6, [r4, #0]
    273e:	f7ff ff79 	bl	2634 <readQueryTransferReadArguments>
    2742:	6822      	ldr	r2, [r4, #0]
    2744:	b91a      	cbnz	r2, 274e <__mriCmd_HandleQueryCommand+0x76>
    2746:	9b00      	ldr	r3, [sp, #0]
    2748:	b10b      	cbz	r3, 274e <__mriCmd_HandleQueryCommand+0x76>
    274a:	2004      	movs	r0, #4
    274c:	6020      	str	r0, [r4, #0]
    274e:	6821      	ldr	r1, [r4, #0]
    2750:	b9e9      	cbnz	r1, 278e <__mriCmd_HandleQueryCommand+0xb6>
    2752:	f7fe ffcf 	bl	16f4 <__mriPlatform_GetDeviceMemoryMapXml>
    2756:	9000      	str	r0, [sp, #0]
    2758:	f7fe ffc8 	bl	16ec <__mriPlatform_GetDeviceMemoryMapXmlSize>
    275c:	e01e      	b.n	279c <__mriCmd_HandleQueryCommand+0xc4>
    275e:	4620      	mov	r0, r4
    2760:	4919      	ldr	r1, [pc, #100]	; (27c8 <__mriCmd_HandleQueryCommand+0xf0>)
    2762:	2208      	movs	r2, #8
    2764:	f7ff fbe4 	bl	1f30 <__mriBuffer_MatchesString>
    2768:	b1e8      	cbz	r0, 27a6 <__mriCmd_HandleQueryCommand+0xce>
    276a:	4c16      	ldr	r4, [pc, #88]	; (27c4 <__mriCmd_HandleQueryCommand+0xec>)
    276c:	f7fd fea6 	bl	4bc <__mriCore_GetBuffer>
    2770:	4669      	mov	r1, sp
    2772:	6025      	str	r5, [r4, #0]
    2774:	f7ff ff5e 	bl	2634 <readQueryTransferReadArguments>
    2778:	6823      	ldr	r3, [r4, #0]
    277a:	b933      	cbnz	r3, 278a <__mriCmd_HandleQueryCommand+0xb2>
    277c:	9800      	ldr	r0, [sp, #0]
    277e:	4913      	ldr	r1, [pc, #76]	; (27cc <__mriCmd_HandleQueryCommand+0xf4>)
    2780:	f000 fe43 	bl	340a <strcmp>
    2784:	b108      	cbz	r0, 278a <__mriCmd_HandleQueryCommand+0xb2>
    2786:	2004      	movs	r0, #4
    2788:	6020      	str	r0, [r4, #0]
    278a:	6821      	ldr	r1, [r4, #0]
    278c:	b109      	cbz	r1, 2792 <__mriCmd_HandleQueryCommand+0xba>
    278e:	4810      	ldr	r0, [pc, #64]	; (27d0 <__mriCmd_HandleQueryCommand+0xf8>)
    2790:	e00a      	b.n	27a8 <__mriCmd_HandleQueryCommand+0xd0>
    2792:	f7fe fd95 	bl	12c0 <__mriPlatform_GetTargetXml>
    2796:	9000      	str	r0, [sp, #0]
    2798:	f7fe fd8e 	bl	12b8 <__mriPlatform_GetTargetXmlSize>
    279c:	9001      	str	r0, [sp, #4]
    279e:	4668      	mov	r0, sp
    27a0:	f7ff ff1a 	bl	25d8 <handleQueryTransferReadCommand>
    27a4:	e002      	b.n	27ac <__mriCmd_HandleQueryCommand+0xd4>
    27a6:	480b      	ldr	r0, [pc, #44]	; (27d4 <__mriCmd_HandleQueryCommand+0xfc>)
    27a8:	f7fd fe1e 	bl	3e8 <__mriCore_PrepareStringResponse>
    27ac:	2000      	movs	r0, #0
    27ae:	b004      	add	sp, #16
    27b0:	bd70      	pop	{r4, r5, r6, pc}
    27b2:	bf00      	nop
    27b4:	00004129 	.word	0x00004129
    27b8:	00004149 	.word	0x00004149
    27bc:	00004124 	.word	0x00004124
    27c0:	0000418a 	.word	0x0000418a
    27c4:	100001dc 	.word	0x100001dc
    27c8:	00004181 	.word	0x00004181
    27cc:	0000413e 	.word	0x0000413e
    27d0:	000040c6 	.word	0x000040c6
    27d4:	0000352e 	.word	0x0000352e

000027d8 <__mriCmd_Send_T_StopResponse>:
    27d8:	b510      	push	{r4, lr}
    27da:	f7fd fe73 	bl	4c4 <__mriCore_GetInitializedBuffer>
    27de:	2154      	movs	r1, #84	; 0x54
    27e0:	4604      	mov	r4, r0
    27e2:	f7ff fa61 	bl	1ca8 <__mriBuffer_WriteChar>
    27e6:	f7fd fe57 	bl	498 <__mriCore_GetSignalValue>
    27ea:	4601      	mov	r1, r0
    27ec:	4620      	mov	r0, r4
    27ee:	f7ff fa81 	bl	1cf4 <__mriBuffer_WriteByteAsHex>
    27f2:	4620      	mov	r0, r4
    27f4:	f7fe fc50 	bl	1098 <__mriPlatform_WriteTResponseRegistersToBuffer>
    27f8:	f7fd fe6c 	bl	4d4 <__mriCore_SendPacketToGdb>
    27fc:	2002      	movs	r0, #2
    27fe:	bd10      	pop	{r4, pc}

00002800 <__mriCmd_HandleRegisterReadCommand>:
    2800:	b508      	push	{r3, lr}
    2802:	f7fd fe5f 	bl	4c4 <__mriCore_GetInitializedBuffer>
    2806:	f7fe fc65 	bl	10d4 <__mriPlatform_CopyContextToBuffer>
    280a:	2000      	movs	r0, #0
    280c:	bd08      	pop	{r3, pc}
	...

00002810 <__mriCmd_HandleRegisterWriteCommand>:
    2810:	b510      	push	{r4, lr}
    2812:	f7fd fe53 	bl	4bc <__mriCore_GetBuffer>
    2816:	4604      	mov	r4, r0
    2818:	f7fe fc6c 	bl	10f4 <__mriPlatform_CopyContextFromBuffer>
    281c:	4620      	mov	r0, r4
    281e:	f7ff fa3b 	bl	1c98 <__mriBuffer_OverrunDetected>
    2822:	b108      	cbz	r0, 2828 <__mriCmd_HandleRegisterWriteCommand+0x18>
    2824:	4803      	ldr	r0, [pc, #12]	; (2834 <__mriCmd_HandleRegisterWriteCommand+0x24>)
    2826:	e000      	b.n	282a <__mriCmd_HandleRegisterWriteCommand+0x1a>
    2828:	4803      	ldr	r0, [pc, #12]	; (2838 <__mriCmd_HandleRegisterWriteCommand+0x28>)
    282a:	f7fd fddd 	bl	3e8 <__mriCore_PrepareStringResponse>
    282e:	2000      	movs	r0, #0
    2830:	bd10      	pop	{r4, pc}
    2832:	bf00      	nop
    2834:	000034b8 	.word	0x000034b8
    2838:	000040ce 	.word	0x000040ce

0000283c <__mriCmd_HandleSingleStepCommand>:
    283c:	b508      	push	{r3, lr}
    283e:	f7ff fcbb 	bl	21b8 <__mriCmd_HandleContinueCommand>
    2842:	0743      	lsls	r3, r0, #29
    2844:	d503      	bpl.n	284e <__mriCmd_HandleSingleStepCommand+0x12>
    2846:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    284a:	f7ff bfc5 	b.w	27d8 <__mriCmd_Send_T_StopResponse>
    284e:	f7fe fa17 	bl	c80 <__mriPlatform_EnableSingleStep>
    2852:	2003      	movs	r0, #3
    2854:	bd08      	pop	{r3, pc}

00002856 <__mriGdbConsole_WriteString>:
    2856:	b538      	push	{r3, r4, r5, lr}
    2858:	4604      	mov	r4, r0
    285a:	f7fe fd7b 	bl	1354 <__mriPlatform_CommSharingWithApplication>
    285e:	b150      	cbz	r0, 2876 <__mriGdbConsole_WriteString+0x20>
    2860:	f7fd fe0c 	bl	47c <__mriCore_IsFirstException>
    2864:	b138      	cbz	r0, 2876 <__mriGdbConsole_WriteString+0x20>
    2866:	3c01      	subs	r4, #1
    2868:	f814 0f01 	ldrb.w	r0, [r4, #1]!
    286c:	b110      	cbz	r0, 2874 <__mriGdbConsole_WriteString+0x1e>
    286e:	f7fe fd4f 	bl	1310 <__mriPlatform_CommSendChar>
    2872:	e7f9      	b.n	2868 <__mriGdbConsole_WriteString+0x12>
    2874:	bd38      	pop	{r3, r4, r5, pc}
    2876:	f7fd fe25 	bl	4c4 <__mriCore_GetInitializedBuffer>
    287a:	214f      	movs	r1, #79	; 0x4f
    287c:	4605      	mov	r5, r0
    287e:	f7ff fa13 	bl	1ca8 <__mriBuffer_WriteChar>
    2882:	4620      	mov	r0, r4
    2884:	f000 fdcc 	bl	3420 <strlen>
    2888:	4621      	mov	r1, r4
    288a:	4602      	mov	r2, r0
    288c:	4628      	mov	r0, r5
    288e:	f000 f88e 	bl	29ae <__mriMem_ReadMemoryIntoHexBuffer>
    2892:	4628      	mov	r0, r5
    2894:	f7ff fa00 	bl	1c98 <__mriBuffer_OverrunDetected>
    2898:	b918      	cbnz	r0, 28a2 <__mriGdbConsole_WriteString+0x4c>
    289a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    289e:	f7fd be19 	b.w	4d4 <__mriCore_SendPacketToGdb>
    28a2:	bd38      	pop	{r3, r4, r5, pc}

000028a4 <__mriGdbConsole_WriteHexValue>:
    28a4:	b510      	push	{r4, lr}
    28a6:	b086      	sub	sp, #24
    28a8:	220b      	movs	r2, #11
    28aa:	4604      	mov	r4, r0
    28ac:	4669      	mov	r1, sp
    28ae:	a803      	add	r0, sp, #12
    28b0:	f7ff f9ca 	bl	1c48 <__mriBuffer_Init>
    28b4:	a803      	add	r0, sp, #12
    28b6:	4908      	ldr	r1, [pc, #32]	; (28d8 <__mriGdbConsole_WriteHexValue+0x34>)
    28b8:	f7ff fa78 	bl	1dac <__mriBuffer_WriteString>
    28bc:	a803      	add	r0, sp, #12
    28be:	4621      	mov	r1, r4
    28c0:	f7ff fab0 	bl	1e24 <__mriBuffer_WriteUIntegerAsHex>
    28c4:	a803      	add	r0, sp, #12
    28c6:	2100      	movs	r1, #0
    28c8:	f7ff f9ee 	bl	1ca8 <__mriBuffer_WriteChar>
    28cc:	4668      	mov	r0, sp
    28ce:	f7ff ffc2 	bl	2856 <__mriGdbConsole_WriteString>
    28d2:	b006      	add	sp, #24
    28d4:	bd10      	pop	{r4, pc}
    28d6:	bf00      	nop
    28d8:	00004195 	.word	0x00004195

000028dc <writeBinaryBufferToByteMemory>:
    28dc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    28e0:	4606      	mov	r6, r0
    28e2:	eb01 0802 	add.w	r8, r1, r2
    28e6:	460c      	mov	r4, r1
    28e8:	4544      	cmp	r4, r8
    28ea:	d024      	beq.n	2936 <writeBinaryBufferToByteMemory+0x5a>
    28ec:	4d13      	ldr	r5, [pc, #76]	; (293c <writeBinaryBufferToByteMemory+0x60>)
    28ee:	2300      	movs	r3, #0
    28f0:	4630      	mov	r0, r6
    28f2:	602b      	str	r3, [r5, #0]
    28f4:	f7ff f9ea 	bl	1ccc <__mriBuffer_ReadChar>
    28f8:	682f      	ldr	r7, [r5, #0]
    28fa:	4601      	mov	r1, r0
    28fc:	b95f      	cbnz	r7, 2916 <writeBinaryBufferToByteMemory+0x3a>
    28fe:	287d      	cmp	r0, #125	; 0x7d
    2900:	d109      	bne.n	2916 <writeBinaryBufferToByteMemory+0x3a>
    2902:	4630      	mov	r0, r6
    2904:	f7ff f9e2 	bl	1ccc <__mriBuffer_ReadChar>
    2908:	6829      	ldr	r1, [r5, #0]
    290a:	b919      	cbnz	r1, 2914 <writeBinaryBufferToByteMemory+0x38>
    290c:	f080 0020 	eor.w	r0, r0, #32
    2910:	b2c1      	uxtb	r1, r0
    2912:	e000      	b.n	2916 <writeBinaryBufferToByteMemory+0x3a>
    2914:	4639      	mov	r1, r7
    2916:	4a09      	ldr	r2, [pc, #36]	; (293c <writeBinaryBufferToByteMemory+0x60>)
    2918:	6813      	ldr	r3, [r2, #0]
    291a:	b113      	cbz	r3, 2922 <writeBinaryBufferToByteMemory+0x46>
    291c:	2000      	movs	r0, #0
    291e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2922:	4620      	mov	r0, r4
    2924:	1c65      	adds	r5, r4, #1
    2926:	f000 f8ca 	bl	2abe <__mriPlatform_MemWrite8>
    292a:	f7fe fba3 	bl	1074 <__mriPlatform_WasMemoryFaultEncountered>
    292e:	2800      	cmp	r0, #0
    2930:	d1f4      	bne.n	291c <writeBinaryBufferToByteMemory+0x40>
    2932:	462c      	mov	r4, r5
    2934:	e7d8      	b.n	28e8 <writeBinaryBufferToByteMemory+0xc>
    2936:	2001      	movs	r0, #1
    2938:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    293c:	100001dc 	.word	0x100001dc

00002940 <writeHexBufferToByteMemory>:
    2940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2942:	4607      	mov	r7, r0
    2944:	188e      	adds	r6, r1, r2
    2946:	460c      	mov	r4, r1
    2948:	42b4      	cmp	r4, r6
    294a:	d014      	beq.n	2976 <writeHexBufferToByteMemory+0x36>
    294c:	4d0b      	ldr	r5, [pc, #44]	; (297c <writeHexBufferToByteMemory+0x3c>)
    294e:	2300      	movs	r3, #0
    2950:	4638      	mov	r0, r7
    2952:	602b      	str	r3, [r5, #0]
    2954:	f7ff f9ea 	bl	1d2c <__mriBuffer_ReadByteAsHex>
    2958:	4601      	mov	r1, r0
    295a:	6828      	ldr	r0, [r5, #0]
    295c:	b108      	cbz	r0, 2962 <writeHexBufferToByteMemory+0x22>
    295e:	2000      	movs	r0, #0
    2960:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2962:	4620      	mov	r0, r4
    2964:	1c65      	adds	r5, r4, #1
    2966:	f000 f8aa 	bl	2abe <__mriPlatform_MemWrite8>
    296a:	f7fe fb83 	bl	1074 <__mriPlatform_WasMemoryFaultEncountered>
    296e:	2800      	cmp	r0, #0
    2970:	d1f5      	bne.n	295e <writeHexBufferToByteMemory+0x1e>
    2972:	462c      	mov	r4, r5
    2974:	e7e8      	b.n	2948 <writeHexBufferToByteMemory+0x8>
    2976:	2001      	movs	r0, #1
    2978:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    297a:	bf00      	nop
    297c:	100001dc 	.word	0x100001dc

00002980 <readMemoryBytesIntoHexBuffer>:
    2980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2982:	4605      	mov	r5, r0
    2984:	188c      	adds	r4, r1, r2
    2986:	4608      	mov	r0, r1
    2988:	42a0      	cmp	r0, r4
    298a:	d00c      	beq.n	29a6 <readMemoryBytesIntoHexBuffer+0x26>
    298c:	1c46      	adds	r6, r0, #1
    298e:	f000 f890 	bl	2ab2 <__mriPlatform_MemRead8>
    2992:	4607      	mov	r7, r0
    2994:	f7fe fb6e 	bl	1074 <__mriPlatform_WasMemoryFaultEncountered>
    2998:	b938      	cbnz	r0, 29aa <readMemoryBytesIntoHexBuffer+0x2a>
    299a:	4628      	mov	r0, r5
    299c:	4639      	mov	r1, r7
    299e:	f7ff f9a9 	bl	1cf4 <__mriBuffer_WriteByteAsHex>
    29a2:	4630      	mov	r0, r6
    29a4:	e7f0      	b.n	2988 <readMemoryBytesIntoHexBuffer+0x8>
    29a6:	2001      	movs	r0, #1
    29a8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    29aa:	2000      	movs	r0, #0
    29ac:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

000029ae <__mriMem_ReadMemoryIntoHexBuffer>:
    29ae:	2a02      	cmp	r2, #2
    29b0:	b573      	push	{r0, r1, r4, r5, r6, lr}
    29b2:	4605      	mov	r5, r0
    29b4:	4614      	mov	r4, r2
    29b6:	d002      	beq.n	29be <__mriMem_ReadMemoryIntoHexBuffer+0x10>
    29b8:	2a04      	cmp	r2, #4
    29ba:	d122      	bne.n	2a02 <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    29bc:	e00e      	b.n	29dc <__mriMem_ReadMemoryIntoHexBuffer+0x2e>
    29be:	f011 0601 	ands.w	r6, r1, #1
    29c2:	d11e      	bne.n	2a02 <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    29c4:	4608      	mov	r0, r1
    29c6:	f000 f871 	bl	2aac <__mriPlatform_MemRead16>
    29ca:	f8ad 0002 	strh.w	r0, [sp, #2]
    29ce:	f7fe fb51 	bl	1074 <__mriPlatform_WasMemoryFaultEncountered>
    29d2:	b9a0      	cbnz	r0, 29fe <__mriMem_ReadMemoryIntoHexBuffer+0x50>
    29d4:	4628      	mov	r0, r5
    29d6:	f10d 0102 	add.w	r1, sp, #2
    29da:	e00b      	b.n	29f4 <__mriMem_ReadMemoryIntoHexBuffer+0x46>
    29dc:	f011 0603 	ands.w	r6, r1, #3
    29e0:	d10f      	bne.n	2a02 <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    29e2:	4608      	mov	r0, r1
    29e4:	f000 f860 	bl	2aa8 <__mriPlatform_MemRead32>
    29e8:	9001      	str	r0, [sp, #4]
    29ea:	f7fe fb43 	bl	1074 <__mriPlatform_WasMemoryFaultEncountered>
    29ee:	b930      	cbnz	r0, 29fe <__mriMem_ReadMemoryIntoHexBuffer+0x50>
    29f0:	4628      	mov	r0, r5
    29f2:	a901      	add	r1, sp, #4
    29f4:	4622      	mov	r2, r4
    29f6:	f7ff ffc3 	bl	2980 <readMemoryBytesIntoHexBuffer>
    29fa:	2001      	movs	r0, #1
    29fc:	e003      	b.n	2a06 <__mriMem_ReadMemoryIntoHexBuffer+0x58>
    29fe:	4630      	mov	r0, r6
    2a00:	e001      	b.n	2a06 <__mriMem_ReadMemoryIntoHexBuffer+0x58>
    2a02:	f7ff ffbd 	bl	2980 <readMemoryBytesIntoHexBuffer>
    2a06:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

00002a08 <__mriMem_WriteHexBufferToMemory>:
    2a08:	2a02      	cmp	r2, #2
    2a0a:	b513      	push	{r0, r1, r4, lr}
    2a0c:	460c      	mov	r4, r1
    2a0e:	d002      	beq.n	2a16 <__mriMem_WriteHexBufferToMemory+0xe>
    2a10:	2a04      	cmp	r2, #4
    2a12:	d11e      	bne.n	2a52 <__mriMem_WriteHexBufferToMemory+0x4a>
    2a14:	e00c      	b.n	2a30 <__mriMem_WriteHexBufferToMemory+0x28>
    2a16:	07cb      	lsls	r3, r1, #31
    2a18:	d41b      	bmi.n	2a52 <__mriMem_WriteHexBufferToMemory+0x4a>
    2a1a:	f10d 0102 	add.w	r1, sp, #2
    2a1e:	f7ff ff8f 	bl	2940 <writeHexBufferToByteMemory>
    2a22:	b1c0      	cbz	r0, 2a56 <__mriMem_WriteHexBufferToMemory+0x4e>
    2a24:	4620      	mov	r0, r4
    2a26:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    2a2a:	f000 f846 	bl	2aba <__mriPlatform_MemWrite16>
    2a2e:	e009      	b.n	2a44 <__mriMem_WriteHexBufferToMemory+0x3c>
    2a30:	078b      	lsls	r3, r1, #30
    2a32:	d10e      	bne.n	2a52 <__mriMem_WriteHexBufferToMemory+0x4a>
    2a34:	a901      	add	r1, sp, #4
    2a36:	f7ff ff83 	bl	2940 <writeHexBufferToByteMemory>
    2a3a:	b160      	cbz	r0, 2a56 <__mriMem_WriteHexBufferToMemory+0x4e>
    2a3c:	4620      	mov	r0, r4
    2a3e:	9901      	ldr	r1, [sp, #4]
    2a40:	f000 f839 	bl	2ab6 <__mriPlatform_MemWrite32>
    2a44:	f7fe fb16 	bl	1074 <__mriPlatform_WasMemoryFaultEncountered>
    2a48:	f1d0 0001 	rsbs	r0, r0, #1
    2a4c:	bf38      	it	cc
    2a4e:	2000      	movcc	r0, #0
    2a50:	e001      	b.n	2a56 <__mriMem_WriteHexBufferToMemory+0x4e>
    2a52:	f7ff ff75 	bl	2940 <writeHexBufferToByteMemory>
    2a56:	bd1c      	pop	{r2, r3, r4, pc}

00002a58 <__mriMem_WriteBinaryBufferToMemory>:
    2a58:	2a02      	cmp	r2, #2
    2a5a:	b513      	push	{r0, r1, r4, lr}
    2a5c:	460c      	mov	r4, r1
    2a5e:	d002      	beq.n	2a66 <__mriMem_WriteBinaryBufferToMemory+0xe>
    2a60:	2a04      	cmp	r2, #4
    2a62:	d11e      	bne.n	2aa2 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2a64:	e00c      	b.n	2a80 <__mriMem_WriteBinaryBufferToMemory+0x28>
    2a66:	07cb      	lsls	r3, r1, #31
    2a68:	d41b      	bmi.n	2aa2 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2a6a:	f10d 0102 	add.w	r1, sp, #2
    2a6e:	f7ff ff35 	bl	28dc <writeBinaryBufferToByteMemory>
    2a72:	b1c0      	cbz	r0, 2aa6 <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2a74:	4620      	mov	r0, r4
    2a76:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    2a7a:	f000 f81e 	bl	2aba <__mriPlatform_MemWrite16>
    2a7e:	e009      	b.n	2a94 <__mriMem_WriteBinaryBufferToMemory+0x3c>
    2a80:	078b      	lsls	r3, r1, #30
    2a82:	d10e      	bne.n	2aa2 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2a84:	a901      	add	r1, sp, #4
    2a86:	f7ff ff29 	bl	28dc <writeBinaryBufferToByteMemory>
    2a8a:	b160      	cbz	r0, 2aa6 <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2a8c:	4620      	mov	r0, r4
    2a8e:	9901      	ldr	r1, [sp, #4]
    2a90:	f000 f811 	bl	2ab6 <__mriPlatform_MemWrite32>
    2a94:	f7fe faee 	bl	1074 <__mriPlatform_WasMemoryFaultEncountered>
    2a98:	f1d0 0001 	rsbs	r0, r0, #1
    2a9c:	bf38      	it	cc
    2a9e:	2000      	movcc	r0, #0
    2aa0:	e001      	b.n	2aa6 <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2aa2:	f7ff ff1b 	bl	28dc <writeBinaryBufferToByteMemory>
    2aa6:	bd1c      	pop	{r2, r3, r4, pc}

00002aa8 <__mriPlatform_MemRead32>:
    2aa8:	6800      	ldr	r0, [r0, #0]
    2aaa:	4770      	bx	lr

00002aac <__mriPlatform_MemRead16>:
    2aac:	8800      	ldrh	r0, [r0, #0]
    2aae:	b280      	uxth	r0, r0
    2ab0:	4770      	bx	lr

00002ab2 <__mriPlatform_MemRead8>:
    2ab2:	7800      	ldrb	r0, [r0, #0]
    2ab4:	4770      	bx	lr

00002ab6 <__mriPlatform_MemWrite32>:
    2ab6:	6001      	str	r1, [r0, #0]
    2ab8:	4770      	bx	lr

00002aba <__mriPlatform_MemWrite16>:
    2aba:	8001      	strh	r1, [r0, #0]
    2abc:	4770      	bx	lr

00002abe <__mriPlatform_MemWrite8>:
    2abe:	7001      	strb	r1, [r0, #0]
    2ac0:	4770      	bx	lr
	...

00002ac4 <NVIC_SetVector>:
    2ac4:	b086      	sub	sp, #24
    2ac6:	4603      	mov	r3, r0
    2ac8:	9100      	str	r1, [sp, #0]
    2aca:	f88d 3007 	strb.w	r3, [sp, #7]
    2ace:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2ad2:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2ad6:	689b      	ldr	r3, [r3, #8]
    2ad8:	9305      	str	r3, [sp, #20]
    2ada:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2ade:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2ae2:	689b      	ldr	r3, [r3, #8]
    2ae4:	2b00      	cmp	r3, #0
    2ae6:	d122      	bne.n	2b2e <NVIC_SetVector+0x6a>
    2ae8:	9b05      	ldr	r3, [sp, #20]
    2aea:	9303      	str	r3, [sp, #12]
    2aec:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    2af0:	9305      	str	r3, [sp, #20]
    2af2:	f04f 0300 	mov.w	r3, #0
    2af6:	9304      	str	r3, [sp, #16]
    2af8:	e00f      	b.n	2b1a <NVIC_SetVector+0x56>
    2afa:	9b04      	ldr	r3, [sp, #16]
    2afc:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2b00:	9a05      	ldr	r2, [sp, #20]
    2b02:	18d3      	adds	r3, r2, r3
    2b04:	9a04      	ldr	r2, [sp, #16]
    2b06:	ea4f 0282 	mov.w	r2, r2, lsl #2
    2b0a:	9903      	ldr	r1, [sp, #12]
    2b0c:	188a      	adds	r2, r1, r2
    2b0e:	6812      	ldr	r2, [r2, #0]
    2b10:	601a      	str	r2, [r3, #0]
    2b12:	9b04      	ldr	r3, [sp, #16]
    2b14:	f103 0301 	add.w	r3, r3, #1
    2b18:	9304      	str	r3, [sp, #16]
    2b1a:	9b04      	ldr	r3, [sp, #16]
    2b1c:	2b30      	cmp	r3, #48	; 0x30
    2b1e:	d9ec      	bls.n	2afa <NVIC_SetVector+0x36>
    2b20:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2b24:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2b28:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2b2c:	609a      	str	r2, [r3, #8]
    2b2e:	f99d 3007 	ldrsb.w	r3, [sp, #7]
    2b32:	f103 0310 	add.w	r3, r3, #16
    2b36:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2b3a:	9a05      	ldr	r2, [sp, #20]
    2b3c:	18d3      	adds	r3, r2, r3
    2b3e:	9a00      	ldr	r2, [sp, #0]
    2b40:	601a      	str	r2, [r3, #0]
    2b42:	b006      	add	sp, #24
    2b44:	4770      	bx	lr
    2b46:	bf00      	nop

00002b48 <SystemInit>:
    2b48:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b4c:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b50:	f04f 0220 	mov.w	r2, #32
    2b54:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
    2b58:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b5c:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b60:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2b64:	f003 0320 	and.w	r3, r3, #32
    2b68:	2b00      	cmp	r3, #0
    2b6a:	d00a      	beq.n	2b82 <SystemInit+0x3a>
    2b6c:	bf00      	nop
    2b6e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b72:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b76:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2b7a:	f003 0340 	and.w	r3, r3, #64	; 0x40
    2b7e:	2b00      	cmp	r3, #0
    2b80:	d0f5      	beq.n	2b6e <SystemInit+0x26>
    2b82:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b86:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b8a:	f04f 0202 	mov.w	r2, #2
    2b8e:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
    2b92:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b96:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b9a:	f04f 0200 	mov.w	r2, #0
    2b9e:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    2ba2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ba6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2baa:	f04f 0200 	mov.w	r2, #0
    2bae:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    2bb2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bb6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bba:	f04f 0201 	mov.w	r2, #1
    2bbe:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
    2bc2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bc6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bca:	f04f 020b 	mov.w	r2, #11
    2bce:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    2bd2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bd6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bda:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2bde:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2be2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2be6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bea:	f04f 0255 	mov.w	r2, #85	; 0x55
    2bee:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2bf2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bf6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bfa:	f04f 0201 	mov.w	r2, #1
    2bfe:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2c02:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c06:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c0a:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2c0e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c12:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c16:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c1a:	f04f 0255 	mov.w	r2, #85	; 0x55
    2c1e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c22:	bf00      	nop
    2c24:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c28:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c2c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2c30:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
    2c34:	2b00      	cmp	r3, #0
    2c36:	d0f5      	beq.n	2c24 <SystemInit+0xdc>
    2c38:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c3c:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c40:	f04f 0203 	mov.w	r2, #3
    2c44:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2c48:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c4c:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c50:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2c54:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c58:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c5c:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c60:	f04f 0255 	mov.w	r2, #85	; 0x55
    2c64:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c68:	bf00      	nop
    2c6a:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c6e:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c72:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2c76:	f003 7340 	and.w	r3, r3, #50331648	; 0x3000000
    2c7a:	2b00      	cmp	r3, #0
    2c7c:	d0f5      	beq.n	2c6a <SystemInit+0x122>
    2c7e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c82:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c86:	f04f 0205 	mov.w	r2, #5
    2c8a:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
    2c8e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c92:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c96:	f248 72de 	movw	r2, #34782	; 0x87de
    2c9a:	f2c0 4228 	movt	r2, #1064	; 0x428
    2c9e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    2ca2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ca6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2caa:	f04f 0200 	mov.w	r2, #0
    2cae:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
    2cb2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2cb6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2cba:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2cbe:	f2c4 020f 	movt	r2, #16399	; 0x400f
    2cc2:	6812      	ldr	r2, [r2, #0]
    2cc4:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
    2cc8:	f022 023a 	bic.w	r2, r2, #58	; 0x3a
    2ccc:	f442 5240 	orr.w	r2, r2, #12288	; 0x3000
    2cd0:	f042 023a 	orr.w	r2, r2, #58	; 0x3a
    2cd4:	601a      	str	r2, [r3, #0]
    2cd6:	4770      	bx	lr

00002cd8 <exit>:
    2cd8:	b500      	push	{lr}
    2cda:	b083      	sub	sp, #12
    2cdc:	9001      	str	r0, [sp, #4]
    2cde:	f000 f80b 	bl	2cf8 <mbed_interface_connected>
    2ce2:	4603      	mov	r3, r0
    2ce4:	2b00      	cmp	r3, #0
    2ce6:	d001      	beq.n	2cec <exit+0x14>
    2ce8:	f000 f81c 	bl	2d24 <semihost_exit>
    2cec:	9b01      	ldr	r3, [sp, #4]
    2cee:	2b00      	cmp	r3, #0
    2cf0:	d001      	beq.n	2cf6 <exit+0x1e>
    2cf2:	f000 f955 	bl	2fa0 <mbed_die>
    2cf6:	e7fe      	b.n	2cf6 <exit+0x1e>

00002cf8 <mbed_interface_connected>:
    2cf8:	b508      	push	{r3, lr}
    2cfa:	f7fd fb39 	bl	370 <__wrap_semihost_connected>
    2cfe:	4603      	mov	r3, r0
    2d00:	4618      	mov	r0, r3
    2d02:	bd08      	pop	{r3, pc}

00002d04 <__semihost>:
    2d04:	b530      	push	{r4, r5, lr}
    2d06:	b085      	sub	sp, #20
    2d08:	9001      	str	r0, [sp, #4]
    2d0a:	9100      	str	r1, [sp, #0]
    2d0c:	9c01      	ldr	r4, [sp, #4]
    2d0e:	9d00      	ldr	r5, [sp, #0]
    2d10:	4620      	mov	r0, r4
    2d12:	4629      	mov	r1, r5
    2d14:	beab      	bkpt	0x00ab
    2d16:	4604      	mov	r4, r0
    2d18:	9403      	str	r4, [sp, #12]
    2d1a:	9b03      	ldr	r3, [sp, #12]
    2d1c:	4618      	mov	r0, r3
    2d1e:	b005      	add	sp, #20
    2d20:	bd30      	pop	{r4, r5, pc}
    2d22:	bf00      	nop

00002d24 <semihost_exit>:
    2d24:	b500      	push	{lr}
    2d26:	b085      	sub	sp, #20
    2d28:	466b      	mov	r3, sp
    2d2a:	f04f 0018 	mov.w	r0, #24
    2d2e:	4619      	mov	r1, r3
    2d30:	f7ff ffe8 	bl	2d04 <__semihost>
    2d34:	4603      	mov	r3, r0
    2d36:	4618      	mov	r0, r3
    2d38:	b005      	add	sp, #20
    2d3a:	bd00      	pop	{pc}

00002d3c <Reset_Handler>:
    2d3c:	4907      	ldr	r1, [pc, #28]	; (2d5c <.flash_to_ram_loop+0x1a>)
    2d3e:	4a08      	ldr	r2, [pc, #32]	; (2d60 <.flash_to_ram_loop+0x1e>)
    2d40:	4b08      	ldr	r3, [pc, #32]	; (2d64 <.flash_to_ram_loop+0x22>)

00002d42 <.flash_to_ram_loop>:
    2d42:	429a      	cmp	r2, r3
    2d44:	bfbe      	ittt	lt
    2d46:	f851 0b04 	ldrlt.w	r0, [r1], #4
    2d4a:	f842 0b04 	strlt.w	r0, [r2], #4
    2d4e:	f7ff bff8 	blt.w	2d42 <.flash_to_ram_loop>
    2d52:	4805      	ldr	r0, [pc, #20]	; (2d68 <.flash_to_ram_loop+0x26>)
    2d54:	4780      	blx	r0
    2d56:	4805      	ldr	r0, [pc, #20]	; (2d6c <.flash_to_ram_loop+0x2a>)
    2d58:	4700      	bx	r0
    2d5a:	0000      	.short	0x0000
    2d5c:	0000419c 	.word	0x0000419c
    2d60:	100000c8 	.word	0x100000c8
    2d64:	10000164 	.word	0x10000164
    2d68:	00002b49 	.word	0x00002b49
    2d6c:	00000325 	.word	0x00000325

00002d70 <NMI_Handler>:
    2d70:	e7fe      	b.n	2d70 <NMI_Handler>
    2d72:	e7fe      	b.n	2d72 <NMI_Handler+0x2>
    2d74:	e7fe      	b.n	2d74 <NMI_Handler+0x4>
    2d76:	e7fe      	b.n	2d76 <NMI_Handler+0x6>
    2d78:	e7fe      	b.n	2d78 <NMI_Handler+0x8>

00002d7a <SVC_Handler>:
    2d7a:	e7fe      	b.n	2d7a <SVC_Handler>
    2d7c:	e7fe      	b.n	2d7c <SVC_Handler+0x2>

00002d7e <PendSV_Handler>:
    2d7e:	e7fe      	b.n	2d7e <PendSV_Handler>

00002d80 <SysTick_Handler>:
    2d80:	e7fe      	b.n	2d80 <SysTick_Handler>

00002d82 <DEF_IRQHandler>:
    2d82:	e7fe      	b.n	2d82 <DEF_IRQHandler>

00002d84 <WDT_IRQHandler>:
    2d84:	e7fe      	b.n	2d84 <WDT_IRQHandler>

00002d86 <TIMER0_IRQHandler>:
    2d86:	e7fe      	b.n	2d86 <TIMER0_IRQHandler>

00002d88 <TIMER1_IRQHandler>:
    2d88:	e7fe      	b.n	2d88 <TIMER1_IRQHandler>

00002d8a <TIMER2_IRQHandler>:
    2d8a:	e7fe      	b.n	2d8a <TIMER2_IRQHandler>

00002d8c <TIMER3_IRQHandler>:
    2d8c:	e7fe      	b.n	2d8c <TIMER3_IRQHandler>
    2d8e:	e7fe      	b.n	2d8e <TIMER3_IRQHandler+0x2>
    2d90:	e7fe      	b.n	2d90 <TIMER3_IRQHandler+0x4>
    2d92:	e7fe      	b.n	2d92 <TIMER3_IRQHandler+0x6>
    2d94:	e7fe      	b.n	2d94 <TIMER3_IRQHandler+0x8>

00002d96 <PWM1_IRQHandler>:
    2d96:	e7fe      	b.n	2d96 <PWM1_IRQHandler>

00002d98 <I2C0_IRQHandler>:
    2d98:	e7fe      	b.n	2d98 <I2C0_IRQHandler>

00002d9a <I2C1_IRQHandler>:
    2d9a:	e7fe      	b.n	2d9a <I2C1_IRQHandler>

00002d9c <I2C2_IRQHandler>:
    2d9c:	e7fe      	b.n	2d9c <I2C2_IRQHandler>

00002d9e <SPI_IRQHandler>:
    2d9e:	e7fe      	b.n	2d9e <SPI_IRQHandler>

00002da0 <SSP0_IRQHandler>:
    2da0:	e7fe      	b.n	2da0 <SSP0_IRQHandler>

00002da2 <SSP1_IRQHandler>:
    2da2:	e7fe      	b.n	2da2 <SSP1_IRQHandler>

00002da4 <PLL0_IRQHandler>:
    2da4:	e7fe      	b.n	2da4 <PLL0_IRQHandler>

00002da6 <RTC_IRQHandler>:
    2da6:	e7fe      	b.n	2da6 <RTC_IRQHandler>

00002da8 <EINT0_IRQHandler>:
    2da8:	e7fe      	b.n	2da8 <EINT0_IRQHandler>

00002daa <EINT1_IRQHandler>:
    2daa:	e7fe      	b.n	2daa <EINT1_IRQHandler>

00002dac <EINT2_IRQHandler>:
    2dac:	e7fe      	b.n	2dac <EINT2_IRQHandler>

00002dae <EINT3_IRQHandler>:
    2dae:	e7fe      	b.n	2dae <EINT3_IRQHandler>

00002db0 <ADC_IRQHandler>:
    2db0:	e7fe      	b.n	2db0 <ADC_IRQHandler>

00002db2 <BOD_IRQHandler>:
    2db2:	e7fe      	b.n	2db2 <BOD_IRQHandler>

00002db4 <USB_IRQHandler>:
    2db4:	e7fe      	b.n	2db4 <USB_IRQHandler>

00002db6 <CAN_IRQHandler>:
    2db6:	e7fe      	b.n	2db6 <CAN_IRQHandler>

00002db8 <DMA_IRQHandler>:
    2db8:	e7fe      	b.n	2db8 <DMA_IRQHandler>

00002dba <I2S_IRQHandler>:
    2dba:	e7fe      	b.n	2dba <I2S_IRQHandler>

00002dbc <ENET_IRQHandler>:
    2dbc:	e7fe      	b.n	2dbc <ENET_IRQHandler>

00002dbe <RIT_IRQHandler>:
    2dbe:	e7fe      	b.n	2dbe <RIT_IRQHandler>

00002dc0 <MCPWM_IRQHandler>:
    2dc0:	e7fe      	b.n	2dc0 <MCPWM_IRQHandler>

00002dc2 <QEI_IRQHandler>:
    2dc2:	e7fe      	b.n	2dc2 <QEI_IRQHandler>

00002dc4 <PLL1_IRQHandler>:
    2dc4:	e7fe      	b.n	2dc4 <PLL1_IRQHandler>

00002dc6 <USBActivity_IRQHandler>:
    2dc6:	e7fe      	b.n	2dc6 <USBActivity_IRQHandler>

00002dc8 <CANActivity_IRQHandler>:
    2dc8:	e7fe      	b.n	2dc8 <CANActivity_IRQHandler>
    2dca:	bf00      	nop

00002dcc <pin_function>:
    2dcc:	b086      	sub	sp, #24
    2dce:	9001      	str	r0, [sp, #4]
    2dd0:	9100      	str	r1, [sp, #0]
    2dd2:	9b01      	ldr	r3, [sp, #4]
    2dd4:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2dd8:	d039      	beq.n	2e4e <pin_function+0x82>
    2dda:	9b01      	ldr	r3, [sp, #4]
    2ddc:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2de0:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    2de4:	9305      	str	r3, [sp, #20]
    2de6:	9b05      	ldr	r3, [sp, #20]
    2de8:	ea4f 1313 	mov.w	r3, r3, lsr #4
    2dec:	9304      	str	r3, [sp, #16]
    2dee:	9b05      	ldr	r3, [sp, #20]
    2df0:	f003 030f 	and.w	r3, r3, #15
    2df4:	ea4f 0343 	mov.w	r3, r3, lsl #1
    2df8:	9303      	str	r3, [sp, #12]
    2dfa:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2dfe:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2e02:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2e06:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2e0a:	9904      	ldr	r1, [sp, #16]
    2e0c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2e10:	f04f 0003 	mov.w	r0, #3
    2e14:	9a03      	ldr	r2, [sp, #12]
    2e16:	fa00 f202 	lsl.w	r2, r0, r2
    2e1a:	ea6f 0202 	mvn.w	r2, r2
    2e1e:	4011      	ands	r1, r2
    2e20:	9a04      	ldr	r2, [sp, #16]
    2e22:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2e26:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e2a:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2e2e:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2e32:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2e36:	9904      	ldr	r1, [sp, #16]
    2e38:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2e3c:	9800      	ldr	r0, [sp, #0]
    2e3e:	9a03      	ldr	r2, [sp, #12]
    2e40:	fa00 f202 	lsl.w	r2, r0, r2
    2e44:	4311      	orrs	r1, r2
    2e46:	9a04      	ldr	r2, [sp, #16]
    2e48:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2e4c:	e000      	b.n	2e50 <pin_function+0x84>
    2e4e:	bf00      	nop
    2e50:	b006      	add	sp, #24
    2e52:	4770      	bx	lr

00002e54 <pin_mode>:
    2e54:	b086      	sub	sp, #24
    2e56:	9001      	str	r0, [sp, #4]
    2e58:	460b      	mov	r3, r1
    2e5a:	f88d 3003 	strb.w	r3, [sp, #3]
    2e5e:	9b01      	ldr	r3, [sp, #4]
    2e60:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2e64:	f000 8085 	beq.w	2f72 <pin_mode+0x11e>
    2e68:	9b01      	ldr	r3, [sp, #4]
    2e6a:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2e6e:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    2e72:	9305      	str	r3, [sp, #20]
    2e74:	9b05      	ldr	r3, [sp, #20]
    2e76:	ea4f 1353 	mov.w	r3, r3, lsr #5
    2e7a:	9304      	str	r3, [sp, #16]
    2e7c:	9b05      	ldr	r3, [sp, #20]
    2e7e:	f003 031f 	and.w	r3, r3, #31
    2e82:	9303      	str	r3, [sp, #12]
    2e84:	f89d 3003 	ldrb.w	r3, [sp, #3]
    2e88:	f003 0304 	and.w	r3, r3, #4
    2e8c:	ea4f 0393 	mov.w	r3, r3, lsr #2
    2e90:	9302      	str	r3, [sp, #8]
    2e92:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e96:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2e9a:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2e9e:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2ea2:	9904      	ldr	r1, [sp, #16]
    2ea4:	f101 011a 	add.w	r1, r1, #26
    2ea8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2eac:	9802      	ldr	r0, [sp, #8]
    2eae:	9a03      	ldr	r2, [sp, #12]
    2eb0:	fa00 f202 	lsl.w	r2, r0, r2
    2eb4:	ea6f 0202 	mvn.w	r2, r2
    2eb8:	4011      	ands	r1, r2
    2eba:	9a04      	ldr	r2, [sp, #16]
    2ebc:	f102 021a 	add.w	r2, r2, #26
    2ec0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2ec4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ec8:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2ecc:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2ed0:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2ed4:	9904      	ldr	r1, [sp, #16]
    2ed6:	f101 011a 	add.w	r1, r1, #26
    2eda:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2ede:	9802      	ldr	r0, [sp, #8]
    2ee0:	9a03      	ldr	r2, [sp, #12]
    2ee2:	fa00 f202 	lsl.w	r2, r0, r2
    2ee6:	4311      	orrs	r1, r2
    2ee8:	9a04      	ldr	r2, [sp, #16]
    2eea:	f102 021a 	add.w	r2, r2, #26
    2eee:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2ef2:	9b02      	ldr	r3, [sp, #8]
    2ef4:	2b00      	cmp	r3, #0
    2ef6:	d13d      	bne.n	2f74 <pin_mode+0x120>
    2ef8:	9b05      	ldr	r3, [sp, #20]
    2efa:	ea4f 1313 	mov.w	r3, r3, lsr #4
    2efe:	9304      	str	r3, [sp, #16]
    2f00:	9b05      	ldr	r3, [sp, #20]
    2f02:	f003 030f 	and.w	r3, r3, #15
    2f06:	ea4f 0343 	mov.w	r3, r3, lsl #1
    2f0a:	9303      	str	r3, [sp, #12]
    2f0c:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2f10:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2f14:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2f18:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2f1c:	9904      	ldr	r1, [sp, #16]
    2f1e:	f101 0110 	add.w	r1, r1, #16
    2f22:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2f26:	f04f 0003 	mov.w	r0, #3
    2f2a:	9a03      	ldr	r2, [sp, #12]
    2f2c:	fa00 f202 	lsl.w	r2, r0, r2
    2f30:	ea6f 0202 	mvn.w	r2, r2
    2f34:	4011      	ands	r1, r2
    2f36:	9a04      	ldr	r2, [sp, #16]
    2f38:	f102 0210 	add.w	r2, r2, #16
    2f3c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2f40:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2f44:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2f48:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2f4c:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2f50:	9904      	ldr	r1, [sp, #16]
    2f52:	f101 0110 	add.w	r1, r1, #16
    2f56:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2f5a:	f89d 0003 	ldrb.w	r0, [sp, #3]
    2f5e:	9a03      	ldr	r2, [sp, #12]
    2f60:	fa00 f202 	lsl.w	r2, r0, r2
    2f64:	4311      	orrs	r1, r2
    2f66:	9a04      	ldr	r2, [sp, #16]
    2f68:	f102 0210 	add.w	r2, r2, #16
    2f6c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2f70:	e000      	b.n	2f74 <pin_mode+0x120>
    2f72:	bf00      	nop
    2f74:	b006      	add	sp, #24
    2f76:	4770      	bx	lr

00002f78 <gpio_write>:
    2f78:	b082      	sub	sp, #8
    2f7a:	9001      	str	r0, [sp, #4]
    2f7c:	9100      	str	r1, [sp, #0]
    2f7e:	9b00      	ldr	r3, [sp, #0]
    2f80:	2b00      	cmp	r3, #0
    2f82:	d005      	beq.n	2f90 <gpio_write+0x18>
    2f84:	9b01      	ldr	r3, [sp, #4]
    2f86:	68db      	ldr	r3, [r3, #12]
    2f88:	9a01      	ldr	r2, [sp, #4]
    2f8a:	6852      	ldr	r2, [r2, #4]
    2f8c:	601a      	str	r2, [r3, #0]
    2f8e:	e004      	b.n	2f9a <gpio_write+0x22>
    2f90:	9b01      	ldr	r3, [sp, #4]
    2f92:	691b      	ldr	r3, [r3, #16]
    2f94:	9a01      	ldr	r2, [sp, #4]
    2f96:	6852      	ldr	r2, [r2, #4]
    2f98:	601a      	str	r2, [r3, #0]
    2f9a:	b002      	add	sp, #8
    2f9c:	4770      	bx	lr
    2f9e:	bf00      	nop

00002fa0 <mbed_die>:
    2fa0:	b500      	push	{lr}
    2fa2:	b099      	sub	sp, #100	; 0x64
    2fa4:	ab12      	add	r3, sp, #72	; 0x48
    2fa6:	4618      	mov	r0, r3
    2fa8:	f24c 0132 	movw	r1, #49202	; 0xc032
    2fac:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2fb0:	f04f 0201 	mov.w	r2, #1
    2fb4:	f000 f88a 	bl	30cc <gpio_init>
    2fb8:	ab0c      	add	r3, sp, #48	; 0x30
    2fba:	4618      	mov	r0, r3
    2fbc:	f24c 0134 	movw	r1, #49204	; 0xc034
    2fc0:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2fc4:	f04f 0201 	mov.w	r2, #1
    2fc8:	f000 f880 	bl	30cc <gpio_init>
    2fcc:	ab06      	add	r3, sp, #24
    2fce:	4618      	mov	r0, r3
    2fd0:	f24c 0135 	movw	r1, #49205	; 0xc035
    2fd4:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2fd8:	f04f 0201 	mov.w	r2, #1
    2fdc:	f000 f876 	bl	30cc <gpio_init>
    2fe0:	466b      	mov	r3, sp
    2fe2:	4618      	mov	r0, r3
    2fe4:	f24c 0137 	movw	r1, #49207	; 0xc037
    2fe8:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2fec:	f04f 0201 	mov.w	r2, #1
    2ff0:	f000 f86c 	bl	30cc <gpio_init>
    2ff4:	ab12      	add	r3, sp, #72	; 0x48
    2ff6:	4618      	mov	r0, r3
    2ff8:	f04f 0101 	mov.w	r1, #1
    2ffc:	f7ff ffbc 	bl	2f78 <gpio_write>
    3000:	ab0c      	add	r3, sp, #48	; 0x30
    3002:	4618      	mov	r0, r3
    3004:	f04f 0100 	mov.w	r1, #0
    3008:	f7ff ffb6 	bl	2f78 <gpio_write>
    300c:	ab06      	add	r3, sp, #24
    300e:	4618      	mov	r0, r3
    3010:	f04f 0100 	mov.w	r1, #0
    3014:	f7ff ffb0 	bl	2f78 <gpio_write>
    3018:	466b      	mov	r3, sp
    301a:	4618      	mov	r0, r3
    301c:	f04f 0101 	mov.w	r1, #1
    3020:	f7ff ffaa 	bl	2f78 <gpio_write>
    3024:	f04f 0096 	mov.w	r0, #150	; 0x96
    3028:	f000 f81e 	bl	3068 <wait_ms>
    302c:	ab12      	add	r3, sp, #72	; 0x48
    302e:	4618      	mov	r0, r3
    3030:	f04f 0100 	mov.w	r1, #0
    3034:	f7ff ffa0 	bl	2f78 <gpio_write>
    3038:	ab0c      	add	r3, sp, #48	; 0x30
    303a:	4618      	mov	r0, r3
    303c:	f04f 0101 	mov.w	r1, #1
    3040:	f7ff ff9a 	bl	2f78 <gpio_write>
    3044:	ab06      	add	r3, sp, #24
    3046:	4618      	mov	r0, r3
    3048:	f04f 0101 	mov.w	r1, #1
    304c:	f7ff ff94 	bl	2f78 <gpio_write>
    3050:	466b      	mov	r3, sp
    3052:	4618      	mov	r0, r3
    3054:	f04f 0100 	mov.w	r1, #0
    3058:	f7ff ff8e 	bl	2f78 <gpio_write>
    305c:	f04f 0096 	mov.w	r0, #150	; 0x96
    3060:	f000 f802 	bl	3068 <wait_ms>
    3064:	e7c6      	b.n	2ff4 <mbed_die+0x54>
    3066:	bf00      	nop

00003068 <wait_ms>:
    3068:	b500      	push	{lr}
    306a:	b083      	sub	sp, #12
    306c:	9001      	str	r0, [sp, #4]
    306e:	9b01      	ldr	r3, [sp, #4]
    3070:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    3074:	fb02 f303 	mul.w	r3, r2, r3
    3078:	4618      	mov	r0, r3
    307a:	f000 f803 	bl	3084 <wait_us>
    307e:	b003      	add	sp, #12
    3080:	bd00      	pop	{pc}
    3082:	bf00      	nop

00003084 <wait_us>:
    3084:	b500      	push	{lr}
    3086:	b085      	sub	sp, #20
    3088:	9001      	str	r0, [sp, #4]
    308a:	f000 f8ff 	bl	328c <us_ticker_read>
    308e:	9003      	str	r0, [sp, #12]
    3090:	bf00      	nop
    3092:	f000 f8fb 	bl	328c <us_ticker_read>
    3096:	4602      	mov	r2, r0
    3098:	9b03      	ldr	r3, [sp, #12]
    309a:	1ad2      	subs	r2, r2, r3
    309c:	9b01      	ldr	r3, [sp, #4]
    309e:	429a      	cmp	r2, r3
    30a0:	d3f7      	bcc.n	3092 <wait_us+0xe>
    30a2:	b005      	add	sp, #20
    30a4:	bd00      	pop	{pc}
    30a6:	bf00      	nop

000030a8 <gpio_set>:
    30a8:	b500      	push	{lr}
    30aa:	b083      	sub	sp, #12
    30ac:	9001      	str	r0, [sp, #4]
    30ae:	9801      	ldr	r0, [sp, #4]
    30b0:	f04f 0100 	mov.w	r1, #0
    30b4:	f7ff fe8a 	bl	2dcc <pin_function>
    30b8:	9b01      	ldr	r3, [sp, #4]
    30ba:	f003 031f 	and.w	r3, r3, #31
    30be:	f04f 0201 	mov.w	r2, #1
    30c2:	fa02 f303 	lsl.w	r3, r2, r3
    30c6:	4618      	mov	r0, r3
    30c8:	b003      	add	sp, #12
    30ca:	bd00      	pop	{pc}

000030cc <gpio_init>:
    30cc:	b500      	push	{lr}
    30ce:	b087      	sub	sp, #28
    30d0:	9003      	str	r0, [sp, #12]
    30d2:	9102      	str	r1, [sp, #8]
    30d4:	4613      	mov	r3, r2
    30d6:	f88d 3007 	strb.w	r3, [sp, #7]
    30da:	9b02      	ldr	r3, [sp, #8]
    30dc:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    30e0:	d037      	beq.n	3152 <gpio_init+0x86>
    30e2:	9b03      	ldr	r3, [sp, #12]
    30e4:	9a02      	ldr	r2, [sp, #8]
    30e6:	601a      	str	r2, [r3, #0]
    30e8:	9802      	ldr	r0, [sp, #8]
    30ea:	f7ff ffdd 	bl	30a8 <gpio_set>
    30ee:	4602      	mov	r2, r0
    30f0:	9b03      	ldr	r3, [sp, #12]
    30f2:	605a      	str	r2, [r3, #4]
    30f4:	9b02      	ldr	r3, [sp, #8]
    30f6:	f023 031f 	bic.w	r3, r3, #31
    30fa:	9305      	str	r3, [sp, #20]
    30fc:	9b05      	ldr	r3, [sp, #20]
    30fe:	f103 0218 	add.w	r2, r3, #24
    3102:	9b03      	ldr	r3, [sp, #12]
    3104:	60da      	str	r2, [r3, #12]
    3106:	9b05      	ldr	r3, [sp, #20]
    3108:	f103 021c 	add.w	r2, r3, #28
    310c:	9b03      	ldr	r3, [sp, #12]
    310e:	611a      	str	r2, [r3, #16]
    3110:	9b05      	ldr	r3, [sp, #20]
    3112:	f103 0214 	add.w	r2, r3, #20
    3116:	9b03      	ldr	r3, [sp, #12]
    3118:	615a      	str	r2, [r3, #20]
    311a:	9a05      	ldr	r2, [sp, #20]
    311c:	9b03      	ldr	r3, [sp, #12]
    311e:	609a      	str	r2, [r3, #8]
    3120:	f89d 3007 	ldrb.w	r3, [sp, #7]
    3124:	9803      	ldr	r0, [sp, #12]
    3126:	4619      	mov	r1, r3
    3128:	f000 f816 	bl	3158 <gpio_dir>
    312c:	f89d 3007 	ldrb.w	r3, [sp, #7]
    3130:	2b00      	cmp	r3, #0
    3132:	d007      	beq.n	3144 <gpio_init+0x78>
    3134:	2b01      	cmp	r3, #1
    3136:	d10d      	bne.n	3154 <gpio_init+0x88>
    3138:	9802      	ldr	r0, [sp, #8]
    313a:	f04f 0102 	mov.w	r1, #2
    313e:	f7ff fe89 	bl	2e54 <pin_mode>
    3142:	e007      	b.n	3154 <gpio_init+0x88>
    3144:	9802      	ldr	r0, [sp, #8]
    3146:	f04f 0103 	mov.w	r1, #3
    314a:	f7ff fe83 	bl	2e54 <pin_mode>
    314e:	bf00      	nop
    3150:	e000      	b.n	3154 <gpio_init+0x88>
    3152:	bf00      	nop
    3154:	b007      	add	sp, #28
    3156:	bd00      	pop	{pc}

00003158 <gpio_dir>:
    3158:	b082      	sub	sp, #8
    315a:	9001      	str	r0, [sp, #4]
    315c:	460b      	mov	r3, r1
    315e:	f88d 3003 	strb.w	r3, [sp, #3]
    3162:	f89d 3003 	ldrb.w	r3, [sp, #3]
    3166:	2b00      	cmp	r3, #0
    3168:	d002      	beq.n	3170 <gpio_dir+0x18>
    316a:	2b01      	cmp	r3, #1
    316c:	d00c      	beq.n	3188 <gpio_dir+0x30>
    316e:	e015      	b.n	319c <gpio_dir+0x44>
    3170:	9b01      	ldr	r3, [sp, #4]
    3172:	689b      	ldr	r3, [r3, #8]
    3174:	9a01      	ldr	r2, [sp, #4]
    3176:	6892      	ldr	r2, [r2, #8]
    3178:	6811      	ldr	r1, [r2, #0]
    317a:	9a01      	ldr	r2, [sp, #4]
    317c:	6852      	ldr	r2, [r2, #4]
    317e:	ea6f 0202 	mvn.w	r2, r2
    3182:	400a      	ands	r2, r1
    3184:	601a      	str	r2, [r3, #0]
    3186:	e009      	b.n	319c <gpio_dir+0x44>
    3188:	9b01      	ldr	r3, [sp, #4]
    318a:	689b      	ldr	r3, [r3, #8]
    318c:	9a01      	ldr	r2, [sp, #4]
    318e:	6892      	ldr	r2, [r2, #8]
    3190:	6811      	ldr	r1, [r2, #0]
    3192:	9a01      	ldr	r2, [sp, #4]
    3194:	6852      	ldr	r2, [r2, #4]
    3196:	430a      	orrs	r2, r1
    3198:	601a      	str	r2, [r3, #0]
    319a:	bf00      	nop
    319c:	b002      	add	sp, #8
    319e:	4770      	bx	lr

000031a0 <NVIC_EnableIRQ>:
    31a0:	b082      	sub	sp, #8
    31a2:	4603      	mov	r3, r0
    31a4:	f88d 3007 	strb.w	r3, [sp, #7]
    31a8:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    31ac:	f2ce 0300 	movt	r3, #57344	; 0xe000
    31b0:	f99d 2007 	ldrsb.w	r2, [sp, #7]
    31b4:	ea4f 1252 	mov.w	r2, r2, lsr #5
    31b8:	f89d 1007 	ldrb.w	r1, [sp, #7]
    31bc:	f001 011f 	and.w	r1, r1, #31
    31c0:	f04f 0001 	mov.w	r0, #1
    31c4:	fa00 f101 	lsl.w	r1, r0, r1
    31c8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    31cc:	b002      	add	sp, #8
    31ce:	4770      	bx	lr

000031d0 <us_ticker_init>:
    31d0:	b500      	push	{lr}
    31d2:	b083      	sub	sp, #12
    31d4:	f240 13d0 	movw	r3, #464	; 0x1d0
    31d8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    31dc:	681b      	ldr	r3, [r3, #0]
    31de:	2b00      	cmp	r3, #0
    31e0:	d151      	bne.n	3286 <us_ticker_init+0xb6>
    31e2:	f240 13d0 	movw	r3, #464	; 0x1d0
    31e6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    31ea:	f04f 0201 	mov.w	r2, #1
    31ee:	601a      	str	r2, [r3, #0]
    31f0:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    31f4:	f2c4 030f 	movt	r3, #16399	; 0x400f
    31f8:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    31fc:	f2c4 020f 	movt	r2, #16399	; 0x400f
    3200:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    3204:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
    3208:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    320c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3210:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3214:	f04f 0200 	mov.w	r2, #0
    3218:	671a      	str	r2, [r3, #112]	; 0x70
    321a:	f240 1358 	movw	r3, #344	; 0x158
    321e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3222:	681b      	ldr	r3, [r3, #0]
    3224:	ea4f 0393 	mov.w	r3, r3, lsr #2
    3228:	9301      	str	r3, [sp, #4]
    322a:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    322e:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3232:	f04f 0202 	mov.w	r2, #2
    3236:	605a      	str	r2, [r3, #4]
    3238:	9a01      	ldr	r2, [sp, #4]
    323a:	f64d 6383 	movw	r3, #56963	; 0xde83
    323e:	f2c4 331b 	movt	r3, #17179	; 0x431b
    3242:	fba3 1302 	umull	r1, r3, r3, r2
    3246:	ea4f 4393 	mov.w	r3, r3, lsr #18
    324a:	9300      	str	r3, [sp, #0]
    324c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3250:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3254:	9a00      	ldr	r2, [sp, #0]
    3256:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
    325a:	60da      	str	r2, [r3, #12]
    325c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3260:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3264:	f04f 0201 	mov.w	r2, #1
    3268:	605a      	str	r2, [r3, #4]
    326a:	f243 3309 	movw	r3, #13065	; 0x3309
    326e:	f2c0 0300 	movt	r3, #0
    3272:	f04f 0004 	mov.w	r0, #4
    3276:	4619      	mov	r1, r3
    3278:	f7ff fc24 	bl	2ac4 <NVIC_SetVector>
    327c:	f04f 0004 	mov.w	r0, #4
    3280:	f7ff ff8e 	bl	31a0 <NVIC_EnableIRQ>
    3284:	e000      	b.n	3288 <us_ticker_init+0xb8>
    3286:	bf00      	nop
    3288:	b003      	add	sp, #12
    328a:	bd00      	pop	{pc}

0000328c <us_ticker_read>:
    328c:	b508      	push	{r3, lr}
    328e:	f240 13d0 	movw	r3, #464	; 0x1d0
    3292:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3296:	681b      	ldr	r3, [r3, #0]
    3298:	2b00      	cmp	r3, #0
    329a:	d101      	bne.n	32a0 <us_ticker_read+0x14>
    329c:	f7ff ff98 	bl	31d0 <us_ticker_init>
    32a0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32a4:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32a8:	689b      	ldr	r3, [r3, #8]
    32aa:	4618      	mov	r0, r3
    32ac:	bd08      	pop	{r3, pc}
    32ae:	bf00      	nop

000032b0 <us_ticker_set_interrupt>:
    32b0:	b082      	sub	sp, #8
    32b2:	9001      	str	r0, [sp, #4]
    32b4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32b8:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32bc:	9a01      	ldr	r2, [sp, #4]
    32be:	619a      	str	r2, [r3, #24]
    32c0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32c4:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32c8:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    32cc:	f2c4 0209 	movt	r2, #16393	; 0x4009
    32d0:	6952      	ldr	r2, [r2, #20]
    32d2:	f042 0201 	orr.w	r2, r2, #1
    32d6:	615a      	str	r2, [r3, #20]
    32d8:	b002      	add	sp, #8
    32da:	4770      	bx	lr

000032dc <us_ticker_disable_interrupt>:
    32dc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32e0:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32e4:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    32e8:	f2c4 0209 	movt	r2, #16393	; 0x4009
    32ec:	6952      	ldr	r2, [r2, #20]
    32ee:	f022 0201 	bic.w	r2, r2, #1
    32f2:	615a      	str	r2, [r3, #20]
    32f4:	4770      	bx	lr
    32f6:	bf00      	nop

000032f8 <us_ticker_clear_interrupt>:
    32f8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32fc:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3300:	f04f 0201 	mov.w	r2, #1
    3304:	601a      	str	r2, [r3, #0]
    3306:	4770      	bx	lr

00003308 <us_ticker_irq_handler>:
    3308:	b510      	push	{r4, lr}
    330a:	b082      	sub	sp, #8
    330c:	f7ff fff4 	bl	32f8 <us_ticker_clear_interrupt>
    3310:	e000      	b.n	3314 <us_ticker_irq_handler+0xc>
    3312:	bf00      	nop
    3314:	f240 13d8 	movw	r3, #472	; 0x1d8
    3318:	f2c1 0300 	movt	r3, #4096	; 0x1000
    331c:	681b      	ldr	r3, [r3, #0]
    331e:	2b00      	cmp	r3, #0
    3320:	d102      	bne.n	3328 <us_ticker_irq_handler+0x20>
    3322:	f7ff ffdb 	bl	32dc <us_ticker_disable_interrupt>
    3326:	e037      	b.n	3398 <us_ticker_irq_handler+0x90>
    3328:	f240 13d8 	movw	r3, #472	; 0x1d8
    332c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3330:	681b      	ldr	r3, [r3, #0]
    3332:	681c      	ldr	r4, [r3, #0]
    3334:	f7ff ffaa 	bl	328c <us_ticker_read>
    3338:	4603      	mov	r3, r0
    333a:	1ae3      	subs	r3, r4, r3
    333c:	2b00      	cmp	r3, #0
    333e:	dc21      	bgt.n	3384 <us_ticker_irq_handler+0x7c>
    3340:	f240 13d8 	movw	r3, #472	; 0x1d8
    3344:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3348:	681b      	ldr	r3, [r3, #0]
    334a:	9301      	str	r3, [sp, #4]
    334c:	f240 13d8 	movw	r3, #472	; 0x1d8
    3350:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3354:	681b      	ldr	r3, [r3, #0]
    3356:	689a      	ldr	r2, [r3, #8]
    3358:	f240 13d8 	movw	r3, #472	; 0x1d8
    335c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3360:	601a      	str	r2, [r3, #0]
    3362:	f240 13d4 	movw	r3, #468	; 0x1d4
    3366:	f2c1 0300 	movt	r3, #4096	; 0x1000
    336a:	681b      	ldr	r3, [r3, #0]
    336c:	2b00      	cmp	r3, #0
    336e:	d0d0      	beq.n	3312 <us_ticker_irq_handler+0xa>
    3370:	f240 13d4 	movw	r3, #468	; 0x1d4
    3374:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3378:	681b      	ldr	r3, [r3, #0]
    337a:	9a01      	ldr	r2, [sp, #4]
    337c:	6852      	ldr	r2, [r2, #4]
    337e:	4610      	mov	r0, r2
    3380:	4798      	blx	r3
    3382:	e7c6      	b.n	3312 <us_ticker_irq_handler+0xa>
    3384:	f240 13d8 	movw	r3, #472	; 0x1d8
    3388:	f2c1 0300 	movt	r3, #4096	; 0x1000
    338c:	681b      	ldr	r3, [r3, #0]
    338e:	681b      	ldr	r3, [r3, #0]
    3390:	4618      	mov	r0, r3
    3392:	f7ff ff8d 	bl	32b0 <us_ticker_set_interrupt>
    3396:	bf00      	nop
    3398:	b002      	add	sp, #8
    339a:	bd10      	pop	{r4, pc}

0000339c <__libc_init_array>:
    339c:	b538      	push	{r3, r4, r5, lr}
    339e:	4d0e      	ldr	r5, [pc, #56]	; (33d8 <__libc_init_array+0x3c>)
    33a0:	4b0e      	ldr	r3, [pc, #56]	; (33dc <__libc_init_array+0x40>)
    33a2:	2400      	movs	r4, #0
    33a4:	1ae8      	subs	r0, r5, r3
    33a6:	1085      	asrs	r5, r0, #2
    33a8:	42ac      	cmp	r4, r5
    33aa:	d005      	beq.n	33b8 <__libc_init_array+0x1c>
    33ac:	490b      	ldr	r1, [pc, #44]	; (33dc <__libc_init_array+0x40>)
    33ae:	f851 2024 	ldr.w	r2, [r1, r4, lsl #2]
    33b2:	4790      	blx	r2
    33b4:	3401      	adds	r4, #1
    33b6:	e7f7      	b.n	33a8 <__libc_init_array+0xc>
    33b8:	f000 f868 	bl	348c <_init>
    33bc:	4908      	ldr	r1, [pc, #32]	; (33e0 <__libc_init_array+0x44>)
    33be:	4a09      	ldr	r2, [pc, #36]	; (33e4 <__libc_init_array+0x48>)
    33c0:	1a54      	subs	r4, r2, r1
    33c2:	10a5      	asrs	r5, r4, #2
    33c4:	2400      	movs	r4, #0
    33c6:	42ac      	cmp	r4, r5
    33c8:	d005      	beq.n	33d6 <__libc_init_array+0x3a>
    33ca:	4b05      	ldr	r3, [pc, #20]	; (33e0 <__libc_init_array+0x44>)
    33cc:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    33d0:	4780      	blx	r0
    33d2:	3401      	adds	r4, #1
    33d4:	e7f7      	b.n	33c6 <__libc_init_array+0x2a>
    33d6:	bd38      	pop	{r3, r4, r5, pc}
    33d8:	1000015c 	.word	0x1000015c
    33dc:	1000015c 	.word	0x1000015c
    33e0:	1000015c 	.word	0x1000015c
    33e4:	10000160 	.word	0x10000160

000033e8 <memcpy>:
    33e8:	b510      	push	{r4, lr}
    33ea:	2300      	movs	r3, #0
    33ec:	4293      	cmp	r3, r2
    33ee:	d003      	beq.n	33f8 <memcpy+0x10>
    33f0:	5ccc      	ldrb	r4, [r1, r3]
    33f2:	54c4      	strb	r4, [r0, r3]
    33f4:	3301      	adds	r3, #1
    33f6:	e7f9      	b.n	33ec <memcpy+0x4>
    33f8:	bd10      	pop	{r4, pc}

000033fa <memset>:
    33fa:	1882      	adds	r2, r0, r2
    33fc:	4603      	mov	r3, r0
    33fe:	4293      	cmp	r3, r2
    3400:	d002      	beq.n	3408 <memset+0xe>
    3402:	f803 1b01 	strb.w	r1, [r3], #1
    3406:	e7fa      	b.n	33fe <memset+0x4>
    3408:	4770      	bx	lr

0000340a <strcmp>:
    340a:	f810 2b01 	ldrb.w	r2, [r0], #1
    340e:	f811 3b01 	ldrb.w	r3, [r1], #1
    3412:	2a01      	cmp	r2, #1
    3414:	bf28      	it	cs
    3416:	429a      	cmpcs	r2, r3
    3418:	d0f7      	beq.n	340a <strcmp>
    341a:	eba2 0003 	sub.w	r0, r2, r3
    341e:	4770      	bx	lr

00003420 <strlen>:
    3420:	4603      	mov	r3, r0
    3422:	f813 2b01 	ldrb.w	r2, [r3], #1
    3426:	2a00      	cmp	r2, #0
    3428:	d1fb      	bne.n	3422 <strlen+0x2>
    342a:	1a18      	subs	r0, r3, r0
    342c:	3801      	subs	r0, #1
    342e:	4770      	bx	lr

00003430 <strncmp>:
    3430:	b570      	push	{r4, r5, r6, lr}
    3432:	b192      	cbz	r2, 345a <strncmp+0x2a>
    3434:	460b      	mov	r3, r1
    3436:	4605      	mov	r5, r0
    3438:	b91a      	cbnz	r2, 3442 <strncmp+0x12>
    343a:	7828      	ldrb	r0, [r5, #0]
    343c:	7819      	ldrb	r1, [r3, #0]
    343e:	1a40      	subs	r0, r0, r1
    3440:	bd70      	pop	{r4, r5, r6, pc}
    3442:	f810 6b01 	ldrb.w	r6, [r0], #1
    3446:	781c      	ldrb	r4, [r3, #0]
    3448:	3101      	adds	r1, #1
    344a:	42b4      	cmp	r4, r6
    344c:	d1f5      	bne.n	343a <strncmp+0xa>
    344e:	2a01      	cmp	r2, #1
    3450:	d0f3      	beq.n	343a <strncmp+0xa>
    3452:	3a01      	subs	r2, #1
    3454:	2c00      	cmp	r4, #0
    3456:	d1ed      	bne.n	3434 <strncmp+0x4>
    3458:	e7ef      	b.n	343a <strncmp+0xa>
    345a:	4610      	mov	r0, r2
    345c:	bd70      	pop	{r4, r5, r6, pc}

0000345e <strstr>:
    345e:	b530      	push	{r4, r5, lr}
    3460:	7803      	ldrb	r3, [r0, #0]
    3462:	b10b      	cbz	r3, 3468 <strstr+0xa>
    3464:	4602      	mov	r2, r0
    3466:	e003      	b.n	3470 <strstr+0x12>
    3468:	7809      	ldrb	r1, [r1, #0]
    346a:	b171      	cbz	r1, 348a <strstr+0x2c>
    346c:	2000      	movs	r0, #0
    346e:	bd30      	pop	{r4, r5, pc}
    3470:	4610      	mov	r0, r2
    3472:	7803      	ldrb	r3, [r0, #0]
    3474:	3201      	adds	r2, #1
    3476:	2b00      	cmp	r3, #0
    3478:	d0f8      	beq.n	346c <strstr+0xe>
    347a:	2300      	movs	r3, #0
    347c:	5ccc      	ldrb	r4, [r1, r3]
    347e:	b124      	cbz	r4, 348a <strstr+0x2c>
    3480:	5cc5      	ldrb	r5, [r0, r3]
    3482:	42a5      	cmp	r5, r4
    3484:	d1f4      	bne.n	3470 <strstr+0x12>
    3486:	3301      	adds	r3, #1
    3488:	e7f8      	b.n	347c <strstr+0x1e>
    348a:	bd30      	pop	{r4, r5, pc}

0000348c <_init>:
    348c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    348e:	bf00      	nop
    3490:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3492:	bc08      	pop	{r3}
    3494:	469e      	mov	lr, r3
    3496:	4770      	bx	lr

00003498 <_fini>:
    3498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    349a:	bf00      	nop
    349c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    349e:	bc08      	pop	{r3}
    34a0:	469e      	mov	lr, r3
    34a2:	4770      	bx	lr
    34a4:	5f49524d 	.word	0x5f49524d
    34a8:	54524155 	.word	0x54524155
    34ac:	45424d5f 	.word	0x45424d5f
    34b0:	53555f44 	.word	0x53555f44
    34b4:	00000042 	.word	0x00000042
    34b8:	00343045 	.word	0x00343045

000034bc <commandTable.5674>:
    34bc:	000027d9 0000003f 000021b9 00000063     .'..?....!..c...
    34cc:	000024a9 00000046 00002801 00000067     .$..F....(..g...
    34dc:	00002811 00000047 000024f1 0000006d     .(..G....$..m...
    34ec:	0000252d 0000004d 000026d9 00000071     -%..M....&..q...
    34fc:	0000283d 00000073 00002575 00000058     =(..s...u%..X...
    350c:	000020c1 0000007a 00002055 0000005a     . ..z...U ..Z...

0000351c <NibbleToHexChar>:
    351c:	33323130 37363534 62613938 66656463     0123456789abcdef
    352c:	3c000920                                          ..

0000352f <g_targetXml>:
    352f:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    353f:	3f22302e 213c0a3e 54434f44 20455059     .0"?>.<!DOCTYPE 
    354f:	74616566 20657275 54535953 22204d45     feature SYSTEM "
    355f:	2d626467 67726174 642e7465 3e226474     gdb-target.dtd">
    356f:	61743c0a 74656772 663c0a3e 75746165     .<target>.<featu
    357f:	6e206572 3d656d61 67726f22 756e672e     re name="org.gnu
    358f:	6264672e 6d72612e 702d6d2e 69666f72     .gdb.arm.m-profi
    359f:	3e22656c 65723c0a 616e2067 223d656d     le">.<reg name="
    35af:	20223072 73746962 3d657a69 22323322     r0" bitsize="32"
    35bf:	3c0a3e2f 20676572 656d616e 3172223d     />.<reg name="r1
    35cf:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    35df:	65723c0a 616e2067 223d656d 20223272     .<reg name="r2" 
    35ef:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    35ff:	20676572 656d616e 3372223d 69622022     reg name="r3" bi
    360f:	7a697374 33223d65 3e2f2232 65723c0a     tsize="32"/>.<re
    361f:	616e2067 223d656d 20223472 73746962     g name="r4" bits
    362f:	3d657a69 22323322 3c0a3e2f 20676572     ize="32"/>.<reg 
    363f:	656d616e 3572223d 69622022 7a697374     name="r5" bitsiz
    364f:	33223d65 3e2f2232 65723c0a 616e2067     e="32"/>.<reg na
    365f:	223d656d 20223672 73746962 3d657a69     me="r6" bitsize=
    366f:	22323322 3c0a3e2f 20676572 656d616e     "32"/>.<reg name
    367f:	3772223d 69622022 7a697374 33223d65     ="r7" bitsize="3
    368f:	3e2f2232 65723c0a 616e2067 223d656d     2"/>.<reg name="
    369f:	20223872 73746962 3d657a69 22323322     r8" bitsize="32"
    36af:	3c0a3e2f 20676572 656d616e 3972223d     />.<reg name="r9
    36bf:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    36cf:	65723c0a 616e2067 223d656d 22303172     .<reg name="r10"
    36df:	74696220 657a6973 3233223d 0a3e2f22      bitsize="32"/>.
    36ef:	6765723c 6d616e20 72223d65 20223131     <reg name="r11" 
    36ff:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    370f:	20676572 656d616e 3172223d 62202232     reg name="r12" b
    371f:	69737469 223d657a 2f223233 723c0a3e     itsize="32"/>.<r
    372f:	6e206765 3d656d61 22707322 74696220     eg name="sp" bit
    373f:	657a6973 3233223d 79742022 223d6570     size="32" type="
    374f:	61746164 7274705f 0a3e2f22 6765723c     data_ptr"/>.<reg
    375f:	6d616e20 6c223d65 62202272 69737469      name="lr" bitsi
    376f:	223d657a 2f223233 723c0a3e 6e206765     ze="32"/>.<reg n
    377f:	3d656d61 22637022 74696220 657a6973     ame="pc" bitsize
    378f:	3233223d 79742022 223d6570 65646f63     ="32" type="code
    379f:	7274705f 0a3e2f22 6765723c 6d616e20     _ptr"/>.<reg nam
    37af:	78223d65 22727370 74696220 657a6973     e="xpsr" bitsize
    37bf:	3233223d 65722022 6d756e67 3532223d     ="32" regnum="25
    37cf:	0a3e2f22 65662f3c 72757461 3c0a3e65     "/>.</feature>.<
    37df:	7261742f 3e746567 0000000a 00001000              /target>.....

000037ec <debugEventToSignalMap.6975>:
    37ec:	00000010 00000011 00000004 00000005     ................
    37fc:	00000002 00000005 00000001 00000005     ................

0000380c <__mriCortexMFakeStack>:
    380c:	deaddead deaddead deaddead deaddead     ................
    381c:	deaddead deaddead deaddead deaddead     ................

0000382c <CSWTCH.106>:
    382c:	0a070506 504d2a2a 61462055 2a746c75     ....**MPU Fault*
    383c:	200a002a 61745320 20737574 69676552     *..  Status Regi
    384c:	72657473 0a00203a 20202020 6c756146     ster: ..    Faul
    385c:	64412074 73657264 00203a73 2020200a     t Address: ..   
    386c:	20504620 797a614c 65725020 76726573      FP Lazy Preserv
    387c:	6f697461 200a006e 53202020 6b636174     ation..    Stack
    388c:	20676e69 6f727245 2f772072 20505320     ing Error w/ SP 
    389c:	0a00203d 20202020 74736e55 696b6361     = ..    Unstacki
    38ac:	4520676e 726f7272 202f7720 3d205053     ng Error w/ SP =
    38bc:	200a0020 44202020 20617461 65636341      ..    Data Acce
    38cc:	0a007373 20202020 74736e49 74637572     ss..    Instruct
    38dc:	206e6f69 63746546 2a0a0068 7375422a     ion Fetch..**Bus
    38ec:	75614620 2a2a746c 20200a00 6d492020      Fault**..    Im
    38fc:	63657270 20657369 61746144 63634120     precise Data Acc
    390c:	00737365 2020200a 65725020 65736963     ess..    Precise
    391c:	74614420 63412061 73736563 20200a00      Data Access..  
    392c:	6e492020 75727473 6f697463 7250206e       Instruction Pr
    393c:	74656665 0a006863 73552a2a 20656761     efetch..**Usage 
    394c:	6c756146 002a2a74 2020200a 76694420     Fault**..    Div
    395c:	20656469 5a207962 006f7265 2020200a     ide by Zero..   
    396c:	616e5520 6e67696c 41206465 73656363      Unaligned Acces
    397c:	200a0073 43202020 6f72706f 73736563     s..    Coprocess
    398c:	4120726f 73656363 200a0073 49202020     or Access..    I
    399c:	6c61766e 45206469 70656378 6e6f6974     nvalid Exception
    39ac:	74655220 206e7275 74617453 200a0065      Return State.. 
    39bc:	49202020 6c61766e 53206469 65746174        Invalid State
    39cc:	20200a00 6e552020 69666564 2064656e     ..    Undefined 
    39dc:	74736e49 74637572 006e6f69 482a2a0a     Instruction..**H
    39ec:	20647261 6c756146 002a2a74 2020200a     ard Fault**..   
    39fc:	62654420 45206775 746e6576 20200a00      Debug Event..  
    3a0c:	65562020 726f7463 62615420 5220656c       Vector Table R
    3a1c:	00646165 2020200a 726f4620 00646563     ead..    Forced.
    3a2c:	524d000a                                         ..

00003a2e <baudRatePrefix.7339>:
    3a2e:	5f49524d 54524155 5541425f 4d003d44     MRI_UART_BAUD=.M
    3a3e:	555f4952 5f545241 4445424d 4253555f     RI_UART_MBED_USB
    3a4e:	49524d00 5241555f 424d5f54 505f4445     .MRI_UART_MBED_P
    3a5e:	31505f39 524d0030 41555f49 4d5f5452     9_P10.MRI_UART_M
    3a6e:	5f444542 5f333150 00343150 5f49524d     BED_P13_P14.MRI_
    3a7e:	54524155 45424d5f 32505f44 32505f38     UART_MBED_P28_P2
    3a8e:	524d0037 41555f49 305f5452 49524d00     7.MRI_UART_0.MRI
    3a9e:	5241555f 00315f54 5f49524d 54524155     _UART_1.MRI_UART
    3aae:	4d00325f 555f4952 5f545241 524d0033     _2.MRI_UART_3.MR
    3abe:	41555f49 535f5452 45524148 783f3c00              I_UART_SHARE.

00003acb <g_memoryMapXml>:
    3acb:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    3adb:	3f22302e 44213c3e 5954434f 6d204550     .0"?><!DOCTYPE m
    3aeb:	726f6d65 616d2d79 55502070 43494c42     emory-map PUBLIC
    3afb:	2f2b2220 4e44492f 756e6720 67726f2e      "+//IDN gnu.org
    3b0b:	54442f2f 44472044 654d2042 79726f6d     //DTD GDB Memory
    3b1b:	70614d20 2e315620 452f2f30 2220224e      Map V1.0//EN" "
    3b2b:	70747468 732f2f3a 6372756f 72617765     http://sourcewar
    3b3b:	726f2e65 64672f67 64672f62 656d2d62     e.org/gdb/gdb-me
    3b4b:	79726f6d 70616d2d 6474642e 6d3c3e22     mory-map.dtd"><m
    3b5b:	726f6d65 616d2d79 6d3c3e70 726f6d65     emory-map><memor
    3b6b:	79742079 223d6570 73616c66 73202268     y type="flash" s
    3b7b:	74726174 7830223d 6c202230 74676e65     tart="0x0" lengt
    3b8b:	30223d68 30303178 3e223030 72703c20     h="0x10000"> <pr
    3b9b:	7265706f 6e207974 3d656d61 6f6c6222     operty name="blo
    3bab:	69736b63 3e22657a 30317830 2f3c3030     cksize">0x1000</
    3bbb:	706f7270 79747265 6d2f3c3e 726f6d65     property></memor
    3bcb:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    3bdb:	73616c66 73202268 74726174 7830223d     flash" start="0x
    3beb:	30303031 6c202230 74676e65 30223d68     10000" length="0
    3bfb:	30303778 3e223030 72703c20 7265706f     x70000"> <proper
    3c0b:	6e207974 3d656d61 6f6c6222 69736b63     ty name="blocksi
    3c1b:	3e22657a 30387830 2f3c3030 706f7270     ze">0x8000</prop
    3c2b:	79747265 6d2f3c3e 726f6d65 6d3c3e79     erty></memory><m
    3c3b:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3c4b:	61747320 223d7472 30317830 30303030      start="0x100000
    3c5b:	20223030 676e656c 223d6874 30387830     00" length="0x80
    3c6b:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3c7b:	726f6d65 79742079 223d6570 226d6f72     emory type="rom"
    3c8b:	61747320 223d7472 46317830 30304646      start="0x1FFF00
    3c9b:	20223030 676e656c 223d6874 30327830     00" length="0x20
    3cab:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3cbb:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3ccb:	61747320 223d7472 30327830 30433730      start="0x2007C0
    3cdb:	20223030 676e656c 223d6874 30387830     00" length="0x80
    3ceb:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3cfb:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3d0b:	61747320 223d7472 30327830 30433930      start="0x2009C0
    3d1b:	20223030 676e656c 223d6874 30347830     00" length="0x40
    3d2b:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3d3b:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3d4b:	61747320 223d7472 32327830 30303030      start="0x220000
    3d5b:	20223030 676e656c 223d6874 30327830     00" length="0x20
    3d6b:	30303030 203e2230 656d2f3c 79726f6d     00000"> </memory
    3d7b:	656d3c3e 79726f6d 70797420 72223d65     ><memory type="r
    3d8b:	20226d61 72617473 30223d74 30303478     am" start="0x400
    3d9b:	30303030 6c202230 74676e65 30223d68     00000" length="0
    3dab:	30343178 3e223030 6d2f3c20 726f6d65     x14000"> </memor
    3dbb:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    3dcb:	226d6172 61747320 223d7472 30347830     ram" start="0x40
    3ddb:	30383130 20223030 676e656c 223d6874     018000" length="
    3deb:	34337830 22303030 2f3c203e 6f6d656d     0x34000"> </memo
    3dfb:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    3e0b:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    3e1b:	43353030 22303030 6e656c20 3d687467     005C000" length=
    3e2b:	34783022 22303030 2f3c203e 6f6d656d     "0x4000"> </memo
    3e3b:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    3e4b:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    3e5b:	38383030 22303030 6e656c20 3d687467     0088000" length=
    3e6b:	31783022 30303043 3c203e22 6d656d2f     "0x1C000"> </mem
    3e7b:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3e8b:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3e9b:	41303034 30303038 656c2022 6874676e     400A8000" length
    3eab:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3ebb:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3ecb:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3edb:	42303034 30303030 656c2022 6874676e     400B0000" length
    3eeb:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3efb:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3f0b:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3f1b:	42303034 30303038 656c2022 6874676e     400B8000" length
    3f2b:	7830223d 30303038 3c203e22 6d656d2f     ="0x8000"> </mem
    3f3b:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3f4b:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3f5b:	46303034 30303043 656c2022 6874676e     400FC000" length
    3f6b:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3f7b:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3f8b:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3f9b:	30303234 30303030 656c2022 6874676e     42000000" length
    3fab:	7830223d 30303032 22303030 2f3c203e     ="0x2000000"> </
    3fbb:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    3fcb:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    3fdb:	35783022 30303030 22303030 6e656c20     "0x50000000" len
    3feb:	3d687467 38783022 22303030 2f3c203e     gth="0x8000"> </
    3ffb:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    400b:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    401b:	35783022 43303030 22303030 6e656c20     "0x5000C000" len
    402b:	3d687467 34783022 22303030 2f3c203e     gth="0x4000"> </
    403b:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    404b:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    405b:	45783022 30303030 22303030 6e656c20     "0xE0000000" len
    406b:	3d687467 31783022 30303030 203e2230     gth="0x100000"> 
    407b:	656d2f3c 79726f6d 6d2f3c3e 726f6d65     </memory></memor
    408b:	616d2d79 31003e70 30303130 30303030     y-map>.101000000
    409b:	30303030 30303030 30303030 46323030     000000000000002F
    40ab:	30304637 00303030 30000000                       7F00000....

000040b6 <NibbleToHexChar>:
    40b6:	33323130 37363534 62613938 66656463     0123456789abcdef
    40c6:	00313045 00353045 46004b4f                       E01.E05.OK.

000040d1 <gdbCloseCommand.4654>:
    40d1:	6f6c6346 002c6573                       Fclose,.

000040d9 <gdbStatCommand.4676>:
    40d9:	61747346 2c002c74                                Fstat,.

000040e0 <controlCFlag.4687>:
    40e0:	4600432c                                         ,C.

000040e3 <gdbCommand.4682>:
    40e3:	6e657246 2c656d61 72774600                       Frename,.

000040ec <gdbWriteCommand.4644>:
    40ec:	69727746 002c6574                       Fwrite,.

000040f4 <gdbOpenCommand.4639>:
    40f4:	65706f46 46002c6e                                Fopen,.

000040fb <gdbStatCommand.4665>:
    40fb:	74736646 002c7461                       Ffstat,.

00004103 <gdbReadCommand.4649>:
    4103:	61657246 46002c64                                Fread,.

0000410a <gdbSeekCommand.4659>:
    410a:	65736c46 002c6b65                       Flseek,.

00004112 <gdbUnlinkCommand.4670>:
    4112:	6c6e7546 2c6b6e69 33304500 61657200              Funlink,.E03.

0000411f <readCommand.4768>:
    411f:	64616572 65665800                                read.

00004124 <qXferCommand.4745>:
    4124:	72656658 70755300                                Xfer.

00004129 <qSupportedCommand.4744>:
    4129:	70707553 6574726f 61740064                       Supported.

00004133 <targetXmlAnnex.4773>:
    4133:	67726174 782e7465 74006c6d 65677261     target.xml.targe
    4143:	6d782e74 5871006c                                t.xml.

00004149 <querySupportResponse.4749>:
    4149:	65665871 656d3a72 79726f6d 70616d2d     qXfer:memory-map
    4159:	6165723a 713b2b64 72656658 6165663a     :read+;qXfer:fea
    4169:	65727574 65723a73 3b2b6461 6b636150     tures:read+;Pack
    4179:	69537465 003d657a                       etSize=.

00004181 <featureObject.4757>:
    4181:	74616566 73657275 6d656d00                       features.

0000418a <memoryMapObject.4756>:
    418a:	6f6d656d 6d2d7972 30007061 00000078              memory-map.0x.

00004198 <__EH_FRAME_BEGIN__>:
    4198:	00000000                                ....
