
LPC1768/realarm.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00002ecd


Disassembly of section .text:

00000000 <__isr_vector>:
       0:	10008000 	.word	0x10008000
       4:	00002ecd 	.word	0x00002ecd
       8:	00002f01 	.word	0x00002f01
       c:	00001797 	.word	0x00001797
      10:	0000179b 	.word	0x0000179b
      14:	0000179f 	.word	0x0000179f
      18:	000017a3 	.word	0x000017a3
	...
      2c:	00000305 	.word	0x00000305
      30:	000017a7 	.word	0x000017a7
      34:	00000000 	.word	0x00000000
      38:	00002f0f 	.word	0x00002f0f
      3c:	00002f11 	.word	0x00002f11
      40:	00002f15 	.word	0x00002f15
      44:	00002f17 	.word	0x00002f17
      48:	00002f19 	.word	0x00002f19
      4c:	00002f1b 	.word	0x00002f1b
      50:	00002f1d 	.word	0x00002f1d
      54:	000017ab 	.word	0x000017ab
      58:	000017af 	.word	0x000017af
      5c:	000017b3 	.word	0x000017b3
      60:	000017b7 	.word	0x000017b7
      64:	00002f27 	.word	0x00002f27
      68:	00002f29 	.word	0x00002f29
      6c:	00002f2b 	.word	0x00002f2b
      70:	00002f2d 	.word	0x00002f2d
      74:	00002f2f 	.word	0x00002f2f
      78:	00002f31 	.word	0x00002f31
      7c:	00002f33 	.word	0x00002f33
      80:	00002f35 	.word	0x00002f35
      84:	00002f37 	.word	0x00002f37
      88:	00002f39 	.word	0x00002f39
      8c:	00002f3b 	.word	0x00002f3b
      90:	00002f3d 	.word	0x00002f3d
      94:	00002f3f 	.word	0x00002f3f
      98:	00002f41 	.word	0x00002f41
      9c:	00002f43 	.word	0x00002f43
      a0:	00002f45 	.word	0x00002f45
      a4:	00002f47 	.word	0x00002f47
      a8:	00002f49 	.word	0x00002f49
      ac:	00002f4b 	.word	0x00002f4b
      b0:	00002f4d 	.word	0x00002f4d
      b4:	00002f4f 	.word	0x00002f4f
      b8:	00002f51 	.word	0x00002f51
      bc:	00002f53 	.word	0x00002f53
      c0:	00002f55 	.word	0x00002f55
      c4:	00002f57 	.word	0x00002f57
      c8:	00002f59 	.word	0x00002f59

000000cc <__do_global_dtors_aux>:
      cc:	b510      	push	{r4, lr}
      ce:	4c05      	ldr	r4, [pc, #20]	; (e4 <__do_global_dtors_aux+0x18>)
      d0:	7823      	ldrb	r3, [r4, #0]
      d2:	b933      	cbnz	r3, e2 <__do_global_dtors_aux+0x16>
      d4:	4804      	ldr	r0, [pc, #16]	; (e8 <__do_global_dtors_aux+0x1c>)
      d6:	b110      	cbz	r0, de <__do_global_dtors_aux+0x12>
      d8:	4804      	ldr	r0, [pc, #16]	; (ec <__do_global_dtors_aux+0x20>)
      da:	f3af 8000 	nop.w
      de:	2101      	movs	r1, #1
      e0:	7021      	strb	r1, [r4, #0]
      e2:	bd10      	pop	{r4, pc}
      e4:	100000d8 	.word	0x100000d8
      e8:	00000000 	.word	0x00000000
      ec:	000043bc 	.word	0x000043bc

000000f0 <frame_dummy>:
      f0:	b508      	push	{r3, lr}
      f2:	4b06      	ldr	r3, [pc, #24]	; (10c <frame_dummy+0x1c>)
      f4:	b11b      	cbz	r3, fe <frame_dummy+0xe>
      f6:	4806      	ldr	r0, [pc, #24]	; (110 <frame_dummy+0x20>)
      f8:	4906      	ldr	r1, [pc, #24]	; (114 <frame_dummy+0x24>)
      fa:	f3af 8000 	nop.w
      fe:	4806      	ldr	r0, [pc, #24]	; (118 <frame_dummy+0x28>)
     100:	6801      	ldr	r1, [r0, #0]
     102:	b111      	cbz	r1, 10a <frame_dummy+0x1a>
     104:	4a05      	ldr	r2, [pc, #20]	; (11c <frame_dummy+0x2c>)
     106:	b102      	cbz	r2, 10a <frame_dummy+0x1a>
     108:	4790      	blx	r2
     10a:	bd08      	pop	{r3, pc}
     10c:	00000000 	.word	0x00000000
     110:	000043bc 	.word	0x000043bc
     114:	100000dc 	.word	0x100000dc
     118:	100000d4 	.word	0x100000d4
     11c:	00000000 	.word	0x00000000

00000120 <getMPUDataRegionCount()>:
     120:	f64e 5390 	movw	r3, #60816	; 0xed90
     124:	f2ce 0300 	movt	r3, #57344	; 0xe000
     128:	681b      	ldr	r3, [r3, #0]
     12a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
     12e:	ea4f 2313 	mov.w	r3, r3, lsr #8
     132:	4618      	mov	r0, r3
     134:	4770      	bx	lr
     136:	bf00      	nop

00000138 <getHighestMPUDataRegionIndex()>:
     138:	b508      	push	{r3, lr}
     13a:	f7ff fff1 	bl	120 <getMPUDataRegionCount()>
     13e:	4603      	mov	r3, r0
     140:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
     144:	4618      	mov	r0, r3
     146:	bd08      	pop	{r3, pc}

00000148 <isMPURegionNumberValid(unsigned long)>:
     148:	b500      	push	{lr}
     14a:	b083      	sub	sp, #12
     14c:	9001      	str	r0, [sp, #4]
     14e:	f7ff ffe7 	bl	120 <getMPUDataRegionCount()>
     152:	4602      	mov	r2, r0
     154:	9b01      	ldr	r3, [sp, #4]
     156:	429a      	cmp	r2, r3
     158:	bf94      	ite	ls
     15a:	2300      	movls	r3, #0
     15c:	2301      	movhi	r3, #1
     15e:	b2db      	uxtb	r3, r3
     160:	4618      	mov	r0, r3
     162:	b003      	add	sp, #12
     164:	bd00      	pop	{pc}
     166:	bf00      	nop

00000168 <isMPUNotPresent()>:
     168:	b508      	push	{r3, lr}
     16a:	f7ff ffd9 	bl	120 <getMPUDataRegionCount()>
     16e:	4603      	mov	r3, r0
     170:	2b00      	cmp	r3, #0
     172:	bf14      	ite	ne
     174:	2300      	movne	r3, #0
     176:	2301      	moveq	r3, #1
     178:	b2db      	uxtb	r3, r3
     17a:	4618      	mov	r0, r3
     17c:	bd08      	pop	{r3, pc}
     17e:	bf00      	nop

00000180 <disableMPU()>:
     180:	b508      	push	{r3, lr}
     182:	f7ff fff1 	bl	168 <isMPUNotPresent()>
     186:	4603      	mov	r3, r0
     188:	2b00      	cmp	r3, #0
     18a:	bf0c      	ite	eq
     18c:	2300      	moveq	r3, #0
     18e:	2301      	movne	r3, #1
     190:	b2db      	uxtb	r3, r3
     192:	2b00      	cmp	r3, #0
     194:	d110      	bne.n	1b8 <disableMPU()+0x38>
     196:	f64e 5390 	movw	r3, #60816	; 0xed90
     19a:	f2ce 0300 	movt	r3, #57344	; 0xe000
     19e:	f64e 5290 	movw	r2, #60816	; 0xed90
     1a2:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1a6:	6852      	ldr	r2, [r2, #4]
     1a8:	f022 0201 	bic.w	r2, r2, #1
     1ac:	605a      	str	r2, [r3, #4]
     1ae:	f3bf 8f4f 	dsb	sy
     1b2:	f3bf 8f6f 	isb	sy
     1b6:	e000      	b.n	1ba <disableMPU()+0x3a>
     1b8:	bf00      	nop
     1ba:	bd08      	pop	{r3, pc}

000001bc <enableMPUWithHardAndNMIFaults()>:
     1bc:	b508      	push	{r3, lr}
     1be:	f7ff ffd3 	bl	168 <isMPUNotPresent()>
     1c2:	4603      	mov	r3, r0
     1c4:	2b00      	cmp	r3, #0
     1c6:	bf0c      	ite	eq
     1c8:	2300      	moveq	r3, #0
     1ca:	2301      	movne	r3, #1
     1cc:	b2db      	uxtb	r3, r3
     1ce:	2b00      	cmp	r3, #0
     1d0:	d110      	bne.n	1f4 <enableMPUWithHardAndNMIFaults()+0x38>
     1d2:	f64e 5390 	movw	r3, #60816	; 0xed90
     1d6:	f2ce 0300 	movt	r3, #57344	; 0xe000
     1da:	f64e 5290 	movw	r2, #60816	; 0xed90
     1de:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1e2:	6852      	ldr	r2, [r2, #4]
     1e4:	f042 0203 	orr.w	r2, r2, #3
     1e8:	605a      	str	r2, [r3, #4]
     1ea:	f3bf 8f4f 	dsb	sy
     1ee:	f3bf 8f6f 	isb	sy
     1f2:	e000      	b.n	1f6 <enableMPUWithHardAndNMIFaults()+0x3a>
     1f4:	bf00      	nop
     1f6:	bd08      	pop	{r3, pc}

000001f8 <prepareToAccessMPURegion(unsigned long)>:
     1f8:	b500      	push	{lr}
     1fa:	b083      	sub	sp, #12
     1fc:	9001      	str	r0, [sp, #4]
     1fe:	9801      	ldr	r0, [sp, #4]
     200:	f7ff ffa2 	bl	148 <isMPURegionNumberValid(unsigned long)>
     204:	4603      	mov	r3, r0
     206:	2b00      	cmp	r3, #0
     208:	bf14      	ite	ne
     20a:	2300      	movne	r3, #0
     20c:	2301      	moveq	r3, #1
     20e:	b2db      	uxtb	r3, r3
     210:	2b00      	cmp	r3, #0
     212:	d002      	beq.n	21a <PSR_STACK_ALIGN+0x1a>
     214:	f04f 0300 	mov.w	r3, #0
     218:	e007      	b.n	22a <PSR_STACK_ALIGN+0x2a>
     21a:	f64e 5390 	movw	r3, #60816	; 0xed90
     21e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     222:	9a01      	ldr	r2, [sp, #4]
     224:	609a      	str	r2, [r3, #8]
     226:	f04f 0301 	mov.w	r3, #1
     22a:	4618      	mov	r0, r3
     22c:	b003      	add	sp, #12
     22e:	bd00      	pop	{pc}

00000230 <setMPURegionAddress(unsigned long)>:
     230:	b500      	push	{lr}
     232:	b083      	sub	sp, #12
     234:	9001      	str	r0, [sp, #4]
     236:	f7ff ff97 	bl	168 <isMPUNotPresent()>
     23a:	4603      	mov	r3, r0
     23c:	2b00      	cmp	r3, #0
     23e:	bf0c      	ite	eq
     240:	2300      	moveq	r3, #0
     242:	2301      	movne	r3, #1
     244:	b2db      	uxtb	r3, r3
     246:	2b00      	cmp	r3, #0
     248:	d108      	bne.n	25c <setMPURegionAddress(unsigned long)+0x2c>
     24a:	f64e 5390 	movw	r3, #60816	; 0xed90
     24e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     252:	9a01      	ldr	r2, [sp, #4]
     254:	ea4f 1242 	mov.w	r2, r2, lsl #5
     258:	60da      	str	r2, [r3, #12]
     25a:	e000      	b.n	25e <setMPURegionAddress(unsigned long)+0x2e>
     25c:	bf00      	nop
     25e:	b003      	add	sp, #12
     260:	bd00      	pop	{pc}
     262:	bf00      	nop

00000264 <setMPURegionAttributeAndSize(unsigned long)>:
     264:	b500      	push	{lr}
     266:	b083      	sub	sp, #12
     268:	9001      	str	r0, [sp, #4]
     26a:	f7ff ff7d 	bl	168 <isMPUNotPresent()>
     26e:	4603      	mov	r3, r0
     270:	2b00      	cmp	r3, #0
     272:	bf0c      	ite	eq
     274:	2300      	moveq	r3, #0
     276:	2301      	movne	r3, #1
     278:	b2db      	uxtb	r3, r3
     27a:	2b00      	cmp	r3, #0
     27c:	d106      	bne.n	28c <setMPURegionAttributeAndSize(unsigned long)+0x28>
     27e:	f64e 5390 	movw	r3, #60816	; 0xed90
     282:	f2ce 0300 	movt	r3, #57344	; 0xe000
     286:	9a01      	ldr	r2, [sp, #4]
     288:	611a      	str	r2, [r3, #16]
     28a:	e000      	b.n	28e <setMPURegionAttributeAndSize(unsigned long)+0x2a>
     28c:	bf00      	nop
     28e:	b003      	add	sp, #12
     290:	bd00      	pop	{pc}
     292:	bf00      	nop

00000294 <attemptUnalignedAccess()>:
     294:	4770      	bx	lr
     296:	bf00      	nop

00000298 <attemptMemoryWriteFault()>:
     298:	4770      	bx	lr
     29a:	bf00      	nop

0000029c <disallowUnalignedAccesses()>:
     29c:	f44f 436d 	mov.w	r3, #60672	; 0xed00
     2a0:	f2ce 0300 	movt	r3, #57344	; 0xe000
     2a4:	f44f 426d 	mov.w	r2, #60672	; 0xed00
     2a8:	f2ce 0200 	movt	r2, #57344	; 0xe000
     2ac:	6952      	ldr	r2, [r2, #20]
     2ae:	f042 0208 	orr.w	r2, r2, #8
     2b2:	615a      	str	r2, [r3, #20]
     2b4:	4770      	bx	lr
     2b6:	bf00      	nop

000002b8 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>:
     2b8:	b508      	push	{r3, lr}
     2ba:	f7ff ff3d 	bl	138 <getHighestMPUDataRegionIndex()>
     2be:	4603      	mov	r3, r0
     2c0:	4618      	mov	r0, r3
     2c2:	f7ff ff99 	bl	1f8 <prepareToAccessMPURegion(unsigned long)>
     2c6:	f04f 0000 	mov.w	r0, #0
     2ca:	f7ff ffb1 	bl	230 <setMPURegionAddress(unsigned long)>
     2ce:	f04f 003f 	mov.w	r0, #63	; 0x3f
     2d2:	f2c0 1000 	movt	r0, #256	; 0x100
     2d6:	f7ff ffc5 	bl	264 <setMPURegionAttributeAndSize(unsigned long)>
     2da:	bd08      	pop	{r3, pc}

000002dc <disableWriteCaching()>:
     2dc:	b508      	push	{r3, lr}
     2de:	f7ff ff4f 	bl	180 <disableMPU()>
     2e2:	f7ff ffe9 	bl	2b8 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>
     2e6:	f7ff ff69 	bl	1bc <enableMPUWithHardAndNMIFaults()>
     2ea:	bd08      	pop	{r3, pc}

000002ec <main>:
     2ec:	b508      	push	{r3, lr}
     2ee:	f7ff ffd5 	bl	29c <disallowUnalignedAccesses()>
     2f2:	f7ff fff3 	bl	2dc <disableWriteCaching()>
     2f6:	f7ff ffcd 	bl	294 <attemptUnalignedAccess()>
     2fa:	f7ff ffcd 	bl	298 <attemptMemoryWriteFault()>
     2fe:	be00      	bkpt	0x0000
     300:	e7fd      	b.n	2fe <main+0x12>
     302:	bf00      	nop

00000304 <SVC_Handler>:
     304:	4770      	bx	lr
     306:	bf00      	nop

00000308 <_start>:
     308:	b500      	push	{lr}
     30a:	b083      	sub	sp, #12
     30c:	f240 4254 	movw	r2, #1108	; 0x454
     310:	f2c1 0200 	movt	r2, #4096	; 0x1000
     314:	f240 03d8 	movw	r3, #216	; 0xd8
     318:	f2c1 0300 	movt	r3, #4096	; 0x1000
     31c:	1ad3      	subs	r3, r2, r3
     31e:	9301      	str	r3, [sp, #4]
     320:	9b01      	ldr	r3, [sp, #4]
     322:	f240 00d8 	movw	r0, #216	; 0xd8
     326:	f2c1 0000 	movt	r0, #4096	; 0x1000
     32a:	f04f 0100 	mov.w	r1, #0
     32e:	461a      	mov	r2, r3
     330:	f003 f92b 	bl	358a <memset>
     334:	f243 6034 	movw	r0, #13876	; 0x3634
     338:	f2c0 0000 	movt	r0, #0
     33c:	f000 f80e 	bl	35c <__mriInit>
     340:	f3af 8000 	nop.w
     344:	f003 f8f2 	bl	352c <__libc_init_array>
     348:	f7ff ffd0 	bl	2ec <main>
     34c:	9000      	str	r0, [sp, #0]
     34e:	9800      	ldr	r0, [sp, #0]
     350:	f002 fd8a 	bl	2e68 <exit>

00000354 <__wrap_semihost_connected>:
     354:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     358:	4618      	mov	r0, r3
     35a:	4770      	bx	lr

0000035c <__mriInit>:
     35c:	b570      	push	{r4, r5, r6, lr}
     35e:	2100      	movs	r1, #0
     360:	b09e      	sub	sp, #120	; 0x78
     362:	2224      	movs	r2, #36	; 0x24
     364:	4c0e      	ldr	r4, [pc, #56]	; (3a0 <__mriInit+0x44>)
     366:	4606      	mov	r6, r0
     368:	480e      	ldr	r0, [pc, #56]	; (3a4 <__mriInit+0x48>)
     36a:	f003 f90e 	bl	358a <memset>
     36e:	2500      	movs	r5, #0
     370:	a801      	add	r0, sp, #4
     372:	6025      	str	r5, [r4, #0]
     374:	f000 f9fc 	bl	770 <__mriToken_Init>
     378:	a801      	add	r0, sp, #4
     37a:	4631      	mov	r1, r6
     37c:	6025      	str	r5, [r4, #0]
     37e:	f000 fa01 	bl	784 <__mriToken_SplitString>
     382:	6823      	ldr	r3, [r4, #0]
     384:	b913      	cbnz	r3, 38c <__mriInit+0x30>
     386:	a801      	add	r0, sp, #4
     388:	f001 fc34 	bl	1bf4 <__mriPlatform_Init>
     38c:	6820      	ldr	r0, [r4, #0]
     38e:	b920      	cbnz	r0, 39a <__mriInit+0x3e>
     390:	4904      	ldr	r1, [pc, #16]	; (3a4 <__mriInit+0x48>)
     392:	694a      	ldr	r2, [r1, #20]
     394:	f042 0303 	orr.w	r3, r2, #3
     398:	614b      	str	r3, [r1, #20]
     39a:	b01e      	add	sp, #120	; 0x78
     39c:	bd70      	pop	{r4, r5, r6, pc}
     39e:	bf00      	nop
     3a0:	1000014c 	.word	0x1000014c
     3a4:	100000f4 	.word	0x100000f4

000003a8 <__mriCore_InitBuffer>:
     3a8:	b510      	push	{r4, lr}
     3aa:	f000 fdeb 	bl	f84 <__mriPlatform_GetPacketBuffer>
     3ae:	4604      	mov	r4, r0
     3b0:	f000 fdec 	bl	f8c <__mriPlatform_GetPacketBufferSize>
     3b4:	4602      	mov	r2, r0
     3b6:	4803      	ldr	r0, [pc, #12]	; (3c4 <__mriCore_InitBuffer+0x1c>)
     3b8:	4621      	mov	r1, r4
     3ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3be:	f001 bc99 	b.w	1cf4 <__mriBuffer_Init>
     3c2:	bf00      	nop
     3c4:	100000fc 	.word	0x100000fc

000003c8 <__mriCore_PrepareStringResponse>:
     3c8:	b510      	push	{r4, lr}
     3ca:	4604      	mov	r4, r0
     3cc:	f7ff ffec 	bl	3a8 <__mriCore_InitBuffer>
     3d0:	4802      	ldr	r0, [pc, #8]	; (3dc <__mriCore_PrepareStringResponse+0x14>)
     3d2:	4621      	mov	r1, r4
     3d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3d8:	f001 bd40 	b.w	1e5c <__mriBuffer_WriteString>
     3dc:	100000fc 	.word	0x100000fc

000003e0 <__mriCore_WasControlCFlagSentFromGdb>:
     3e0:	4b02      	ldr	r3, [pc, #8]	; (3ec <__mriCore_WasControlCFlagSentFromGdb+0xc>)
     3e2:	6958      	ldr	r0, [r3, #20]
     3e4:	f000 0004 	and.w	r0, r0, #4
     3e8:	4770      	bx	lr
     3ea:	bf00      	nop
     3ec:	100000f4 	.word	0x100000f4

000003f0 <__mriCore_IsWaitingForGdbToConnect>:
     3f0:	b508      	push	{r3, lr}
     3f2:	4b05      	ldr	r3, [pc, #20]	; (408 <CFSR_BUS_IMPRECISE_BIT+0x8>)
     3f4:	6958      	ldr	r0, [r3, #20]
     3f6:	f010 0002 	ands.w	r0, r0, #2
     3fa:	d004      	beq.n	406 <CFSR_BUS_IMPRECISE_BIT+0x6>
     3fc:	f001 fa50 	bl	18a0 <__mriPlatform_CommShouldWaitForGdbConnect>
     400:	3000      	adds	r0, #0
     402:	bf18      	it	ne
     404:	2001      	movne	r0, #1
     406:	bd08      	pop	{r3, pc}
     408:	100000f4 	.word	0x100000f4

0000040c <__mriCore_RecordControlCFlagSentFromGdb>:
     40c:	4b04      	ldr	r3, [pc, #16]	; (420 <__mriCore_RecordControlCFlagSentFromGdb+0x14>)
     40e:	695a      	ldr	r2, [r3, #20]
     410:	b110      	cbz	r0, 418 <__mriCore_RecordControlCFlagSentFromGdb+0xc>
     412:	f042 0004 	orr.w	r0, r2, #4
     416:	e001      	b.n	41c <__mriCore_RecordControlCFlagSentFromGdb+0x10>
     418:	f022 0004 	bic.w	r0, r2, #4
     41c:	6158      	str	r0, [r3, #20]
     41e:	4770      	bx	lr
     420:	100000f4 	.word	0x100000f4

00000424 <__mriCore_WasSemihostCallCancelledByGdb>:
     424:	4b03      	ldr	r3, [pc, #12]	; (434 <__mriCore_WasSemihostCallCancelledByGdb+0x10>)
     426:	69d8      	ldr	r0, [r3, #28]
     428:	1f01      	subs	r1, r0, #4
     42a:	424a      	negs	r2, r1
     42c:	eb52 0001 	adcs.w	r0, r2, r1
     430:	4770      	bx	lr
     432:	bf00      	nop
     434:	100000f4 	.word	0x100000f4

00000438 <__mriCore_FlagSemihostCallAsHandled>:
     438:	b508      	push	{r3, lr}
     43a:	f000 feed 	bl	1218 <__mriPlatform_AdvanceProgramCounterToNextInstruction>
     43e:	4b03      	ldr	r3, [pc, #12]	; (44c <__mriCore_FlagSemihostCallAsHandled+0x14>)
     440:	6998      	ldr	r0, [r3, #24]
     442:	69d9      	ldr	r1, [r3, #28]
     444:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
     448:	f000 be92 	b.w	1170 <__mriPlatform_SetSemihostCallReturnAndErrnoValues>
     44c:	100000f4 	.word	0x100000f4

00000450 <__mriCore_IsFirstException>:
     450:	4b02      	ldr	r3, [pc, #8]	; (45c <__mriCore_IsFirstException+0xc>)
     452:	6958      	ldr	r0, [r3, #20]
     454:	f000 0002 	and.w	r0, r0, #2
     458:	4770      	bx	lr
     45a:	bf00      	nop
     45c:	100000f4 	.word	0x100000f4

00000460 <__mriCore_SetSignalValue>:
     460:	4b01      	ldr	r3, [pc, #4]	; (468 <__mriCore_SetSignalValue+0x8>)
     462:	f883 0020 	strb.w	r0, [r3, #32]
     466:	4770      	bx	lr
     468:	100000f4 	.word	0x100000f4

0000046c <__mriCore_GetSignalValue>:
     46c:	4b01      	ldr	r3, [pc, #4]	; (474 <__mriCore_GetSignalValue+0x8>)
     46e:	f893 0020 	ldrb.w	r0, [r3, #32]
     472:	4770      	bx	lr
     474:	100000f4 	.word	0x100000f4

00000478 <__mriCore_SetSemihostReturnValues>:
     478:	4b01      	ldr	r3, [pc, #4]	; (480 <__mriCore_SetSemihostReturnValues+0x8>)
     47a:	6198      	str	r0, [r3, #24]
     47c:	61d9      	str	r1, [r3, #28]
     47e:	4770      	bx	lr
     480:	100000f4 	.word	0x100000f4

00000484 <__mriCore_GetSemihostReturnCode>:
     484:	4b01      	ldr	r3, [pc, #4]	; (48c <__mriCore_GetSemihostReturnCode+0x8>)
     486:	6998      	ldr	r0, [r3, #24]
     488:	4770      	bx	lr
     48a:	bf00      	nop
     48c:	100000f4 	.word	0x100000f4

00000490 <__mriCore_GetBuffer>:
     490:	4800      	ldr	r0, [pc, #0]	; (494 <__mriCore_GetBuffer+0x4>)
     492:	4770      	bx	lr
     494:	100000fc 	.word	0x100000fc

00000498 <__mriCore_GetInitializedBuffer>:
     498:	b508      	push	{r3, lr}
     49a:	f7ff ff85 	bl	3a8 <__mriCore_InitBuffer>
     49e:	4801      	ldr	r0, [pc, #4]	; (4a4 <__mriCore_GetInitializedBuffer+0xc>)
     4a0:	bd08      	pop	{r3, pc}
     4a2:	bf00      	nop
     4a4:	100000fc 	.word	0x100000fc

000004a8 <__mriCore_SendPacketToGdb>:
     4a8:	b508      	push	{r3, lr}
     4aa:	480a      	ldr	r0, [pc, #40]	; (4d4 <__mriCore_SendPacketToGdb+0x2c>)
     4ac:	f001 fc4c 	bl	1d48 <__mriBuffer_OverrunDetected>
     4b0:	b128      	cbz	r0, 4be <__mriCore_SendPacketToGdb+0x16>
     4b2:	f7ff ff79 	bl	3a8 <__mriCore_InitBuffer>
     4b6:	4807      	ldr	r0, [pc, #28]	; (4d4 <__mriCore_SendPacketToGdb+0x2c>)
     4b8:	4907      	ldr	r1, [pc, #28]	; (4d8 <__mriCore_SendPacketToGdb+0x30>)
     4ba:	f001 fccf 	bl	1e5c <__mriBuffer_WriteString>
     4be:	4805      	ldr	r0, [pc, #20]	; (4d4 <__mriCore_SendPacketToGdb+0x2c>)
     4c0:	f001 fc20 	bl	1d04 <__mriBuffer_SetEndOfBuffer>
     4c4:	4805      	ldr	r0, [pc, #20]	; (4dc <__mriCore_SendPacketToGdb+0x34>)
     4c6:	f100 0108 	add.w	r1, r0, #8
     4ca:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
     4ce:	f000 b909 	b.w	6e4 <__mriPacket_SendToGDB>
     4d2:	bf00      	nop
     4d4:	100000fc 	.word	0x100000fc
     4d8:	00003648 	.word	0x00003648
     4dc:	100000f4 	.word	0x100000f4

000004e0 <__mriCore_GdbCommandHandlingLoop>:
     4e0:	b510      	push	{r4, lr}
     4e2:	f7ff ff61 	bl	3a8 <__mriCore_InitBuffer>
     4e6:	4812      	ldr	r0, [pc, #72]	; (530 <__mriCore_GdbCommandHandlingLoop+0x50>)
     4e8:	f100 0108 	add.w	r1, r0, #8
     4ec:	f000 f894 	bl	618 <__mriPacket_GetFromGDB>
     4f0:	4810      	ldr	r0, [pc, #64]	; (534 <__mriCore_GdbCommandHandlingLoop+0x54>)
     4f2:	f001 fc43 	bl	1d7c <__mriBuffer_ReadChar>
     4f6:	2300      	movs	r3, #0
     4f8:	4a0f      	ldr	r2, [pc, #60]	; (538 <__mriCore_GdbCommandHandlingLoop+0x58>)
     4fa:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
     4fe:	790c      	ldrb	r4, [r1, #4]
     500:	4284      	cmp	r4, r0
     502:	d106      	bne.n	512 <__mriCore_GdbCommandHandlingLoop+0x32>
     504:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
     508:	4780      	blx	r0
     50a:	0782      	lsls	r2, r0, #30
     50c:	4604      	mov	r4, r0
     50e:	d507      	bpl.n	520 <__mriCore_GdbCommandHandlingLoop+0x40>
     510:	e008      	b.n	524 <__mriCore_GdbCommandHandlingLoop+0x44>
     512:	3301      	adds	r3, #1
     514:	2b0c      	cmp	r3, #12
     516:	d1ef      	bne.n	4f8 <__mriCore_GdbCommandHandlingLoop+0x18>
     518:	4808      	ldr	r0, [pc, #32]	; (53c <__mriCore_GdbCommandHandlingLoop+0x5c>)
     51a:	f7ff ff55 	bl	3c8 <__mriCore_PrepareStringResponse>
     51e:	2400      	movs	r4, #0
     520:	f7ff ffc2 	bl	4a8 <__mriCore_SendPacketToGdb>
     524:	f004 0401 	and.w	r4, r4, #1
     528:	2c00      	cmp	r4, #0
     52a:	d0da      	beq.n	4e2 <__mriCore_GdbCommandHandlingLoop+0x2>
     52c:	bd10      	pop	{r4, pc}
     52e:	bf00      	nop
     530:	100000f4 	.word	0x100000f4
     534:	100000fc 	.word	0x100000fc
     538:	0000364c 	.word	0x0000364c
     53c:	000036be 	.word	0x000036be

00000540 <__mriDebugException>:
     540:	b570      	push	{r4, r5, r6, lr}
     542:	f7ff ff55 	bl	3f0 <__mriCore_IsWaitingForGdbToConnect>
     546:	4605      	mov	r5, r0
     548:	f000 fd14 	bl	f74 <__mriPlatform_IsSingleStepping>
     54c:	4606      	mov	r6, r0
     54e:	f001 f98b 	bl	1868 <__mriPlatform_CommCausedInterrupt>
     552:	b130      	cbz	r0, 562 <__mriDebugException+0x22>
     554:	f001 f964 	bl	1820 <__mriPlatform_CommHasReceiveData>
     558:	b918      	cbnz	r0, 562 <__mriDebugException+0x22>
     55a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     55e:	f001 b98f 	b.w	1880 <__mriPlatform_CommClearInterrupt>
     562:	f3af 8000 	nop.w
     566:	f7ff ff43 	bl	3f0 <__mriCore_IsWaitingForGdbToConnect>
     56a:	b160      	cbz	r0, 586 <__mriDebugException+0x46>
     56c:	f001 f9a6 	bl	18bc <__mriPlatform_CommIsWaitingForGdbToConnect>
     570:	2800      	cmp	r0, #0
     572:	d1fb      	bne.n	56c <__mriDebugException+0x2c>
     574:	f001 f95e 	bl	1834 <__mriPlatform_CommReceiveChar>
     578:	282b      	cmp	r0, #43	; 0x2b
     57a:	d004      	beq.n	586 <__mriDebugException+0x46>
     57c:	f001 fb10 	bl	1ba0 <__mriPlatform_CommWaitForReceiveDataToStop>
     580:	f001 f9aa 	bl	18d8 <__mriPlatform_CommPrepareToWaitForGdbConnection>
     584:	e7f2      	b.n	56c <__mriDebugException+0x2c>
     586:	f000 ff6b 	bl	1460 <__mriPlatform_EnteringDebugger>
     58a:	f000 fd01 	bl	f90 <__mriPlatform_DetermineCauseOfException>
     58e:	4c13      	ldr	r4, [pc, #76]	; (5dc <__mriDebugException+0x9c>)
     590:	2805      	cmp	r0, #5
     592:	f884 0020 	strb.w	r0, [r4, #32]
     596:	d10f      	bne.n	5b8 <__mriDebugException+0x78>
     598:	f000 f979 	bl	88e <__mriSemihost_IsDebuggeeMakingSemihostCall>
     59c:	b160      	cbz	r0, 5b8 <__mriDebugException+0x78>
     59e:	f000 f980 	bl	8a2 <__mriSemihost_HandleSemihostRequest>
     5a2:	b148      	cbz	r0, 5b8 <__mriDebugException+0x78>
     5a4:	b946      	cbnz	r6, 5b8 <__mriDebugException+0x78>
     5a6:	f000 fd6d 	bl	1084 <__mriPlatform_LeavingDebugger>
     5aa:	f3af 8000 	nop.w
     5ae:	6961      	ldr	r1, [r4, #20]
     5b0:	f021 0302 	bic.w	r3, r1, #2
     5b4:	6163      	str	r3, [r4, #20]
     5b6:	bd70      	pop	{r4, r5, r6, pc}
     5b8:	b91d      	cbnz	r5, 5c2 <__mriDebugException+0x82>
     5ba:	f000 fd1d 	bl	ff8 <__mriPlatform_DisplayFaultCauseToGdbConsole>
     5be:	f002 f95d 	bl	287c <__mriCmd_Send_T_StopResponse>
     5c2:	f7ff ff8d 	bl	4e0 <__mriCore_GdbCommandHandlingLoop>
     5c6:	f000 fd5d 	bl	1084 <__mriPlatform_LeavingDebugger>
     5ca:	f3af 8000 	nop.w
     5ce:	4b03      	ldr	r3, [pc, #12]	; (5dc <__mriDebugException+0x9c>)
     5d0:	695a      	ldr	r2, [r3, #20]
     5d2:	f022 0002 	bic.w	r0, r2, #2
     5d6:	6158      	str	r0, [r3, #20]
     5d8:	bd70      	pop	{r4, r5, r6, pc}
     5da:	bf00      	nop
     5dc:	100000f4 	.word	0x100000f4

000005e0 <HexCharToNibble>:
     5e0:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
     5e4:	2b05      	cmp	r3, #5
     5e6:	d801      	bhi.n	5ec <HexCharToNibble+0xc>
     5e8:	3857      	subs	r0, #87	; 0x57
     5ea:	4770      	bx	lr
     5ec:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
     5f0:	2905      	cmp	r1, #5
     5f2:	d801      	bhi.n	5f8 <HexCharToNibble+0x18>
     5f4:	3837      	subs	r0, #55	; 0x37
     5f6:	4770      	bx	lr
     5f8:	3830      	subs	r0, #48	; 0x30
     5fa:	b2c2      	uxtb	r2, r0
     5fc:	2a09      	cmp	r2, #9
     5fe:	d907      	bls.n	610 <HexCharToNibble+0x30>
     600:	4804      	ldr	r0, [pc, #16]	; (614 <HexCharToNibble+0x34>)
     602:	6803      	ldr	r3, [r0, #0]
     604:	2b02      	cmp	r3, #2
     606:	bfb8      	it	lt
     608:	2302      	movlt	r3, #2
     60a:	6003      	str	r3, [r0, #0]
     60c:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     610:	4770      	bx	lr
     612:	bf00      	nop
     614:	1000014c 	.word	0x1000014c

00000618 <__mriPacket_GetFromGDB>:
     618:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
     61a:	2208      	movs	r2, #8
     61c:	4604      	mov	r4, r0
     61e:	460d      	mov	r5, r1
     620:	2100      	movs	r1, #0
     622:	f002 ffb2 	bl	358a <memset>
     626:	6025      	str	r5, [r4, #0]
     628:	7926      	ldrb	r6, [r4, #4]
     62a:	2e24      	cmp	r6, #36	; 0x24
     62c:	d004      	beq.n	638 <__mriPacket_GetFromGDB+0x20>
     62e:	f001 f901 	bl	1834 <__mriPlatform_CommReceiveChar>
     632:	b2c6      	uxtb	r6, r0
     634:	7126      	strb	r6, [r4, #4]
     636:	e7f8      	b.n	62a <__mriPacket_GetFromGDB+0x12>
     638:	6820      	ldr	r0, [r4, #0]
     63a:	f001 fb60 	bl	1cfe <__mriBuffer_Reset>
     63e:	2300      	movs	r3, #0
     640:	7163      	strb	r3, [r4, #5]
     642:	f001 f8f7 	bl	1834 <__mriPlatform_CommReceiveChar>
     646:	b2c6      	uxtb	r6, r0
     648:	7126      	strb	r6, [r4, #4]
     64a:	6820      	ldr	r0, [r4, #0]
     64c:	f001 fb60 	bl	1d10 <__mriBuffer_BytesLeft>
     650:	b158      	cbz	r0, 66a <__mriPacket_GetFromGDB+0x52>
     652:	2e24      	cmp	r6, #36	; 0x24
     654:	d0e8      	beq.n	628 <__mriPacket_GetFromGDB+0x10>
     656:	2e23      	cmp	r6, #35	; 0x23
     658:	d009      	beq.n	66e <__mriPacket_GetFromGDB+0x56>
     65a:	7965      	ldrb	r5, [r4, #5]
     65c:	6820      	ldr	r0, [r4, #0]
     65e:	1977      	adds	r7, r6, r5
     660:	7167      	strb	r7, [r4, #5]
     662:	4631      	mov	r1, r6
     664:	f001 fb78 	bl	1d58 <__mriBuffer_WriteChar>
     668:	e7eb      	b.n	642 <__mriPacket_GetFromGDB+0x2a>
     66a:	2e23      	cmp	r6, #35	; 0x23
     66c:	d1dc      	bne.n	628 <__mriPacket_GetFromGDB+0x10>
     66e:	4d1c      	ldr	r5, [pc, #112]	; (6e0 <__mriPacket_GetFromGDB+0xc8>)
     670:	2000      	movs	r0, #0
     672:	6028      	str	r0, [r5, #0]
     674:	f001 f8de 	bl	1834 <__mriPlatform_CommReceiveChar>
     678:	b2c7      	uxtb	r7, r0
     67a:	7127      	strb	r7, [r4, #4]
     67c:	f001 f8da 	bl	1834 <__mriPlatform_CommReceiveChar>
     680:	b2c6      	uxtb	r6, r0
     682:	7126      	strb	r6, [r4, #4]
     684:	4638      	mov	r0, r7
     686:	f7ff ffab 	bl	5e0 <HexCharToNibble>
     68a:	6829      	ldr	r1, [r5, #0]
     68c:	4607      	mov	r7, r0
     68e:	b941      	cbnz	r1, 6a2 <__mriPacket_GetFromGDB+0x8a>
     690:	4630      	mov	r0, r6
     692:	f7ff ffa5 	bl	5e0 <HexCharToNibble>
     696:	682a      	ldr	r2, [r5, #0]
     698:	b91a      	cbnz	r2, 6a2 <__mriPacket_GetFromGDB+0x8a>
     69a:	b2fb      	uxtb	r3, r7
     69c:	ea40 1703 	orr.w	r7, r0, r3, lsl #4
     6a0:	71a7      	strb	r7, [r4, #6]
     6a2:	6828      	ldr	r0, [r5, #0]
     6a4:	b110      	cbz	r0, 6ac <__mriPacket_GetFromGDB+0x94>
     6a6:	7961      	ldrb	r1, [r4, #5]
     6a8:	43ca      	mvns	r2, r1
     6aa:	71a2      	strb	r2, [r4, #6]
     6ac:	f001 f8b8 	bl	1820 <__mriPlatform_CommHasReceiveData>
     6b0:	2800      	cmp	r0, #0
     6b2:	d1b9      	bne.n	628 <__mriPacket_GetFromGDB+0x10>
     6b4:	79a0      	ldrb	r0, [r4, #6]
     6b6:	7963      	ldrb	r3, [r4, #5]
     6b8:	4298      	cmp	r0, r3
     6ba:	d001      	beq.n	6c0 <__mriPacket_GetFromGDB+0xa8>
     6bc:	202d      	movs	r0, #45	; 0x2d
     6be:	e000      	b.n	6c2 <__mriPacket_GetFromGDB+0xaa>
     6c0:	202b      	movs	r0, #43	; 0x2b
     6c2:	f001 f8c3 	bl	184c <__mriPlatform_CommSendChar>
     6c6:	79a1      	ldrb	r1, [r4, #6]
     6c8:	7962      	ldrb	r2, [r4, #5]
     6ca:	4291      	cmp	r1, r2
     6cc:	d1ac      	bne.n	628 <__mriPacket_GetFromGDB+0x10>
     6ce:	6820      	ldr	r0, [r4, #0]
     6d0:	f001 fb18 	bl	1d04 <__mriBuffer_SetEndOfBuffer>
     6d4:	6820      	ldr	r0, [r4, #0]
     6d6:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
     6da:	f001 bb10 	b.w	1cfe <__mriBuffer_Reset>
     6de:	bf00      	nop
     6e0:	1000014c 	.word	0x1000014c

000006e4 <__mriPacket_SendToGDB>:
     6e4:	b570      	push	{r4, r5, r6, lr}
     6e6:	2208      	movs	r2, #8
     6e8:	4604      	mov	r4, r0
     6ea:	460d      	mov	r5, r1
     6ec:	2100      	movs	r1, #0
     6ee:	f002 ff4c 	bl	358a <memset>
     6f2:	6025      	str	r5, [r4, #0]
     6f4:	6820      	ldr	r0, [r4, #0]
     6f6:	f001 fb02 	bl	1cfe <__mriBuffer_Reset>
     6fa:	2300      	movs	r3, #0
     6fc:	7163      	strb	r3, [r4, #5]
     6fe:	2024      	movs	r0, #36	; 0x24
     700:	f001 f8a4 	bl	184c <__mriPlatform_CommSendChar>
     704:	6820      	ldr	r0, [r4, #0]
     706:	f001 fb03 	bl	1d10 <__mriBuffer_BytesLeft>
     70a:	b148      	cbz	r0, 720 <__mriPacket_SendToGDB+0x3c>
     70c:	6820      	ldr	r0, [r4, #0]
     70e:	f001 fb35 	bl	1d7c <__mriBuffer_ReadChar>
     712:	4605      	mov	r5, r0
     714:	f001 f89a 	bl	184c <__mriPlatform_CommSendChar>
     718:	7963      	ldrb	r3, [r4, #5]
     71a:	18ee      	adds	r6, r5, r3
     71c:	7166      	strb	r6, [r4, #5]
     71e:	e7f1      	b.n	704 <__mriPacket_SendToGDB+0x20>
     720:	2023      	movs	r0, #35	; 0x23
     722:	f001 f893 	bl	184c <__mriPlatform_CommSendChar>
     726:	7966      	ldrb	r6, [r4, #5]
     728:	4d0a      	ldr	r5, [pc, #40]	; (754 <__mriPacket_SendToGDB+0x70>)
     72a:	0930      	lsrs	r0, r6, #4
     72c:	5c28      	ldrb	r0, [r5, r0]
     72e:	f006 060f 	and.w	r6, r6, #15
     732:	f001 f88b 	bl	184c <__mriPlatform_CommSendChar>
     736:	5da8      	ldrb	r0, [r5, r6]
     738:	f001 f888 	bl	184c <__mriPlatform_CommSendChar>
     73c:	f001 f87a 	bl	1834 <__mriPlatform_CommReceiveChar>
     740:	b2c1      	uxtb	r1, r0
     742:	2903      	cmp	r1, #3
     744:	7120      	strb	r0, [r4, #4]
     746:	d0f9      	beq.n	73c <__mriPacket_SendToGDB+0x58>
     748:	b2ca      	uxtb	r2, r1
     74a:	2a2b      	cmp	r2, #43	; 0x2b
     74c:	d001      	beq.n	752 <__mriPacket_SendToGDB+0x6e>
     74e:	2a24      	cmp	r2, #36	; 0x24
     750:	d1d0      	bne.n	6f4 <__mriPacket_SendToGDB+0x10>
     752:	bd70      	pop	{r4, r5, r6, pc}
     754:	000036ac 	.word	0x000036ac

00000758 <clearTokenObject>:
     758:	b510      	push	{r4, lr}
     75a:	2100      	movs	r1, #0
     75c:	2228      	movs	r2, #40	; 0x28
     75e:	4604      	mov	r4, r0
     760:	f002 ff13 	bl	358a <memset>
     764:	2300      	movs	r3, #0
     766:	62e3      	str	r3, [r4, #44]	; 0x2c
     768:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
     76c:	bd10      	pop	{r4, pc}
	...

00000770 <__mriToken_Init>:
     770:	b510      	push	{r4, lr}
     772:	4604      	mov	r4, r0
     774:	f7ff fff0 	bl	758 <clearTokenObject>
     778:	4b01      	ldr	r3, [pc, #4]	; (780 <__mriToken_Init+0x10>)
     77a:	62a3      	str	r3, [r4, #40]	; 0x28
     77c:	bd10      	pop	{r4, pc}
     77e:	bf00      	nop
     780:	000036bc 	.word	0x000036bc

00000784 <__mriToken_SplitString>:
     784:	4b2b      	ldr	r3, [pc, #172]	; (834 <Heap_Size+0x34>)
     786:	b570      	push	{r4, r5, r6, lr}
     788:	2200      	movs	r2, #0
     78a:	4604      	mov	r4, r0
     78c:	601a      	str	r2, [r3, #0]
     78e:	460d      	mov	r5, r1
     790:	f7ff ffe2 	bl	758 <clearTokenObject>
     794:	f104 0330 	add.w	r3, r4, #48	; 0x30
     798:	4629      	mov	r1, r5
     79a:	461a      	mov	r2, r3
     79c:	f104 0670 	add.w	r6, r4, #112	; 0x70
     7a0:	4608      	mov	r0, r1
     7a2:	f811 5b01 	ldrb.w	r5, [r1], #1
     7a6:	b125      	cbz	r5, 7b2 <__mriToken_SplitString+0x2e>
     7a8:	f802 5b01 	strb.w	r5, [r2], #1
     7ac:	42b2      	cmp	r2, r6
     7ae:	4608      	mov	r0, r1
     7b0:	d1f6      	bne.n	7a0 <__mriToken_SplitString+0x1c>
     7b2:	2100      	movs	r1, #0
     7b4:	7011      	strb	r1, [r2, #0]
     7b6:	7800      	ldrb	r0, [r0, #0]
     7b8:	4a1e      	ldr	r2, [pc, #120]	; (834 <Heap_Size+0x34>)
     7ba:	b120      	cbz	r0, 7c6 <__mriToken_SplitString+0x42>
     7bc:	6811      	ldr	r1, [r2, #0]
     7be:	2901      	cmp	r1, #1
     7c0:	bfb8      	it	lt
     7c2:	2101      	movlt	r1, #1
     7c4:	6011      	str	r1, [r2, #0]
     7c6:	6810      	ldr	r0, [r2, #0]
     7c8:	2800      	cmp	r0, #0
     7ca:	d132      	bne.n	832 <Heap_Size+0x32>
     7cc:	781a      	ldrb	r2, [r3, #0]
     7ce:	2a00      	cmp	r2, #0
     7d0:	d02f      	beq.n	832 <Heap_Size+0x32>
     7d2:	461a      	mov	r2, r3
     7d4:	f813 5b01 	ldrb.w	r5, [r3], #1
     7d8:	b92d      	cbnz	r5, 7e6 <__mriToken_SplitString+0x62>
     7da:	4b16      	ldr	r3, [pc, #88]	; (834 <Heap_Size+0x34>)
     7dc:	2000      	movs	r0, #0
     7de:	6018      	str	r0, [r3, #0]
     7e0:	7811      	ldrb	r1, [r2, #0]
     7e2:	b949      	cbnz	r1, 7f8 <__mriToken_SplitString+0x74>
     7e4:	e012      	b.n	80c <Heap_Size+0xc>
     7e6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     7e8:	1e48      	subs	r0, r1, #1
     7ea:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     7ee:	2900      	cmp	r1, #0
     7f0:	d0f3      	beq.n	7da <__mriToken_SplitString+0x56>
     7f2:	428d      	cmp	r5, r1
     7f4:	d1f9      	bne.n	7ea <__mriToken_SplitString+0x66>
     7f6:	e7ec      	b.n	7d2 <__mriToken_SplitString+0x4e>
     7f8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
     7fa:	2809      	cmp	r0, #9
     7fc:	d902      	bls.n	804 <Heap_Size+0x4>
     7fe:	2001      	movs	r0, #1
     800:	6018      	str	r0, [r3, #0]
     802:	e003      	b.n	80c <Heap_Size+0xc>
     804:	1c41      	adds	r1, r0, #1
     806:	f844 2020 	str.w	r2, [r4, r0, lsl #2]
     80a:	62e1      	str	r1, [r4, #44]	; 0x2c
     80c:	681b      	ldr	r3, [r3, #0]
     80e:	b983      	cbnz	r3, 832 <Heap_Size+0x32>
     810:	4613      	mov	r3, r2
     812:	f812 5b01 	ldrb.w	r5, [r2], #1
     816:	2d00      	cmp	r5, #0
     818:	d0d8      	beq.n	7cc <__mriToken_SplitString+0x48>
     81a:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     81c:	1e48      	subs	r0, r1, #1
     81e:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     822:	2900      	cmp	r1, #0
     824:	d0f4      	beq.n	810 <Heap_Size+0x10>
     826:	428d      	cmp	r5, r1
     828:	d1f9      	bne.n	81e <Heap_Size+0x1e>
     82a:	2100      	movs	r1, #0
     82c:	f803 1b01 	strb.w	r1, [r3], #1
     830:	e7cc      	b.n	7cc <__mriToken_SplitString+0x48>
     832:	bd70      	pop	{r4, r5, r6, pc}
     834:	1000014c 	.word	0x1000014c

00000838 <__mriToken_MatchingString>:
     838:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     83c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     83e:	4606      	mov	r6, r0
     840:	4688      	mov	r8, r1
     842:	2400      	movs	r4, #0
     844:	42bc      	cmp	r4, r7
     846:	d008      	beq.n	85a <__mriToken_MatchingString+0x22>
     848:	f856 5024 	ldr.w	r5, [r6, r4, lsl #2]
     84c:	4641      	mov	r1, r8
     84e:	4628      	mov	r0, r5
     850:	f002 fea3 	bl	359a <strcmp>
     854:	b110      	cbz	r0, 85c <__mriToken_MatchingString+0x24>
     856:	3401      	adds	r4, #1
     858:	e7f4      	b.n	844 <__mriToken_MatchingString+0xc>
     85a:	2500      	movs	r5, #0
     85c:	4628      	mov	r0, r5
     85e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00000862 <__mriToken_MatchingStringPrefix>:
     862:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     866:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     868:	4606      	mov	r6, r0
     86a:	4688      	mov	r8, r1
     86c:	2500      	movs	r5, #0
     86e:	42bd      	cmp	r5, r7
     870:	d009      	beq.n	886 <__mriToken_MatchingStringPrefix+0x24>
     872:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
     876:	4641      	mov	r1, r8
     878:	4620      	mov	r0, r4
     87a:	f002 feb8 	bl	35ee <strstr>
     87e:	4284      	cmp	r4, r0
     880:	d002      	beq.n	888 <__mriToken_MatchingStringPrefix+0x26>
     882:	3501      	adds	r5, #1
     884:	e7f3      	b.n	86e <__mriToken_MatchingStringPrefix+0xc>
     886:	2400      	movs	r4, #0
     888:	4620      	mov	r0, r4
     88a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000088e <__mriSemihost_IsDebuggeeMakingSemihostCall>:
     88e:	b508      	push	{r3, lr}
     890:	f000 fca4 	bl	11dc <__mriPlatform_TypeOfCurrentInstruction>
     894:	3801      	subs	r0, #1
     896:	b2c0      	uxtb	r0, r0
     898:	2801      	cmp	r0, #1
     89a:	bf8c      	ite	hi
     89c:	2000      	movhi	r0, #0
     89e:	2001      	movls	r0, #1
     8a0:	bd08      	pop	{r3, pc}

000008a2 <__mriSemihost_HandleSemihostRequest>:
     8a2:	b51f      	push	{r0, r1, r2, r3, r4, lr}
     8a4:	f000 fc9a 	bl	11dc <__mriPlatform_TypeOfCurrentInstruction>
     8a8:	4604      	mov	r4, r0
     8aa:	4668      	mov	r0, sp
     8ac:	f000 fc4e 	bl	114c <__mriPlatform_GetSemihostCallParameters>
     8b0:	2c01      	cmp	r4, #1
     8b2:	d103      	bne.n	8bc <__mriSemihost_HandleSemihostRequest+0x1a>
     8b4:	4668      	mov	r0, sp
     8b6:	f000 f8ba 	bl	a2e <__mriSemihost_HandleMbedSemihostRequest>
     8ba:	e006      	b.n	8ca <__mriSemihost_HandleSemihostRequest+0x28>
     8bc:	2c02      	cmp	r4, #2
     8be:	d103      	bne.n	8c8 <__mriSemihost_HandleSemihostRequest+0x26>
     8c0:	4668      	mov	r0, sp
     8c2:	f000 f805 	bl	8d0 <__mriSemihost_HandleNewlibSemihostRequest>
     8c6:	e000      	b.n	8ca <__mriSemihost_HandleSemihostRequest+0x28>
     8c8:	2000      	movs	r0, #0
     8ca:	b004      	add	sp, #16
     8cc:	bd10      	pop	{r4, pc}
	...

000008d0 <__mriSemihost_HandleNewlibSemihostRequest>:
     8d0:	b510      	push	{r4, lr}
     8d2:	b094      	sub	sp, #80	; 0x50
     8d4:	4604      	mov	r4, r0
     8d6:	f000 fc21 	bl	111c <__mriPlatform_GetProgramCounter>
     8da:	4b3c      	ldr	r3, [pc, #240]	; (9cc <__mriSemihost_HandleNewlibSemihostRequest+0xfc>)
     8dc:	f040 0001 	orr.w	r0, r0, #1
     8e0:	4298      	cmp	r0, r3
     8e2:	d109      	bne.n	8f8 <__mriSemihost_HandleNewlibSemihostRequest+0x28>
     8e4:	6823      	ldr	r3, [r4, #0]
     8e6:	6861      	ldr	r1, [r4, #4]
     8e8:	68a2      	ldr	r2, [r4, #8]
     8ea:	a803      	add	r0, sp, #12
     8ec:	9303      	str	r3, [sp, #12]
     8ee:	9104      	str	r1, [sp, #16]
     8f0:	9205      	str	r2, [sp, #20]
     8f2:	f001 fd19 	bl	2328 <__mriIssueGdbFileWriteRequest>
     8f6:	e067      	b.n	9c8 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>
     8f8:	4935      	ldr	r1, [pc, #212]	; (9d0 <__mriSemihost_HandleNewlibSemihostRequest+0x100>)
     8fa:	4288      	cmp	r0, r1
     8fc:	d109      	bne.n	912 <__mriSemihost_HandleNewlibSemihostRequest+0x42>
     8fe:	68a0      	ldr	r0, [r4, #8]
     900:	6821      	ldr	r1, [r4, #0]
     902:	6862      	ldr	r2, [r4, #4]
     904:	9005      	str	r0, [sp, #20]
     906:	a803      	add	r0, sp, #12
     908:	9103      	str	r1, [sp, #12]
     90a:	9204      	str	r2, [sp, #16]
     90c:	f001 fd30 	bl	2370 <__mriIssueGdbFileReadRequest>
     910:	e05a      	b.n	9c8 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>
     912:	4a30      	ldr	r2, [pc, #192]	; (9d4 <__mriSemihost_HandleNewlibSemihostRequest+0x104>)
     914:	4290      	cmp	r0, r2
     916:	d10d      	bne.n	934 <__mriSemihost_HandleNewlibSemihostRequest+0x64>
     918:	6820      	ldr	r0, [r4, #0]
     91a:	900c      	str	r0, [sp, #48]	; 0x30
     91c:	f002 fe48 	bl	35b0 <strlen>
     920:	1c42      	adds	r2, r0, #1
     922:	6860      	ldr	r0, [r4, #4]
     924:	68a3      	ldr	r3, [r4, #8]
     926:	900e      	str	r0, [sp, #56]	; 0x38
     928:	a80c      	add	r0, sp, #48	; 0x30
     92a:	920d      	str	r2, [sp, #52]	; 0x34
     92c:	930f      	str	r3, [sp, #60]	; 0x3c
     92e:	f001 fccf 	bl	22d0 <__mriIssueGdbFileOpenRequest>
     932:	e049      	b.n	9c8 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>
     934:	4b28      	ldr	r3, [pc, #160]	; (9d8 <__mriSemihost_HandleNewlibSemihostRequest+0x108>)
     936:	4298      	cmp	r0, r3
     938:	d109      	bne.n	94e <__mriSemihost_HandleNewlibSemihostRequest+0x7e>
     93a:	6820      	ldr	r0, [r4, #0]
     93c:	9001      	str	r0, [sp, #4]
     93e:	f002 fe37 	bl	35b0 <strlen>
     942:	1c41      	adds	r1, r0, #1
     944:	a801      	add	r0, sp, #4
     946:	9102      	str	r1, [sp, #8]
     948:	f001 fd8c 	bl	2464 <__mriIssueGdbFileUnlinkRequest>
     94c:	e03c      	b.n	9c8 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>
     94e:	4923      	ldr	r1, [pc, #140]	; (9dc <__mriSemihost_HandleNewlibSemihostRequest+0x10c>)
     950:	4288      	cmp	r0, r1
     952:	d109      	bne.n	968 <__mriSemihost_HandleNewlibSemihostRequest+0x98>
     954:	6860      	ldr	r0, [r4, #4]
     956:	6822      	ldr	r2, [r4, #0]
     958:	68a3      	ldr	r3, [r4, #8]
     95a:	9007      	str	r0, [sp, #28]
     95c:	a806      	add	r0, sp, #24
     95e:	9206      	str	r2, [sp, #24]
     960:	9308      	str	r3, [sp, #32]
     962:	f001 fd3d 	bl	23e0 <__mriIssueGdbFileSeekRequest>
     966:	e02f      	b.n	9c8 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>
     968:	4a1d      	ldr	r2, [pc, #116]	; (9e0 <__mriSemihost_HandleNewlibSemihostRequest+0x110>)
     96a:	4290      	cmp	r0, r2
     96c:	d103      	bne.n	976 <__mriSemihost_HandleNewlibSemihostRequest+0xa6>
     96e:	6820      	ldr	r0, [r4, #0]
     970:	f001 fd22 	bl	23b8 <__mriIssueGdbFileCloseRequest>
     974:	e028      	b.n	9c8 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>
     976:	4b1b      	ldr	r3, [pc, #108]	; (9e4 <__mriSemihost_HandleNewlibSemihostRequest+0x114>)
     978:	4298      	cmp	r0, r3
     97a:	d104      	bne.n	986 <__mriSemihost_HandleNewlibSemihostRequest+0xb6>
     97c:	e894 0003 	ldmia.w	r4, {r0, r1}
     980:	f001 fd52 	bl	2428 <__mriIssueGdbFileFStatRequest>
     984:	e020      	b.n	9c8 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>
     986:	4918      	ldr	r1, [pc, #96]	; (9e8 <__mriSemihost_HandleNewlibSemihostRequest+0x118>)
     988:	4288      	cmp	r0, r1
     98a:	d109      	bne.n	9a0 <__mriSemihost_HandleNewlibSemihostRequest+0xd0>
     98c:	6820      	ldr	r0, [r4, #0]
     98e:	9009      	str	r0, [sp, #36]	; 0x24
     990:	f002 fe0e 	bl	35b0 <strlen>
     994:	1c41      	adds	r1, r0, #1
     996:	a809      	add	r0, sp, #36	; 0x24
     998:	910a      	str	r1, [sp, #40]	; 0x28
     99a:	f001 fd7f 	bl	249c <__mriIssueGdbFileStatRequest>
     99e:	e013      	b.n	9c8 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>
     9a0:	4a12      	ldr	r2, [pc, #72]	; (9ec <__mriSemihost_HandleNewlibSemihostRequest+0x11c>)
     9a2:	4290      	cmp	r0, r2
     9a4:	d10f      	bne.n	9c6 <__mriSemihost_HandleNewlibSemihostRequest+0xf6>
     9a6:	6820      	ldr	r0, [r4, #0]
     9a8:	9010      	str	r0, [sp, #64]	; 0x40
     9aa:	f002 fe01 	bl	35b0 <strlen>
     9ae:	3001      	adds	r0, #1
     9b0:	9011      	str	r0, [sp, #68]	; 0x44
     9b2:	6860      	ldr	r0, [r4, #4]
     9b4:	9012      	str	r0, [sp, #72]	; 0x48
     9b6:	f002 fdfb 	bl	35b0 <strlen>
     9ba:	1c43      	adds	r3, r0, #1
     9bc:	a810      	add	r0, sp, #64	; 0x40
     9be:	9313      	str	r3, [sp, #76]	; 0x4c
     9c0:	f001 fd90 	bl	24e4 <__mriIssueGdbFileRenameRequest>
     9c4:	e000      	b.n	9c8 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>
     9c6:	2000      	movs	r0, #0
     9c8:	b014      	add	sp, #80	; 0x50
     9ca:	bd10      	pop	{r4, pc}
     9cc:	000009f1 	.word	0x000009f1
     9d0:	000009f5 	.word	0x000009f5
     9d4:	000009f9 	.word	0x000009f9
     9d8:	00000a01 	.word	0x00000a01
     9dc:	00000a09 	.word	0x00000a09
     9e0:	00000a0d 	.word	0x00000a0d
     9e4:	00000a11 	.word	0x00000a11
     9e8:	00000a05 	.word	0x00000a05
     9ec:	000009fd 	.word	0x000009fd

000009f0 <__mriNewlib_SemihostWrite>:
     9f0:	beff      	bkpt	0x00ff
     9f2:	4770      	bx	lr

000009f4 <__mriNewlib_SemihostRead>:
     9f4:	beff      	bkpt	0x00ff
     9f6:	4770      	bx	lr

000009f8 <__mriNewLib_SemihostOpen>:
     9f8:	beff      	bkpt	0x00ff
     9fa:	4770      	bx	lr

000009fc <__mriNewLib_SemihostRename>:
     9fc:	beff      	bkpt	0x00ff
     9fe:	4770      	bx	lr

00000a00 <__mriNewLib_SemihostUnlink>:
     a00:	beff      	bkpt	0x00ff
     a02:	4770      	bx	lr

00000a04 <__mriNewLib_SemihostStat>:
     a04:	beff      	bkpt	0x00ff
     a06:	4770      	bx	lr

00000a08 <__mriNewlib_SemihostLSeek>:
     a08:	beff      	bkpt	0x00ff
     a0a:	4770      	bx	lr

00000a0c <__mriNewlib_SemihostClose>:
     a0c:	beff      	bkpt	0x00ff
     a0e:	4770      	bx	lr

00000a10 <__mriNewlib_SemihostFStat>:
     a10:	beff      	bkpt	0x00ff
     a12:	4770      	bx	lr

00000a14 <convertBytesTransferredToBytesNotTransferred>:
     a14:	b510      	push	{r4, lr}
     a16:	4604      	mov	r4, r0
     a18:	f7ff fd34 	bl	484 <__mriCore_GetSemihostReturnCode>
     a1c:	1e03      	subs	r3, r0, #0
     a1e:	bfa8      	it	ge
     a20:	ebc3 0004 	rsbge	r0, r3, r4
     a24:	2100      	movs	r1, #0
     a26:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     a2a:	f000 bba1 	b.w	1170 <__mriPlatform_SetSemihostCallReturnAndErrnoValues>

00000a2e <__mriSemihost_HandleMbedSemihostRequest>:
     a2e:	b530      	push	{r4, r5, lr}
     a30:	6803      	ldr	r3, [r0, #0]
     a32:	b099      	sub	sp, #100	; 0x64
     a34:	2b09      	cmp	r3, #9
     a36:	f000 8087 	beq.w	b48 <__mriSemihost_HandleMbedSemihostRequest+0x11a>
     a3a:	d810      	bhi.n	a5e <__mriSemihost_HandleMbedSemihostRequest+0x30>
     a3c:	2b02      	cmp	r3, #2
     a3e:	d053      	beq.n	ae8 <__mriSemihost_HandleMbedSemihostRequest+0xba>
     a40:	d803      	bhi.n	a4a <__mriSemihost_HandleMbedSemihostRequest+0x1c>
     a42:	2b01      	cmp	r3, #1
     a44:	f040 8088 	bne.w	b58 <__mriSemihost_HandleMbedSemihostRequest+0x12a>
     a48:	e02d      	b.n	aa6 <__mriSemihost_HandleMbedSemihostRequest+0x78>
     a4a:	2b05      	cmp	r3, #5
     a4c:	d052      	beq.n	af4 <__mriSemihost_HandleMbedSemihostRequest+0xc6>
     a4e:	2b06      	cmp	r3, #6
     a50:	f040 8082 	bne.w	b58 <__mriSemihost_HandleMbedSemihostRequest+0x12a>
     a54:	6845      	ldr	r5, [r0, #4]
     a56:	4628      	mov	r0, r5
     a58:	f001 fc8a 	bl	2370 <__mriIssueGdbFileReadRequest>
     a5c:	e04e      	b.n	afc <__mriSemihost_HandleMbedSemihostRequest+0xce>
     a5e:	2b0c      	cmp	r3, #12
     a60:	d052      	beq.n	b08 <__mriSemihost_HandleMbedSemihostRequest+0xda>
     a62:	d80c      	bhi.n	a7e <__mriSemihost_HandleMbedSemihostRequest+0x50>
     a64:	2b0a      	cmp	r3, #10
     a66:	d177      	bne.n	b58 <__mriSemihost_HandleMbedSemihostRequest+0x12a>
     a68:	6841      	ldr	r1, [r0, #4]
     a6a:	2400      	movs	r4, #0
     a6c:	6848      	ldr	r0, [r1, #4]
     a6e:	680a      	ldr	r2, [r1, #0]
     a70:	9002      	str	r0, [sp, #8]
     a72:	a801      	add	r0, sp, #4
     a74:	9201      	str	r2, [sp, #4]
     a76:	9403      	str	r4, [sp, #12]
     a78:	f001 fcb2 	bl	23e0 <__mriIssueGdbFileSeekRequest>
     a7c:	e038      	b.n	af0 <__mriSemihost_HandleMbedSemihostRequest+0xc2>
     a7e:	2b0e      	cmp	r3, #14
     a80:	d05e      	beq.n	b40 <__mriSemihost_HandleMbedSemihostRequest+0x112>
     a82:	f240 1101 	movw	r1, #257	; 0x101
     a86:	428b      	cmp	r3, r1
     a88:	d166      	bne.n	b58 <__mriSemihost_HandleMbedSemihostRequest+0x12a>
     a8a:	6845      	ldr	r5, [r0, #4]
     a8c:	686c      	ldr	r4, [r5, #4]
     a8e:	682d      	ldr	r5, [r5, #0]
     a90:	f001 f8fa 	bl	1c88 <__mriMbed1768_GetMbedUid>
     a94:	2c24      	cmp	r4, #36	; 0x24
     a96:	bf34      	ite	cc
     a98:	4622      	movcc	r2, r4
     a9a:	2224      	movcs	r2, #36	; 0x24
     a9c:	4601      	mov	r1, r0
     a9e:	4628      	mov	r0, r5
     aa0:	f002 fd6a 	bl	3578 <memcpy>
     aa4:	e050      	b.n	b48 <__mriSemihost_HandleMbedSemihostRequest+0x11a>
     aa6:	6840      	ldr	r0, [r0, #4]
     aa8:	6802      	ldr	r2, [r0, #0]
     aaa:	6841      	ldr	r1, [r0, #4]
     aac:	9204      	str	r2, [sp, #16]
     aae:	074a      	lsls	r2, r1, #29
     ab0:	d405      	bmi.n	abe <__mriSemihost_HandleMbedSemihostRequest+0x90>
     ab2:	f011 0408 	ands.w	r4, r1, #8
     ab6:	d005      	beq.n	ac4 <__mriSemihost_HandleMbedSemihostRequest+0x96>
     ab8:	f44f 7402 	mov.w	r4, #520	; 0x208
     abc:	e003      	b.n	ac6 <__mriSemihost_HandleMbedSemihostRequest+0x98>
     abe:	f44f 64c0 	mov.w	r4, #1536	; 0x600
     ac2:	e000      	b.n	ac6 <__mriSemihost_HandleMbedSemihostRequest+0x98>
     ac4:	4623      	mov	r3, r4
     ac6:	f011 0f02 	tst.w	r1, #2
     aca:	6880      	ldr	r0, [r0, #8]
     acc:	bf18      	it	ne
     ace:	2302      	movne	r3, #2
     ad0:	ea43 0204 	orr.w	r2, r3, r4
     ad4:	f44f 71db 	mov.w	r1, #438	; 0x1b6
     ad8:	1c44      	adds	r4, r0, #1
     ada:	a804      	add	r0, sp, #16
     adc:	9206      	str	r2, [sp, #24]
     ade:	9107      	str	r1, [sp, #28]
     ae0:	9405      	str	r4, [sp, #20]
     ae2:	f001 fbf5 	bl	22d0 <__mriIssueGdbFileOpenRequest>
     ae6:	e003      	b.n	af0 <__mriSemihost_HandleMbedSemihostRequest+0xc2>
     ae8:	6843      	ldr	r3, [r0, #4]
     aea:	6818      	ldr	r0, [r3, #0]
     aec:	f001 fc64 	bl	23b8 <__mriIssueGdbFileCloseRequest>
     af0:	4604      	mov	r4, r0
     af2:	e032      	b.n	b5a <__mriSemihost_HandleMbedSemihostRequest+0x12c>
     af4:	6845      	ldr	r5, [r0, #4]
     af6:	4628      	mov	r0, r5
     af8:	f001 fc16 	bl	2328 <__mriIssueGdbFileWriteRequest>
     afc:	4604      	mov	r4, r0
     afe:	b360      	cbz	r0, b5a <__mriSemihost_HandleMbedSemihostRequest+0x12c>
     b00:	68a8      	ldr	r0, [r5, #8]
     b02:	f7ff ff87 	bl	a14 <convertBytesTransferredToBytesNotTransferred>
     b06:	e028      	b.n	b5a <__mriSemihost_HandleMbedSemihostRequest+0x12c>
     b08:	6843      	ldr	r3, [r0, #4]
     b0a:	a908      	add	r1, sp, #32
     b0c:	6818      	ldr	r0, [r3, #0]
     b0e:	f001 fc8b 	bl	2428 <__mriIssueGdbFileFStatRequest>
     b12:	4604      	mov	r4, r0
     b14:	b308      	cbz	r0, b5a <__mriSemihost_HandleMbedSemihostRequest+0x12c>
     b16:	f7ff fcb5 	bl	484 <__mriCore_GetSemihostReturnCode>
     b1a:	4601      	mov	r1, r0
     b1c:	b9e8      	cbnz	r0, b5a <__mriSemihost_HandleMbedSemihostRequest+0x12c>
     b1e:	f89d 0041 	ldrb.w	r0, [sp, #65]	; 0x41
     b22:	f89d 2042 	ldrb.w	r2, [sp, #66]	; 0x42
     b26:	0403      	lsls	r3, r0, #16
     b28:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
     b2c:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
     b30:	f89d 0040 	ldrb.w	r0, [sp, #64]	; 0x40
     b34:	4313      	orrs	r3, r2
     b36:	ea43 6000 	orr.w	r0, r3, r0, lsl #24
     b3a:	f000 fb19 	bl	1170 <__mriPlatform_SetSemihostCallReturnAndErrnoValues>
     b3e:	e00c      	b.n	b5a <__mriSemihost_HandleMbedSemihostRequest+0x12c>
     b40:	6840      	ldr	r0, [r0, #4]
     b42:	f001 fc8f 	bl	2464 <__mriIssueGdbFileUnlinkRequest>
     b46:	e7d3      	b.n	af0 <__mriSemihost_HandleMbedSemihostRequest+0xc2>
     b48:	f000 fb66 	bl	1218 <__mriPlatform_AdvanceProgramCounterToNextInstruction>
     b4c:	2000      	movs	r0, #0
     b4e:	4601      	mov	r1, r0
     b50:	f000 fb0e 	bl	1170 <__mriPlatform_SetSemihostCallReturnAndErrnoValues>
     b54:	2401      	movs	r4, #1
     b56:	e000      	b.n	b5a <__mriSemihost_HandleMbedSemihostRequest+0x12c>
     b58:	2400      	movs	r4, #0
     b5a:	4620      	mov	r0, r4
     b5c:	b019      	add	sp, #100	; 0x64
     b5e:	bd30      	pop	{r4, r5, pc}

00000b60 <findDWTComparator>:
     b60:	4b12      	ldr	r3, [pc, #72]	; (bac <findDWTComparator+0x4c>)
     b62:	b5f0      	push	{r4, r5, r6, r7, lr}
     b64:	681f      	ldr	r7, [r3, #0]
     b66:	4606      	mov	r6, r0
     b68:	0f3f      	lsrs	r7, r7, #28
     b6a:	2300      	movs	r3, #0
     b6c:	f103 6060 	add.w	r0, r3, #234881024	; 0xe000000
     b70:	f500 7081 	add.w	r0, r0, #258	; 0x102
     b74:	0100      	lsls	r0, r0, #4
     b76:	42bb      	cmp	r3, r7
     b78:	d013      	beq.n	ba2 <findDWTComparator+0x42>
     b7a:	6885      	ldr	r5, [r0, #8]
     b7c:	4c0c      	ldr	r4, [pc, #48]	; (bb0 <findDWTComparator+0x50>)
     b7e:	402c      	ands	r4, r5
     b80:	4294      	cmp	r4, r2
     b82:	d110      	bne.n	ba6 <findDWTComparator+0x46>
     b84:	6804      	ldr	r4, [r0, #0]
     b86:	42b4      	cmp	r4, r6
     b88:	d10d      	bne.n	ba6 <findDWTComparator+0x46>
     b8a:	f8d0 c004 	ldr.w	r12, [r0, #4]
     b8e:	460d      	mov	r5, r1
     b90:	2400      	movs	r4, #0
     b92:	2d01      	cmp	r5, #1
     b94:	d902      	bls.n	b9c <findDWTComparator+0x3c>
     b96:	086d      	lsrs	r5, r5, #1
     b98:	3401      	adds	r4, #1
     b9a:	e7fa      	b.n	b92 <findDWTComparator+0x32>
     b9c:	45a4      	cmp	r12, r4
     b9e:	d102      	bne.n	ba6 <findDWTComparator+0x46>
     ba0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     ba2:	2000      	movs	r0, #0
     ba4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     ba6:	3301      	adds	r3, #1
     ba8:	e7e0      	b.n	b6c <findDWTComparator+0xc>
     baa:	bf00      	nop
     bac:	e0001000 	.word	0xe0001000
     bb0:	000ffdaf 	.word	0x000ffdaf

00000bb4 <getFPBCodeComparatorCount>:
     bb4:	4b04      	ldr	r3, [pc, #16]	; (bc8 <getFPBCodeComparatorCount+0x14>)
     bb6:	6819      	ldr	r1, [r3, #0]
     bb8:	f3c1 1003 	ubfx	r0, r1, #4, #4
     bbc:	f401 42e0 	and.w	r2, r1, #28672	; 0x7000
     bc0:	ea40 2012 	orr.w	r0, r0, r2, lsr #8
     bc4:	4770      	bx	lr
     bc6:	bf00      	nop
     bc8:	e0002000 	.word	0xe0002000

00000bcc <prepareToAccessMPURegion>:
     bcc:	4b05      	ldr	r3, [pc, #20]	; (be4 <prepareToAccessMPURegion+0x18>)
     bce:	681a      	ldr	r2, [r3, #0]
     bd0:	f3c2 2107 	ubfx	r1, r2, #8, #8
     bd4:	4288      	cmp	r0, r1
     bd6:	d202      	bcs.n	bde <prepareToAccessMPURegion+0x12>
     bd8:	6098      	str	r0, [r3, #8]
     bda:	2001      	movs	r0, #1
     bdc:	4770      	bx	lr
     bde:	2000      	movs	r0, #0
     be0:	4770      	bx	lr
     be2:	bf00      	nop
     be4:	e000ed90 	.word	0xe000ed90

00000be8 <displayMemFaultCauseToGdbConsole>:
     be8:	b570      	push	{r4, r5, r6, lr}
     bea:	4d1e      	ldr	r5, [pc, #120]	; (c64 <Stack_Size+0x64>)
     bec:	6aac      	ldr	r4, [r5, #40]	; 0x28
     bee:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     bf2:	d035      	beq.n	c60 <Stack_Size+0x60>
     bf4:	481c      	ldr	r0, [pc, #112]	; (c68 <Stack_Size+0x68>)
     bf6:	f001 fe80 	bl	28fa <__mriGdbConsole_WriteString>
     bfa:	481c      	ldr	r0, [pc, #112]	; (c6c <Stack_Size+0x6c>)
     bfc:	f001 fe7d 	bl	28fa <__mriGdbConsole_WriteString>
     c00:	4630      	mov	r0, r6
     c02:	f001 fea1 	bl	2948 <__mriGdbConsole_WriteHexValue>
     c06:	0622      	lsls	r2, r4, #24
     c08:	d505      	bpl.n	c16 <Stack_Size+0x16>
     c0a:	4819      	ldr	r0, [pc, #100]	; (c70 <Stack_Size+0x70>)
     c0c:	f001 fe75 	bl	28fa <__mriGdbConsole_WriteString>
     c10:	6b68      	ldr	r0, [r5, #52]	; 0x34
     c12:	f001 fe99 	bl	2948 <__mriGdbConsole_WriteHexValue>
     c16:	06a3      	lsls	r3, r4, #26
     c18:	d502      	bpl.n	c20 <Stack_Size+0x20>
     c1a:	4816      	ldr	r0, [pc, #88]	; (c74 <Stack_Size+0x74>)
     c1c:	f001 fe6d 	bl	28fa <__mriGdbConsole_WriteString>
     c20:	06e0      	lsls	r0, r4, #27
     c22:	d507      	bpl.n	c34 <Stack_Size+0x34>
     c24:	4814      	ldr	r0, [pc, #80]	; (c78 <Stack_Size+0x78>)
     c26:	f001 fe68 	bl	28fa <__mriGdbConsole_WriteString>
     c2a:	4b14      	ldr	r3, [pc, #80]	; (c7c <Stack_Size+0x7c>)
     c2c:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     c30:	f001 fe8a 	bl	2948 <__mriGdbConsole_WriteHexValue>
     c34:	0721      	lsls	r1, r4, #28
     c36:	d507      	bpl.n	c48 <Stack_Size+0x48>
     c38:	4811      	ldr	r0, [pc, #68]	; (c80 <Stack_Size+0x80>)
     c3a:	f001 fe5e 	bl	28fa <__mriGdbConsole_WriteString>
     c3e:	480f      	ldr	r0, [pc, #60]	; (c7c <Stack_Size+0x7c>)
     c40:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     c44:	f001 fe80 	bl	2948 <__mriGdbConsole_WriteHexValue>
     c48:	07a2      	lsls	r2, r4, #30
     c4a:	d502      	bpl.n	c52 <Stack_Size+0x52>
     c4c:	480d      	ldr	r0, [pc, #52]	; (c84 <Stack_Size+0x84>)
     c4e:	f001 fe54 	bl	28fa <__mriGdbConsole_WriteString>
     c52:	07e3      	lsls	r3, r4, #31
     c54:	d504      	bpl.n	c60 <Stack_Size+0x60>
     c56:	480c      	ldr	r0, [pc, #48]	; (c88 <Stack_Size+0x88>)
     c58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     c5c:	f001 be4d 	b.w	28fa <__mriGdbConsole_WriteString>
     c60:	bd70      	pop	{r4, r5, r6, pc}
     c62:	bf00      	nop
     c64:	e000ed00 	.word	0xe000ed00
     c68:	0000399c 	.word	0x0000399c
     c6c:	000039ab 	.word	0x000039ab
     c70:	000039c0 	.word	0x000039c0
     c74:	000039d5 	.word	0x000039d5
     c78:	000039ef 	.word	0x000039ef
     c7c:	10000150 	.word	0x10000150
     c80:	00003a0c 	.word	0x00003a0c
     c84:	00003a2b 	.word	0x00003a2b
     c88:	00003a3c 	.word	0x00003a3c

00000c8c <displayBusFaultCauseToGdbConsole>:
     c8c:	b570      	push	{r4, r5, r6, lr}
     c8e:	4d21      	ldr	r5, [pc, #132]	; (d14 <displayBusFaultCauseToGdbConsole+0x88>)
     c90:	6aac      	ldr	r4, [r5, #40]	; 0x28
     c92:	0a24      	lsrs	r4, r4, #8
     c94:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     c98:	d03a      	beq.n	d10 <displayBusFaultCauseToGdbConsole+0x84>
     c9a:	481f      	ldr	r0, [pc, #124]	; (d18 <displayBusFaultCauseToGdbConsole+0x8c>)
     c9c:	f001 fe2d 	bl	28fa <__mriGdbConsole_WriteString>
     ca0:	481e      	ldr	r0, [pc, #120]	; (d1c <displayBusFaultCauseToGdbConsole+0x90>)
     ca2:	f001 fe2a 	bl	28fa <__mriGdbConsole_WriteString>
     ca6:	4630      	mov	r0, r6
     ca8:	f001 fe4e 	bl	2948 <__mriGdbConsole_WriteHexValue>
     cac:	0623      	lsls	r3, r4, #24
     cae:	d505      	bpl.n	cbc <displayBusFaultCauseToGdbConsole+0x30>
     cb0:	481b      	ldr	r0, [pc, #108]	; (d20 <displayBusFaultCauseToGdbConsole+0x94>)
     cb2:	f001 fe22 	bl	28fa <__mriGdbConsole_WriteString>
     cb6:	6ba8      	ldr	r0, [r5, #56]	; 0x38
     cb8:	f001 fe46 	bl	2948 <__mriGdbConsole_WriteHexValue>
     cbc:	06a0      	lsls	r0, r4, #26
     cbe:	d502      	bpl.n	cc6 <displayBusFaultCauseToGdbConsole+0x3a>
     cc0:	4818      	ldr	r0, [pc, #96]	; (d24 <displayBusFaultCauseToGdbConsole+0x98>)
     cc2:	f001 fe1a 	bl	28fa <__mriGdbConsole_WriteString>
     cc6:	06e1      	lsls	r1, r4, #27
     cc8:	d507      	bpl.n	cda <displayBusFaultCauseToGdbConsole+0x4e>
     cca:	4817      	ldr	r0, [pc, #92]	; (d28 <displayBusFaultCauseToGdbConsole+0x9c>)
     ccc:	f001 fe15 	bl	28fa <__mriGdbConsole_WriteString>
     cd0:	4b16      	ldr	r3, [pc, #88]	; (d2c <displayBusFaultCauseToGdbConsole+0xa0>)
     cd2:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     cd6:	f001 fe37 	bl	2948 <__mriGdbConsole_WriteHexValue>
     cda:	0722      	lsls	r2, r4, #28
     cdc:	d507      	bpl.n	cee <displayBusFaultCauseToGdbConsole+0x62>
     cde:	4814      	ldr	r0, [pc, #80]	; (d30 <displayBusFaultCauseToGdbConsole+0xa4>)
     ce0:	f001 fe0b 	bl	28fa <__mriGdbConsole_WriteString>
     ce4:	4811      	ldr	r0, [pc, #68]	; (d2c <displayBusFaultCauseToGdbConsole+0xa0>)
     ce6:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     cea:	f001 fe2d 	bl	2948 <__mriGdbConsole_WriteHexValue>
     cee:	0763      	lsls	r3, r4, #29
     cf0:	d502      	bpl.n	cf8 <displayBusFaultCauseToGdbConsole+0x6c>
     cf2:	4810      	ldr	r0, [pc, #64]	; (d34 <displayBusFaultCauseToGdbConsole+0xa8>)
     cf4:	f001 fe01 	bl	28fa <__mriGdbConsole_WriteString>
     cf8:	07a0      	lsls	r0, r4, #30
     cfa:	d502      	bpl.n	d02 <displayBusFaultCauseToGdbConsole+0x76>
     cfc:	480e      	ldr	r0, [pc, #56]	; (d38 <displayBusFaultCauseToGdbConsole+0xac>)
     cfe:	f001 fdfc 	bl	28fa <__mriGdbConsole_WriteString>
     d02:	07e1      	lsls	r1, r4, #31
     d04:	d504      	bpl.n	d10 <displayBusFaultCauseToGdbConsole+0x84>
     d06:	480d      	ldr	r0, [pc, #52]	; (d3c <displayBusFaultCauseToGdbConsole+0xb0>)
     d08:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     d0c:	f001 bdf5 	b.w	28fa <__mriGdbConsole_WriteString>
     d10:	bd70      	pop	{r4, r5, r6, pc}
     d12:	bf00      	nop
     d14:	e000ed00 	.word	0xe000ed00
     d18:	00003a53 	.word	0x00003a53
     d1c:	000039ab 	.word	0x000039ab
     d20:	000039c0 	.word	0x000039c0
     d24:	000039d5 	.word	0x000039d5
     d28:	000039ef 	.word	0x000039ef
     d2c:	10000150 	.word	0x10000150
     d30:	00003a0c 	.word	0x00003a0c
     d34:	00003a62 	.word	0x00003a62
     d38:	00003a7d 	.word	0x00003a7d
     d3c:	00003a96 	.word	0x00003a96

00000d40 <displayUsageFaultCauseToGdbConsole>:
     d40:	4b17      	ldr	r3, [pc, #92]	; (da0 <displayUsageFaultCauseToGdbConsole+0x60>)
     d42:	b510      	push	{r4, lr}
     d44:	6a9c      	ldr	r4, [r3, #40]	; 0x28
     d46:	0c24      	lsrs	r4, r4, #16
     d48:	d028      	beq.n	d9c <displayUsageFaultCauseToGdbConsole+0x5c>
     d4a:	4816      	ldr	r0, [pc, #88]	; (da4 <displayUsageFaultCauseToGdbConsole+0x64>)
     d4c:	f001 fdd5 	bl	28fa <__mriGdbConsole_WriteString>
     d50:	4815      	ldr	r0, [pc, #84]	; (da8 <displayUsageFaultCauseToGdbConsole+0x68>)
     d52:	f001 fdd2 	bl	28fa <__mriGdbConsole_WriteString>
     d56:	4620      	mov	r0, r4
     d58:	f001 fdf6 	bl	2948 <__mriGdbConsole_WriteHexValue>
     d5c:	05a1      	lsls	r1, r4, #22
     d5e:	d502      	bpl.n	d66 <displayUsageFaultCauseToGdbConsole+0x26>
     d60:	4812      	ldr	r0, [pc, #72]	; (dac <displayUsageFaultCauseToGdbConsole+0x6c>)
     d62:	f001 fdca 	bl	28fa <__mriGdbConsole_WriteString>
     d66:	05e2      	lsls	r2, r4, #23
     d68:	d502      	bpl.n	d70 <displayUsageFaultCauseToGdbConsole+0x30>
     d6a:	4811      	ldr	r0, [pc, #68]	; (db0 <displayUsageFaultCauseToGdbConsole+0x70>)
     d6c:	f001 fdc5 	bl	28fa <__mriGdbConsole_WriteString>
     d70:	0723      	lsls	r3, r4, #28
     d72:	d502      	bpl.n	d7a <displayUsageFaultCauseToGdbConsole+0x3a>
     d74:	480f      	ldr	r0, [pc, #60]	; (db4 <displayUsageFaultCauseToGdbConsole+0x74>)
     d76:	f001 fdc0 	bl	28fa <__mriGdbConsole_WriteString>
     d7a:	0760      	lsls	r0, r4, #29
     d7c:	d502      	bpl.n	d84 <displayUsageFaultCauseToGdbConsole+0x44>
     d7e:	480e      	ldr	r0, [pc, #56]	; (db8 <displayUsageFaultCauseToGdbConsole+0x78>)
     d80:	f001 fdbb 	bl	28fa <__mriGdbConsole_WriteString>
     d84:	07a1      	lsls	r1, r4, #30
     d86:	d502      	bpl.n	d8e <displayUsageFaultCauseToGdbConsole+0x4e>
     d88:	480c      	ldr	r0, [pc, #48]	; (dbc <displayUsageFaultCauseToGdbConsole+0x7c>)
     d8a:	f001 fdb6 	bl	28fa <__mriGdbConsole_WriteString>
     d8e:	07e2      	lsls	r2, r4, #31
     d90:	d504      	bpl.n	d9c <displayUsageFaultCauseToGdbConsole+0x5c>
     d92:	480b      	ldr	r0, [pc, #44]	; (dc0 <displayUsageFaultCauseToGdbConsole+0x80>)
     d94:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     d98:	f001 bdaf 	b.w	28fa <__mriGdbConsole_WriteString>
     d9c:	bd10      	pop	{r4, pc}
     d9e:	bf00      	nop
     da0:	e000ed00 	.word	0xe000ed00
     da4:	00003ab0 	.word	0x00003ab0
     da8:	000039ab 	.word	0x000039ab
     dac:	00003ac1 	.word	0x00003ac1
     db0:	00003ad5 	.word	0x00003ad5
     db4:	00003aeb 	.word	0x00003aeb
     db8:	00003b03 	.word	0x00003b03
     dbc:	00003b27 	.word	0x00003b27
     dc0:	00003b3a 	.word	0x00003b3a

00000dc4 <calculateFPBComparatorValue>:
     dc4:	4b0c      	ldr	r3, [pc, #48]	; (df8 <calculateFPBComparatorValue+0x34>)
     dc6:	4003      	ands	r3, r0
     dc8:	b113      	cbz	r3, dd0 <calculateFPBComparatorValue+0xc>
     dca:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     dce:	4770      	bx	lr
     dd0:	f020 4260 	bic.w	r2, r0, #3758096384	; 0xe0000000
     dd4:	f022 0303 	bic.w	r3, r2, #3
     dd8:	f043 0201 	orr.w	r2, r3, #1
     ddc:	b939      	cbnz	r1, dee <calculateFPBComparatorValue+0x2a>
     dde:	f010 0f02 	tst.w	r0, #2
     de2:	bf0c      	ite	eq
     de4:	f04f 4080 	moveq.w	r0, #1073741824	; 0x40000000
     de8:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
     dec:	e001      	b.n	df2 <calculateFPBComparatorValue+0x2e>
     dee:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
     df2:	4310      	orrs	r0, r2
     df4:	4770      	bx	lr
     df6:	bf00      	nop
     df8:	e0000001 	.word	0xe0000001

00000dfc <findFPBBreakpointComparator>:
     dfc:	b538      	push	{r3, r4, r5, lr}
     dfe:	f7ff ffe1 	bl	dc4 <calculateFPBComparatorValue>
     e02:	4604      	mov	r4, r0
     e04:	f7ff fed6 	bl	bb4 <getFPBCodeComparatorCount>
     e08:	4a08      	ldr	r2, [pc, #32]	; (e2c <findFPBBreakpointComparator+0x30>)
     e0a:	2300      	movs	r3, #0
     e0c:	4283      	cmp	r3, r0
     e0e:	4611      	mov	r1, r2
     e10:	d009      	beq.n	e26 <findFPBBreakpointComparator+0x2a>
     e12:	f852 5b04 	ldr.w	r5, [r2], #4
     e16:	f025 5500 	bic.w	r5, r5, #536870912	; 0x20000000
     e1a:	f025 0502 	bic.w	r5, r5, #2
     e1e:	42ac      	cmp	r4, r5
     e20:	d002      	beq.n	e28 <findFPBBreakpointComparator+0x2c>
     e22:	3301      	adds	r3, #1
     e24:	e7f2      	b.n	e0c <findFPBBreakpointComparator+0x10>
     e26:	2100      	movs	r1, #0
     e28:	4608      	mov	r0, r1
     e2a:	bd38      	pop	{r3, r4, r5, pc}
     e2c:	e0002008 	.word	0xe0002008

00000e30 <isMPUNotPresent>:
     e30:	4b04      	ldr	r3, [pc, #16]	; (e44 <isMPUNotPresent+0x14>)
     e32:	6818      	ldr	r0, [r3, #0]
     e34:	f3c0 2107 	ubfx	r1, r0, #8, #8
     e38:	f1d1 0001 	rsbs	r0, r1, #1
     e3c:	bf38      	it	cc
     e3e:	2000      	movcc	r0, #0
     e40:	4770      	bx	lr
     e42:	bf00      	nop
     e44:	e000ed90 	.word	0xe000ed90

00000e48 <disableMPU>:
     e48:	b508      	push	{r3, lr}
     e4a:	f7ff fff1 	bl	e30 <isMPUNotPresent>
     e4e:	b940      	cbnz	r0, e62 <disableMPU+0x1a>
     e50:	4b04      	ldr	r3, [pc, #16]	; (e64 <disableMPU+0x1c>)
     e52:	685a      	ldr	r2, [r3, #4]
     e54:	f022 0001 	bic.w	r0, r2, #1
     e58:	6058      	str	r0, [r3, #4]
     e5a:	f3bf 8f4f 	dsb	sy
     e5e:	f3bf 8f6f 	isb	sy
     e62:	bd08      	pop	{r3, pc}
     e64:	e000ed90 	.word	0xe000ed90

00000e68 <sendRegisterForTResponse>:
     e68:	b573      	push	{r0, r1, r4, r5, r6, lr}
     e6a:	4604      	mov	r4, r0
     e6c:	ad02      	add	r5, sp, #8
     e6e:	f845 2d04 	str.w	r2, [r5, #-4]!
     e72:	f000 ff97 	bl	1da4 <__mriBuffer_WriteByteAsHex>
     e76:	4620      	mov	r0, r4
     e78:	213a      	movs	r1, #58	; 0x3a
     e7a:	f000 ff6d 	bl	1d58 <__mriBuffer_WriteChar>
     e7e:	3d01      	subs	r5, #1
     e80:	f10d 0607 	add.w	r6, sp, #7
     e84:	f815 1f01 	ldrb.w	r1, [r5, #1]!
     e88:	4620      	mov	r0, r4
     e8a:	f000 ff8b 	bl	1da4 <__mriBuffer_WriteByteAsHex>
     e8e:	42b5      	cmp	r5, r6
     e90:	d1f8      	bne.n	e84 <sendRegisterForTResponse+0x1c>
     e92:	4620      	mov	r0, r4
     e94:	213b      	movs	r1, #59	; 0x3b
     e96:	f000 ff5f 	bl	1d58 <__mriBuffer_WriteChar>
     e9a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

00000e9c <__mriPlatform_DisableSingleStep>:
     e9c:	4b06      	ldr	r3, [pc, #24]	; (eb8 <__mriPlatform_DisableSingleStep+0x1c>)
     e9e:	4907      	ldr	r1, [pc, #28]	; (ebc <__mriPlatform_DisableSingleStep+0x20>)
     ea0:	68da      	ldr	r2, [r3, #12]
     ea2:	f422 2080 	bic.w	r0, r2, #262144	; 0x40000
     ea6:	60d8      	str	r0, [r3, #12]
     ea8:	f8d1 3200 	ldr.w	r3, [r1, #512]	; 0x200
     eac:	f023 0204 	bic.w	r2, r3, #4
     eb0:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
     eb4:	4770      	bx	lr
     eb6:	bf00      	nop
     eb8:	e000edf0 	.word	0xe000edf0
     ebc:	10000150 	.word	0x10000150

00000ec0 <__mriCortexMInit>:
     ec0:	b510      	push	{r4, lr}
     ec2:	f000 fbcd 	bl	1660 <__mriARMv7MAsmInit>
     ec6:	2100      	movs	r1, #0
     ec8:	f44f 723e 	mov.w	r2, #760	; 0x2f8
     ecc:	4823      	ldr	r0, [pc, #140]	; (f5c <__mriCortexMInit+0x9c>)
     ece:	f002 fb5c 	bl	358a <memset>
     ed2:	4b23      	ldr	r3, [pc, #140]	; (f60 <__mriCortexMInit+0xa0>)
     ed4:	4923      	ldr	r1, [pc, #140]	; (f64 <__mriCortexMInit+0xa4>)
     ed6:	68da      	ldr	r2, [r3, #12]
     ed8:	f042 7080 	orr.w	r0, r2, #16777216	; 0x1000000
     edc:	60d8      	str	r0, [r3, #12]
     ede:	680c      	ldr	r4, [r1, #0]
     ee0:	2300      	movs	r3, #0
     ee2:	0f20      	lsrs	r0, r4, #28
     ee4:	f103 6260 	add.w	r2, r3, #234881024	; 0xe000000
     ee8:	f502 7181 	add.w	r1, r2, #258	; 0x102
     eec:	010c      	lsls	r4, r1, #4
     eee:	4283      	cmp	r3, r0
     ef0:	d00a      	beq.n	f08 <__mriCortexMInit+0x48>
     ef2:	2100      	movs	r1, #0
     ef4:	6021      	str	r1, [r4, #0]
     ef6:	6061      	str	r1, [r4, #4]
     ef8:	68a2      	ldr	r2, [r4, #8]
     efa:	3301      	adds	r3, #1
     efc:	f422 71d7 	bic.w	r1, r2, #430	; 0x1ae
     f00:	f021 0201 	bic.w	r2, r1, #1
     f04:	60a2      	str	r2, [r4, #8]
     f06:	e7ed      	b.n	ee4 <__mriCortexMInit+0x24>
     f08:	f7ff fe54 	bl	bb4 <getFPBCodeComparatorCount>
     f0c:	4a16      	ldr	r2, [pc, #88]	; (f68 <__mriCortexMInit+0xa8>)
     f0e:	6813      	ldr	r3, [r2, #0]
     f10:	f3c3 2103 	ubfx	r1, r3, #8, #4
     f14:	1840      	adds	r0, r0, r1
     f16:	4915      	ldr	r1, [pc, #84]	; (f6c <__mriCortexMInit+0xac>)
     f18:	2300      	movs	r3, #0
     f1a:	4283      	cmp	r3, r0
     f1c:	d004      	beq.n	f28 <__mriCortexMInit+0x68>
     f1e:	2400      	movs	r4, #0
     f20:	f841 4b04 	str.w	r4, [r1], #4
     f24:	3301      	adds	r3, #1
     f26:	e7f8      	b.n	f1a <__mriCortexMInit+0x5a>
     f28:	6810      	ldr	r0, [r2, #0]
     f2a:	f040 0403 	orr.w	r4, r0, #3
     f2e:	6014      	str	r4, [r2, #0]
     f30:	4c0f      	ldr	r4, [pc, #60]	; (f70 <__mriCortexMInit+0xb0>)
     f32:	2208      	movs	r2, #8
     f34:	77e2      	strb	r2, [r4, #31]
     f36:	f884 2022 	strb.w	r2, [r4, #34]	; 0x22
     f3a:	f884 2023 	strb.w	r2, [r4, #35]	; 0x23
     f3e:	f7ff ffad 	bl	e9c <__mriPlatform_DisableSingleStep>
     f42:	4b07      	ldr	r3, [pc, #28]	; (f60 <__mriCortexMInit+0xa0>)
     f44:	2200      	movs	r2, #0
     f46:	68d9      	ldr	r1, [r3, #12]
     f48:	f421 3000 	bic.w	r0, r1, #131072	; 0x20000
     f4c:	60d8      	str	r0, [r3, #12]
     f4e:	f884 2020 	strb.w	r2, [r4, #32]
     f52:	68d9      	ldr	r1, [r3, #12]
     f54:	f441 3080 	orr.w	r0, r1, #65536	; 0x10000
     f58:	60d8      	str	r0, [r3, #12]
     f5a:	bd10      	pop	{r4, pc}
     f5c:	10000150 	.word	0x10000150
     f60:	e000edf0 	.word	0xe000edf0
     f64:	e0001000 	.word	0xe0001000
     f68:	e0002000 	.word	0xe0002000
     f6c:	e0002008 	.word	0xe0002008
     f70:	e000ed00 	.word	0xe000ed00

00000f74 <__mriPlatform_IsSingleStepping>:
     f74:	4b02      	ldr	r3, [pc, #8]	; (f80 <__mriPlatform_IsSingleStepping+0xc>)
     f76:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
     f7a:	f000 0004 	and.w	r0, r0, #4
     f7e:	4770      	bx	lr
     f80:	10000150 	.word	0x10000150

00000f84 <__mriPlatform_GetPacketBuffer>:
     f84:	4800      	ldr	r0, [pc, #0]	; (f88 <__mriPlatform_GetPacketBuffer+0x4>)
     f86:	4770      	bx	lr
     f88:	100003bc 	.word	0x100003bc

00000f8c <__mriPlatform_GetPacketBufferSize>:
     f8c:	2089      	movs	r0, #137	; 0x89
     f8e:	4770      	bx	lr

00000f90 <__mriPlatform_DetermineCauseOfException>:
     f90:	b510      	push	{r4, lr}
     f92:	f3ef 8305 	mrs	r3, IPSR
     f96:	b2d8      	uxtb	r0, r3
     f98:	1e81      	subs	r1, r0, #2
     f9a:	2916      	cmp	r1, #22
     f9c:	d824      	bhi.n	fe8 <__mriPlatform_DetermineCauseOfException+0x58>
     f9e:	e8df f001 	tbb	[pc, r1]
     fa2:	250c      	.short	0x250c
     fa4:	23100e25 	.word	0x23100e25
     fa8:	23232323 	.word	0x23232323
     fac:	23232312 	.word	0x23232312
     fb0:	23232323 	.word	0x23232323
     fb4:	0c0c0c23 	.word	0x0c0c0c23
     fb8:	0c          	.byte	0x0c
     fb9:	00          	.byte	0x00
     fba:	2002      	movs	r0, #2
     fbc:	bd10      	pop	{r4, pc}
     fbe:	200a      	movs	r0, #10
     fc0:	bd10      	pop	{r4, pc}
     fc2:	2004      	movs	r0, #4
     fc4:	bd10      	pop	{r4, pc}
     fc6:	4a0a      	ldr	r2, [pc, #40]	; (ff0 <__mriPlatform_DetermineCauseOfException+0x60>)
     fc8:	2300      	movs	r3, #0
     fca:	6b10      	ldr	r0, [r2, #48]	; 0x30
     fcc:	4a09      	ldr	r2, [pc, #36]	; (ff4 <__mriPlatform_DetermineCauseOfException+0x64>)
     fce:	00dc      	lsls	r4, r3, #3
     fd0:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
     fd4:	4201      	tst	r1, r0
     fd6:	d004      	beq.n	fe2 <__mriPlatform_DetermineCauseOfException+0x52>
     fd8:	4805      	ldr	r0, [pc, #20]	; (ff0 <__mriPlatform_DetermineCauseOfException+0x60>)
     fda:	1912      	adds	r2, r2, r4
     fdc:	6301      	str	r1, [r0, #48]	; 0x30
     fde:	7910      	ldrb	r0, [r2, #4]
     fe0:	bd10      	pop	{r4, pc}
     fe2:	3301      	adds	r3, #1
     fe4:	2b04      	cmp	r3, #4
     fe6:	d1f1      	bne.n	fcc <__mriPlatform_DetermineCauseOfException+0x3c>
     fe8:	2011      	movs	r0, #17
     fea:	bd10      	pop	{r4, pc}
     fec:	200b      	movs	r0, #11
     fee:	bd10      	pop	{r4, pc}
     ff0:	e000ed00 	.word	0xe000ed00
     ff4:	00003b9c 	.word	0x00003b9c

00000ff8 <__mriPlatform_DisplayFaultCauseToGdbConsole>:
     ff8:	b510      	push	{r4, lr}
     ffa:	f3ef 8305 	mrs	r3, IPSR
     ffe:	b2d8      	uxtb	r0, r3
    1000:	1ec1      	subs	r1, r0, #3
    1002:	2903      	cmp	r1, #3
    1004:	d82f      	bhi.n	1066 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x6e>
    1006:	e8df f001 	tbb	[pc, r1]
    100a:	2102      	.short	0x2102
    100c:	2724      	.short	0x2724
    100e:	4a16      	ldr	r2, [pc, #88]	; (1068 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x70>)
    1010:	4816      	ldr	r0, [pc, #88]	; (106c <__mriPlatform_DisplayFaultCauseToGdbConsole+0x74>)
    1012:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
    1014:	f001 fc71 	bl	28fa <__mriGdbConsole_WriteString>
    1018:	4815      	ldr	r0, [pc, #84]	; (1070 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x78>)
    101a:	f001 fc6e 	bl	28fa <__mriGdbConsole_WriteString>
    101e:	4620      	mov	r0, r4
    1020:	f001 fc92 	bl	2948 <__mriGdbConsole_WriteHexValue>
    1024:	2c00      	cmp	r4, #0
    1026:	da02      	bge.n	102e <__mriPlatform_DisplayFaultCauseToGdbConsole+0x36>
    1028:	4812      	ldr	r0, [pc, #72]	; (1074 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x7c>)
    102a:	f001 fc66 	bl	28fa <__mriGdbConsole_WriteString>
    102e:	07a3      	lsls	r3, r4, #30
    1030:	d502      	bpl.n	1038 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x40>
    1032:	4811      	ldr	r0, [pc, #68]	; (1078 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x80>)
    1034:	f001 fc61 	bl	28fa <__mriGdbConsole_WriteString>
    1038:	0060      	lsls	r0, r4, #1
    103a:	d50f      	bpl.n	105c <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
    103c:	480f      	ldr	r0, [pc, #60]	; (107c <__mriPlatform_DisplayFaultCauseToGdbConsole+0x84>)
    103e:	f001 fc5c 	bl	28fa <__mriGdbConsole_WriteString>
    1042:	f7ff fdd1 	bl	be8 <displayMemFaultCauseToGdbConsole>
    1046:	f7ff fe21 	bl	c8c <displayBusFaultCauseToGdbConsole>
    104a:	e005      	b.n	1058 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x60>
    104c:	f7ff fdcc 	bl	be8 <displayMemFaultCauseToGdbConsole>
    1050:	e004      	b.n	105c <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
    1052:	f7ff fe1b 	bl	c8c <displayBusFaultCauseToGdbConsole>
    1056:	e001      	b.n	105c <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
    1058:	f7ff fe72 	bl	d40 <displayUsageFaultCauseToGdbConsole>
    105c:	4808      	ldr	r0, [pc, #32]	; (1080 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x88>)
    105e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1062:	f001 bc4a 	b.w	28fa <__mriGdbConsole_WriteString>
    1066:	bd10      	pop	{r4, pc}
    1068:	e000ed00 	.word	0xe000ed00
    106c:	00003b55 	.word	0x00003b55
    1070:	000039ab 	.word	0x000039ab
    1074:	00003b65 	.word	0x00003b65
    1078:	00003b76 	.word	0x00003b76
    107c:	00003b8d 	.word	0x00003b8d
    1080:	00003b99 	.word	0x00003b99

00001084 <__mriPlatform_LeavingDebugger>:
    1084:	b570      	push	{r4, r5, r6, lr}
    1086:	4c20      	ldr	r4, [pc, #128]	; (1108 <__mriPlatform_LeavingDebugger+0x84>)
    1088:	f7ff fede 	bl	e48 <disableMPU>
    108c:	6820      	ldr	r0, [r4, #0]
    108e:	4d1f      	ldr	r5, [pc, #124]	; (110c <__mriPlatform_LeavingDebugger+0x88>)
    1090:	f3c0 2107 	ubfx	r1, r0, #8, #8
    1094:	1e48      	subs	r0, r1, #1
    1096:	f7ff fd99 	bl	bcc <prepareToAccessMPURegion>
    109a:	f8d5 625c 	ldr.w	r6, [r5, #604]	; 0x25c
    109e:	f7ff fec7 	bl	e30 <isMPUNotPresent>
    10a2:	b908      	cbnz	r0, 10a8 <__mriPlatform_LeavingDebugger+0x24>
    10a4:	0176      	lsls	r6, r6, #5
    10a6:	60e6      	str	r6, [r4, #12]
    10a8:	f8d5 4260 	ldr.w	r4, [r5, #608]	; 0x260
    10ac:	f7ff fec0 	bl	e30 <isMPUNotPresent>
    10b0:	b908      	cbnz	r0, 10b6 <__mriPlatform_LeavingDebugger+0x32>
    10b2:	4b15      	ldr	r3, [pc, #84]	; (1108 <__mriPlatform_LeavingDebugger+0x84>)
    10b4:	611c      	str	r4, [r3, #16]
    10b6:	4c15      	ldr	r4, [pc, #84]	; (110c <__mriPlatform_LeavingDebugger+0x88>)
    10b8:	f8d4 0258 	ldr.w	r0, [r4, #600]	; 0x258
    10bc:	f7ff fd86 	bl	bcc <prepareToAccessMPURegion>
    10c0:	f8d4 4254 	ldr.w	r4, [r4, #596]	; 0x254
    10c4:	f7ff feb4 	bl	e30 <isMPUNotPresent>
    10c8:	b928      	cbnz	r0, 10d6 <__mriPlatform_LeavingDebugger+0x52>
    10ca:	4a0f      	ldr	r2, [pc, #60]	; (1108 <__mriPlatform_LeavingDebugger+0x84>)
    10cc:	6054      	str	r4, [r2, #4]
    10ce:	f3bf 8f4f 	dsb	sy
    10d2:	f3bf 8f6f 	isb	sy
    10d6:	4b0d      	ldr	r3, [pc, #52]	; (110c <__mriPlatform_LeavingDebugger+0x88>)
    10d8:	461a      	mov	r2, r3
    10da:	6811      	ldr	r1, [r2, #0]
    10dc:	480c      	ldr	r0, [pc, #48]	; (1110 <__mriPlatform_LeavingDebugger+0x8c>)
    10de:	3304      	adds	r3, #4
    10e0:	4281      	cmp	r1, r0
    10e2:	490c      	ldr	r1, [pc, #48]	; (1114 <__mriPlatform_LeavingDebugger+0x90>)
    10e4:	d102      	bne.n	10ec <__mriPlatform_LeavingDebugger+0x68>
    10e6:	428b      	cmp	r3, r1
    10e8:	461a      	mov	r2, r3
    10ea:	d3f5      	bcc.n	10d8 <__mriPlatform_LeavingDebugger+0x54>
    10ec:	4b07      	ldr	r3, [pc, #28]	; (110c <__mriPlatform_LeavingDebugger+0x88>)
    10ee:	1a8a      	subs	r2, r1, r2
    10f0:	f8d3 0268 	ldr.w	r0, [r3, #616]	; 0x268
    10f4:	4908      	ldr	r1, [pc, #32]	; (1118 <__mriPlatform_LeavingDebugger+0x94>)
    10f6:	4282      	cmp	r2, r0
    10f8:	bfc8      	it	gt
    10fa:	f8c3 2268 	strgt.w	r2, [r3, #616]	; 0x268
    10fe:	68ca      	ldr	r2, [r1, #12]
    1100:	f422 3300 	bic.w	r3, r2, #131072	; 0x20000
    1104:	60cb      	str	r3, [r1, #12]
    1106:	bd70      	pop	{r4, r5, r6, pc}
    1108:	e000ed90 	.word	0xe000ed90
    110c:	10000150 	.word	0x10000150
    1110:	deadbeef 	.word	0xdeadbeef
    1114:	10000350 	.word	0x10000350
    1118:	e000edf0 	.word	0xe000edf0

0000111c <__mriPlatform_GetProgramCounter>:
    111c:	4b01      	ldr	r3, [pc, #4]	; (1124 <__mriPlatform_GetProgramCounter+0x8>)
    111e:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
    1122:	4770      	bx	lr
    1124:	10000150 	.word	0x10000150

00001128 <__mriPlatform_SetProgramCounter>:
    1128:	4b01      	ldr	r3, [pc, #4]	; (1130 <__mriPlatform_SetProgramCounter+0x8>)
    112a:	f8c3 0248 	str.w	r0, [r3, #584]	; 0x248
    112e:	4770      	bx	lr
    1130:	10000150 	.word	0x10000150

00001134 <__mriPlatform_WasProgramCounterModifiedByUser>:
    1134:	4b04      	ldr	r3, [pc, #16]	; (1148 <__mriPlatform_WasProgramCounterModifiedByUser+0x14>)
    1136:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
    113a:	f8d3 1250 	ldr.w	r1, [r3, #592]	; 0x250
    113e:	1a40      	subs	r0, r0, r1
    1140:	bf18      	it	ne
    1142:	2001      	movne	r0, #1
    1144:	4770      	bx	lr
    1146:	bf00      	nop
    1148:	10000150 	.word	0x10000150

0000114c <__mriPlatform_GetSemihostCallParameters>:
    114c:	4a07      	ldr	r2, [pc, #28]	; (116c <__mriPlatform_GetSemihostCallParameters+0x20>)
    114e:	b530      	push	{r4, r5, lr}
    1150:	f8d2 1218 	ldr.w	r1, [r2, #536]	; 0x218
    1154:	f8d2 5210 	ldr.w	r5, [r2, #528]	; 0x210
    1158:	f8d2 4214 	ldr.w	r4, [r2, #532]	; 0x214
    115c:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
    1160:	6084      	str	r4, [r0, #8]
    1162:	e880 0024 	stmia.w	r0, {r2, r5}
    1166:	60c1      	str	r1, [r0, #12]
    1168:	bd30      	pop	{r4, r5, pc}
    116a:	bf00      	nop
    116c:	10000150 	.word	0x10000150

00001170 <__mriPlatform_SetSemihostCallReturnAndErrnoValues>:
    1170:	4b03      	ldr	r3, [pc, #12]	; (1180 <__mriPlatform_SetSemihostCallReturnAndErrnoValues+0x10>)
    1172:	2800      	cmp	r0, #0
    1174:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
    1178:	bfbc      	itt	lt
    117a:	4b02      	ldrlt	r3, [pc, #8]	; (1184 <__mriPlatform_SetSemihostCallReturnAndErrnoValues+0x14>)
    117c:	6019      	strlt	r1, [r3, #0]
    117e:	4770      	bx	lr
    1180:	10000150 	.word	0x10000150
    1184:	10000450 	.word	0x10000450

00001188 <__mriPlatform_WasMemoryFaultEncountered>:
    1188:	f3bf 8f4f 	dsb	sy
    118c:	4b05      	ldr	r3, [pc, #20]	; (11a4 <__mriPlatform_WasMemoryFaultEncountered+0x1c>)
    118e:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
    1192:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
    1196:	f000 0002 	and.w	r0, r0, #2
    119a:	f022 0102 	bic.w	r1, r2, #2
    119e:	f8c3 1200 	str.w	r1, [r3, #512]	; 0x200
    11a2:	4770      	bx	lr
    11a4:	10000150 	.word	0x10000150

000011a8 <throwingMemRead16>:
    11a8:	b510      	push	{r4, lr}
    11aa:	f000 fb1f 	bl	17ec <__mriPlatform_MemRead16>
    11ae:	4604      	mov	r4, r0
    11b0:	f7ff ffea 	bl	1188 <__mriPlatform_WasMemoryFaultEncountered>
    11b4:	b130      	cbz	r0, 11c4 <throwingMemRead16+0x1c>
    11b6:	4b04      	ldr	r3, [pc, #16]	; (11c8 <throwingMemRead16+0x20>)
    11b8:	2400      	movs	r4, #0
    11ba:	681a      	ldr	r2, [r3, #0]
    11bc:	2a0a      	cmp	r2, #10
    11be:	bfb8      	it	lt
    11c0:	220a      	movlt	r2, #10
    11c2:	601a      	str	r2, [r3, #0]
    11c4:	4620      	mov	r0, r4
    11c6:	bd10      	pop	{r4, pc}
    11c8:	1000014c 	.word	0x1000014c

000011cc <getFirstHalfWordOfCurrentInstruction>:
    11cc:	4b02      	ldr	r3, [pc, #8]	; (11d8 <getFirstHalfWordOfCurrentInstruction+0xc>)
    11ce:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
    11d2:	f7ff bfe9 	b.w	11a8 <throwingMemRead16>
    11d6:	bf00      	nop
    11d8:	10000150 	.word	0x10000150

000011dc <__mriPlatform_TypeOfCurrentInstruction>:
    11dc:	b538      	push	{r3, r4, r5, lr}
    11de:	4d0d      	ldr	r5, [pc, #52]	; (1214 <__mriPlatform_TypeOfCurrentInstruction+0x38>)
    11e0:	2400      	movs	r4, #0
    11e2:	602c      	str	r4, [r5, #0]
    11e4:	f7ff fff2 	bl	11cc <getFirstHalfWordOfCurrentInstruction>
    11e8:	682b      	ldr	r3, [r5, #0]
    11ea:	b113      	cbz	r3, 11f2 <__mriPlatform_TypeOfCurrentInstruction+0x16>
    11ec:	602c      	str	r4, [r5, #0]
    11ee:	4620      	mov	r0, r4
    11f0:	bd38      	pop	{r3, r4, r5, pc}
    11f2:	f64b 61ab 	movw	r1, #48811	; 0xbeab
    11f6:	4288      	cmp	r0, r1
    11f8:	d008      	beq.n	120c <__mriPlatform_TypeOfCurrentInstruction+0x30>
    11fa:	3154      	adds	r1, #84	; 0x54
    11fc:	4288      	cmp	r0, r1
    11fe:	d007      	beq.n	1210 <__mriPlatform_TypeOfCurrentInstruction+0x34>
    1200:	f5b0 4f3e 	cmp.w	r0, #48640	; 0xbe00
    1204:	bf0c      	ite	eq
    1206:	2003      	moveq	r0, #3
    1208:	2000      	movne	r0, #0
    120a:	bd38      	pop	{r3, r4, r5, pc}
    120c:	2001      	movs	r0, #1
    120e:	bd38      	pop	{r3, r4, r5, pc}
    1210:	2002      	movs	r0, #2
    1212:	bd38      	pop	{r3, r4, r5, pc}
    1214:	1000014c 	.word	0x1000014c

00001218 <__mriPlatform_AdvanceProgramCounterToNextInstruction>:
    1218:	b538      	push	{r3, r4, r5, lr}
    121a:	4c0f      	ldr	r4, [pc, #60]	; (1258 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x40>)
    121c:	2500      	movs	r5, #0
    121e:	6025      	str	r5, [r4, #0]
    1220:	f7ff ffd4 	bl	11cc <getFirstHalfWordOfCurrentInstruction>
    1224:	6823      	ldr	r3, [r4, #0]
    1226:	b10b      	cbz	r3, 122c <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x14>
    1228:	6025      	str	r5, [r4, #0]
    122a:	bd38      	pop	{r3, r4, r5, pc}
    122c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
    1230:	f5b0 4f68 	cmp.w	r0, #59392	; 0xe800
    1234:	4909      	ldr	r1, [pc, #36]	; (125c <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x44>)
    1236:	d005      	beq.n	1244 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x2c>
    1238:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
    123c:	d002      	beq.n	1244 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x2c>
    123e:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
    1242:	d103      	bne.n	124c <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x34>
    1244:	f8d1 0248 	ldr.w	r0, [r1, #584]	; 0x248
    1248:	1d03      	adds	r3, r0, #4
    124a:	e002      	b.n	1252 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x3a>
    124c:	f8d1 2248 	ldr.w	r2, [r1, #584]	; 0x248
    1250:	1c93      	adds	r3, r2, #2
    1252:	f8c1 3248 	str.w	r3, [r1, #584]	; 0x248
    1256:	bd38      	pop	{r3, r4, r5, pc}
    1258:	1000014c 	.word	0x1000014c
    125c:	10000150 	.word	0x10000150

00001260 <__mriPlatform_WriteTResponseRegistersToBuffer>:
    1260:	b538      	push	{r3, r4, r5, lr}
    1262:	4c0d      	ldr	r4, [pc, #52]	; (1298 <__mriPlatform_WriteTResponseRegistersToBuffer+0x38>)
    1264:	4605      	mov	r5, r0
    1266:	210c      	movs	r1, #12
    1268:	f8d4 223c 	ldr.w	r2, [r4, #572]	; 0x23c
    126c:	f7ff fdfc 	bl	e68 <sendRegisterForTResponse>
    1270:	4628      	mov	r0, r5
    1272:	210d      	movs	r1, #13
    1274:	f8d4 2240 	ldr.w	r2, [r4, #576]	; 0x240
    1278:	f7ff fdf6 	bl	e68 <sendRegisterForTResponse>
    127c:	4628      	mov	r0, r5
    127e:	210e      	movs	r1, #14
    1280:	f8d4 2244 	ldr.w	r2, [r4, #580]	; 0x244
    1284:	f7ff fdf0 	bl	e68 <sendRegisterForTResponse>
    1288:	f8d4 2248 	ldr.w	r2, [r4, #584]	; 0x248
    128c:	4628      	mov	r0, r5
    128e:	210f      	movs	r1, #15
    1290:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1294:	f7ff bde8 	b.w	e68 <sendRegisterForTResponse>
    1298:	10000150 	.word	0x10000150

0000129c <__mriPlatform_CopyContextToBuffer>:
    129c:	b570      	push	{r4, r5, r6, lr}
    129e:	4c06      	ldr	r4, [pc, #24]	; (12b8 <__mriPlatform_CopyContextToBuffer+0x1c>)
    12a0:	4606      	mov	r6, r0
    12a2:	f104 0544 	add.w	r5, r4, #68	; 0x44
    12a6:	f814 1f01 	ldrb.w	r1, [r4, #1]!
    12aa:	4630      	mov	r0, r6
    12ac:	f000 fd7a 	bl	1da4 <__mriBuffer_WriteByteAsHex>
    12b0:	42ac      	cmp	r4, r5
    12b2:	d1f8      	bne.n	12a6 <__mriPlatform_CopyContextToBuffer+0xa>
    12b4:	bd70      	pop	{r4, r5, r6, pc}
    12b6:	bf00      	nop
    12b8:	1000035b 	.word	0x1000035b

000012bc <__mriPlatform_CopyContextFromBuffer>:
    12bc:	b570      	push	{r4, r5, r6, lr}
    12be:	4c06      	ldr	r4, [pc, #24]	; (12d8 <__mriPlatform_CopyContextFromBuffer+0x1c>)
    12c0:	4606      	mov	r6, r0
    12c2:	f104 0544 	add.w	r5, r4, #68	; 0x44
    12c6:	4630      	mov	r0, r6
    12c8:	f000 fd88 	bl	1ddc <__mriBuffer_ReadByteAsHex>
    12cc:	f804 0f01 	strb.w	r0, [r4, #1]!
    12d0:	42ac      	cmp	r4, r5
    12d2:	d1f8      	bne.n	12c6 <__mriPlatform_CopyContextFromBuffer+0xa>
    12d4:	bd70      	pop	{r4, r5, r6, pc}
    12d6:	bf00      	nop
    12d8:	1000035b 	.word	0x1000035b

000012dc <__mriPlatform_SetHardwareBreakpoint>:
    12dc:	4b19      	ldr	r3, [pc, #100]	; (1344 <__mriPlatform_SetHardwareBreakpoint+0x68>)
    12de:	b570      	push	{r4, r5, r6, lr}
    12e0:	2400      	movs	r4, #0
    12e2:	2902      	cmp	r1, #2
    12e4:	4605      	mov	r5, r0
    12e6:	601c      	str	r4, [r3, #0]
    12e8:	d008      	beq.n	12fc <__mriPlatform_SetHardwareBreakpoint+0x20>
    12ea:	d301      	bcc.n	12f0 <__mriPlatform_SetHardwareBreakpoint+0x14>
    12ec:	2904      	cmp	r1, #4
    12ee:	d904      	bls.n	12fa <__mriPlatform_SetHardwareBreakpoint+0x1e>
    12f0:	2204      	movs	r2, #4
    12f2:	601a      	str	r2, [r3, #0]
    12f4:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
    12f8:	e000      	b.n	12fc <__mriPlatform_SetHardwareBreakpoint+0x20>
    12fa:	2401      	movs	r4, #1
    12fc:	6818      	ldr	r0, [r3, #0]
    12fe:	b9f8      	cbnz	r0, 1340 <__mriPlatform_SetHardwareBreakpoint+0x64>
    1300:	4628      	mov	r0, r5
    1302:	4621      	mov	r1, r4
    1304:	f7ff fd7a 	bl	dfc <findFPBBreakpointComparator>
    1308:	4606      	mov	r6, r0
    130a:	b9c8      	cbnz	r0, 1340 <__mriPlatform_SetHardwareBreakpoint+0x64>
    130c:	f7ff fc52 	bl	bb4 <getFPBCodeComparatorCount>
    1310:	4a0d      	ldr	r2, [pc, #52]	; (1348 <__mriPlatform_SetHardwareBreakpoint+0x6c>)
    1312:	4633      	mov	r3, r6
    1314:	4283      	cmp	r3, r0
    1316:	4616      	mov	r6, r2
    1318:	d00c      	beq.n	1334 <__mriPlatform_SetHardwareBreakpoint+0x58>
    131a:	f852 1b04 	ldr.w	r1, [r2], #4
    131e:	07c9      	lsls	r1, r1, #31
    1320:	d501      	bpl.n	1326 <__mriPlatform_SetHardwareBreakpoint+0x4a>
    1322:	3301      	adds	r3, #1
    1324:	e7f6      	b.n	1314 <__mriPlatform_SetHardwareBreakpoint+0x38>
    1326:	b12e      	cbz	r6, 1334 <__mriPlatform_SetHardwareBreakpoint+0x58>
    1328:	4628      	mov	r0, r5
    132a:	4621      	mov	r1, r4
    132c:	f7ff fd4a 	bl	dc4 <calculateFPBComparatorValue>
    1330:	6030      	str	r0, [r6, #0]
    1332:	bd70      	pop	{r4, r5, r6, pc}
    1334:	4803      	ldr	r0, [pc, #12]	; (1344 <__mriPlatform_SetHardwareBreakpoint+0x68>)
    1336:	6802      	ldr	r2, [r0, #0]
    1338:	2a08      	cmp	r2, #8
    133a:	bfb8      	it	lt
    133c:	2208      	movlt	r2, #8
    133e:	6002      	str	r2, [r0, #0]
    1340:	bd70      	pop	{r4, r5, r6, pc}
    1342:	bf00      	nop
    1344:	1000014c 	.word	0x1000014c
    1348:	e0002008 	.word	0xe0002008

0000134c <__mriPlatform_EnableSingleStep>:
    134c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    134e:	4c32      	ldr	r4, [pc, #200]	; (1418 <__mriPlatform_EnableSingleStep+0xcc>)
    1350:	2300      	movs	r3, #0
    1352:	6023      	str	r3, [r4, #0]
    1354:	f7ff ff3a 	bl	11cc <getFirstHalfWordOfCurrentInstruction>
    1358:	6825      	ldr	r5, [r4, #0]
    135a:	b925      	cbnz	r5, 1366 <__mriPlatform_EnableSingleStep+0x1a>
    135c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
    1360:	f5b0 4f5f 	cmp.w	r0, #57088	; 0xdf00
    1364:	d02d      	beq.n	13c2 <__mriPlatform_EnableSingleStep+0x76>
    1366:	4c2d      	ldr	r4, [pc, #180]	; (141c <__mriPlatform_EnableSingleStep+0xd0>)
    1368:	f8d4 5200 	ldr.w	r5, [r4, #512]	; 0x200
    136c:	f045 0604 	orr.w	r6, r5, #4
    1370:	4d29      	ldr	r5, [pc, #164]	; (1418 <__mriPlatform_EnableSingleStep+0xcc>)
    1372:	f8c4 6200 	str.w	r6, [r4, #512]	; 0x200
    1376:	2600      	movs	r6, #0
    1378:	602e      	str	r6, [r5, #0]
    137a:	f7ff ff27 	bl	11cc <getFirstHalfWordOfCurrentInstruction>
    137e:	6829      	ldr	r1, [r5, #0]
    1380:	4607      	mov	r7, r0
    1382:	b929      	cbnz	r1, 1390 <__mriPlatform_EnableSingleStep+0x44>
    1384:	f8d4 3248 	ldr.w	r3, [r4, #584]	; 0x248
    1388:	1c98      	adds	r0, r3, #2
    138a:	f7ff ff0d 	bl	11a8 <throwingMemRead16>
    138e:	e000      	b.n	1392 <__mriPlatform_EnableSingleStep+0x46>
    1390:	4630      	mov	r0, r6
    1392:	682a      	ldr	r2, [r5, #0]
    1394:	b11a      	cbz	r2, 139e <__mriPlatform_EnableSingleStep+0x52>
    1396:	4920      	ldr	r1, [pc, #128]	; (1418 <__mriPlatform_EnableSingleStep+0xcc>)
    1398:	2000      	movs	r0, #0
    139a:	6008      	str	r0, [r1, #0]
    139c:	e023      	b.n	13e6 <__mriPlatform_EnableSingleStep+0x9a>
    139e:	f027 070f 	bic.w	r7, r7, #15
    13a2:	b2bf      	uxth	r7, r7
    13a4:	f24f 3180 	movw	r1, #62336	; 0xf380
    13a8:	428f      	cmp	r7, r1
    13aa:	d11c      	bne.n	13e6 <__mriPlatform_EnableSingleStep+0x9a>
    13ac:	f648 0311 	movw	r3, #34833	; 0x8811
    13b0:	4298      	cmp	r0, r3
    13b2:	d002      	beq.n	13ba <__mriPlatform_EnableSingleStep+0x6e>
    13b4:	1c5a      	adds	r2, r3, #1
    13b6:	4290      	cmp	r0, r2
    13b8:	d115      	bne.n	13e6 <__mriPlatform_EnableSingleStep+0x9a>
    13ba:	2208      	movs	r2, #8
    13bc:	f382 8811 	msr	BASEPRI, r2
    13c0:	e024      	b.n	140c <__mriPlatform_EnableSingleStep+0xc0>
    13c2:	4917      	ldr	r1, [pc, #92]	; (1420 <__mriPlatform_EnableSingleStep+0xd4>)
    13c4:	688a      	ldr	r2, [r1, #8]
    13c6:	2102      	movs	r1, #2
    13c8:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
    13ca:	f023 0001 	bic.w	r0, r3, #1
    13ce:	f7ff ff85 	bl	12dc <__mriPlatform_SetHardwareBreakpoint>
    13d2:	6820      	ldr	r0, [r4, #0]
    13d4:	4911      	ldr	r1, [pc, #68]	; (141c <__mriPlatform_EnableSingleStep+0xd0>)
    13d6:	b990      	cbnz	r0, 13fe <__mriPlatform_EnableSingleStep+0xb2>
    13d8:	f8d1 2200 	ldr.w	r2, [r1, #512]	; 0x200
    13dc:	f042 0310 	orr.w	r3, r2, #16
    13e0:	f8c1 3200 	str.w	r3, [r1, #512]	; 0x200
    13e4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    13e6:	f3ef 8212 	mrs	r2, BASEPRI_MAX
    13ea:	4b0c      	ldr	r3, [pc, #48]	; (141c <__mriPlatform_EnableSingleStep+0xd0>)
    13ec:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
    13f0:	f8c3 2264 	str.w	r2, [r3, #612]	; 0x264
    13f4:	f040 0108 	orr.w	r1, r0, #8
    13f8:	f8c3 1200 	str.w	r1, [r3, #512]	; 0x200
    13fc:	e7dd      	b.n	13ba <__mriPlatform_EnableSingleStep+0x6e>
    13fe:	f8d1 0200 	ldr.w	r0, [r1, #512]	; 0x200
    1402:	6025      	str	r5, [r4, #0]
    1404:	f040 0204 	orr.w	r2, r0, #4
    1408:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
    140c:	4b05      	ldr	r3, [pc, #20]	; (1424 <__mriPlatform_EnableSingleStep+0xd8>)
    140e:	68d8      	ldr	r0, [r3, #12]
    1410:	f440 2180 	orr.w	r1, r0, #262144	; 0x40000
    1414:	60d9      	str	r1, [r3, #12]
    1416:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1418:	1000014c 	.word	0x1000014c
    141c:	10000150 	.word	0x10000150
    1420:	e000ed00 	.word	0xe000ed00
    1424:	e000edf0 	.word	0xe000edf0

00001428 <__mriPlatform_ClearHardwareBreakpoint>:
    1428:	4b0c      	ldr	r3, [pc, #48]	; (145c <__mriPlatform_ClearHardwareBreakpoint+0x34>)
    142a:	2200      	movs	r2, #0
    142c:	2902      	cmp	r1, #2
    142e:	b510      	push	{r4, lr}
    1430:	601a      	str	r2, [r3, #0]
    1432:	d003      	beq.n	143c <__mriPlatform_ClearHardwareBreakpoint+0x14>
    1434:	d304      	bcc.n	1440 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    1436:	2904      	cmp	r1, #4
    1438:	d802      	bhi.n	1440 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    143a:	e006      	b.n	144a <__mriPlatform_ClearHardwareBreakpoint+0x22>
    143c:	4611      	mov	r1, r2
    143e:	e005      	b.n	144c <__mriPlatform_ClearHardwareBreakpoint+0x24>
    1440:	2104      	movs	r1, #4
    1442:	6019      	str	r1, [r3, #0]
    1444:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    1448:	e000      	b.n	144c <__mriPlatform_ClearHardwareBreakpoint+0x24>
    144a:	2101      	movs	r1, #1
    144c:	681c      	ldr	r4, [r3, #0]
    144e:	b91c      	cbnz	r4, 1458 <__mriPlatform_ClearHardwareBreakpoint+0x30>
    1450:	f7ff fcd4 	bl	dfc <findFPBBreakpointComparator>
    1454:	b100      	cbz	r0, 1458 <__mriPlatform_ClearHardwareBreakpoint+0x30>
    1456:	6004      	str	r4, [r0, #0]
    1458:	bd10      	pop	{r4, pc}
    145a:	bf00      	nop
    145c:	1000014c 	.word	0x1000014c

00001460 <__mriPlatform_EnteringDebugger>:
    1460:	b510      	push	{r4, lr}
    1462:	4c3d      	ldr	r4, [pc, #244]	; (1558 <__mriPlatform_EnteringDebugger+0xf8>)
    1464:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
    1468:	f8d4 1248 	ldr.w	r1, [r4, #584]	; 0x248
    146c:	f023 0002 	bic.w	r0, r3, #2
    1470:	f8c4 0200 	str.w	r0, [r4, #512]	; 0x200
    1474:	f8c4 1250 	str.w	r1, [r4, #592]	; 0x250
    1478:	f7ff fcda 	bl	e30 <isMPUNotPresent>
    147c:	4b37      	ldr	r3, [pc, #220]	; (155c <__mriPlatform_EnteringDebugger+0xfc>)
    147e:	b908      	cbnz	r0, 1484 <__mriPlatform_EnteringDebugger+0x24>
    1480:	685a      	ldr	r2, [r3, #4]
    1482:	e001      	b.n	1488 <__mriPlatform_EnteringDebugger+0x28>
    1484:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    1488:	f8c4 2254 	str.w	r2, [r4, #596]	; 0x254
    148c:	6898      	ldr	r0, [r3, #8]
    148e:	f8c4 0258 	str.w	r0, [r4, #600]	; 0x258
    1492:	681c      	ldr	r4, [r3, #0]
    1494:	f3c4 2107 	ubfx	r1, r4, #8, #8
    1498:	1e48      	subs	r0, r1, #1
    149a:	f7ff fb97 	bl	bcc <prepareToAccessMPURegion>
    149e:	f7ff fcc7 	bl	e30 <isMPUNotPresent>
    14a2:	b918      	cbnz	r0, 14ac <__mriPlatform_EnteringDebugger+0x4c>
    14a4:	4b2d      	ldr	r3, [pc, #180]	; (155c <__mriPlatform_EnteringDebugger+0xfc>)
    14a6:	68da      	ldr	r2, [r3, #12]
    14a8:	0950      	lsrs	r0, r2, #5
    14aa:	e000      	b.n	14ae <__mriPlatform_EnteringDebugger+0x4e>
    14ac:	2000      	movs	r0, #0
    14ae:	4c2a      	ldr	r4, [pc, #168]	; (1558 <__mriPlatform_EnteringDebugger+0xf8>)
    14b0:	f8c4 025c 	str.w	r0, [r4, #604]	; 0x25c
    14b4:	f7ff fcbc 	bl	e30 <isMPUNotPresent>
    14b8:	4621      	mov	r1, r4
    14ba:	4c28      	ldr	r4, [pc, #160]	; (155c <__mriPlatform_EnteringDebugger+0xfc>)
    14bc:	b908      	cbnz	r0, 14c2 <__mriPlatform_EnteringDebugger+0x62>
    14be:	6923      	ldr	r3, [r4, #16]
    14c0:	e000      	b.n	14c4 <__mriPlatform_EnteringDebugger+0x64>
    14c2:	2300      	movs	r3, #0
    14c4:	f8c1 3260 	str.w	r3, [r1, #608]	; 0x260
    14c8:	f7ff fcbe 	bl	e48 <disableMPU>
    14cc:	6822      	ldr	r2, [r4, #0]
    14ce:	f3c2 2007 	ubfx	r0, r2, #8, #8
    14d2:	3801      	subs	r0, #1
    14d4:	f7ff fb7a 	bl	bcc <prepareToAccessMPURegion>
    14d8:	f7ff fcaa 	bl	e30 <isMPUNotPresent>
    14dc:	b908      	cbnz	r0, 14e2 <__mriPlatform_EnteringDebugger+0x82>
    14de:	491f      	ldr	r1, [pc, #124]	; (155c <__mriPlatform_EnteringDebugger+0xfc>)
    14e0:	60c8      	str	r0, [r1, #12]
    14e2:	f7ff fca5 	bl	e30 <isMPUNotPresent>
    14e6:	b910      	cbnz	r0, 14ee <__mriPlatform_EnteringDebugger+0x8e>
    14e8:	4a1d      	ldr	r2, [pc, #116]	; (1560 <__mriPlatform_EnteringDebugger+0x100>)
    14ea:	4b1c      	ldr	r3, [pc, #112]	; (155c <__mriPlatform_EnteringDebugger+0xfc>)
    14ec:	611a      	str	r2, [r3, #16]
    14ee:	f7ff fc9f 	bl	e30 <isMPUNotPresent>
    14f2:	b940      	cbnz	r0, 1506 <__mriPlatform_EnteringDebugger+0xa6>
    14f4:	4819      	ldr	r0, [pc, #100]	; (155c <__mriPlatform_EnteringDebugger+0xfc>)
    14f6:	6841      	ldr	r1, [r0, #4]
    14f8:	f041 0203 	orr.w	r2, r1, #3
    14fc:	6042      	str	r2, [r0, #4]
    14fe:	f3bf 8f4f 	dsb	sy
    1502:	f3bf 8f6f 	isb	sy
    1506:	4b14      	ldr	r3, [pc, #80]	; (1558 <__mriPlatform_EnteringDebugger+0xf8>)
    1508:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
    150c:	0702      	lsls	r2, r0, #28
    150e:	d50c      	bpl.n	152a <__mriPlatform_EnteringDebugger+0xca>
    1510:	f8d3 1200 	ldr.w	r1, [r3, #512]	; 0x200
    1514:	f8d3 0264 	ldr.w	r0, [r3, #612]	; 0x264
    1518:	f021 0208 	bic.w	r2, r1, #8
    151c:	f8c3 2200 	str.w	r2, [r3, #512]	; 0x200
    1520:	f380 8811 	msr	BASEPRI, r0
    1524:	2100      	movs	r1, #0
    1526:	f8c3 1264 	str.w	r1, [r3, #612]	; 0x264
    152a:	f8d3 3200 	ldr.w	r3, [r3, #512]	; 0x200
    152e:	4a0a      	ldr	r2, [pc, #40]	; (1558 <__mriPlatform_EnteringDebugger+0xf8>)
    1530:	06d8      	lsls	r0, r3, #27
    1532:	d50d      	bpl.n	1550 <__mriPlatform_EnteringDebugger+0xf0>
    1534:	f8d2 0200 	ldr.w	r0, [r2, #512]	; 0x200
    1538:	f020 0110 	bic.w	r1, r0, #16
    153c:	f8c2 1200 	str.w	r1, [r2, #512]	; 0x200
    1540:	4a08      	ldr	r2, [pc, #32]	; (1564 <__mriPlatform_EnteringDebugger+0x104>)
    1542:	2102      	movs	r1, #2
    1544:	6893      	ldr	r3, [r2, #8]
    1546:	6ad8      	ldr	r0, [r3, #44]	; 0x2c
    1548:	f020 0001 	bic.w	r0, r0, #1
    154c:	f7ff ff6c 	bl	1428 <__mriPlatform_ClearHardwareBreakpoint>
    1550:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1554:	f7ff bca2 	b.w	e9c <__mriPlatform_DisableSingleStep>
    1558:	10000150 	.word	0x10000150
    155c:	e000ed90 	.word	0xe000ed90
    1560:	0100003f 	.word	0x0100003f
    1564:	e000ed00 	.word	0xe000ed00

00001568 <__mriPlatform_SetHardwareWatchpoint>:
    1568:	2a02      	cmp	r2, #2
    156a:	bf98      	it	ls
    156c:	4b20      	ldrls	r3, [pc, #128]	; (15f0 <__mriPlatform_SetHardwareWatchpoint+0x88>)
    156e:	b570      	push	{r4, r5, r6, lr}
    1570:	bf94      	ite	ls
    1572:	5c9d      	ldrbls	r5, [r3, r2]
    1574:	2500      	movhi	r5, #0
    1576:	1e4b      	subs	r3, r1, #1
    1578:	420b      	tst	r3, r1
    157a:	4606      	mov	r6, r0
    157c:	460c      	mov	r4, r1
    157e:	d106      	bne.n	158e <__mriPlatform_SetHardwareWatchpoint+0x26>
    1580:	4248      	negs	r0, r1
    1582:	4030      	ands	r0, r6
    1584:	4286      	cmp	r6, r0
    1586:	d102      	bne.n	158e <__mriPlatform_SetHardwareWatchpoint+0x26>
    1588:	1f69      	subs	r1, r5, #5
    158a:	2902      	cmp	r1, #2
    158c:	d905      	bls.n	159a <__mriPlatform_SetHardwareWatchpoint+0x32>
    158e:	4919      	ldr	r1, [pc, #100]	; (15f4 <__mriPlatform_SetHardwareWatchpoint+0x8c>)
    1590:	6808      	ldr	r0, [r1, #0]
    1592:	2804      	cmp	r0, #4
    1594:	bfb8      	it	lt
    1596:	2004      	movlt	r0, #4
    1598:	e027      	b.n	15ea <__mriPlatform_SetHardwareWatchpoint+0x82>
    159a:	4630      	mov	r0, r6
    159c:	4621      	mov	r1, r4
    159e:	462a      	mov	r2, r5
    15a0:	f7ff fade 	bl	b60 <findDWTComparator>
    15a4:	bb10      	cbnz	r0, 15ec <__mriPlatform_SetHardwareWatchpoint+0x84>
    15a6:	4a14      	ldr	r2, [pc, #80]	; (15f8 <__mriPlatform_SetHardwareWatchpoint+0x90>)
    15a8:	6813      	ldr	r3, [r2, #0]
    15aa:	0f19      	lsrs	r1, r3, #28
    15ac:	f100 6260 	add.w	r2, r0, #234881024	; 0xe000000
    15b0:	f502 7381 	add.w	r3, r2, #258	; 0x102
    15b4:	011b      	lsls	r3, r3, #4
    15b6:	4288      	cmp	r0, r1
    15b8:	d012      	beq.n	15e0 <__mriPlatform_SetHardwareWatchpoint+0x78>
    15ba:	689a      	ldr	r2, [r3, #8]
    15bc:	f012 020f 	ands.w	r2, r2, #15
    15c0:	d001      	beq.n	15c6 <__mriPlatform_SetHardwareWatchpoint+0x5e>
    15c2:	3001      	adds	r0, #1
    15c4:	e7f2      	b.n	15ac <__mriPlatform_SetHardwareWatchpoint+0x44>
    15c6:	b15b      	cbz	r3, 15e0 <__mriPlatform_SetHardwareWatchpoint+0x78>
    15c8:	2c01      	cmp	r4, #1
    15ca:	d902      	bls.n	15d2 <__mriPlatform_SetHardwareWatchpoint+0x6a>
    15cc:	0864      	lsrs	r4, r4, #1
    15ce:	3201      	adds	r2, #1
    15d0:	e7fa      	b.n	15c8 <__mriPlatform_SetHardwareWatchpoint+0x60>
    15d2:	605a      	str	r2, [r3, #4]
    15d4:	6858      	ldr	r0, [r3, #4]
    15d6:	4290      	cmp	r0, r2
    15d8:	d102      	bne.n	15e0 <__mriPlatform_SetHardwareWatchpoint+0x78>
    15da:	601e      	str	r6, [r3, #0]
    15dc:	609d      	str	r5, [r3, #8]
    15de:	bd70      	pop	{r4, r5, r6, pc}
    15e0:	4904      	ldr	r1, [pc, #16]	; (15f4 <__mriPlatform_SetHardwareWatchpoint+0x8c>)
    15e2:	6808      	ldr	r0, [r1, #0]
    15e4:	2808      	cmp	r0, #8
    15e6:	bfb8      	it	lt
    15e8:	2008      	movlt	r0, #8
    15ea:	6008      	str	r0, [r1, #0]
    15ec:	bd70      	pop	{r4, r5, r6, pc}
    15ee:	bf00      	nop
    15f0:	00003bbc 	.word	0x00003bbc
    15f4:	1000014c 	.word	0x1000014c
    15f8:	e0001000 	.word	0xe0001000

000015fc <__mriPlatform_ClearHardwareWatchpoint>:
    15fc:	2a02      	cmp	r2, #2
    15fe:	bf98      	it	ls
    1600:	4b11      	ldrls	r3, [pc, #68]	; (1648 <__mriPlatform_ClearHardwareWatchpoint+0x4c>)
    1602:	b510      	push	{r4, lr}
    1604:	bf94      	ite	ls
    1606:	5c9a      	ldrbls	r2, [r3, r2]
    1608:	2200      	movhi	r2, #0
    160a:	1e4c      	subs	r4, r1, #1
    160c:	400c      	ands	r4, r1
    160e:	d106      	bne.n	161e <__mriPlatform_ClearHardwareWatchpoint+0x22>
    1610:	424b      	negs	r3, r1
    1612:	4003      	ands	r3, r0
    1614:	4298      	cmp	r0, r3
    1616:	d102      	bne.n	161e <__mriPlatform_ClearHardwareWatchpoint+0x22>
    1618:	1f53      	subs	r3, r2, #5
    161a:	2b02      	cmp	r3, #2
    161c:	d906      	bls.n	162c <__mriPlatform_ClearHardwareWatchpoint+0x30>
    161e:	480b      	ldr	r0, [pc, #44]	; (164c <__mriPlatform_ClearHardwareWatchpoint+0x50>)
    1620:	6802      	ldr	r2, [r0, #0]
    1622:	2a04      	cmp	r2, #4
    1624:	bfb8      	it	lt
    1626:	2204      	movlt	r2, #4
    1628:	6002      	str	r2, [r0, #0]
    162a:	bd10      	pop	{r4, pc}
    162c:	f7ff fa98 	bl	b60 <findDWTComparator>
    1630:	b140      	cbz	r0, 1644 <__mriPlatform_ClearHardwareWatchpoint+0x48>
    1632:	6004      	str	r4, [r0, #0]
    1634:	6044      	str	r4, [r0, #4]
    1636:	6881      	ldr	r1, [r0, #8]
    1638:	f421 73d7 	bic.w	r3, r1, #430	; 0x1ae
    163c:	f023 0201 	bic.w	r2, r3, #1
    1640:	6082      	str	r2, [r0, #8]
    1642:	bd10      	pop	{r4, pc}
    1644:	bd10      	pop	{r4, pc}
    1646:	bf00      	nop
    1648:	00003bbc 	.word	0x00003bbc
    164c:	1000014c 	.word	0x1000014c

00001650 <__mriPlatform_GetTargetXmlSize>:
    1650:	f240 20b9 	movw	r0, #697	; 0x2b9
    1654:	4770      	bx	lr
	...

00001658 <__mriPlatform_GetTargetXml>:
    1658:	4800      	ldr	r0, [pc, #0]	; (165c <__mriPlatform_GetTargetXml+0x4>)
    165a:	4770      	bx	lr
    165c:	000036bf 	.word	0x000036bf

00001660 <__mriARMv7MAsmInit>:
    1660:	4770      	bx	lr

00001662 <mriExceptionHandler>:
    1662:	4856      	ldr	r0, [pc, #344]	; (17bc <UART3_IRQHandler+0x6>)
    1664:	f000 b803 	b.w	166e <mriGetSPAndCallHandler>

00001668 <mriFaultHandler>:
    1668:	4855      	ldr	r0, [pc, #340]	; (17c0 <UART3_IRQHandler+0xa>)
    166a:	f000 b800 	b.w	166e <mriGetSPAndCallHandler>

0000166e <mriGetSPAndCallHandler>:
    166e:	f01e 0f04 	tst.w	lr, #4
    1672:	bf0c      	ite	eq
    1674:	f3ef 8108 	mrseq	r1, MSP
    1678:	f3ef 8109 	mrsne	r1, PSP
    167c:	4a51      	ldr	r2, [pc, #324]	; (17c4 <UART3_IRQHandler+0xe>)
    167e:	6011      	str	r1, [r2, #0]
    1680:	4687      	mov	pc, r0

00001682 <checkForStackError>:
    1682:	4851      	ldr	r0, [pc, #324]	; (17c8 <UART3_IRQHandler+0x12>)
    1684:	4a51      	ldr	r2, [pc, #324]	; (17cc <UART3_IRQHandler+0x16>)
    1686:	6800      	ldr	r0, [r0, #0]
    1688:	4210      	tst	r0, r2
    168a:	f000 8003 	beq.w	1694 <mriSaveRestoreContext>
    168e:	4950      	ldr	r1, [pc, #320]	; (17d0 <UART3_IRQHandler+0x1a>)
    1690:	f000 b800 	b.w	1694 <mriSaveRestoreContext>

00001694 <mriSaveRestoreContext>:
    1694:	484f      	ldr	r0, [pc, #316]	; (17d4 <UART3_IRQHandler+0x1e>)
    1696:	6802      	ldr	r2, [r0, #0]
    1698:	f012 0f01 	tst.w	r2, #1
    169c:	bf1e      	ittt	ne
    169e:	f042 0202 	orrne.w	r2, r2, #2
    16a2:	6002      	strne	r2, [r0, #0]
    16a4:	f000 b856 	bne.w	1754 <mriAdvancePCAndReturn>
    16a8:	f042 0201 	orr.w	r2, r2, #1
    16ac:	6002      	str	r2, [r0, #0]
    16ae:	2040      	movs	r0, #64	; 0x40
    16b0:	f8df c120 	ldr.w	r12, [pc, #288]	; 17d4 <UART3_IRQHandler+0x1e>
    16b4:	4a48      	ldr	r2, [pc, #288]	; (17d8 <UART3_IRQHandler+0x22>)
    16b6:	4613      	mov	r3, r2
    16b8:	e96c 2302 	strd	r2, r3, [r12, #-8]!
    16bc:	3801      	subs	r0, #1
    16be:	d1fb      	bne.n	16b8 <mriSaveRestoreContext+0x24>
    16c0:	f3ef 8208 	mrs	r2, MSP
    16c4:	4845      	ldr	r0, [pc, #276]	; (17dc <UART3_IRQHandler+0x26>)
    16c6:	6002      	str	r2, [r0, #0]
    16c8:	4842      	ldr	r0, [pc, #264]	; (17d4 <UART3_IRQHandler+0x1e>)
    16ca:	f380 8808 	msr	MSP, r0
    16ce:	4844      	ldr	r0, [pc, #272]	; (17e0 <UART3_IRQHandler+0x2a>)
    16d0:	e92d 5000 	stmdb	sp!, {r12, lr}
    16d4:	e8b1 500c 	ldmia.w	r1!, {r2, r3, r12, lr}
    16d8:	e8a0 500c 	stmia.w	r0!, {r2, r3, r12, lr}
    16dc:	e8a0 0ff0 	stmia.w	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    16e0:	c93c      	ldmia	r1!, {r2, r3, r4, r5}
    16e2:	f840 2b08 	str.w	r2, [r0], #8
    16e6:	c038      	stmia	r0!, {r3, r4, r5}
    16e8:	f415 7f00 	tst.w	r5, #512	; 0x200
    16ec:	bf18      	it	ne
    16ee:	3104      	addne	r1, #4
    16f0:	f840 1c10 	str.w	r1, [r0, #-16]
    16f4:	f7fe ff24 	bl	540 <__mriDebugException>
    16f8:	483a      	ldr	r0, [pc, #232]	; (17e4 <UART3_IRQHandler+0x2e>)
    16fa:	f850 1c0c 	ldr.w	r1, [r0, #-12]
    16fe:	6802      	ldr	r2, [r0, #0]
    1700:	f422 7200 	bic.w	r2, r2, #512	; 0x200
    1704:	f841 2d04 	str.w	r2, [r1, #-4]!
    1708:	e930 000c 	ldmdb	r0!, {r2, r3}
    170c:	e921 000c 	stmdb	r1!, {r2, r3}
    1710:	f850 cd08 	ldr.w	r12, [r0, #-8]!
    1714:	f841 cd04 	str.w	r12, [r1, #-4]!
    1718:	e930 0ff0 	ldmdb	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    171c:	e930 500c 	ldmdb	r0!, {r2, r3, r12, lr}
    1720:	e921 500c 	stmdb	r1!, {r2, r3, r12, lr}
    1724:	e8bd 5000 	ldmia.w	sp!, {r12, lr}
    1728:	482c      	ldr	r0, [pc, #176]	; (17dc <UART3_IRQHandler+0x26>)
    172a:	6802      	ldr	r2, [r0, #0]
    172c:	f382 8808 	msr	MSP, r2
    1730:	f01e 0f04 	tst.w	lr, #4
    1734:	bf0c      	ite	eq
    1736:	f381 8808 	msreq	MSP, r1
    173a:	f381 8809 	msrne	PSP, r1
    173e:	4825      	ldr	r0, [pc, #148]	; (17d4 <UART3_IRQHandler+0x1e>)
    1740:	6801      	ldr	r1, [r0, #0]
    1742:	f021 0101 	bic.w	r1, r1, #1
    1746:	6001      	str	r1, [r0, #0]
    1748:	f3bf 8f4f 	dsb	sy
    174c:	f3bf 8f6f 	isb	sy
    1750:	f000 b81b 	b.w	178a <mriClearFaultStatusBitsAndReturn>

00001754 <mriAdvancePCAndReturn>:
    1754:	481c      	ldr	r0, [pc, #112]	; (17c8 <UART3_IRQHandler+0x12>)
    1756:	6800      	ldr	r0, [r0, #0]
    1758:	f410 6f80 	tst.w	r0, #1024	; 0x400
    175c:	f040 8015 	bne.w	178a <mriClearFaultStatusBitsAndReturn>
    1760:	6988      	ldr	r0, [r1, #24]
    1762:	8802      	ldrh	r2, [r0, #0]
    1764:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
    1768:	f5b2 4f68 	cmp.w	r2, #59392	; 0xe800
    176c:	d008      	beq.n	1780 <mriAdvancePCAndReturn+0x2c>
    176e:	f5b2 4f70 	cmp.w	r2, #61440	; 0xf000
    1772:	d005      	beq.n	1780 <mriAdvancePCAndReturn+0x2c>
    1774:	f5b2 4f78 	cmp.w	r2, #63488	; 0xf800
    1778:	d002      	beq.n	1780 <mriAdvancePCAndReturn+0x2c>
    177a:	f100 0002 	add.w	r0, r0, #2
    177e:	e001      	b.n	1784 <mriAdvancePCAndReturn+0x30>
    1780:	f100 0004 	add.w	r0, r0, #4
    1784:	6188      	str	r0, [r1, #24]
    1786:	f000 b800 	b.w	178a <mriClearFaultStatusBitsAndReturn>

0000178a <mriClearFaultStatusBitsAndReturn>:
    178a:	480f      	ldr	r0, [pc, #60]	; (17c8 <UART3_IRQHandler+0x12>)
    178c:	6801      	ldr	r1, [r0, #0]
    178e:	6001      	str	r1, [r0, #0]
    1790:	6841      	ldr	r1, [r0, #4]
    1792:	6041      	str	r1, [r0, #4]
    1794:	4770      	bx	lr

00001796 <HardFault_Handler>:
    1796:	f7ff bf67 	b.w	1668 <mriFaultHandler>

0000179a <MemManage_Handler>:
    179a:	f7ff bf65 	b.w	1668 <mriFaultHandler>

0000179e <BusFault_Handler>:
    179e:	f7ff bf63 	b.w	1668 <mriFaultHandler>

000017a2 <UsageFault_Handler>:
    17a2:	f7ff bf5e 	b.w	1662 <mriExceptionHandler>

000017a6 <DebugMon_Handler>:
    17a6:	f7ff bf5c 	b.w	1662 <mriExceptionHandler>

000017aa <UART0_IRQHandler>:
    17aa:	f7ff bf5a 	b.w	1662 <mriExceptionHandler>

000017ae <UART1_IRQHandler>:
    17ae:	f7ff bf58 	b.w	1662 <mriExceptionHandler>

000017b2 <UART2_IRQHandler>:
    17b2:	f7ff bf56 	b.w	1662 <mriExceptionHandler>

000017b6 <UART3_IRQHandler>:
    17b6:	f7ff bf54 	b.w	1662 <mriExceptionHandler>
    17ba:	0000      	.short	0x0000
    17bc:	00001695 	.word	0x00001695
    17c0:	00001683 	.word	0x00001683
    17c4:	10000358 	.word	0x10000358
    17c8:	e000ed28 	.word	0xe000ed28
    17cc:	00001818 	.word	0x00001818
    17d0:	0000397c 	.word	0x0000397c
    17d4:	10000350 	.word	0x10000350
    17d8:	deadbeef 	.word	0xdeadbeef
    17dc:	10000354 	.word	0x10000354
    17e0:	1000035c 	.word	0x1000035c
    17e4:	1000039c 	.word	0x1000039c

000017e8 <__mriPlatform_MemRead32>:
    17e8:	6800      	ldr	r0, [r0, #0]
    17ea:	4770      	bx	lr

000017ec <__mriPlatform_MemRead16>:
    17ec:	8800      	ldrh	r0, [r0, #0]
    17ee:	b280      	uxth	r0, r0
    17f0:	4770      	bx	lr

000017f2 <__mriPlatform_MemRead8>:
    17f2:	7800      	ldrb	r0, [r0, #0]
    17f4:	4770      	bx	lr

000017f6 <__mriPlatform_MemWrite32>:
    17f6:	6001      	str	r1, [r0, #0]
    17f8:	4770      	bx	lr

000017fa <__mriPlatform_MemWrite16>:
    17fa:	8001      	strh	r1, [r0, #0]
    17fc:	4770      	bx	lr

000017fe <__mriPlatform_MemWrite8>:
    17fe:	7001      	strb	r1, [r0, #0]
    1800:	4770      	bx	lr
	...

00001804 <__mriPlatform_CommUartIndex>:
    1804:	4b03      	ldr	r3, [pc, #12]	; (1814 <__mriPlatform_CommUartIndex+0x10>)
    1806:	4804      	ldr	r0, [pc, #16]	; (1818 <CFSR_STACK_ERROR_BITS>)
    1808:	681a      	ldr	r2, [r3, #0]
    180a:	1a11      	subs	r1, r2, r0
    180c:	4803      	ldr	r0, [pc, #12]	; (181c <CFSR_STACK_ERROR_BITS+0x4>)
    180e:	108b      	asrs	r3, r1, #2
    1810:	4358      	muls	r0, r3
    1812:	4770      	bx	lr
    1814:	10000448 	.word	0x10000448
    1818:	00003bc0 	.word	0x00003bc0
    181c:	38e38e39 	.word	0x38e38e39

00001820 <__mriPlatform_CommHasReceiveData>:
    1820:	4b03      	ldr	r3, [pc, #12]	; (1830 <__mriPlatform_CommHasReceiveData+0x10>)
    1822:	6818      	ldr	r0, [r3, #0]
    1824:	68c1      	ldr	r1, [r0, #12]
    1826:	7d0a      	ldrb	r2, [r1, #20]
    1828:	f002 0001 	and.w	r0, r2, #1
    182c:	4770      	bx	lr
    182e:	bf00      	nop
    1830:	10000448 	.word	0x10000448

00001834 <__mriPlatform_CommReceiveChar>:
    1834:	b508      	push	{r3, lr}
    1836:	f7ff fff3 	bl	1820 <__mriPlatform_CommHasReceiveData>
    183a:	2800      	cmp	r0, #0
    183c:	d0fb      	beq.n	1836 <__mriPlatform_CommReceiveChar+0x2>
    183e:	4b02      	ldr	r3, [pc, #8]	; (1848 <__mriPlatform_CommReceiveChar+0x14>)
    1840:	6818      	ldr	r0, [r3, #0]
    1842:	68c1      	ldr	r1, [r0, #12]
    1844:	7808      	ldrb	r0, [r1, #0]
    1846:	bd08      	pop	{r3, pc}
    1848:	10000448 	.word	0x10000448

0000184c <__mriPlatform_CommSendChar>:
    184c:	4b05      	ldr	r3, [pc, #20]	; (1864 <__mriPlatform_CommSendChar+0x18>)
    184e:	6819      	ldr	r1, [r3, #0]
    1850:	68cb      	ldr	r3, [r1, #12]
    1852:	7d1a      	ldrb	r2, [r3, #20]
    1854:	f002 0120 	and.w	r1, r2, #32
    1858:	b2ca      	uxtb	r2, r1
    185a:	2a00      	cmp	r2, #0
    185c:	d0f9      	beq.n	1852 <__mriPlatform_CommSendChar+0x6>
    185e:	b2c0      	uxtb	r0, r0
    1860:	7018      	strb	r0, [r3, #0]
    1862:	4770      	bx	lr
    1864:	10000448 	.word	0x10000448

00001868 <__mriPlatform_CommCausedInterrupt>:
    1868:	b510      	push	{r4, lr}
    186a:	f3ef 8405 	mrs	r4, IPSR
    186e:	f7ff ffc9 	bl	1804 <__mriPlatform_CommUartIndex>
    1872:	b2e3      	uxtb	r3, r4
    1874:	3015      	adds	r0, #21
    1876:	1a19      	subs	r1, r3, r0
    1878:	4248      	negs	r0, r1
    187a:	4148      	adcs	r0, r1
    187c:	bd10      	pop	{r4, pc}
	...

00001880 <__mriPlatform_CommClearInterrupt>:
    1880:	4b02      	ldr	r3, [pc, #8]	; (188c <__mriPlatform_CommClearInterrupt+0xc>)
    1882:	6818      	ldr	r0, [r3, #0]
    1884:	68c1      	ldr	r1, [r0, #12]
    1886:	688b      	ldr	r3, [r1, #8]
    1888:	4770      	bx	lr
    188a:	bf00      	nop
    188c:	10000448 	.word	0x10000448

00001890 <__mriPlatform_CommSharingWithApplication>:
    1890:	4b02      	ldr	r3, [pc, #8]	; (189c <__mriPlatform_CommSharingWithApplication+0xc>)
    1892:	6858      	ldr	r0, [r3, #4]
    1894:	f000 0001 	and.w	r0, r0, #1
    1898:	4770      	bx	lr
    189a:	bf00      	nop
    189c:	10000448 	.word	0x10000448

000018a0 <__mriPlatform_CommShouldWaitForGdbConnect>:
    18a0:	4b05      	ldr	r3, [pc, #20]	; (18b8 <__mriPlatform_CommShouldWaitForGdbConnect+0x18>)
    18a2:	6858      	ldr	r0, [r3, #4]
    18a4:	0782      	lsls	r2, r0, #30
    18a6:	d404      	bmi.n	18b2 <__mriPlatform_CommShouldWaitForGdbConnect+0x12>
    18a8:	f000 0101 	and.w	r1, r0, #1
    18ac:	f081 0001 	eor.w	r0, r1, #1
    18b0:	4770      	bx	lr
    18b2:	2000      	movs	r0, #0
    18b4:	4770      	bx	lr
    18b6:	bf00      	nop
    18b8:	10000448 	.word	0x10000448

000018bc <__mriPlatform_CommIsWaitingForGdbToConnect>:
    18bc:	b508      	push	{r3, lr}
    18be:	f7ff ffef 	bl	18a0 <__mriPlatform_CommShouldWaitForGdbConnect>
    18c2:	b128      	cbz	r0, 18d0 <__mriPlatform_CommIsWaitingForGdbToConnect+0x14>
    18c4:	4b03      	ldr	r3, [pc, #12]	; (18d4 <__mriPlatform_CommIsWaitingForGdbToConnect+0x18>)
    18c6:	6818      	ldr	r0, [r3, #0]
    18c8:	68c1      	ldr	r1, [r0, #12]
    18ca:	6a0a      	ldr	r2, [r1, #32]
    18cc:	f002 0001 	and.w	r0, r2, #1
    18d0:	bd08      	pop	{r3, pc}
    18d2:	bf00      	nop
    18d4:	10000448 	.word	0x10000448

000018d8 <__mriPlatform_CommPrepareToWaitForGdbConnection>:
    18d8:	b508      	push	{r3, lr}
    18da:	f7ff ffe1 	bl	18a0 <__mriPlatform_CommShouldWaitForGdbConnect>
    18de:	b120      	cbz	r0, 18ea <__mriPlatform_CommPrepareToWaitForGdbConnection+0x12>
    18e0:	4b02      	ldr	r3, [pc, #8]	; (18ec <__mriPlatform_CommPrepareToWaitForGdbConnection+0x14>)
    18e2:	2207      	movs	r2, #7
    18e4:	6818      	ldr	r0, [r3, #0]
    18e6:	68c1      	ldr	r1, [r0, #12]
    18e8:	620a      	str	r2, [r1, #32]
    18ea:	bd08      	pop	{r3, pc}
    18ec:	10000448 	.word	0x10000448

000018f0 <__mriLpc176xUart_Init>:
    18f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    18f4:	b087      	sub	sp, #28
    18f6:	4604      	mov	r4, r0
    18f8:	2100      	movs	r1, #0
    18fa:	a803      	add	r0, sp, #12
    18fc:	220c      	movs	r2, #12
    18fe:	f001 fe44 	bl	358a <memset>
    1902:	4620      	mov	r0, r4
    1904:	4995      	ldr	r1, [pc, #596]	; (1b5c <__mriLpc176xUart_Init+0x26c>)
    1906:	f7fe ff97 	bl	838 <__mriToken_MatchingString>
    190a:	b108      	cbz	r0, 1910 <__mriLpc176xUart_Init+0x20>
    190c:	2300      	movs	r3, #0
    190e:	9304      	str	r3, [sp, #16]
    1910:	4620      	mov	r0, r4
    1912:	4993      	ldr	r1, [pc, #588]	; (1b60 <__mriLpc176xUart_Init+0x270>)
    1914:	f7fe ff90 	bl	838 <__mriToken_MatchingString>
    1918:	b108      	cbz	r0, 191e <__mriLpc176xUart_Init+0x2e>
    191a:	2003      	movs	r0, #3
    191c:	9004      	str	r0, [sp, #16]
    191e:	4620      	mov	r0, r4
    1920:	4990      	ldr	r1, [pc, #576]	; (1b64 <__mriLpc176xUart_Init+0x274>)
    1922:	f7fe ff89 	bl	838 <__mriToken_MatchingString>
    1926:	b108      	cbz	r0, 192c <__mriLpc176xUart_Init+0x3c>
    1928:	2101      	movs	r1, #1
    192a:	9104      	str	r1, [sp, #16]
    192c:	4620      	mov	r0, r4
    192e:	498e      	ldr	r1, [pc, #568]	; (1b68 <__mriLpc176xUart_Init+0x278>)
    1930:	f7fe ff82 	bl	838 <__mriToken_MatchingString>
    1934:	b108      	cbz	r0, 193a <__mriLpc176xUart_Init+0x4a>
    1936:	2202      	movs	r2, #2
    1938:	9204      	str	r2, [sp, #16]
    193a:	4620      	mov	r0, r4
    193c:	498b      	ldr	r1, [pc, #556]	; (1b6c <__mriLpc176xUart_Init+0x27c>)
    193e:	f7fe ff7b 	bl	838 <__mriToken_MatchingString>
    1942:	b108      	cbz	r0, 1948 <__mriLpc176xUart_Init+0x58>
    1944:	2700      	movs	r7, #0
    1946:	9704      	str	r7, [sp, #16]
    1948:	4620      	mov	r0, r4
    194a:	4989      	ldr	r1, [pc, #548]	; (1b70 <__mriLpc176xUart_Init+0x280>)
    194c:	f7fe ff74 	bl	838 <__mriToken_MatchingString>
    1950:	b108      	cbz	r0, 1956 <__mriLpc176xUart_Init+0x66>
    1952:	2301      	movs	r3, #1
    1954:	9304      	str	r3, [sp, #16]
    1956:	4620      	mov	r0, r4
    1958:	4986      	ldr	r1, [pc, #536]	; (1b74 <__mriLpc176xUart_Init+0x284>)
    195a:	f7fe ff6d 	bl	838 <__mriToken_MatchingString>
    195e:	b108      	cbz	r0, 1964 <__mriLpc176xUart_Init+0x74>
    1960:	2002      	movs	r0, #2
    1962:	9004      	str	r0, [sp, #16]
    1964:	4620      	mov	r0, r4
    1966:	4984      	ldr	r1, [pc, #528]	; (1b78 <__mriLpc176xUart_Init+0x288>)
    1968:	f7fe ff66 	bl	838 <__mriToken_MatchingString>
    196c:	b108      	cbz	r0, 1972 <__mriLpc176xUart_Init+0x82>
    196e:	2103      	movs	r1, #3
    1970:	9104      	str	r1, [sp, #16]
    1972:	4620      	mov	r0, r4
    1974:	4981      	ldr	r1, [pc, #516]	; (1b7c <__mriLpc176xUart_Init+0x28c>)
    1976:	f7fe ff74 	bl	862 <__mriToken_MatchingStringPrefix>
    197a:	b1d8      	cbz	r0, 19b4 <__mriLpc176xUart_Init+0xc4>
    197c:	300e      	adds	r0, #14
    197e:	2300      	movs	r3, #0
    1980:	f810 2b01 	ldrb.w	r2, [r0], #1
    1984:	b1aa      	cbz	r2, 19b2 <__mriLpc176xUart_Init+0xc2>
    1986:	4f7e      	ldr	r7, [pc, #504]	; (1b80 <__mriLpc176xUart_Init+0x290>)
    1988:	2500      	movs	r5, #0
    198a:	603d      	str	r5, [r7, #0]
    198c:	f810 1c01 	ldrb.w	r1, [r0, #-1]
    1990:	3930      	subs	r1, #48	; 0x30
    1992:	b2ce      	uxtb	r6, r1
    1994:	2e09      	cmp	r6, #9
    1996:	d902      	bls.n	199e <__mriLpc176xUart_Init+0xae>
    1998:	2109      	movs	r1, #9
    199a:	6039      	str	r1, [r7, #0]
    199c:	4629      	mov	r1, r5
    199e:	683a      	ldr	r2, [r7, #0]
    19a0:	b11a      	cbz	r2, 19aa <__mriLpc176xUart_Init+0xba>
    19a2:	4977      	ldr	r1, [pc, #476]	; (1b80 <__mriLpc176xUart_Init+0x290>)
    19a4:	2000      	movs	r0, #0
    19a6:	6008      	str	r0, [r1, #0]
    19a8:	e003      	b.n	19b2 <__mriLpc176xUart_Init+0xc2>
    19aa:	270a      	movs	r7, #10
    19ac:	fb07 1303 	mla	r3, r7, r3, r1
    19b0:	e7e6      	b.n	1980 <__mriLpc176xUart_Init+0x90>
    19b2:	9305      	str	r3, [sp, #20]
    19b4:	4620      	mov	r0, r4
    19b6:	4973      	ldr	r1, [pc, #460]	; (1b84 <__mriLpc176xUart_Init+0x294>)
    19b8:	f7fe ff3e 	bl	838 <__mriToken_MatchingString>
    19bc:	b108      	cbz	r0, 19c2 <__mriLpc176xUart_Init+0xd2>
    19be:	2201      	movs	r2, #1
    19c0:	9203      	str	r2, [sp, #12]
    19c2:	9f04      	ldr	r7, [sp, #16]
    19c4:	2124      	movs	r1, #36	; 0x24
    19c6:	4379      	muls	r1, r7
    19c8:	486f      	ldr	r0, [pc, #444]	; (1b88 <__mriLpc176xUart_Init+0x298>)
    19ca:	4a70      	ldr	r2, [pc, #448]	; (1b8c <__mriLpc176xUart_Init+0x29c>)
    19cc:	9f03      	ldr	r7, [sp, #12]
    19ce:	1843      	adds	r3, r0, r1
    19d0:	6013      	str	r3, [r2, #0]
    19d2:	b127      	cbz	r7, 19de <__mriLpc176xUart_Init+0xee>
    19d4:	6851      	ldr	r1, [r2, #4]
    19d6:	f041 0301 	orr.w	r3, r1, #1
    19da:	6053      	str	r3, [r2, #4]
    19dc:	e0bb      	b.n	1b56 <__mriLpc176xUart_Init+0x266>
    19de:	4a6c      	ldr	r2, [pc, #432]	; (1b90 <__mriLpc176xUart_Init+0x2a0>)
    19e0:	691c      	ldr	r4, [r3, #16]
    19e2:	f8d2 50c4 	ldr.w	r5, [r2, #196]	; 0xc4
    19e6:	4325      	orrs	r5, r4
    19e8:	f8c2 50c4 	str.w	r5, [r2, #196]	; 0xc4
    19ec:	5842      	ldr	r2, [r0, r1]
    19ee:	6959      	ldr	r1, [r3, #20]
    19f0:	6810      	ldr	r0, [r2, #0]
    19f2:	ea20 0401 	bic.w	r4, r0, r1
    19f6:	6014      	str	r4, [r2, #0]
    19f8:	6958      	ldr	r0, [r3, #20]
    19fa:	6815      	ldr	r5, [r2, #0]
    19fc:	f000 3155 	and.w	r1, r0, #1431655765	; 0x55555555
    1a00:	4329      	orrs	r1, r5
    1a02:	6011      	str	r1, [r2, #0]
    1a04:	68da      	ldr	r2, [r3, #12]
    1a06:	2510      	movs	r5, #16
    1a08:	f882 5028 	strb.w	r5, [r2, #40]	; 0x28
    1a0c:	68dc      	ldr	r4, [r3, #12]
    1a0e:	2101      	movs	r1, #1
    1a10:	7221      	strb	r1, [r4, #8]
    1a12:	68da      	ldr	r2, [r3, #12]
    1a14:	2003      	movs	r0, #3
    1a16:	7310      	strb	r0, [r2, #12]
    1a18:	9a05      	ldr	r2, [sp, #20]
    1a1a:	2a00      	cmp	r2, #0
    1a1c:	d05b      	beq.n	1ad6 <__mriLpc176xUart_Init+0x1e6>
    1a1e:	4c5d      	ldr	r4, [pc, #372]	; (1b94 <__mriLpc176xUart_Init+0x2a4>)
    1a20:	6820      	ldr	r0, [r4, #0]
    1a22:	ea4f 1c10 	mov.w	r12, r0, lsr #4
    1a26:	fbbc f4f2 	udiv	r4, r12, r2
    1a2a:	fb02 f004 	mul.w	r0, r2, r4
    1a2e:	4560      	cmp	r0, r12
    1a30:	d03a      	beq.n	1aa8 <__mriLpc176xUart_Init+0x1b8>
    1a32:	0116      	lsls	r6, r2, #4
    1a34:	ea4f 2c0c 	mov.w	r12, r12, lsl #8
    1a38:	9601      	str	r6, [sp, #4]
    1a3a:	460d      	mov	r5, r1
    1a3c:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
    1a40:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    1a44:	4616      	mov	r6, r2
    1a46:	2001      	movs	r0, #1
    1a48:	4288      	cmp	r0, r1
    1a4a:	d228      	bcs.n	1a9e <__mriLpc176xUart_Init+0x1ae>
    1a4c:	ea4f 1906 	mov.w	r9, r6, lsl #4
    1a50:	fbb9 fafe 	udiv	r10, r9, lr
    1a54:	eb0a 0b02 	add.w	r11, r10, r2
    1a58:	fbbc f9fb 	udiv	r9, r12, r11
    1a5c:	f109 0a80 	add.w	r10, r9, #128	; 0x80
    1a60:	ea4f 291a 	mov.w	r9, r10, lsr #8
    1a64:	ea4f 1a09 	mov.w	r10, r9, lsl #4
    1a68:	fb00 fb0a 	mul.w	r11, r0, r10
    1a6c:	ea4f 1b0b 	mov.w	r11, r11, lsl #4
    1a70:	fbbb fbfe 	udiv	r11, r11, lr
    1a74:	44da      	add	r10, r11
    1a76:	f8dd b004 	ldr.w	r11, [sp, #4]
    1a7a:	fbbc fafa 	udiv	r10, r12, r10
    1a7e:	ebcb 0a0a 	rsb	r10, r11, r10
    1a82:	f1ba 0f00 	cmp.w	r10, #0
    1a86:	bfb8      	it	lt
    1a88:	f1ca 0a00 	rsblt	r10, r10, #0
    1a8c:	45c2      	cmp	r10, r8
    1a8e:	d203      	bcs.n	1a98 <__mriLpc176xUart_Init+0x1a8>
    1a90:	4607      	mov	r7, r0
    1a92:	460d      	mov	r5, r1
    1a94:	464c      	mov	r4, r9
    1a96:	46d0      	mov	r8, r10
    1a98:	3001      	adds	r0, #1
    1a9a:	18b6      	adds	r6, r6, r2
    1a9c:	e7d4      	b.n	1a48 <__mriLpc176xUart_Init+0x158>
    1a9e:	3101      	adds	r1, #1
    1aa0:	2910      	cmp	r1, #16
    1aa2:	d1cd      	bne.n	1a40 <__mriLpc176xUart_Init+0x150>
    1aa4:	ea47 1505 	orr.w	r5, r7, r5, lsl #4
    1aa8:	68d8      	ldr	r0, [r3, #12]
    1aaa:	b2ed      	uxtb	r5, r5
    1aac:	7b01      	ldrb	r1, [r0, #12]
    1aae:	f041 0280 	orr.w	r2, r1, #128	; 0x80
    1ab2:	b2e1      	uxtb	r1, r4
    1ab4:	f3c4 2407 	ubfx	r4, r4, #8, #8
    1ab8:	7302      	strb	r2, [r0, #12]
    1aba:	7001      	strb	r1, [r0, #0]
    1abc:	7104      	strb	r4, [r0, #4]
    1abe:	f880 5028 	strb.w	r5, [r0, #40]	; 0x28
    1ac2:	68d8      	ldr	r0, [r3, #12]
    1ac4:	4c31      	ldr	r4, [pc, #196]	; (1b8c <__mriLpc176xUart_Init+0x29c>)
    1ac6:	7b02      	ldrb	r2, [r0, #12]
    1ac8:	f002 017f 	and.w	r1, r2, #127	; 0x7f
    1acc:	7301      	strb	r1, [r0, #12]
    1ace:	6860      	ldr	r0, [r4, #4]
    1ad0:	f040 0202 	orr.w	r2, r0, #2
    1ad4:	6062      	str	r2, [r4, #4]
    1ad6:	685a      	ldr	r2, [r3, #4]
    1ad8:	6999      	ldr	r1, [r3, #24]
    1ada:	6814      	ldr	r4, [r2, #0]
    1adc:	6a18      	ldr	r0, [r3, #32]
    1ade:	ea24 0401 	bic.w	r4, r4, r1
    1ae2:	4008      	ands	r0, r1
    1ae4:	4304      	orrs	r4, r0
    1ae6:	6014      	str	r4, [r2, #0]
    1ae8:	689a      	ldr	r2, [r3, #8]
    1aea:	69d9      	ldr	r1, [r3, #28]
    1aec:	6814      	ldr	r4, [r2, #0]
    1aee:	6a18      	ldr	r0, [r3, #32]
    1af0:	ea24 0401 	bic.w	r4, r4, r1
    1af4:	4008      	ands	r0, r1
    1af6:	ea44 0100 	orr.w	r1, r4, r0
    1afa:	6011      	str	r1, [r2, #0]
    1afc:	68da      	ldr	r2, [r3, #12]
    1afe:	7b11      	ldrb	r1, [r2, #12]
    1b00:	7b10      	ldrb	r0, [r2, #12]
    1b02:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    1b06:	7310      	strb	r0, [r2, #12]
    1b08:	68da      	ldr	r2, [r3, #12]
    1b0a:	2001      	movs	r0, #1
    1b0c:	6050      	str	r0, [r2, #4]
    1b0e:	68db      	ldr	r3, [r3, #12]
    1b10:	7319      	strb	r1, [r3, #12]
    1b12:	f7ff fee1 	bl	18d8 <__mriPlatform_CommPrepareToWaitForGdbConnection>
    1b16:	f7ff fe75 	bl	1804 <__mriPlatform_CommUartIndex>
    1b1a:	1d41      	adds	r1, r0, #5
    1b1c:	b2c8      	uxtb	r0, r1
    1b1e:	b2c2      	uxtb	r2, r0
    1b20:	b253      	sxtb	r3, r2
    1b22:	2b00      	cmp	r3, #0
    1b24:	da06      	bge.n	1b34 <__mriLpc176xUart_Init+0x244>
    1b26:	4b1c      	ldr	r3, [pc, #112]	; (1b98 <__mriLpc176xUart_Init+0x2a8>)
    1b28:	f000 010f 	and.w	r1, r0, #15
    1b2c:	18cb      	adds	r3, r1, r3
    1b2e:	2100      	movs	r1, #0
    1b30:	7619      	strb	r1, [r3, #24]
    1b32:	e006      	b.n	1b42 <__mriLpc176xUart_Init+0x252>
    1b34:	f103 4160 	add.w	r1, r3, #3758096384	; 0xe0000000
    1b38:	f501 4361 	add.w	r3, r1, #57600	; 0xe100
    1b3c:	2100      	movs	r1, #0
    1b3e:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
    1b42:	b252      	sxtb	r2, r2
    1b44:	f000 001f 	and.w	r0, r0, #31
    1b48:	2301      	movs	r3, #1
    1b4a:	0951      	lsrs	r1, r2, #5
    1b4c:	fa03 f200 	lsl.w	r2, r3, r0
    1b50:	4812      	ldr	r0, [pc, #72]	; (1b9c <__mriLpc176xUart_Init+0x2ac>)
    1b52:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
    1b56:	b007      	add	sp, #28
    1b58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    1b5c:	00003c50 	.word	0x00003c50
    1b60:	00003c62 	.word	0x00003c62
    1b64:	00003c77 	.word	0x00003c77
    1b68:	00003c8d 	.word	0x00003c8d
    1b6c:	00003ca3 	.word	0x00003ca3
    1b70:	00003cae 	.word	0x00003cae
    1b74:	00003cb9 	.word	0x00003cb9
    1b78:	00003cc4 	.word	0x00003cc4
    1b7c:	00003cde 	.word	0x00003cde
    1b80:	1000014c 	.word	0x1000014c
    1b84:	00003ccf 	.word	0x00003ccf
    1b88:	00003bc0 	.word	0x00003bc0
    1b8c:	10000448 	.word	0x10000448
    1b90:	400fc000 	.word	0x400fc000
    1b94:	100000c8 	.word	0x100000c8
    1b98:	e000ecfc 	.word	0xe000ecfc
    1b9c:	e000e100 	.word	0xe000e100

00001ba0 <__mriPlatform_CommWaitForReceiveDataToStop>:
    1ba0:	b538      	push	{r3, r4, r5, lr}
    1ba2:	4b13      	ldr	r3, [pc, #76]	; (1bf0 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    1ba4:	681c      	ldr	r4, [r3, #0]
    1ba6:	685d      	ldr	r5, [r3, #4]
    1ba8:	68da      	ldr	r2, [r3, #12]
    1baa:	f022 407f 	bic.w	r0, r2, #4278190080	; 0xff000000
    1bae:	b140      	cbz	r0, 1bc2 <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    1bb0:	2200      	movs	r2, #0
    1bb2:	601a      	str	r2, [r3, #0]
    1bb4:	68d9      	ldr	r1, [r3, #12]
    1bb6:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    1bba:	6058      	str	r0, [r3, #4]
    1bbc:	609a      	str	r2, [r3, #8]
    1bbe:	2205      	movs	r2, #5
    1bc0:	601a      	str	r2, [r3, #0]
    1bc2:	f7ff fe2d 	bl	1820 <__mriPlatform_CommHasReceiveData>
    1bc6:	4b0a      	ldr	r3, [pc, #40]	; (1bf0 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    1bc8:	b930      	cbnz	r0, 1bd8 <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    1bca:	68d9      	ldr	r1, [r3, #12]
    1bcc:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    1bd0:	b110      	cbz	r0, 1bd8 <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    1bd2:	681a      	ldr	r2, [r3, #0]
    1bd4:	03d1      	lsls	r1, r2, #15
    1bd6:	d5f4      	bpl.n	1bc2 <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    1bd8:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
    1bdc:	605d      	str	r5, [r3, #4]
    1bde:	601c      	str	r4, [r3, #0]
    1be0:	f7ff fe1e 	bl	1820 <__mriPlatform_CommHasReceiveData>
    1be4:	b110      	cbz	r0, 1bec <__mriPlatform_CommWaitForReceiveDataToStop+0x4c>
    1be6:	f7ff fe25 	bl	1834 <__mriPlatform_CommReceiveChar>
    1bea:	e7da      	b.n	1ba2 <__mriPlatform_CommWaitForReceiveDataToStop+0x2>
    1bec:	bd38      	pop	{r3, r4, r5, pc}
    1bee:	bf00      	nop
    1bf0:	e000e010 	.word	0xe000e010

00001bf4 <__mriPlatform_Init>:
    1bf4:	4a1f      	ldr	r2, [pc, #124]	; (1c74 <__mriPlatform_Init+0x80>)
    1bf6:	2300      	movs	r3, #0
    1bf8:	b570      	push	{r4, r5, r6, lr}
    1bfa:	f842 3b04 	str.w	r3, [r2], #4
    1bfe:	4b1e      	ldr	r3, [pc, #120]	; (1c78 <__mriPlatform_Init+0x84>)
    1c00:	4606      	mov	r6, r0
    1c02:	f103 0520 	add.w	r5, r3, #32
    1c06:	6818      	ldr	r0, [r3, #0]
    1c08:	6859      	ldr	r1, [r3, #4]
    1c0a:	4614      	mov	r4, r2
    1c0c:	c403      	stmia	r4!, {r0, r1}
    1c0e:	3308      	adds	r3, #8
    1c10:	42ab      	cmp	r3, r5
    1c12:	4622      	mov	r2, r4
    1c14:	d1f7      	bne.n	1c06 <__mriPlatform_Init+0x12>
    1c16:	6818      	ldr	r0, [r3, #0]
    1c18:	4918      	ldr	r1, [pc, #96]	; (1c7c <__mriPlatform_Init+0x88>)
    1c1a:	6020      	str	r0, [r4, #0]
    1c1c:	680b      	ldr	r3, [r1, #0]
    1c1e:	4c18      	ldr	r4, [pc, #96]	; (1c80 <__mriPlatform_Init+0x8c>)
    1c20:	2500      	movs	r5, #0
    1c22:	07d8      	lsls	r0, r3, #31
    1c24:	6025      	str	r5, [r4, #0]
    1c26:	d51b      	bpl.n	1c60 <__mriPlatform_Init+0x6c>
    1c28:	4816      	ldr	r0, [pc, #88]	; (1c84 <__mriPlatform_Init+0x90>)
    1c2a:	f000 f83d 	bl	1ca8 <__mriGetMbedUid>
    1c2e:	f000 f82f 	bl	1c90 <__mriDisableMbed>
    1c32:	6025      	str	r5, [r4, #0]
    1c34:	f241 3089 	movw	r0, #5001	; 0x1389
    1c38:	3801      	subs	r0, #1
    1c3a:	4a10      	ldr	r2, [pc, #64]	; (1c7c <__mriPlatform_Init+0x88>)
    1c3c:	d002      	beq.n	1c44 <__mriPlatform_Init+0x50>
    1c3e:	6811      	ldr	r1, [r2, #0]
    1c40:	07c9      	lsls	r1, r1, #31
    1c42:	d4f9      	bmi.n	1c38 <__mriPlatform_Init+0x44>
    1c44:	6813      	ldr	r3, [r2, #0]
    1c46:	480e      	ldr	r0, [pc, #56]	; (1c80 <__mriPlatform_Init+0x8c>)
    1c48:	f013 0f01 	tst.w	r3, #1
    1c4c:	d001      	beq.n	1c52 <__mriPlatform_Init+0x5e>
    1c4e:	2205      	movs	r2, #5
    1c50:	6002      	str	r2, [r0, #0]
    1c52:	6801      	ldr	r1, [r0, #0]
    1c54:	b921      	cbnz	r1, 1c60 <__mriPlatform_Init+0x6c>
    1c56:	4b07      	ldr	r3, [pc, #28]	; (1c74 <__mriPlatform_Init+0x80>)
    1c58:	6818      	ldr	r0, [r3, #0]
    1c5a:	f040 0201 	orr.w	r2, r0, #1
    1c5e:	601a      	str	r2, [r3, #0]
    1c60:	4907      	ldr	r1, [pc, #28]	; (1c80 <__mriPlatform_Init+0x8c>)
    1c62:	680b      	ldr	r3, [r1, #0]
    1c64:	b923      	cbnz	r3, 1c70 <__mriPlatform_Init+0x7c>
    1c66:	4630      	mov	r0, r6
    1c68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1c6c:	f000 bfce 	b.w	2c0c <__mriLpc176x_Init>
    1c70:	bd70      	pop	{r4, r5, r6, pc}
    1c72:	bf00      	nop
    1c74:	10000118 	.word	0x10000118
    1c78:	00003ced 	.word	0x00003ced
    1c7c:	e000edf0 	.word	0xe000edf0
    1c80:	1000014c 	.word	0x1000014c
    1c84:	1000011c 	.word	0x1000011c

00001c88 <__mriMbed1768_GetMbedUid>:
    1c88:	4800      	ldr	r0, [pc, #0]	; (1c8c <__mriMbed1768_GetMbedUid+0x4>)
    1c8a:	4770      	bx	lr
    1c8c:	1000011c 	.word	0x1000011c

00001c90 <__mriDisableMbed>:
    1c90:	b082      	sub	sp, #8
    1c92:	a901      	add	r1, sp, #4
    1c94:	f240 1005 	movw	r0, #261	; 0x105
    1c98:	beab      	bkpt	0x00ab
    1c9a:	2800      	cmp	r0, #0
    1c9c:	bf0c      	ite	eq
    1c9e:	9801      	ldreq	r0, [sp, #4]
    1ca0:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    1ca4:	b002      	add	sp, #8
    1ca6:	4770      	bx	lr

00001ca8 <__mriGetMbedUid>:
    1ca8:	b082      	sub	sp, #8
    1caa:	9000      	str	r0, [sp, #0]
    1cac:	2021      	movs	r0, #33	; 0x21
    1cae:	9001      	str	r0, [sp, #4]
    1cb0:	4669      	mov	r1, sp
    1cb2:	f240 1001 	movw	r0, #257	; 0x101
    1cb6:	beab      	bkpt	0x00ab
    1cb8:	b002      	add	sp, #8
    1cba:	4770      	bx	lr

00001cbc <HexCharToNibble>:
    1cbc:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    1cc0:	2b05      	cmp	r3, #5
    1cc2:	d801      	bhi.n	1cc8 <HexCharToNibble+0xc>
    1cc4:	3857      	subs	r0, #87	; 0x57
    1cc6:	4770      	bx	lr
    1cc8:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
    1ccc:	2905      	cmp	r1, #5
    1cce:	d801      	bhi.n	1cd4 <HexCharToNibble+0x18>
    1cd0:	3837      	subs	r0, #55	; 0x37
    1cd2:	4770      	bx	lr
    1cd4:	3830      	subs	r0, #48	; 0x30
    1cd6:	b2c2      	uxtb	r2, r0
    1cd8:	2a09      	cmp	r2, #9
    1cda:	d907      	bls.n	1cec <HexCharToNibble+0x30>
    1cdc:	4804      	ldr	r0, [pc, #16]	; (1cf0 <HexCharToNibble+0x34>)
    1cde:	6803      	ldr	r3, [r0, #0]
    1ce0:	2b02      	cmp	r3, #2
    1ce2:	bfb8      	it	lt
    1ce4:	2302      	movlt	r3, #2
    1ce6:	6003      	str	r3, [r0, #0]
    1ce8:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1cec:	4770      	bx	lr
    1cee:	bf00      	nop
    1cf0:	1000014c 	.word	0x1000014c

00001cf4 <__mriBuffer_Init>:
    1cf4:	188a      	adds	r2, r1, r2
    1cf6:	6001      	str	r1, [r0, #0]
    1cf8:	6042      	str	r2, [r0, #4]
    1cfa:	6081      	str	r1, [r0, #8]
    1cfc:	4770      	bx	lr

00001cfe <__mriBuffer_Reset>:
    1cfe:	6803      	ldr	r3, [r0, #0]
    1d00:	6083      	str	r3, [r0, #8]
    1d02:	4770      	bx	lr

00001d04 <__mriBuffer_SetEndOfBuffer>:
    1d04:	6883      	ldr	r3, [r0, #8]
    1d06:	6842      	ldr	r2, [r0, #4]
    1d08:	4293      	cmp	r3, r2
    1d0a:	bf38      	it	cc
    1d0c:	6043      	strcc	r3, [r0, #4]
    1d0e:	4770      	bx	lr

00001d10 <__mriBuffer_BytesLeft>:
    1d10:	6883      	ldr	r3, [r0, #8]
    1d12:	6840      	ldr	r0, [r0, #4]
    1d14:	4283      	cmp	r3, r0
    1d16:	bf94      	ite	ls
    1d18:	ebc3 0000 	rsbls	r0, r3, r0
    1d1c:	2000      	movhi	r0, #0
    1d1e:	4770      	bx	lr

00001d20 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>:
    1d20:	b538      	push	{r3, r4, r5, lr}
    1d22:	460d      	mov	r5, r1
    1d24:	4604      	mov	r4, r0
    1d26:	f7ff fff3 	bl	1d10 <__mriBuffer_BytesLeft>
    1d2a:	42a8      	cmp	r0, r5
    1d2c:	d208      	bcs.n	1d40 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x20>
    1d2e:	4905      	ldr	r1, [pc, #20]	; (1d44 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x24>)
    1d30:	6863      	ldr	r3, [r4, #4]
    1d32:	680a      	ldr	r2, [r1, #0]
    1d34:	1c58      	adds	r0, r3, #1
    1d36:	2a01      	cmp	r2, #1
    1d38:	bfb8      	it	lt
    1d3a:	2201      	movlt	r2, #1
    1d3c:	60a0      	str	r0, [r4, #8]
    1d3e:	600a      	str	r2, [r1, #0]
    1d40:	bd38      	pop	{r3, r4, r5, pc}
    1d42:	bf00      	nop
    1d44:	1000014c 	.word	0x1000014c

00001d48 <__mriBuffer_OverrunDetected>:
    1d48:	6882      	ldr	r2, [r0, #8]
    1d4a:	6840      	ldr	r0, [r0, #4]
    1d4c:	4282      	cmp	r2, r0
    1d4e:	bf94      	ite	ls
    1d50:	2000      	movls	r0, #0
    1d52:	2001      	movhi	r0, #1
    1d54:	4770      	bx	lr
	...

00001d58 <__mriBuffer_WriteChar>:
    1d58:	b570      	push	{r4, r5, r6, lr}
    1d5a:	4d07      	ldr	r5, [pc, #28]	; (1d78 <__mriBuffer_WriteChar+0x20>)
    1d5c:	2300      	movs	r3, #0
    1d5e:	460e      	mov	r6, r1
    1d60:	2101      	movs	r1, #1
    1d62:	4604      	mov	r4, r0
    1d64:	602b      	str	r3, [r5, #0]
    1d66:	f7ff ffdb 	bl	1d20 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1d6a:	6828      	ldr	r0, [r5, #0]
    1d6c:	b918      	cbnz	r0, 1d76 <__mriBuffer_WriteChar+0x1e>
    1d6e:	68a1      	ldr	r1, [r4, #8]
    1d70:	f801 6b01 	strb.w	r6, [r1], #1
    1d74:	60a1      	str	r1, [r4, #8]
    1d76:	bd70      	pop	{r4, r5, r6, pc}
    1d78:	1000014c 	.word	0x1000014c

00001d7c <__mriBuffer_ReadChar>:
    1d7c:	b570      	push	{r4, r5, r6, lr}
    1d7e:	4e08      	ldr	r6, [pc, #32]	; (1da0 <__mriBuffer_ReadChar+0x24>)
    1d80:	2400      	movs	r4, #0
    1d82:	2101      	movs	r1, #1
    1d84:	4605      	mov	r5, r0
    1d86:	6034      	str	r4, [r6, #0]
    1d88:	f7ff ffca 	bl	1d20 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1d8c:	6833      	ldr	r3, [r6, #0]
    1d8e:	b923      	cbnz	r3, 1d9a <__mriBuffer_ReadChar+0x1e>
    1d90:	68a9      	ldr	r1, [r5, #8]
    1d92:	f811 0b01 	ldrb.w	r0, [r1], #1
    1d96:	60a9      	str	r1, [r5, #8]
    1d98:	bd70      	pop	{r4, r5, r6, pc}
    1d9a:	4620      	mov	r0, r4
    1d9c:	bd70      	pop	{r4, r5, r6, pc}
    1d9e:	bf00      	nop
    1da0:	1000014c 	.word	0x1000014c

00001da4 <__mriBuffer_WriteByteAsHex>:
    1da4:	b570      	push	{r4, r5, r6, lr}
    1da6:	4e0b      	ldr	r6, [pc, #44]	; (1dd4 <__mriBuffer_WriteByteAsHex+0x30>)
    1da8:	2300      	movs	r3, #0
    1daa:	460d      	mov	r5, r1
    1dac:	2102      	movs	r1, #2
    1dae:	4604      	mov	r4, r0
    1db0:	6033      	str	r3, [r6, #0]
    1db2:	f7ff ffb5 	bl	1d20 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1db6:	6830      	ldr	r0, [r6, #0]
    1db8:	b950      	cbnz	r0, 1dd0 <__mriBuffer_WriteByteAsHex+0x2c>
    1dba:	4a07      	ldr	r2, [pc, #28]	; (1dd8 <__mriBuffer_WriteByteAsHex+0x34>)
    1dbc:	0929      	lsrs	r1, r5, #4
    1dbe:	f005 050f 	and.w	r5, r5, #15
    1dc2:	68a3      	ldr	r3, [r4, #8]
    1dc4:	5c50      	ldrb	r0, [r2, r1]
    1dc6:	5d52      	ldrb	r2, [r2, r5]
    1dc8:	7018      	strb	r0, [r3, #0]
    1dca:	705a      	strb	r2, [r3, #1]
    1dcc:	3302      	adds	r3, #2
    1dce:	60a3      	str	r3, [r4, #8]
    1dd0:	bd70      	pop	{r4, r5, r6, pc}
    1dd2:	bf00      	nop
    1dd4:	1000014c 	.word	0x1000014c
    1dd8:	00003d11 	.word	0x00003d11

00001ddc <__mriBuffer_ReadByteAsHex>:
    1ddc:	b570      	push	{r4, r5, r6, lr}
    1dde:	4e11      	ldr	r6, [pc, #68]	; (1e24 <__mriBuffer_ReadByteAsHex+0x48>)
    1de0:	2300      	movs	r3, #0
    1de2:	2102      	movs	r1, #2
    1de4:	4604      	mov	r4, r0
    1de6:	6033      	str	r3, [r6, #0]
    1de8:	f7ff ff9a 	bl	1d20 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1dec:	6830      	ldr	r0, [r6, #0]
    1dee:	b108      	cbz	r0, 1df4 <__mriBuffer_ReadByteAsHex+0x18>
    1df0:	2500      	movs	r5, #0
    1df2:	e014      	b.n	1e1e <__mriBuffer_ReadByteAsHex+0x42>
    1df4:	68a1      	ldr	r1, [r4, #8]
    1df6:	7808      	ldrb	r0, [r1, #0]
    1df8:	f7ff ff60 	bl	1cbc <HexCharToNibble>
    1dfc:	6833      	ldr	r3, [r6, #0]
    1dfe:	0102      	lsls	r2, r0, #4
    1e00:	b2d5      	uxtb	r5, r2
    1e02:	b92b      	cbnz	r3, 1e10 <__mriBuffer_ReadByteAsHex+0x34>
    1e04:	68a0      	ldr	r0, [r4, #8]
    1e06:	7840      	ldrb	r0, [r0, #1]
    1e08:	f7ff ff58 	bl	1cbc <HexCharToNibble>
    1e0c:	4328      	orrs	r0, r5
    1e0e:	b2c5      	uxtb	r5, r0
    1e10:	4904      	ldr	r1, [pc, #16]	; (1e24 <__mriBuffer_ReadByteAsHex+0x48>)
    1e12:	680a      	ldr	r2, [r1, #0]
    1e14:	2a00      	cmp	r2, #0
    1e16:	d1eb      	bne.n	1df0 <__mriBuffer_ReadByteAsHex+0x14>
    1e18:	68a3      	ldr	r3, [r4, #8]
    1e1a:	1c98      	adds	r0, r3, #2
    1e1c:	60a0      	str	r0, [r4, #8]
    1e1e:	4628      	mov	r0, r5
    1e20:	bd70      	pop	{r4, r5, r6, pc}
    1e22:	bf00      	nop
    1e24:	1000014c 	.word	0x1000014c

00001e28 <__mriBuffer_WriteSizedString>:
    1e28:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e2a:	4f0b      	ldr	r7, [pc, #44]	; (1e58 <__mriBuffer_WriteSizedString+0x30>)
    1e2c:	2300      	movs	r3, #0
    1e2e:	460c      	mov	r4, r1
    1e30:	4611      	mov	r1, r2
    1e32:	4605      	mov	r5, r0
    1e34:	4616      	mov	r6, r2
    1e36:	603b      	str	r3, [r7, #0]
    1e38:	f7ff ff72 	bl	1d20 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1e3c:	6838      	ldr	r0, [r7, #0]
    1e3e:	b948      	cbnz	r0, 1e54 <__mriBuffer_WriteSizedString+0x2c>
    1e40:	19a6      	adds	r6, r4, r6
    1e42:	42b4      	cmp	r4, r6
    1e44:	d006      	beq.n	1e54 <__mriBuffer_WriteSizedString+0x2c>
    1e46:	f814 2b01 	ldrb.w	r2, [r4], #1
    1e4a:	68a9      	ldr	r1, [r5, #8]
    1e4c:	f801 2b01 	strb.w	r2, [r1], #1
    1e50:	60a9      	str	r1, [r5, #8]
    1e52:	e7f6      	b.n	1e42 <__mriBuffer_WriteSizedString+0x1a>
    1e54:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1e56:	bf00      	nop
    1e58:	1000014c 	.word	0x1000014c

00001e5c <__mriBuffer_WriteString>:
    1e5c:	b538      	push	{r3, r4, r5, lr}
    1e5e:	4605      	mov	r5, r0
    1e60:	4608      	mov	r0, r1
    1e62:	460c      	mov	r4, r1
    1e64:	f001 fba4 	bl	35b0 <strlen>
    1e68:	4621      	mov	r1, r4
    1e6a:	4602      	mov	r2, r0
    1e6c:	4628      	mov	r0, r5
    1e6e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1e72:	f7ff bfd9 	b.w	1e28 <__mriBuffer_WriteSizedString>
	...

00001e78 <__mriBuffer_ReadUIntegerAsHex>:
    1e78:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e7a:	2500      	movs	r5, #0
    1e7c:	4604      	mov	r4, r0
    1e7e:	462e      	mov	r6, r5
    1e80:	4f13      	ldr	r7, [pc, #76]	; (1ed0 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1e82:	2300      	movs	r3, #0
    1e84:	4620      	mov	r0, r4
    1e86:	603b      	str	r3, [r7, #0]
    1e88:	f7ff ff78 	bl	1d7c <__mriBuffer_ReadChar>
    1e8c:	6839      	ldr	r1, [r7, #0]
    1e8e:	b961      	cbnz	r1, 1eaa <__mriBuffer_ReadUIntegerAsHex+0x32>
    1e90:	f7ff ff14 	bl	1cbc <HexCharToNibble>
    1e94:	683a      	ldr	r2, [r7, #0]
    1e96:	b132      	cbz	r2, 1ea6 <__mriBuffer_ReadUIntegerAsHex+0x2e>
    1e98:	68a0      	ldr	r0, [r4, #8]
    1e9a:	6823      	ldr	r3, [r4, #0]
    1e9c:	4298      	cmp	r0, r3
    1e9e:	d904      	bls.n	1eaa <__mriBuffer_ReadUIntegerAsHex+0x32>
    1ea0:	1e41      	subs	r1, r0, #1
    1ea2:	60a1      	str	r1, [r4, #8]
    1ea4:	e001      	b.n	1eaa <__mriBuffer_ReadUIntegerAsHex+0x32>
    1ea6:	eb00 1505 	add.w	r5, r0, r5, lsl #4
    1eaa:	4809      	ldr	r0, [pc, #36]	; (1ed0 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1eac:	6802      	ldr	r2, [r0, #0]
    1eae:	b90a      	cbnz	r2, 1eb4 <__mriBuffer_ReadUIntegerAsHex+0x3c>
    1eb0:	3601      	adds	r6, #1
    1eb2:	e7e5      	b.n	1e80 <__mriBuffer_ReadUIntegerAsHex+0x8>
    1eb4:	2300      	movs	r3, #0
    1eb6:	6861      	ldr	r1, [r4, #4]
    1eb8:	6003      	str	r3, [r0, #0]
    1eba:	68a0      	ldr	r0, [r4, #8]
    1ebc:	4288      	cmp	r0, r1
    1ebe:	bf88      	it	hi
    1ec0:	60a1      	strhi	r1, [r4, #8]
    1ec2:	b91e      	cbnz	r6, 1ecc <__mriBuffer_ReadUIntegerAsHex+0x54>
    1ec4:	4a02      	ldr	r2, [pc, #8]	; (1ed0 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1ec6:	2503      	movs	r5, #3
    1ec8:	6015      	str	r5, [r2, #0]
    1eca:	4635      	mov	r5, r6
    1ecc:	4628      	mov	r0, r5
    1ece:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1ed0:	1000014c 	.word	0x1000014c

00001ed4 <__mriBuffer_WriteUIntegerAsHex>:
    1ed4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1ed8:	4680      	mov	r8, r0
    1eda:	460e      	mov	r6, r1
    1edc:	b919      	cbnz	r1, 1ee6 <__mriBuffer_WriteUIntegerAsHex+0x12>
    1ede:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    1ee2:	f7ff bf5f 	b.w	1da4 <__mriBuffer_WriteByteAsHex>
    1ee6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    1eea:	2400      	movs	r4, #0
    1eec:	4233      	tst	r3, r6
    1eee:	d103      	bne.n	1ef8 <__mriBuffer_WriteUIntegerAsHex+0x24>
    1ef0:	3401      	adds	r4, #1
    1ef2:	0a1b      	lsrs	r3, r3, #8
    1ef4:	2c04      	cmp	r4, #4
    1ef6:	d1f9      	bne.n	1eec <__mriBuffer_WriteUIntegerAsHex+0x18>
    1ef8:	f1c4 0403 	rsb	r4, r4, #3
    1efc:	00e5      	lsls	r5, r4, #3
    1efe:	1c63      	adds	r3, r4, #1
    1f00:	d00d      	beq.n	1f1e <__mriBuffer_WriteUIntegerAsHex+0x4a>
    1f02:	fa26 f105 	lsr.w	r1, r6, r5
    1f06:	4f07      	ldr	r7, [pc, #28]	; (1f24 <__mriBuffer_WriteUIntegerAsHex+0x50>)
    1f08:	2000      	movs	r0, #0
    1f0a:	6038      	str	r0, [r7, #0]
    1f0c:	b2c9      	uxtb	r1, r1
    1f0e:	4640      	mov	r0, r8
    1f10:	f7ff ff48 	bl	1da4 <__mriBuffer_WriteByteAsHex>
    1f14:	683a      	ldr	r2, [r7, #0]
    1f16:	3c01      	subs	r4, #1
    1f18:	3d08      	subs	r5, #8
    1f1a:	2a00      	cmp	r2, #0
    1f1c:	d0ef      	beq.n	1efe <__mriBuffer_WriteUIntegerAsHex+0x2a>
    1f1e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1f22:	bf00      	nop
    1f24:	1000014c 	.word	0x1000014c

00001f28 <__mriBuffer_WriteIntegerAsHex>:
    1f28:	4b0a      	ldr	r3, [pc, #40]	; (1f54 <__mriBuffer_WriteIntegerAsHex+0x2c>)
    1f2a:	b570      	push	{r4, r5, r6, lr}
    1f2c:	2200      	movs	r2, #0
    1f2e:	1e0c      	subs	r4, r1, #0
    1f30:	4606      	mov	r6, r0
    1f32:	601a      	str	r2, [r3, #0]
    1f34:	461d      	mov	r5, r3
    1f36:	da03      	bge.n	1f40 <__mriBuffer_WriteIntegerAsHex+0x18>
    1f38:	212d      	movs	r1, #45	; 0x2d
    1f3a:	4264      	negs	r4, r4
    1f3c:	f7ff ff0c 	bl	1d58 <__mriBuffer_WriteChar>
    1f40:	6828      	ldr	r0, [r5, #0]
    1f42:	b928      	cbnz	r0, 1f50 <__mriBuffer_WriteIntegerAsHex+0x28>
    1f44:	4630      	mov	r0, r6
    1f46:	4621      	mov	r1, r4
    1f48:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1f4c:	f7ff bfc2 	b.w	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    1f50:	bd70      	pop	{r4, r5, r6, pc}
    1f52:	bf00      	nop
    1f54:	1000014c 	.word	0x1000014c

00001f58 <__mriBuffer_IsNextCharEqualTo>:
    1f58:	b570      	push	{r4, r5, r6, lr}
    1f5a:	4d0b      	ldr	r5, [pc, #44]	; (1f88 <__mriBuffer_IsNextCharEqualTo+0x30>)
    1f5c:	2300      	movs	r3, #0
    1f5e:	460e      	mov	r6, r1
    1f60:	4604      	mov	r4, r0
    1f62:	602b      	str	r3, [r5, #0]
    1f64:	f7ff fed4 	bl	1d10 <__mriBuffer_BytesLeft>
    1f68:	4629      	mov	r1, r5
    1f6a:	b908      	cbnz	r0, 1f70 <__mriBuffer_IsNextCharEqualTo+0x18>
    1f6c:	2201      	movs	r2, #1
    1f6e:	602a      	str	r2, [r5, #0]
    1f70:	6808      	ldr	r0, [r1, #0]
    1f72:	b938      	cbnz	r0, 1f84 <__mriBuffer_IsNextCharEqualTo+0x2c>
    1f74:	68a3      	ldr	r3, [r4, #8]
    1f76:	7819      	ldrb	r1, [r3, #0]
    1f78:	42b1      	cmp	r1, r6
    1f7a:	d104      	bne.n	1f86 <__mriBuffer_IsNextCharEqualTo+0x2e>
    1f7c:	1c58      	adds	r0, r3, #1
    1f7e:	60a0      	str	r0, [r4, #8]
    1f80:	2001      	movs	r0, #1
    1f82:	bd70      	pop	{r4, r5, r6, pc}
    1f84:	2000      	movs	r0, #0
    1f86:	bd70      	pop	{r4, r5, r6, pc}
    1f88:	1000014c 	.word	0x1000014c

00001f8c <__mriBuffer_ReadIntegerAsHex>:
    1f8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1f8e:	4c13      	ldr	r4, [pc, #76]	; (1fdc <__mriBuffer_ReadIntegerAsHex+0x50>)
    1f90:	2500      	movs	r5, #0
    1f92:	212d      	movs	r1, #45	; 0x2d
    1f94:	4607      	mov	r7, r0
    1f96:	6025      	str	r5, [r4, #0]
    1f98:	f7ff ffde 	bl	1f58 <__mriBuffer_IsNextCharEqualTo>
    1f9c:	6823      	ldr	r3, [r4, #0]
    1f9e:	4606      	mov	r6, r0
    1fa0:	b91b      	cbnz	r3, 1faa <__mriBuffer_ReadIntegerAsHex+0x1e>
    1fa2:	4638      	mov	r0, r7
    1fa4:	f7ff ff68 	bl	1e78 <__mriBuffer_ReadUIntegerAsHex>
    1fa8:	e000      	b.n	1fac <__mriBuffer_ReadIntegerAsHex+0x20>
    1faa:	4628      	mov	r0, r5
    1fac:	6822      	ldr	r2, [r4, #0]
    1fae:	490b      	ldr	r1, [pc, #44]	; (1fdc <__mriBuffer_ReadIntegerAsHex+0x50>)
    1fb0:	b98a      	cbnz	r2, 1fd6 <__mriBuffer_ReadIntegerAsHex+0x4a>
    1fb2:	b936      	cbnz	r6, 1fc2 <__mriBuffer_ReadIntegerAsHex+0x36>
    1fb4:	2800      	cmp	r0, #0
    1fb6:	da0f      	bge.n	1fd8 <__mriBuffer_ReadIntegerAsHex+0x4c>
    1fb8:	2303      	movs	r3, #3
    1fba:	600b      	str	r3, [r1, #0]
    1fbc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
    1fc0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fc2:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
    1fc6:	d904      	bls.n	1fd2 <__mriBuffer_ReadIntegerAsHex+0x46>
    1fc8:	2003      	movs	r0, #3
    1fca:	6008      	str	r0, [r1, #0]
    1fcc:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
    1fd0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fd2:	4240      	negs	r0, r0
    1fd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fd6:	2000      	movs	r0, #0
    1fd8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fda:	bf00      	nop
    1fdc:	1000014c 	.word	0x1000014c

00001fe0 <__mriBuffer_MatchesString>:
    1fe0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1fe4:	4e12      	ldr	r6, [pc, #72]	; (2030 <__mriBuffer_MatchesString+0x50>)
    1fe6:	2300      	movs	r3, #0
    1fe8:	4614      	mov	r4, r2
    1fea:	4605      	mov	r5, r0
    1fec:	4688      	mov	r8, r1
    1fee:	6033      	str	r3, [r6, #0]
    1ff0:	f7ff fe8e 	bl	1d10 <__mriBuffer_BytesLeft>
    1ff4:	42a0      	cmp	r0, r4
    1ff6:	d201      	bcs.n	1ffc <__mriBuffer_MatchesString+0x1c>
    1ff8:	2001      	movs	r0, #1
    1ffa:	6030      	str	r0, [r6, #0]
    1ffc:	6837      	ldr	r7, [r6, #0]
    1ffe:	b97f      	cbnz	r7, 2020 <__mriBuffer_MatchesString+0x40>
    2000:	68ae      	ldr	r6, [r5, #8]
    2002:	4641      	mov	r1, r8
    2004:	4630      	mov	r0, r6
    2006:	4622      	mov	r2, r4
    2008:	f001 fada 	bl	35c0 <strncmp>
    200c:	4680      	mov	r8, r0
    200e:	b938      	cbnz	r0, 2020 <__mriBuffer_MatchesString+0x40>
    2010:	4628      	mov	r0, r5
    2012:	f7ff fe7d 	bl	1d10 <__mriBuffer_BytesLeft>
    2016:	42a0      	cmp	r0, r4
    2018:	d005      	beq.n	2026 <__mriBuffer_MatchesString+0x46>
    201a:	5d31      	ldrb	r1, [r6, r4]
    201c:	293a      	cmp	r1, #58	; 0x3a
    201e:	d002      	beq.n	2026 <__mriBuffer_MatchesString+0x46>
    2020:	2000      	movs	r0, #0
    2022:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2026:	1934      	adds	r4, r6, r4
    2028:	60ac      	str	r4, [r5, #8]
    202a:	2001      	movs	r0, #1
    202c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2030:	1000014c 	.word	0x1000014c

00002034 <handleBreakpointWatchpointException>:
    2034:	4b03      	ldr	r3, [pc, #12]	; (2044 <handleBreakpointWatchpointException+0x10>)
    2036:	6819      	ldr	r1, [r3, #0]
    2038:	2904      	cmp	r1, #4
    203a:	bf0c      	ite	eq
    203c:	4802      	ldreq	r0, [pc, #8]	; (2048 <handleBreakpointWatchpointException+0x14>)
    203e:	4803      	ldrne	r0, [pc, #12]	; (204c <handleBreakpointWatchpointException+0x18>)
    2040:	f7fe b9c2 	b.w	3c8 <__mriCore_PrepareStringResponse>
    2044:	1000014c 	.word	0x1000014c
    2048:	00003d21 	.word	0x00003d21
    204c:	00003d25 	.word	0x00003d25

00002050 <parseBreakpointWatchpointCommandArguments>:
    2050:	b570      	push	{r4, r5, r6, lr}
    2052:	4606      	mov	r6, r0
    2054:	f7fe fa1c 	bl	490 <__mriCore_GetBuffer>
    2058:	4c0f      	ldr	r4, [pc, #60]	; (2098 <parseBreakpointWatchpointCommandArguments+0x48>)
    205a:	2300      	movs	r3, #0
    205c:	4605      	mov	r5, r0
    205e:	6023      	str	r3, [r4, #0]
    2060:	f7ff fe8c 	bl	1d7c <__mriBuffer_ReadChar>
    2064:	7230      	strb	r0, [r6, #8]
    2066:	6820      	ldr	r0, [r4, #0]
    2068:	b9a8      	cbnz	r0, 2096 <parseBreakpointWatchpointCommandArguments+0x46>
    206a:	212c      	movs	r1, #44	; 0x2c
    206c:	4628      	mov	r0, r5
    206e:	f000 f8bf 	bl	21f0 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2072:	6821      	ldr	r1, [r4, #0]
    2074:	b979      	cbnz	r1, 2096 <parseBreakpointWatchpointCommandArguments+0x46>
    2076:	4628      	mov	r0, r5
    2078:	f000 f8ac 	bl	21d4 <__mriCmd_ReadUIntegerArgument>
    207c:	6822      	ldr	r2, [r4, #0]
    207e:	6030      	str	r0, [r6, #0]
    2080:	b94a      	cbnz	r2, 2096 <parseBreakpointWatchpointCommandArguments+0x46>
    2082:	4628      	mov	r0, r5
    2084:	212c      	movs	r1, #44	; 0x2c
    2086:	f000 f8b3 	bl	21f0 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    208a:	6823      	ldr	r3, [r4, #0]
    208c:	b91b      	cbnz	r3, 2096 <parseBreakpointWatchpointCommandArguments+0x46>
    208e:	4628      	mov	r0, r5
    2090:	f000 f8a0 	bl	21d4 <__mriCmd_ReadUIntegerArgument>
    2094:	6070      	str	r0, [r6, #4]
    2096:	bd70      	pop	{r4, r5, r6, pc}
    2098:	1000014c 	.word	0x1000014c

0000209c <handleWatchpointRemoveCommand>:
    209c:	b510      	push	{r4, lr}
    209e:	4c09      	ldr	r4, [pc, #36]	; (20c4 <handleWatchpointRemoveCommand+0x28>)
    20a0:	4602      	mov	r2, r0
    20a2:	2300      	movs	r3, #0
    20a4:	c903      	ldmia	r1, {r0, r1}
    20a6:	6023      	str	r3, [r4, #0]
    20a8:	f7ff faa8 	bl	15fc <__mriPlatform_ClearHardwareWatchpoint>
    20ac:	6820      	ldr	r0, [r4, #0]
    20ae:	b118      	cbz	r0, 20b8 <handleWatchpointRemoveCommand+0x1c>
    20b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    20b4:	f7ff bfbe 	b.w	2034 <handleBreakpointWatchpointException>
    20b8:	4803      	ldr	r0, [pc, #12]	; (20c8 <handleWatchpointRemoveCommand+0x2c>)
    20ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    20be:	f7fe b983 	b.w	3c8 <__mriCore_PrepareStringResponse>
    20c2:	bf00      	nop
    20c4:	1000014c 	.word	0x1000014c
    20c8:	00003d29 	.word	0x00003d29

000020cc <handleWatchpointSetCommand>:
    20cc:	b510      	push	{r4, lr}
    20ce:	4c09      	ldr	r4, [pc, #36]	; (20f4 <handleWatchpointSetCommand+0x28>)
    20d0:	4602      	mov	r2, r0
    20d2:	2300      	movs	r3, #0
    20d4:	c903      	ldmia	r1, {r0, r1}
    20d6:	6023      	str	r3, [r4, #0]
    20d8:	f7ff fa46 	bl	1568 <__mriPlatform_SetHardwareWatchpoint>
    20dc:	6820      	ldr	r0, [r4, #0]
    20de:	b118      	cbz	r0, 20e8 <handleWatchpointSetCommand+0x1c>
    20e0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    20e4:	f7ff bfa6 	b.w	2034 <handleBreakpointWatchpointException>
    20e8:	4803      	ldr	r0, [pc, #12]	; (20f8 <handleWatchpointSetCommand+0x2c>)
    20ea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    20ee:	f7fe b96b 	b.w	3c8 <__mriCore_PrepareStringResponse>
    20f2:	bf00      	nop
    20f4:	1000014c 	.word	0x1000014c
    20f8:	00003d29 	.word	0x00003d29

000020fc <__mriCmd_HandleBreakpointWatchpointSetCommand>:
    20fc:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    20fe:	4c16      	ldr	r4, [pc, #88]	; (2158 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x5c>)
    2100:	2300      	movs	r3, #0
    2102:	a801      	add	r0, sp, #4
    2104:	6023      	str	r3, [r4, #0]
    2106:	f7ff ffa3 	bl	2050 <parseBreakpointWatchpointCommandArguments>
    210a:	6820      	ldr	r0, [r4, #0]
    210c:	b108      	cbz	r0, 2112 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x16>
    210e:	4813      	ldr	r0, [pc, #76]	; (215c <__mriCmd_HandleBreakpointWatchpointSetCommand+0x60>)
    2110:	e01d      	b.n	214e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    2112:	f89d 100c 	ldrb.w	r1, [sp, #12]
    2116:	3931      	subs	r1, #49	; 0x31
    2118:	2903      	cmp	r1, #3
    211a:	d817      	bhi.n	214c <__mriCmd_HandleBreakpointWatchpointSetCommand+0x50>
    211c:	e8df f001 	tbb	[pc, r1]
    2120:	110f0d02 	.word	0x110f0d02
    2124:	9801      	ldr	r0, [sp, #4]
    2126:	9902      	ldr	r1, [sp, #8]
    2128:	f7ff f8d8 	bl	12dc <__mriPlatform_SetHardwareBreakpoint>
    212c:	6822      	ldr	r2, [r4, #0]
    212e:	b112      	cbz	r2, 2136 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x3a>
    2130:	f7ff ff80 	bl	2034 <handleBreakpointWatchpointException>
    2134:	e00d      	b.n	2152 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    2136:	480a      	ldr	r0, [pc, #40]	; (2160 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x64>)
    2138:	e009      	b.n	214e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    213a:	2000      	movs	r0, #0
    213c:	e002      	b.n	2144 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    213e:	2001      	movs	r0, #1
    2140:	e000      	b.n	2144 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    2142:	2002      	movs	r0, #2
    2144:	a901      	add	r1, sp, #4
    2146:	f7ff ffc1 	bl	20cc <handleWatchpointSetCommand>
    214a:	e002      	b.n	2152 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    214c:	4805      	ldr	r0, [pc, #20]	; (2164 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x68>)
    214e:	f7fe f93b 	bl	3c8 <__mriCore_PrepareStringResponse>
    2152:	2000      	movs	r0, #0
    2154:	b004      	add	sp, #16
    2156:	bd10      	pop	{r4, pc}
    2158:	1000014c 	.word	0x1000014c
    215c:	00003d21 	.word	0x00003d21
    2160:	00003d29 	.word	0x00003d29
    2164:	000036be 	.word	0x000036be

00002168 <__mriCmd_HandleBreakpointWatchpointRemoveCommand>:
    2168:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    216a:	4c16      	ldr	r4, [pc, #88]	; (21c4 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x5c>)
    216c:	2300      	movs	r3, #0
    216e:	a801      	add	r0, sp, #4
    2170:	6023      	str	r3, [r4, #0]
    2172:	f7ff ff6d 	bl	2050 <parseBreakpointWatchpointCommandArguments>
    2176:	6820      	ldr	r0, [r4, #0]
    2178:	b108      	cbz	r0, 217e <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x16>
    217a:	4813      	ldr	r0, [pc, #76]	; (21c8 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x60>)
    217c:	e01d      	b.n	21ba <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    217e:	f89d 100c 	ldrb.w	r1, [sp, #12]
    2182:	3931      	subs	r1, #49	; 0x31
    2184:	2903      	cmp	r1, #3
    2186:	d817      	bhi.n	21b8 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x50>
    2188:	e8df f001 	tbb	[pc, r1]
    218c:	110f0d02 	.word	0x110f0d02
    2190:	9801      	ldr	r0, [sp, #4]
    2192:	9902      	ldr	r1, [sp, #8]
    2194:	f7ff f948 	bl	1428 <__mriPlatform_ClearHardwareBreakpoint>
    2198:	6822      	ldr	r2, [r4, #0]
    219a:	b112      	cbz	r2, 21a2 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x3a>
    219c:	f7ff ff4a 	bl	2034 <handleBreakpointWatchpointException>
    21a0:	e00d      	b.n	21be <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    21a2:	480a      	ldr	r0, [pc, #40]	; (21cc <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x64>)
    21a4:	e009      	b.n	21ba <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    21a6:	2000      	movs	r0, #0
    21a8:	e002      	b.n	21b0 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    21aa:	2001      	movs	r0, #1
    21ac:	e000      	b.n	21b0 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    21ae:	2002      	movs	r0, #2
    21b0:	a901      	add	r1, sp, #4
    21b2:	f7ff ff73 	bl	209c <handleWatchpointRemoveCommand>
    21b6:	e002      	b.n	21be <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    21b8:	4805      	ldr	r0, [pc, #20]	; (21d0 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x68>)
    21ba:	f7fe f905 	bl	3c8 <__mriCore_PrepareStringResponse>
    21be:	2000      	movs	r0, #0
    21c0:	b004      	add	sp, #16
    21c2:	bd10      	pop	{r4, pc}
    21c4:	1000014c 	.word	0x1000014c
    21c8:	00003d21 	.word	0x00003d21
    21cc:	00003d29 	.word	0x00003d29
    21d0:	000036be 	.word	0x000036be

000021d4 <__mriCmd_ReadUIntegerArgument>:
    21d4:	b510      	push	{r4, lr}
    21d6:	4c05      	ldr	r4, [pc, #20]	; (21ec <__mriCmd_ReadUIntegerArgument+0x18>)
    21d8:	2300      	movs	r3, #0
    21da:	6023      	str	r3, [r4, #0]
    21dc:	f7ff fe4c 	bl	1e78 <__mriBuffer_ReadUIntegerAsHex>
    21e0:	6821      	ldr	r1, [r4, #0]
    21e2:	2900      	cmp	r1, #0
    21e4:	bf18      	it	ne
    21e6:	2000      	movne	r0, #0
    21e8:	bd10      	pop	{r4, pc}
    21ea:	bf00      	nop
    21ec:	1000014c 	.word	0x1000014c

000021f0 <__mriCmd_ThrowIfNextCharIsNotEqualTo>:
    21f0:	b508      	push	{r3, lr}
    21f2:	f7ff feb1 	bl	1f58 <__mriBuffer_IsNextCharEqualTo>
    21f6:	b928      	cbnz	r0, 2204 <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x14>
    21f8:	4b03      	ldr	r3, [pc, #12]	; (2208 <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x18>)
    21fa:	681a      	ldr	r2, [r3, #0]
    21fc:	2a04      	cmp	r2, #4
    21fe:	bfb8      	it	lt
    2200:	2204      	movlt	r2, #4
    2202:	601a      	str	r2, [r3, #0]
    2204:	bd08      	pop	{r3, pc}
    2206:	bf00      	nop
    2208:	1000014c 	.word	0x1000014c

0000220c <__mriCmd_ReadAddressAndLengthArguments>:
    220c:	b570      	push	{r4, r5, r6, lr}
    220e:	4c0a      	ldr	r4, [pc, #40]	; (2238 <__mriCmd_ReadAddressAndLengthArguments+0x2c>)
    2210:	2300      	movs	r3, #0
    2212:	460d      	mov	r5, r1
    2214:	4606      	mov	r6, r0
    2216:	6023      	str	r3, [r4, #0]
    2218:	f7ff ffdc 	bl	21d4 <__mriCmd_ReadUIntegerArgument>
    221c:	6028      	str	r0, [r5, #0]
    221e:	6820      	ldr	r0, [r4, #0]
    2220:	b948      	cbnz	r0, 2236 <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    2222:	212c      	movs	r1, #44	; 0x2c
    2224:	4630      	mov	r0, r6
    2226:	f7ff ffe3 	bl	21f0 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    222a:	6821      	ldr	r1, [r4, #0]
    222c:	b919      	cbnz	r1, 2236 <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    222e:	4630      	mov	r0, r6
    2230:	f7ff ffd0 	bl	21d4 <__mriCmd_ReadUIntegerArgument>
    2234:	6068      	str	r0, [r5, #4]
    2236:	bd70      	pop	{r4, r5, r6, pc}
    2238:	1000014c 	.word	0x1000014c

0000223c <__mriCmd_ReadAddressAndLengthArgumentsWithColon>:
    223c:	b538      	push	{r3, r4, r5, lr}
    223e:	4c07      	ldr	r4, [pc, #28]	; (225c <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x20>)
    2240:	2300      	movs	r3, #0
    2242:	4605      	mov	r5, r0
    2244:	6023      	str	r3, [r4, #0]
    2246:	f7ff ffe1 	bl	220c <__mriCmd_ReadAddressAndLengthArguments>
    224a:	6820      	ldr	r0, [r4, #0]
    224c:	b928      	cbnz	r0, 225a <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x1e>
    224e:	4628      	mov	r0, r5
    2250:	213a      	movs	r1, #58	; 0x3a
    2252:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2256:	f7ff bfcb 	b.w	21f0 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    225a:	bd38      	pop	{r3, r4, r5, pc}
    225c:	1000014c 	.word	0x1000014c

00002260 <__mriCmd_HandleContinueCommand>:
    2260:	b570      	push	{r4, r5, r6, lr}
    2262:	f7fe f915 	bl	490 <__mriCore_GetBuffer>
    2266:	4606      	mov	r6, r0
    2268:	f7fe ff64 	bl	1134 <__mriPlatform_WasProgramCounterModifiedByUser>
    226c:	b918      	cbnz	r0, 2276 <__mriCmd_HandleContinueCommand+0x16>
    226e:	f7fe ffb5 	bl	11dc <__mriPlatform_TypeOfCurrentInstruction>
    2272:	2803      	cmp	r0, #3
    2274:	d012      	beq.n	229c <__mriCmd_HandleContinueCommand+0x3c>
    2276:	2500      	movs	r5, #0
    2278:	4c0a      	ldr	r4, [pc, #40]	; (22a4 <__mriCmd_HandleContinueCommand+0x44>)
    227a:	2300      	movs	r3, #0
    227c:	4630      	mov	r0, r6
    227e:	6023      	str	r3, [r4, #0]
    2280:	f7ff ffa8 	bl	21d4 <__mriCmd_ReadUIntegerArgument>
    2284:	6821      	ldr	r1, [r4, #0]
    2286:	b909      	cbnz	r1, 228c <__mriCmd_HandleContinueCommand+0x2c>
    2288:	f7fe ff4e 	bl	1128 <__mriPlatform_SetProgramCounter>
    228c:	6820      	ldr	r0, [r4, #0]
    228e:	b110      	cbz	r0, 2296 <__mriCmd_HandleContinueCommand+0x36>
    2290:	4b04      	ldr	r3, [pc, #16]	; (22a4 <__mriCmd_HandleContinueCommand+0x44>)
    2292:	2200      	movs	r2, #0
    2294:	601a      	str	r2, [r3, #0]
    2296:	f045 0003 	orr.w	r0, r5, #3
    229a:	bd70      	pop	{r4, r5, r6, pc}
    229c:	f7fe ffbc 	bl	1218 <__mriPlatform_AdvanceProgramCounterToNextInstruction>
    22a0:	2504      	movs	r5, #4
    22a2:	e7e9      	b.n	2278 <__mriCmd_HandleContinueCommand+0x18>
    22a4:	1000014c 	.word	0x1000014c

000022a8 <processGdbFileResponseCommands>:
    22a8:	b508      	push	{r3, lr}
    22aa:	f7fe f919 	bl	4e0 <__mriCore_GdbCommandHandlingLoop>
    22ae:	f7fe f897 	bl	3e0 <__mriCore_WasControlCFlagSentFromGdb>
    22b2:	b148      	cbz	r0, 22c8 <processGdbFileResponseCommands+0x20>
    22b4:	f7fe f8b6 	bl	424 <__mriCore_WasSemihostCallCancelledByGdb>
    22b8:	b908      	cbnz	r0, 22be <processGdbFileResponseCommands+0x16>
    22ba:	f7fe f8bd 	bl	438 <__mriCore_FlagSemihostCallAsHandled>
    22be:	2002      	movs	r0, #2
    22c0:	f7fe f8ce 	bl	460 <__mriCore_SetSignalValue>
    22c4:	2000      	movs	r0, #0
    22c6:	bd08      	pop	{r3, pc}
    22c8:	f7fe f8b6 	bl	438 <__mriCore_FlagSemihostCallAsHandled>
    22cc:	2001      	movs	r0, #1
    22ce:	bd08      	pop	{r3, pc}

000022d0 <__mriIssueGdbFileOpenRequest>:
    22d0:	b538      	push	{r3, r4, r5, lr}
    22d2:	4605      	mov	r5, r0
    22d4:	f7fe f8e0 	bl	498 <__mriCore_GetInitializedBuffer>
    22d8:	4912      	ldr	r1, [pc, #72]	; (2324 <__mriIssueGdbFileOpenRequest+0x54>)
    22da:	4604      	mov	r4, r0
    22dc:	f7ff fdbe 	bl	1e5c <__mriBuffer_WriteString>
    22e0:	4620      	mov	r0, r4
    22e2:	6829      	ldr	r1, [r5, #0]
    22e4:	f7ff fdf6 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    22e8:	4620      	mov	r0, r4
    22ea:	212f      	movs	r1, #47	; 0x2f
    22ec:	f7ff fd34 	bl	1d58 <__mriBuffer_WriteChar>
    22f0:	4620      	mov	r0, r4
    22f2:	6869      	ldr	r1, [r5, #4]
    22f4:	f7ff fdee 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    22f8:	4620      	mov	r0, r4
    22fa:	212c      	movs	r1, #44	; 0x2c
    22fc:	f7ff fd2c 	bl	1d58 <__mriBuffer_WriteChar>
    2300:	4620      	mov	r0, r4
    2302:	68a9      	ldr	r1, [r5, #8]
    2304:	f7ff fde6 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2308:	4620      	mov	r0, r4
    230a:	212c      	movs	r1, #44	; 0x2c
    230c:	f7ff fd24 	bl	1d58 <__mriBuffer_WriteChar>
    2310:	4620      	mov	r0, r4
    2312:	68e9      	ldr	r1, [r5, #12]
    2314:	f7ff fdde 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2318:	f7fe f8c6 	bl	4a8 <__mriCore_SendPacketToGdb>
    231c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2320:	f7ff bfc2 	b.w	22a8 <processGdbFileResponseCommands>
    2324:	00003d4e 	.word	0x00003d4e

00002328 <__mriIssueGdbFileWriteRequest>:
    2328:	b538      	push	{r3, r4, r5, lr}
    232a:	4605      	mov	r5, r0
    232c:	f7fe f8b4 	bl	498 <__mriCore_GetInitializedBuffer>
    2330:	490e      	ldr	r1, [pc, #56]	; (236c <__mriIssueGdbFileWriteRequest+0x44>)
    2332:	4604      	mov	r4, r0
    2334:	f7ff fd92 	bl	1e5c <__mriBuffer_WriteString>
    2338:	4620      	mov	r0, r4
    233a:	6829      	ldr	r1, [r5, #0]
    233c:	f7ff fdca 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2340:	4620      	mov	r0, r4
    2342:	212c      	movs	r1, #44	; 0x2c
    2344:	f7ff fd08 	bl	1d58 <__mriBuffer_WriteChar>
    2348:	4620      	mov	r0, r4
    234a:	6869      	ldr	r1, [r5, #4]
    234c:	f7ff fdc2 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2350:	4620      	mov	r0, r4
    2352:	212c      	movs	r1, #44	; 0x2c
    2354:	f7ff fd00 	bl	1d58 <__mriBuffer_WriteChar>
    2358:	4620      	mov	r0, r4
    235a:	68a9      	ldr	r1, [r5, #8]
    235c:	f7ff fdba 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2360:	f7fe f8a2 	bl	4a8 <__mriCore_SendPacketToGdb>
    2364:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2368:	f7ff bf9e 	b.w	22a8 <processGdbFileResponseCommands>
    236c:	00003d46 	.word	0x00003d46

00002370 <__mriIssueGdbFileReadRequest>:
    2370:	b538      	push	{r3, r4, r5, lr}
    2372:	4605      	mov	r5, r0
    2374:	f7fe f890 	bl	498 <__mriCore_GetInitializedBuffer>
    2378:	490e      	ldr	r1, [pc, #56]	; (23b4 <__mriIssueGdbFileReadRequest+0x44>)
    237a:	4604      	mov	r4, r0
    237c:	f7ff fd6e 	bl	1e5c <__mriBuffer_WriteString>
    2380:	4620      	mov	r0, r4
    2382:	6829      	ldr	r1, [r5, #0]
    2384:	f7ff fda6 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2388:	4620      	mov	r0, r4
    238a:	212c      	movs	r1, #44	; 0x2c
    238c:	f7ff fce4 	bl	1d58 <__mriBuffer_WriteChar>
    2390:	4620      	mov	r0, r4
    2392:	6869      	ldr	r1, [r5, #4]
    2394:	f7ff fd9e 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2398:	4620      	mov	r0, r4
    239a:	212c      	movs	r1, #44	; 0x2c
    239c:	f7ff fcdc 	bl	1d58 <__mriBuffer_WriteChar>
    23a0:	4620      	mov	r0, r4
    23a2:	68a9      	ldr	r1, [r5, #8]
    23a4:	f7ff fd96 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    23a8:	f7fe f87e 	bl	4a8 <__mriCore_SendPacketToGdb>
    23ac:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    23b0:	f7ff bf7a 	b.w	22a8 <processGdbFileResponseCommands>
    23b4:	00003d60 	.word	0x00003d60

000023b8 <__mriIssueGdbFileCloseRequest>:
    23b8:	b538      	push	{r3, r4, r5, lr}
    23ba:	4604      	mov	r4, r0
    23bc:	f7fe f86c 	bl	498 <__mriCore_GetInitializedBuffer>
    23c0:	4906      	ldr	r1, [pc, #24]	; (23dc <__mriIssueGdbFileCloseRequest+0x24>)
    23c2:	4605      	mov	r5, r0
    23c4:	f7ff fd4a 	bl	1e5c <__mriBuffer_WriteString>
    23c8:	4628      	mov	r0, r5
    23ca:	4621      	mov	r1, r4
    23cc:	f7ff fd82 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    23d0:	f7fe f86a 	bl	4a8 <__mriCore_SendPacketToGdb>
    23d4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    23d8:	f7ff bf66 	b.w	22a8 <processGdbFileResponseCommands>
    23dc:	00003d35 	.word	0x00003d35

000023e0 <__mriIssueGdbFileSeekRequest>:
    23e0:	b538      	push	{r3, r4, r5, lr}
    23e2:	4605      	mov	r5, r0
    23e4:	f7fe f858 	bl	498 <__mriCore_GetInitializedBuffer>
    23e8:	490e      	ldr	r1, [pc, #56]	; (2424 <__mriIssueGdbFileSeekRequest+0x44>)
    23ea:	4604      	mov	r4, r0
    23ec:	f7ff fd36 	bl	1e5c <__mriBuffer_WriteString>
    23f0:	4620      	mov	r0, r4
    23f2:	6829      	ldr	r1, [r5, #0]
    23f4:	f7ff fd6e 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    23f8:	4620      	mov	r0, r4
    23fa:	212c      	movs	r1, #44	; 0x2c
    23fc:	f7ff fcac 	bl	1d58 <__mriBuffer_WriteChar>
    2400:	4620      	mov	r0, r4
    2402:	6869      	ldr	r1, [r5, #4]
    2404:	f7ff fd90 	bl	1f28 <__mriBuffer_WriteIntegerAsHex>
    2408:	4620      	mov	r0, r4
    240a:	212c      	movs	r1, #44	; 0x2c
    240c:	f7ff fca4 	bl	1d58 <__mriBuffer_WriteChar>
    2410:	4620      	mov	r0, r4
    2412:	68a9      	ldr	r1, [r5, #8]
    2414:	f7ff fd88 	bl	1f28 <__mriBuffer_WriteIntegerAsHex>
    2418:	f7fe f846 	bl	4a8 <__mriCore_SendPacketToGdb>
    241c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2420:	f7ff bf42 	b.w	22a8 <processGdbFileResponseCommands>
    2424:	00003d67 	.word	0x00003d67

00002428 <__mriIssueGdbFileFStatRequest>:
    2428:	b570      	push	{r4, r5, r6, lr}
    242a:	460d      	mov	r5, r1
    242c:	4606      	mov	r6, r0
    242e:	f7fe f833 	bl	498 <__mriCore_GetInitializedBuffer>
    2432:	490b      	ldr	r1, [pc, #44]	; (2460 <__mriIssueGdbFileFStatRequest+0x38>)
    2434:	4604      	mov	r4, r0
    2436:	f7ff fd11 	bl	1e5c <__mriBuffer_WriteString>
    243a:	4620      	mov	r0, r4
    243c:	4631      	mov	r1, r6
    243e:	f7ff fd49 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2442:	4620      	mov	r0, r4
    2444:	212c      	movs	r1, #44	; 0x2c
    2446:	f7ff fc87 	bl	1d58 <__mriBuffer_WriteChar>
    244a:	4620      	mov	r0, r4
    244c:	4629      	mov	r1, r5
    244e:	f7ff fd41 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2452:	f7fe f829 	bl	4a8 <__mriCore_SendPacketToGdb>
    2456:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    245a:	f7ff bf25 	b.w	22a8 <processGdbFileResponseCommands>
    245e:	bf00      	nop
    2460:	00003d55 	.word	0x00003d55

00002464 <__mriIssueGdbFileUnlinkRequest>:
    2464:	b538      	push	{r3, r4, r5, lr}
    2466:	4605      	mov	r5, r0
    2468:	f7fe f816 	bl	498 <__mriCore_GetInitializedBuffer>
    246c:	490a      	ldr	r1, [pc, #40]	; (2498 <__mriIssueGdbFileUnlinkRequest+0x34>)
    246e:	4604      	mov	r4, r0
    2470:	f7ff fcf4 	bl	1e5c <__mriBuffer_WriteString>
    2474:	4620      	mov	r0, r4
    2476:	6829      	ldr	r1, [r5, #0]
    2478:	f7ff fd2c 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    247c:	4620      	mov	r0, r4
    247e:	212f      	movs	r1, #47	; 0x2f
    2480:	f7ff fc6a 	bl	1d58 <__mriBuffer_WriteChar>
    2484:	4620      	mov	r0, r4
    2486:	6869      	ldr	r1, [r5, #4]
    2488:	f7ff fd24 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    248c:	f7fe f80c 	bl	4a8 <__mriCore_SendPacketToGdb>
    2490:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2494:	f7ff bf08 	b.w	22a8 <processGdbFileResponseCommands>
    2498:	00003d2c 	.word	0x00003d2c

0000249c <__mriIssueGdbFileStatRequest>:
    249c:	b538      	push	{r3, r4, r5, lr}
    249e:	4605      	mov	r5, r0
    24a0:	f7fd fffa 	bl	498 <__mriCore_GetInitializedBuffer>
    24a4:	490e      	ldr	r1, [pc, #56]	; (24e0 <__mriIssueGdbFileStatRequest+0x44>)
    24a6:	4604      	mov	r4, r0
    24a8:	f7ff fcd8 	bl	1e5c <__mriBuffer_WriteString>
    24ac:	4620      	mov	r0, r4
    24ae:	6829      	ldr	r1, [r5, #0]
    24b0:	f7ff fd10 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    24b4:	4620      	mov	r0, r4
    24b6:	212f      	movs	r1, #47	; 0x2f
    24b8:	f7ff fc4e 	bl	1d58 <__mriBuffer_WriteChar>
    24bc:	4620      	mov	r0, r4
    24be:	6869      	ldr	r1, [r5, #4]
    24c0:	f7ff fd08 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    24c4:	4620      	mov	r0, r4
    24c6:	212c      	movs	r1, #44	; 0x2c
    24c8:	f7ff fc46 	bl	1d58 <__mriBuffer_WriteChar>
    24cc:	4620      	mov	r0, r4
    24ce:	68a9      	ldr	r1, [r5, #8]
    24d0:	f7ff fd00 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    24d4:	f7fd ffe8 	bl	4a8 <__mriCore_SendPacketToGdb>
    24d8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    24dc:	f7ff bee4 	b.w	22a8 <processGdbFileResponseCommands>
    24e0:	00003d6f 	.word	0x00003d6f

000024e4 <__mriIssueGdbFileRenameRequest>:
    24e4:	b538      	push	{r3, r4, r5, lr}
    24e6:	4605      	mov	r5, r0
    24e8:	f7fd ffd6 	bl	498 <__mriCore_GetInitializedBuffer>
    24ec:	4912      	ldr	r1, [pc, #72]	; (2538 <__mriIssueGdbFileRenameRequest+0x54>)
    24ee:	4604      	mov	r4, r0
    24f0:	f7ff fcb4 	bl	1e5c <__mriBuffer_WriteString>
    24f4:	4620      	mov	r0, r4
    24f6:	6829      	ldr	r1, [r5, #0]
    24f8:	f7ff fcec 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    24fc:	4620      	mov	r0, r4
    24fe:	212f      	movs	r1, #47	; 0x2f
    2500:	f7ff fc2a 	bl	1d58 <__mriBuffer_WriteChar>
    2504:	4620      	mov	r0, r4
    2506:	6869      	ldr	r1, [r5, #4]
    2508:	f7ff fce4 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    250c:	4620      	mov	r0, r4
    250e:	212c      	movs	r1, #44	; 0x2c
    2510:	f7ff fc22 	bl	1d58 <__mriBuffer_WriteChar>
    2514:	4620      	mov	r0, r4
    2516:	68a9      	ldr	r1, [r5, #8]
    2518:	f7ff fcdc 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    251c:	4620      	mov	r0, r4
    251e:	212f      	movs	r1, #47	; 0x2f
    2520:	f7ff fc1a 	bl	1d58 <__mriBuffer_WriteChar>
    2524:	4620      	mov	r0, r4
    2526:	68e9      	ldr	r1, [r5, #12]
    2528:	f7ff fcd4 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    252c:	f7fd ffbc 	bl	4a8 <__mriCore_SendPacketToGdb>
    2530:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2534:	f7ff beb8 	b.w	22a8 <processGdbFileResponseCommands>
    2538:	00003d3d 	.word	0x00003d3d

0000253c <__mriHandleFileIOCommand>:
    253c:	b570      	push	{r4, r5, r6, lr}
    253e:	f7fd ffa7 	bl	490 <__mriCore_GetBuffer>
    2542:	4604      	mov	r4, r0
    2544:	f7ff fd22 	bl	1f8c <__mriBuffer_ReadIntegerAsHex>
    2548:	212c      	movs	r1, #44	; 0x2c
    254a:	4606      	mov	r6, r0
    254c:	4620      	mov	r0, r4
    254e:	f7ff fd03 	bl	1f58 <__mriBuffer_IsNextCharEqualTo>
    2552:	b150      	cbz	r0, 256a <__mriHandleFileIOCommand+0x2e>
    2554:	4620      	mov	r0, r4
    2556:	f7ff fd19 	bl	1f8c <__mriBuffer_ReadIntegerAsHex>
    255a:	490b      	ldr	r1, [pc, #44]	; (2588 <__mriHandleFileIOCommand+0x4c>)
    255c:	4605      	mov	r5, r0
    255e:	2202      	movs	r2, #2
    2560:	4620      	mov	r0, r4
    2562:	f7ff fd3d 	bl	1fe0 <__mriBuffer_MatchesString>
    2566:	4604      	mov	r4, r0
    2568:	e001      	b.n	256e <__mriHandleFileIOCommand+0x32>
    256a:	4604      	mov	r4, r0
    256c:	4605      	mov	r5, r0
    256e:	4630      	mov	r0, r6
    2570:	4629      	mov	r1, r5
    2572:	f7fd ff81 	bl	478 <__mriCore_SetSemihostReturnValues>
    2576:	4620      	mov	r0, r4
    2578:	f7fd ff48 	bl	40c <__mriCore_RecordControlCFlagSentFromGdb>
    257c:	4b03      	ldr	r3, [pc, #12]	; (258c <__mriHandleFileIOCommand+0x50>)
    257e:	2200      	movs	r2, #0
    2580:	601a      	str	r2, [r3, #0]
    2582:	2003      	movs	r0, #3
    2584:	bd70      	pop	{r4, r5, r6, pc}
    2586:	bf00      	nop
    2588:	00003d5d 	.word	0x00003d5d
    258c:	1000014c 	.word	0x1000014c

00002590 <__mriCmd_HandleMemoryReadCommand>:
    2590:	b537      	push	{r0, r1, r2, r4, r5, lr}
    2592:	f7fd ff7d 	bl	490 <__mriCore_GetBuffer>
    2596:	4c0b      	ldr	r4, [pc, #44]	; (25c4 <__mriCmd_HandleMemoryReadCommand+0x34>)
    2598:	2300      	movs	r3, #0
    259a:	4669      	mov	r1, sp
    259c:	4605      	mov	r5, r0
    259e:	6023      	str	r3, [r4, #0]
    25a0:	f7ff fe34 	bl	220c <__mriCmd_ReadAddressAndLengthArguments>
    25a4:	6820      	ldr	r0, [r4, #0]
    25a6:	b118      	cbz	r0, 25b0 <__mriCmd_HandleMemoryReadCommand+0x20>
    25a8:	4807      	ldr	r0, [pc, #28]	; (25c8 <__mriCmd_HandleMemoryReadCommand+0x38>)
    25aa:	f7fd ff0d 	bl	3c8 <__mriCore_PrepareStringResponse>
    25ae:	e006      	b.n	25be <__mriCmd_HandleMemoryReadCommand+0x2e>
    25b0:	f7fd fefa 	bl	3a8 <__mriCore_InitBuffer>
    25b4:	e89d 0006 	ldmia.w	sp, {r1, r2}
    25b8:	4628      	mov	r0, r5
    25ba:	f000 fa75 	bl	2aa8 <__mriMem_ReadMemoryIntoHexBuffer>
    25be:	2000      	movs	r0, #0
    25c0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    25c2:	bf00      	nop
    25c4:	1000014c 	.word	0x1000014c
    25c8:	00003d21 	.word	0x00003d21

000025cc <__mriCmd_HandleMemoryWriteCommand>:
    25cc:	b537      	push	{r0, r1, r2, r4, r5, lr}
    25ce:	f7fd ff5f 	bl	490 <__mriCore_GetBuffer>
    25d2:	4d0f      	ldr	r5, [pc, #60]	; (2610 <__mriCmd_HandleMemoryWriteCommand+0x44>)
    25d4:	2300      	movs	r3, #0
    25d6:	4669      	mov	r1, sp
    25d8:	4604      	mov	r4, r0
    25da:	602b      	str	r3, [r5, #0]
    25dc:	f7ff fe2e 	bl	223c <__mriCmd_ReadAddressAndLengthArgumentsWithColon>
    25e0:	6828      	ldr	r0, [r5, #0]
    25e2:	b108      	cbz	r0, 25e8 <__mriCmd_HandleMemoryWriteCommand+0x1c>
    25e4:	480b      	ldr	r0, [pc, #44]	; (2614 <__mriCmd_HandleMemoryWriteCommand+0x48>)
    25e6:	e00e      	b.n	2606 <__mriCmd_HandleMemoryWriteCommand+0x3a>
    25e8:	4620      	mov	r0, r4
    25ea:	e89d 0006 	ldmia.w	sp, {r1, r2}
    25ee:	f000 fa97 	bl	2b20 <__mriMem_WriteHexBufferToMemory>
    25f2:	b108      	cbz	r0, 25f8 <__mriCmd_HandleMemoryWriteCommand+0x2c>
    25f4:	4808      	ldr	r0, [pc, #32]	; (2618 <__mriCmd_HandleMemoryWriteCommand+0x4c>)
    25f6:	e006      	b.n	2606 <__mriCmd_HandleMemoryWriteCommand+0x3a>
    25f8:	4620      	mov	r0, r4
    25fa:	f7ff fba5 	bl	1d48 <__mriBuffer_OverrunDetected>
    25fe:	b108      	cbz	r0, 2604 <__mriCmd_HandleMemoryWriteCommand+0x38>
    2600:	4806      	ldr	r0, [pc, #24]	; (261c <__mriCmd_HandleMemoryWriteCommand+0x50>)
    2602:	e000      	b.n	2606 <__mriCmd_HandleMemoryWriteCommand+0x3a>
    2604:	4806      	ldr	r0, [pc, #24]	; (2620 <__mriCmd_HandleMemoryWriteCommand+0x54>)
    2606:	f7fd fedf 	bl	3c8 <__mriCore_PrepareStringResponse>
    260a:	2000      	movs	r0, #0
    260c:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    260e:	bf00      	nop
    2610:	1000014c 	.word	0x1000014c
    2614:	00003d21 	.word	0x00003d21
    2618:	00003d29 	.word	0x00003d29
    261c:	00003648 	.word	0x00003648
    2620:	00003d76 	.word	0x00003d76

00002624 <__mriCmd_HandleBinaryMemoryWriteCommand>:
    2624:	b537      	push	{r0, r1, r2, r4, r5, lr}
    2626:	f7fd ff33 	bl	490 <__mriCore_GetBuffer>
    262a:	4d0f      	ldr	r5, [pc, #60]	; (2668 <__mriCmd_HandleBinaryMemoryWriteCommand+0x44>)
    262c:	2300      	movs	r3, #0
    262e:	4669      	mov	r1, sp
    2630:	4604      	mov	r4, r0
    2632:	602b      	str	r3, [r5, #0]
    2634:	f7ff fe02 	bl	223c <__mriCmd_ReadAddressAndLengthArgumentsWithColon>
    2638:	6828      	ldr	r0, [r5, #0]
    263a:	b108      	cbz	r0, 2640 <__mriCmd_HandleBinaryMemoryWriteCommand+0x1c>
    263c:	480b      	ldr	r0, [pc, #44]	; (266c <__mriCmd_HandleBinaryMemoryWriteCommand+0x48>)
    263e:	e00e      	b.n	265e <__mriCmd_HandleBinaryMemoryWriteCommand+0x3a>
    2640:	4620      	mov	r0, r4
    2642:	e89d 0006 	ldmia.w	sp, {r1, r2}
    2646:	f000 fab9 	bl	2bbc <__mriMem_WriteBinaryBufferToMemory>
    264a:	b108      	cbz	r0, 2650 <__mriCmd_HandleBinaryMemoryWriteCommand+0x2c>
    264c:	4808      	ldr	r0, [pc, #32]	; (2670 <__mriCmd_HandleBinaryMemoryWriteCommand+0x4c>)
    264e:	e006      	b.n	265e <__mriCmd_HandleBinaryMemoryWriteCommand+0x3a>
    2650:	4620      	mov	r0, r4
    2652:	f7ff fb79 	bl	1d48 <__mriBuffer_OverrunDetected>
    2656:	b108      	cbz	r0, 265c <__mriCmd_HandleBinaryMemoryWriteCommand+0x38>
    2658:	4806      	ldr	r0, [pc, #24]	; (2674 <__mriCmd_HandleBinaryMemoryWriteCommand+0x50>)
    265a:	e000      	b.n	265e <__mriCmd_HandleBinaryMemoryWriteCommand+0x3a>
    265c:	4806      	ldr	r0, [pc, #24]	; (2678 <__mriCmd_HandleBinaryMemoryWriteCommand+0x54>)
    265e:	f7fd feb3 	bl	3c8 <__mriCore_PrepareStringResponse>
    2662:	2000      	movs	r0, #0
    2664:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    2666:	bf00      	nop
    2668:	1000014c 	.word	0x1000014c
    266c:	00003d21 	.word	0x00003d21
    2670:	00003d29 	.word	0x00003d29
    2674:	00003648 	.word	0x00003648
    2678:	00003d76 	.word	0x00003d76

0000267c <handleQueryTransferReadCommand>:
    267c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2680:	4604      	mov	r4, r0
    2682:	f7fd ff05 	bl	490 <__mriCore_GetBuffer>
    2686:	1d25      	adds	r5, r4, #4
    2688:	e895 01a0 	ldmia.w	r5, {r5, r7, r8}
    268c:	42af      	cmp	r7, r5
    268e:	4606      	mov	r6, r0
    2690:	d203      	bcs.n	269a <handleQueryTransferReadCommand+0x1e>
    2692:	1bed      	subs	r5, r5, r7
    2694:	f04f 096d 	mov.w	r9, #109	; 0x6d
    2698:	e003      	b.n	26a2 <handleQueryTransferReadCommand+0x26>
    269a:	2500      	movs	r5, #0
    269c:	46a8      	mov	r8, r5
    269e:	f04f 096c 	mov.w	r9, #108	; 0x6c
    26a2:	f7fd fe81 	bl	3a8 <__mriCore_InitBuffer>
    26a6:	4630      	mov	r0, r6
    26a8:	f7ff fb32 	bl	1d10 <__mriBuffer_BytesLeft>
    26ac:	4540      	cmp	r0, r8
    26ae:	bf38      	it	cc
    26b0:	4680      	movcc	r8, r0
    26b2:	45a8      	cmp	r8, r5
    26b4:	bf88      	it	hi
    26b6:	f04f 096c 	movhi.w	r9, #108	; 0x6c
    26ba:	4630      	mov	r0, r6
    26bc:	4649      	mov	r1, r9
    26be:	bf88      	it	hi
    26c0:	46a8      	movhi	r8, r5
    26c2:	f7ff fb49 	bl	1d58 <__mriBuffer_WriteChar>
    26c6:	6821      	ldr	r1, [r4, #0]
    26c8:	4630      	mov	r0, r6
    26ca:	19c9      	adds	r1, r1, r7
    26cc:	4642      	mov	r2, r8
    26ce:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    26d2:	f7ff bba9 	b.w	1e28 <__mriBuffer_WriteSizedString>
	...

000026d8 <readQueryTransferReadArguments>:
    26d8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    26da:	4604      	mov	r4, r0
    26dc:	460e      	mov	r6, r1
    26de:	4608      	mov	r0, r1
    26e0:	2210      	movs	r2, #16
    26e2:	2100      	movs	r1, #0
    26e4:	f000 ff51 	bl	358a <memset>
    26e8:	4620      	mov	r0, r4
    26ea:	213a      	movs	r1, #58	; 0x3a
    26ec:	f7ff fc34 	bl	1f58 <__mriBuffer_IsNextCharEqualTo>
    26f0:	b930      	cbnz	r0, 2700 <readQueryTransferReadArguments+0x28>
    26f2:	481e      	ldr	r0, [pc, #120]	; (276c <readQueryTransferReadArguments+0x94>)
    26f4:	6802      	ldr	r2, [r0, #0]
    26f6:	2a04      	cmp	r2, #4
    26f8:	bfb8      	it	lt
    26fa:	2204      	movlt	r2, #4
    26fc:	6002      	str	r2, [r0, #0]
    26fe:	e034      	b.n	276a <readQueryTransferReadArguments+0x92>
    2700:	4620      	mov	r0, r4
    2702:	491b      	ldr	r1, [pc, #108]	; (2770 <readQueryTransferReadArguments+0x98>)
    2704:	2204      	movs	r2, #4
    2706:	f7ff fc6b 	bl	1fe0 <__mriBuffer_MatchesString>
    270a:	2800      	cmp	r0, #0
    270c:	d0f1      	beq.n	26f2 <readQueryTransferReadArguments+0x1a>
    270e:	4620      	mov	r0, r4
    2710:	213a      	movs	r1, #58	; 0x3a
    2712:	f7ff fc21 	bl	1f58 <__mriBuffer_IsNextCharEqualTo>
    2716:	2800      	cmp	r0, #0
    2718:	d0eb      	beq.n	26f2 <readQueryTransferReadArguments+0x1a>
    271a:	4d14      	ldr	r5, [pc, #80]	; (276c <readQueryTransferReadArguments+0x94>)
    271c:	2300      	movs	r3, #0
    271e:	4915      	ldr	r1, [pc, #84]	; (2774 <readQueryTransferReadArguments+0x9c>)
    2720:	4620      	mov	r0, r4
    2722:	220a      	movs	r2, #10
    2724:	602b      	str	r3, [r5, #0]
    2726:	f7ff fc5b 	bl	1fe0 <__mriBuffer_MatchesString>
    272a:	4607      	mov	r7, r0
    272c:	213a      	movs	r1, #58	; 0x3a
    272e:	4620      	mov	r0, r4
    2730:	b127      	cbz	r7, 273c <readQueryTransferReadArguments+0x64>
    2732:	f7ff fc11 	bl	1f58 <__mriBuffer_IsNextCharEqualTo>
    2736:	b190      	cbz	r0, 275e <readQueryTransferReadArguments+0x86>
    2738:	480e      	ldr	r0, [pc, #56]	; (2774 <readQueryTransferReadArguments+0x9c>)
    273a:	e003      	b.n	2744 <readQueryTransferReadArguments+0x6c>
    273c:	f7ff fc0c 	bl	1f58 <__mriBuffer_IsNextCharEqualTo>
    2740:	b168      	cbz	r0, 275e <readQueryTransferReadArguments+0x86>
    2742:	4638      	mov	r0, r7
    2744:	6030      	str	r0, [r6, #0]
    2746:	4809      	ldr	r0, [pc, #36]	; (276c <readQueryTransferReadArguments+0x94>)
    2748:	6802      	ldr	r2, [r0, #0]
    274a:	b972      	cbnz	r2, 276a <readQueryTransferReadArguments+0x92>
    274c:	4669      	mov	r1, sp
    274e:	4620      	mov	r0, r4
    2750:	f7ff fd5c 	bl	220c <__mriCmd_ReadAddressAndLengthArguments>
    2754:	9b00      	ldr	r3, [sp, #0]
    2756:	9901      	ldr	r1, [sp, #4]
    2758:	60b3      	str	r3, [r6, #8]
    275a:	60f1      	str	r1, [r6, #12]
    275c:	e005      	b.n	276a <readQueryTransferReadArguments+0x92>
    275e:	6829      	ldr	r1, [r5, #0]
    2760:	2904      	cmp	r1, #4
    2762:	bfb8      	it	lt
    2764:	2104      	movlt	r1, #4
    2766:	6029      	str	r1, [r5, #0]
    2768:	e7ec      	b.n	2744 <readQueryTransferReadArguments+0x6c>
    276a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    276c:	1000014c 	.word	0x1000014c
    2770:	00003d7a 	.word	0x00003d7a
    2774:	00003d8e 	.word	0x00003d8e

00002778 <__mriCmd_HandleQueryCommand>:
    2778:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    277a:	f7fd fe89 	bl	490 <__mriCore_GetBuffer>
    277e:	4936      	ldr	r1, [pc, #216]	; (2858 <__mriCmd_HandleQueryCommand+0xe0>)
    2780:	2209      	movs	r2, #9
    2782:	4604      	mov	r4, r0
    2784:	f7ff fc2c 	bl	1fe0 <__mriBuffer_MatchesString>
    2788:	4606      	mov	r6, r0
    278a:	b168      	cbz	r0, 27a8 <__mriCmd_HandleQueryCommand+0x30>
    278c:	f7fe fbfe 	bl	f8c <__mriPlatform_GetPacketBufferSize>
    2790:	4604      	mov	r4, r0
    2792:	f7fd fe81 	bl	498 <__mriCore_GetInitializedBuffer>
    2796:	4931      	ldr	r1, [pc, #196]	; (285c <__mriCmd_HandleQueryCommand+0xe4>)
    2798:	4605      	mov	r5, r0
    279a:	f7ff fb5f 	bl	1e5c <__mriBuffer_WriteString>
    279e:	4628      	mov	r0, r5
    27a0:	4621      	mov	r1, r4
    27a2:	f7ff fb97 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    27a6:	e054      	b.n	2852 <__mriCmd_HandleQueryCommand+0xda>
    27a8:	4620      	mov	r0, r4
    27aa:	492d      	ldr	r1, [pc, #180]	; (2860 <__mriCmd_HandleQueryCommand+0xe8>)
    27ac:	2204      	movs	r2, #4
    27ae:	f7ff fc17 	bl	1fe0 <__mriBuffer_MatchesString>
    27b2:	2800      	cmp	r0, #0
    27b4:	d04a      	beq.n	284c <__mriCmd_HandleQueryCommand+0xd4>
    27b6:	f7fd fe6b 	bl	490 <__mriCore_GetBuffer>
    27ba:	213a      	movs	r1, #58	; 0x3a
    27bc:	4605      	mov	r5, r0
    27be:	f7ff fbcb 	bl	1f58 <__mriBuffer_IsNextCharEqualTo>
    27c2:	2800      	cmp	r0, #0
    27c4:	d036      	beq.n	2834 <__mriCmd_HandleQueryCommand+0xbc>
    27c6:	4628      	mov	r0, r5
    27c8:	4926      	ldr	r1, [pc, #152]	; (2864 <__mriCmd_HandleQueryCommand+0xec>)
    27ca:	220a      	movs	r2, #10
    27cc:	f7ff fc08 	bl	1fe0 <__mriBuffer_MatchesString>
    27d0:	4604      	mov	r4, r0
    27d2:	b1a0      	cbz	r0, 27fe <__mriCmd_HandleQueryCommand+0x86>
    27d4:	4c24      	ldr	r4, [pc, #144]	; (2868 <__mriCmd_HandleQueryCommand+0xf0>)
    27d6:	f7fd fe5b 	bl	490 <__mriCore_GetBuffer>
    27da:	4669      	mov	r1, sp
    27dc:	6026      	str	r6, [r4, #0]
    27de:	f7ff ff7b 	bl	26d8 <readQueryTransferReadArguments>
    27e2:	6822      	ldr	r2, [r4, #0]
    27e4:	b91a      	cbnz	r2, 27ee <__mriCmd_HandleQueryCommand+0x76>
    27e6:	9800      	ldr	r0, [sp, #0]
    27e8:	b108      	cbz	r0, 27ee <__mriCmd_HandleQueryCommand+0x76>
    27ea:	2104      	movs	r1, #4
    27ec:	6021      	str	r1, [r4, #0]
    27ee:	6823      	ldr	r3, [r4, #0]
    27f0:	bb03      	cbnz	r3, 2834 <__mriCmd_HandleQueryCommand+0xbc>
    27f2:	f000 fa2b 	bl	2c4c <__mriPlatform_GetDeviceMemoryMapXml>
    27f6:	9000      	str	r0, [sp, #0]
    27f8:	f000 fa24 	bl	2c44 <__mriPlatform_GetDeviceMemoryMapXmlSize>
    27fc:	e021      	b.n	2842 <__mriCmd_HandleQueryCommand+0xca>
    27fe:	4628      	mov	r0, r5
    2800:	491a      	ldr	r1, [pc, #104]	; (286c <__mriCmd_HandleQueryCommand+0xf4>)
    2802:	2208      	movs	r2, #8
    2804:	f7ff fbec 	bl	1fe0 <__mriBuffer_MatchesString>
    2808:	b300      	cbz	r0, 284c <__mriCmd_HandleQueryCommand+0xd4>
    280a:	4d17      	ldr	r5, [pc, #92]	; (2868 <__mriCmd_HandleQueryCommand+0xf0>)
    280c:	f7fd fe40 	bl	490 <__mriCore_GetBuffer>
    2810:	4669      	mov	r1, sp
    2812:	602c      	str	r4, [r5, #0]
    2814:	f7ff ff60 	bl	26d8 <readQueryTransferReadArguments>
    2818:	682b      	ldr	r3, [r5, #0]
    281a:	b943      	cbnz	r3, 282e <__mriCmd_HandleQueryCommand+0xb6>
    281c:	9800      	ldr	r0, [sp, #0]
    281e:	b118      	cbz	r0, 2828 <__mriCmd_HandleQueryCommand+0xb0>
    2820:	4913      	ldr	r1, [pc, #76]	; (2870 <__mriCmd_HandleQueryCommand+0xf8>)
    2822:	f000 feba 	bl	359a <strcmp>
    2826:	b110      	cbz	r0, 282e <__mriCmd_HandleQueryCommand+0xb6>
    2828:	480f      	ldr	r0, [pc, #60]	; (2868 <__mriCmd_HandleQueryCommand+0xf0>)
    282a:	2204      	movs	r2, #4
    282c:	6002      	str	r2, [r0, #0]
    282e:	490e      	ldr	r1, [pc, #56]	; (2868 <__mriCmd_HandleQueryCommand+0xf0>)
    2830:	680b      	ldr	r3, [r1, #0]
    2832:	b10b      	cbz	r3, 2838 <__mriCmd_HandleQueryCommand+0xc0>
    2834:	480f      	ldr	r0, [pc, #60]	; (2874 <__mriCmd_HandleQueryCommand+0xfc>)
    2836:	e00a      	b.n	284e <__mriCmd_HandleQueryCommand+0xd6>
    2838:	f7fe ff0e 	bl	1658 <__mriPlatform_GetTargetXml>
    283c:	9000      	str	r0, [sp, #0]
    283e:	f7fe ff07 	bl	1650 <__mriPlatform_GetTargetXmlSize>
    2842:	9001      	str	r0, [sp, #4]
    2844:	4668      	mov	r0, sp
    2846:	f7ff ff19 	bl	267c <handleQueryTransferReadCommand>
    284a:	e002      	b.n	2852 <__mriCmd_HandleQueryCommand+0xda>
    284c:	480a      	ldr	r0, [pc, #40]	; (2878 <__mriCmd_HandleQueryCommand+0x100>)
    284e:	f7fd fdbb 	bl	3c8 <__mriCore_PrepareStringResponse>
    2852:	2000      	movs	r0, #0
    2854:	b004      	add	sp, #16
    2856:	bd70      	pop	{r4, r5, r6, pc}
    2858:	00003d84 	.word	0x00003d84
    285c:	00003da4 	.word	0x00003da4
    2860:	00003d7f 	.word	0x00003d7f
    2864:	00003de5 	.word	0x00003de5
    2868:	1000014c 	.word	0x1000014c
    286c:	00003ddc 	.word	0x00003ddc
    2870:	00003d99 	.word	0x00003d99
    2874:	00003d21 	.word	0x00003d21
    2878:	000036be 	.word	0x000036be

0000287c <__mriCmd_Send_T_StopResponse>:
    287c:	b510      	push	{r4, lr}
    287e:	f7fd fe0b 	bl	498 <__mriCore_GetInitializedBuffer>
    2882:	2154      	movs	r1, #84	; 0x54
    2884:	4604      	mov	r4, r0
    2886:	f7ff fa67 	bl	1d58 <__mriBuffer_WriteChar>
    288a:	f7fd fdef 	bl	46c <__mriCore_GetSignalValue>
    288e:	4601      	mov	r1, r0
    2890:	4620      	mov	r0, r4
    2892:	f7ff fa87 	bl	1da4 <__mriBuffer_WriteByteAsHex>
    2896:	4620      	mov	r0, r4
    2898:	f7fe fce2 	bl	1260 <__mriPlatform_WriteTResponseRegistersToBuffer>
    289c:	f7fd fe04 	bl	4a8 <__mriCore_SendPacketToGdb>
    28a0:	2002      	movs	r0, #2
    28a2:	bd10      	pop	{r4, pc}

000028a4 <__mriCmd_HandleRegisterReadCommand>:
    28a4:	b508      	push	{r3, lr}
    28a6:	f7fd fdf7 	bl	498 <__mriCore_GetInitializedBuffer>
    28aa:	f7fe fcf7 	bl	129c <__mriPlatform_CopyContextToBuffer>
    28ae:	2000      	movs	r0, #0
    28b0:	bd08      	pop	{r3, pc}
	...

000028b4 <__mriCmd_HandleRegisterWriteCommand>:
    28b4:	b510      	push	{r4, lr}
    28b6:	f7fd fdeb 	bl	490 <__mriCore_GetBuffer>
    28ba:	4604      	mov	r4, r0
    28bc:	f7fe fcfe 	bl	12bc <__mriPlatform_CopyContextFromBuffer>
    28c0:	4620      	mov	r0, r4
    28c2:	f7ff fa41 	bl	1d48 <__mriBuffer_OverrunDetected>
    28c6:	b108      	cbz	r0, 28cc <__mriCmd_HandleRegisterWriteCommand+0x18>
    28c8:	4803      	ldr	r0, [pc, #12]	; (28d8 <__mriCmd_HandleRegisterWriteCommand+0x24>)
    28ca:	e000      	b.n	28ce <__mriCmd_HandleRegisterWriteCommand+0x1a>
    28cc:	4803      	ldr	r0, [pc, #12]	; (28dc <__mriCmd_HandleRegisterWriteCommand+0x28>)
    28ce:	f7fd fd7b 	bl	3c8 <__mriCore_PrepareStringResponse>
    28d2:	2000      	movs	r0, #0
    28d4:	bd10      	pop	{r4, pc}
    28d6:	bf00      	nop
    28d8:	00003648 	.word	0x00003648
    28dc:	00003d29 	.word	0x00003d29

000028e0 <__mriCmd_HandleSingleStepCommand>:
    28e0:	b508      	push	{r3, lr}
    28e2:	f7ff fcbd 	bl	2260 <__mriCmd_HandleContinueCommand>
    28e6:	0743      	lsls	r3, r0, #29
    28e8:	d503      	bpl.n	28f2 <__mriCmd_HandleSingleStepCommand+0x12>
    28ea:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    28ee:	f7ff bfc5 	b.w	287c <__mriCmd_Send_T_StopResponse>
    28f2:	f7fe fd2b 	bl	134c <__mriPlatform_EnableSingleStep>
    28f6:	2003      	movs	r0, #3
    28f8:	bd08      	pop	{r3, pc}

000028fa <__mriGdbConsole_WriteString>:
    28fa:	b538      	push	{r3, r4, r5, lr}
    28fc:	4605      	mov	r5, r0
    28fe:	f7fe ffc7 	bl	1890 <__mriPlatform_CommSharingWithApplication>
    2902:	b150      	cbz	r0, 291a <__mriGdbConsole_WriteString+0x20>
    2904:	f7fd fda4 	bl	450 <__mriCore_IsFirstException>
    2908:	b138      	cbz	r0, 291a <__mriGdbConsole_WriteString+0x20>
    290a:	3d01      	subs	r5, #1
    290c:	f815 0f01 	ldrb.w	r0, [r5, #1]!
    2910:	b110      	cbz	r0, 2918 <__mriGdbConsole_WriteString+0x1e>
    2912:	f7fe ff9b 	bl	184c <__mriPlatform_CommSendChar>
    2916:	e7f9      	b.n	290c <__mriGdbConsole_WriteString+0x12>
    2918:	bd38      	pop	{r3, r4, r5, pc}
    291a:	f7fd fdbd 	bl	498 <__mriCore_GetInitializedBuffer>
    291e:	214f      	movs	r1, #79	; 0x4f
    2920:	4604      	mov	r4, r0
    2922:	f7ff fa19 	bl	1d58 <__mriBuffer_WriteChar>
    2926:	3d01      	subs	r5, #1
    2928:	f815 1f01 	ldrb.w	r1, [r5, #1]!
    292c:	4620      	mov	r0, r4
    292e:	b111      	cbz	r1, 2936 <__mriGdbConsole_WriteString+0x3c>
    2930:	f7ff fa38 	bl	1da4 <__mriBuffer_WriteByteAsHex>
    2934:	e7f8      	b.n	2928 <__mriGdbConsole_WriteString+0x2e>
    2936:	f7ff fa07 	bl	1d48 <__mriBuffer_OverrunDetected>
    293a:	b918      	cbnz	r0, 2944 <__mriGdbConsole_WriteString+0x4a>
    293c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2940:	f7fd bdb2 	b.w	4a8 <__mriCore_SendPacketToGdb>
    2944:	bd38      	pop	{r3, r4, r5, pc}
	...

00002948 <__mriGdbConsole_WriteHexValue>:
    2948:	b510      	push	{r4, lr}
    294a:	b086      	sub	sp, #24
    294c:	220b      	movs	r2, #11
    294e:	4604      	mov	r4, r0
    2950:	4669      	mov	r1, sp
    2952:	a803      	add	r0, sp, #12
    2954:	f7ff f9ce 	bl	1cf4 <__mriBuffer_Init>
    2958:	a803      	add	r0, sp, #12
    295a:	4908      	ldr	r1, [pc, #32]	; (297c <__mriGdbConsole_WriteHexValue+0x34>)
    295c:	f7ff fa7e 	bl	1e5c <__mriBuffer_WriteString>
    2960:	a803      	add	r0, sp, #12
    2962:	4621      	mov	r1, r4
    2964:	f7ff fab6 	bl	1ed4 <__mriBuffer_WriteUIntegerAsHex>
    2968:	a803      	add	r0, sp, #12
    296a:	2100      	movs	r1, #0
    296c:	f7ff f9f4 	bl	1d58 <__mriBuffer_WriteChar>
    2970:	4668      	mov	r0, sp
    2972:	f7ff ffc2 	bl	28fa <__mriGdbConsole_WriteString>
    2976:	b006      	add	sp, #24
    2978:	bd10      	pop	{r4, pc}
    297a:	bf00      	nop
    297c:	00003df0 	.word	0x00003df0

00002980 <writeHexBufferToByteMemory>:
    2980:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2982:	4607      	mov	r7, r0
    2984:	188e      	adds	r6, r1, r2
    2986:	460c      	mov	r4, r1
    2988:	42b4      	cmp	r4, r6
    298a:	d014      	beq.n	29b6 <writeHexBufferToByteMemory+0x36>
    298c:	4d0b      	ldr	r5, [pc, #44]	; (29bc <writeHexBufferToByteMemory+0x3c>)
    298e:	2300      	movs	r3, #0
    2990:	4638      	mov	r0, r7
    2992:	602b      	str	r3, [r5, #0]
    2994:	f7ff fa22 	bl	1ddc <__mriBuffer_ReadByteAsHex>
    2998:	4601      	mov	r1, r0
    299a:	6828      	ldr	r0, [r5, #0]
    299c:	b108      	cbz	r0, 29a2 <writeHexBufferToByteMemory+0x22>
    299e:	2000      	movs	r0, #0
    29a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    29a2:	4620      	mov	r0, r4
    29a4:	1c65      	adds	r5, r4, #1
    29a6:	f7fe ff2a 	bl	17fe <__mriPlatform_MemWrite8>
    29aa:	f7fe fbed 	bl	1188 <__mriPlatform_WasMemoryFaultEncountered>
    29ae:	2800      	cmp	r0, #0
    29b0:	d1f5      	bne.n	299e <writeHexBufferToByteMemory+0x1e>
    29b2:	462c      	mov	r4, r5
    29b4:	e7e8      	b.n	2988 <writeHexBufferToByteMemory+0x8>
    29b6:	2001      	movs	r0, #1
    29b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    29ba:	bf00      	nop
    29bc:	1000014c 	.word	0x1000014c

000029c0 <readMemoryBytesIntoHexBuffer>:
    29c0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    29c2:	4605      	mov	r5, r0
    29c4:	188c      	adds	r4, r1, r2
    29c6:	4608      	mov	r0, r1
    29c8:	42a0      	cmp	r0, r4
    29ca:	d00c      	beq.n	29e6 <readMemoryBytesIntoHexBuffer+0x26>
    29cc:	1c46      	adds	r6, r0, #1
    29ce:	f7fe ff10 	bl	17f2 <__mriPlatform_MemRead8>
    29d2:	4607      	mov	r7, r0
    29d4:	f7fe fbd8 	bl	1188 <__mriPlatform_WasMemoryFaultEncountered>
    29d8:	b938      	cbnz	r0, 29ea <readMemoryBytesIntoHexBuffer+0x2a>
    29da:	4628      	mov	r0, r5
    29dc:	4639      	mov	r1, r7
    29de:	f7ff f9e1 	bl	1da4 <__mriBuffer_WriteByteAsHex>
    29e2:	4630      	mov	r0, r6
    29e4:	e7f0      	b.n	29c8 <readMemoryBytesIntoHexBuffer+0x8>
    29e6:	2001      	movs	r0, #1
    29e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    29ea:	2000      	movs	r0, #0
    29ec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

000029f0 <readBytesFromBinaryBuffer>:
    29f0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    29f4:	4606      	mov	r6, r0
    29f6:	eb01 0802 	add.w	r8, r1, r2
    29fa:	460c      	mov	r4, r1
    29fc:	4544      	cmp	r4, r8
    29fe:	d019      	beq.n	2a34 <readBytesFromBinaryBuffer+0x44>
    2a00:	4d0f      	ldr	r5, [pc, #60]	; (2a40 <readBytesFromBinaryBuffer+0x50>)
    2a02:	2300      	movs	r3, #0
    2a04:	4630      	mov	r0, r6
    2a06:	602b      	str	r3, [r5, #0]
    2a08:	f7ff f9b8 	bl	1d7c <__mriBuffer_ReadChar>
    2a0c:	682f      	ldr	r7, [r5, #0]
    2a0e:	b95f      	cbnz	r7, 2a28 <readBytesFromBinaryBuffer+0x38>
    2a10:	287d      	cmp	r0, #125	; 0x7d
    2a12:	d109      	bne.n	2a28 <readBytesFromBinaryBuffer+0x38>
    2a14:	4630      	mov	r0, r6
    2a16:	f7ff f9b1 	bl	1d7c <__mriBuffer_ReadChar>
    2a1a:	6829      	ldr	r1, [r5, #0]
    2a1c:	b919      	cbnz	r1, 2a26 <readBytesFromBinaryBuffer+0x36>
    2a1e:	f080 0020 	eor.w	r0, r0, #32
    2a22:	b2c0      	uxtb	r0, r0
    2a24:	e000      	b.n	2a28 <readBytesFromBinaryBuffer+0x38>
    2a26:	4638      	mov	r0, r7
    2a28:	4a05      	ldr	r2, [pc, #20]	; (2a40 <readBytesFromBinaryBuffer+0x50>)
    2a2a:	6813      	ldr	r3, [r2, #0]
    2a2c:	b92b      	cbnz	r3, 2a3a <readBytesFromBinaryBuffer+0x4a>
    2a2e:	f804 0b01 	strb.w	r0, [r4], #1
    2a32:	e7e3      	b.n	29fc <readBytesFromBinaryBuffer+0xc>
    2a34:	2001      	movs	r0, #1
    2a36:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2a3a:	2000      	movs	r0, #0
    2a3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2a40:	1000014c 	.word	0x1000014c

00002a44 <writeBinaryBufferToByteMemory>:
    2a44:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    2a48:	4606      	mov	r6, r0
    2a4a:	eb01 0802 	add.w	r8, r1, r2
    2a4e:	460c      	mov	r4, r1
    2a50:	4544      	cmp	r4, r8
    2a52:	d024      	beq.n	2a9e <writeBinaryBufferToByteMemory+0x5a>
    2a54:	4d13      	ldr	r5, [pc, #76]	; (2aa4 <writeBinaryBufferToByteMemory+0x60>)
    2a56:	2300      	movs	r3, #0
    2a58:	4630      	mov	r0, r6
    2a5a:	602b      	str	r3, [r5, #0]
    2a5c:	f7ff f98e 	bl	1d7c <__mriBuffer_ReadChar>
    2a60:	682f      	ldr	r7, [r5, #0]
    2a62:	4601      	mov	r1, r0
    2a64:	b95f      	cbnz	r7, 2a7e <writeBinaryBufferToByteMemory+0x3a>
    2a66:	287d      	cmp	r0, #125	; 0x7d
    2a68:	d109      	bne.n	2a7e <writeBinaryBufferToByteMemory+0x3a>
    2a6a:	4630      	mov	r0, r6
    2a6c:	f7ff f986 	bl	1d7c <__mriBuffer_ReadChar>
    2a70:	6829      	ldr	r1, [r5, #0]
    2a72:	b919      	cbnz	r1, 2a7c <writeBinaryBufferToByteMemory+0x38>
    2a74:	f080 0020 	eor.w	r0, r0, #32
    2a78:	b2c1      	uxtb	r1, r0
    2a7a:	e000      	b.n	2a7e <writeBinaryBufferToByteMemory+0x3a>
    2a7c:	4639      	mov	r1, r7
    2a7e:	4a09      	ldr	r2, [pc, #36]	; (2aa4 <writeBinaryBufferToByteMemory+0x60>)
    2a80:	6813      	ldr	r3, [r2, #0]
    2a82:	b113      	cbz	r3, 2a8a <writeBinaryBufferToByteMemory+0x46>
    2a84:	2000      	movs	r0, #0
    2a86:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2a8a:	4620      	mov	r0, r4
    2a8c:	1c65      	adds	r5, r4, #1
    2a8e:	f7fe feb6 	bl	17fe <__mriPlatform_MemWrite8>
    2a92:	f7fe fb79 	bl	1188 <__mriPlatform_WasMemoryFaultEncountered>
    2a96:	2800      	cmp	r0, #0
    2a98:	d1f4      	bne.n	2a84 <writeBinaryBufferToByteMemory+0x40>
    2a9a:	462c      	mov	r4, r5
    2a9c:	e7d8      	b.n	2a50 <writeBinaryBufferToByteMemory+0xc>
    2a9e:	2001      	movs	r0, #1
    2aa0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2aa4:	1000014c 	.word	0x1000014c

00002aa8 <__mriMem_ReadMemoryIntoHexBuffer>:
    2aa8:	2a02      	cmp	r2, #2
    2aaa:	b537      	push	{r0, r1, r2, r4, r5, lr}
    2aac:	4605      	mov	r5, r0
    2aae:	4614      	mov	r4, r2
    2ab0:	d002      	beq.n	2ab8 <__mriMem_ReadMemoryIntoHexBuffer+0x10>
    2ab2:	2a04      	cmp	r2, #4
    2ab4:	d12d      	bne.n	2b12 <__mriMem_ReadMemoryIntoHexBuffer+0x6a>
    2ab6:	e015      	b.n	2ae4 <__mriMem_ReadMemoryIntoHexBuffer+0x3c>
    2ab8:	f011 0401 	ands.w	r4, r1, #1
    2abc:	d129      	bne.n	2b12 <__mriMem_ReadMemoryIntoHexBuffer+0x6a>
    2abe:	4608      	mov	r0, r1
    2ac0:	f7fe fe94 	bl	17ec <__mriPlatform_MemRead16>
    2ac4:	f8ad 0002 	strh.w	r0, [sp, #2]
    2ac8:	f7fe fb5e 	bl	1188 <__mriPlatform_WasMemoryFaultEncountered>
    2acc:	b9f8      	cbnz	r0, 2b0e <__mriMem_ReadMemoryIntoHexBuffer+0x66>
    2ace:	4628      	mov	r0, r5
    2ad0:	f89d 1002 	ldrb.w	r1, [sp, #2]
    2ad4:	f7ff f966 	bl	1da4 <__mriBuffer_WriteByteAsHex>
    2ad8:	4628      	mov	r0, r5
    2ada:	f89d 1003 	ldrb.w	r1, [sp, #3]
    2ade:	f7ff f961 	bl	1da4 <__mriBuffer_WriteByteAsHex>
    2ae2:	e012      	b.n	2b0a <__mriMem_ReadMemoryIntoHexBuffer+0x62>
    2ae4:	f011 0403 	ands.w	r4, r1, #3
    2ae8:	d113      	bne.n	2b12 <__mriMem_ReadMemoryIntoHexBuffer+0x6a>
    2aea:	4608      	mov	r0, r1
    2aec:	f7fe fe7c 	bl	17e8 <__mriPlatform_MemRead32>
    2af0:	9001      	str	r0, [sp, #4]
    2af2:	f7fe fb49 	bl	1188 <__mriPlatform_WasMemoryFaultEncountered>
    2af6:	b950      	cbnz	r0, 2b0e <__mriMem_ReadMemoryIntoHexBuffer+0x66>
    2af8:	4604      	mov	r4, r0
    2afa:	a901      	add	r1, sp, #4
    2afc:	5d09      	ldrb	r1, [r1, r4]
    2afe:	4628      	mov	r0, r5
    2b00:	3401      	adds	r4, #1
    2b02:	f7ff f94f 	bl	1da4 <__mriBuffer_WriteByteAsHex>
    2b06:	2c04      	cmp	r4, #4
    2b08:	d1f7      	bne.n	2afa <__mriMem_ReadMemoryIntoHexBuffer+0x52>
    2b0a:	2001      	movs	r0, #1
    2b0c:	e006      	b.n	2b1c <__mriMem_ReadMemoryIntoHexBuffer+0x74>
    2b0e:	4620      	mov	r0, r4
    2b10:	e004      	b.n	2b1c <__mriMem_ReadMemoryIntoHexBuffer+0x74>
    2b12:	b003      	add	sp, #12
    2b14:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
    2b18:	f7ff bf52 	b.w	29c0 <readMemoryBytesIntoHexBuffer>
    2b1c:	b003      	add	sp, #12
    2b1e:	bd30      	pop	{r4, r5, pc}

00002b20 <__mriMem_WriteHexBufferToMemory>:
    2b20:	2a02      	cmp	r2, #2
    2b22:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    2b26:	4606      	mov	r6, r0
    2b28:	460c      	mov	r4, r1
    2b2a:	d002      	beq.n	2b32 <__mriMem_WriteHexBufferToMemory+0x12>
    2b2c:	2a04      	cmp	r2, #4
    2b2e:	d133      	bne.n	2b98 <__mriMem_WriteHexBufferToMemory+0x78>
    2b30:	e018      	b.n	2b64 <__mriMem_WriteHexBufferToMemory+0x44>
    2b32:	f011 0301 	ands.w	r3, r1, #1
    2b36:	d12f      	bne.n	2b98 <__mriMem_WriteHexBufferToMemory+0x78>
    2b38:	4d1f      	ldr	r5, [pc, #124]	; (2bb8 <__mriMem_WriteHexBufferToMemory+0x98>)
    2b3a:	602b      	str	r3, [r5, #0]
    2b3c:	f7ff f94e 	bl	1ddc <__mriBuffer_ReadByteAsHex>
    2b40:	682a      	ldr	r2, [r5, #0]
    2b42:	f88d 0002 	strb.w	r0, [sp, #2]
    2b46:	2a00      	cmp	r2, #0
    2b48:	d12b      	bne.n	2ba2 <__mriMem_WriteHexBufferToMemory+0x82>
    2b4a:	4630      	mov	r0, r6
    2b4c:	f7ff f946 	bl	1ddc <__mriBuffer_ReadByteAsHex>
    2b50:	6829      	ldr	r1, [r5, #0]
    2b52:	f88d 0003 	strb.w	r0, [sp, #3]
    2b56:	bb21      	cbnz	r1, 2ba2 <__mriMem_WriteHexBufferToMemory+0x82>
    2b58:	4620      	mov	r0, r4
    2b5a:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    2b5e:	f7fe fe4c 	bl	17fa <__mriPlatform_MemWrite16>
    2b62:	e020      	b.n	2ba6 <__mriMem_WriteHexBufferToMemory+0x86>
    2b64:	f011 0503 	ands.w	r5, r1, #3
    2b68:	d116      	bne.n	2b98 <__mriMem_WriteHexBufferToMemory+0x78>
    2b6a:	f8df 804c 	ldr.w	r8, [pc, #76]	; 2bb8 <__mriMem_WriteHexBufferToMemory+0x98>
    2b6e:	2700      	movs	r7, #0
    2b70:	4630      	mov	r0, r6
    2b72:	f8c8 7000 	str.w	r7, [r8]
    2b76:	f7ff f931 	bl	1ddc <__mriBuffer_ReadByteAsHex>
    2b7a:	a901      	add	r1, sp, #4
    2b7c:	5548      	strb	r0, [r1, r5]
    2b7e:	f8d8 0000 	ldr.w	r0, [r8]
    2b82:	3501      	adds	r5, #1
    2b84:	b930      	cbnz	r0, 2b94 <__mriMem_WriteHexBufferToMemory+0x74>
    2b86:	2d04      	cmp	r5, #4
    2b88:	d1ef      	bne.n	2b6a <__mriMem_WriteHexBufferToMemory+0x4a>
    2b8a:	4620      	mov	r0, r4
    2b8c:	9901      	ldr	r1, [sp, #4]
    2b8e:	f7fe fe32 	bl	17f6 <__mriPlatform_MemWrite32>
    2b92:	e008      	b.n	2ba6 <__mriMem_WriteHexBufferToMemory+0x86>
    2b94:	4638      	mov	r0, r7
    2b96:	e00c      	b.n	2bb2 <__mriMem_WriteHexBufferToMemory+0x92>
    2b98:	b002      	add	sp, #8
    2b9a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    2b9e:	f7ff beef 	b.w	2980 <writeHexBufferToByteMemory>
    2ba2:	2000      	movs	r0, #0
    2ba4:	e005      	b.n	2bb2 <__mriMem_WriteHexBufferToMemory+0x92>
    2ba6:	f7fe faef 	bl	1188 <__mriPlatform_WasMemoryFaultEncountered>
    2baa:	f1d0 0001 	rsbs	r0, r0, #1
    2bae:	bf38      	it	cc
    2bb0:	2000      	movcc	r0, #0
    2bb2:	b002      	add	sp, #8
    2bb4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2bb8:	1000014c 	.word	0x1000014c

00002bbc <__mriMem_WriteBinaryBufferToMemory>:
    2bbc:	2a02      	cmp	r2, #2
    2bbe:	b513      	push	{r0, r1, r4, lr}
    2bc0:	460c      	mov	r4, r1
    2bc2:	d002      	beq.n	2bca <__mriMem_WriteBinaryBufferToMemory+0xe>
    2bc4:	2a04      	cmp	r2, #4
    2bc6:	d11e      	bne.n	2c06 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2bc8:	e00c      	b.n	2be4 <__mriMem_WriteBinaryBufferToMemory+0x28>
    2bca:	07cb      	lsls	r3, r1, #31
    2bcc:	d41b      	bmi.n	2c06 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2bce:	f10d 0102 	add.w	r1, sp, #2
    2bd2:	f7ff ff0d 	bl	29f0 <readBytesFromBinaryBuffer>
    2bd6:	b1c0      	cbz	r0, 2c0a <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2bd8:	4620      	mov	r0, r4
    2bda:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    2bde:	f7fe fe0c 	bl	17fa <__mriPlatform_MemWrite16>
    2be2:	e009      	b.n	2bf8 <__mriMem_WriteBinaryBufferToMemory+0x3c>
    2be4:	078b      	lsls	r3, r1, #30
    2be6:	d10e      	bne.n	2c06 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2be8:	a901      	add	r1, sp, #4
    2bea:	f7ff ff01 	bl	29f0 <readBytesFromBinaryBuffer>
    2bee:	b160      	cbz	r0, 2c0a <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2bf0:	4620      	mov	r0, r4
    2bf2:	9901      	ldr	r1, [sp, #4]
    2bf4:	f7fe fdff 	bl	17f6 <__mriPlatform_MemWrite32>
    2bf8:	f7fe fac6 	bl	1188 <__mriPlatform_WasMemoryFaultEncountered>
    2bfc:	f1d0 0001 	rsbs	r0, r0, #1
    2c00:	bf38      	it	cc
    2c02:	2000      	movcc	r0, #0
    2c04:	e001      	b.n	2c0a <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2c06:	f7ff ff1d 	bl	2a44 <writeBinaryBufferToByteMemory>
    2c0a:	bd1c      	pop	{r2, r3, r4, pc}

00002c0c <__mriLpc176x_Init>:
    2c0c:	b538      	push	{r3, r4, r5, lr}
    2c0e:	4c0c      	ldr	r4, [pc, #48]	; (2c40 <__mriLpc176x_Init+0x34>)
    2c10:	2300      	movs	r3, #0
    2c12:	6023      	str	r3, [r4, #0]
    2c14:	4605      	mov	r5, r0
    2c16:	f7fe f953 	bl	ec0 <__mriCortexMInit>
    2c1a:	6823      	ldr	r3, [r4, #0]
    2c1c:	b973      	cbnz	r3, 2c3c <__mriLpc176x_Init+0x30>
    2c1e:	f103 4260 	add.w	r2, r3, #3758096384	; 0xe0000000
    2c22:	3301      	adds	r3, #1
    2c24:	2108      	movs	r1, #8
    2c26:	f502 4061 	add.w	r0, r2, #57600	; 0xe100
    2c2a:	2b23      	cmp	r3, #35	; 0x23
    2c2c:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
    2c30:	d1f5      	bne.n	2c1e <__mriLpc176x_Init+0x12>
    2c32:	4628      	mov	r0, r5
    2c34:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2c38:	f7fe be5a 	b.w	18f0 <__mriLpc176xUart_Init>
    2c3c:	bd38      	pop	{r3, r4, r5, pc}
    2c3e:	bf00      	nop
    2c40:	1000014c 	.word	0x1000014c

00002c44 <__mriPlatform_GetDeviceMemoryMapXmlSize>:
    2c44:	f240 50c6 	movw	r0, #1478	; 0x5c6
    2c48:	4770      	bx	lr
	...

00002c4c <__mriPlatform_GetDeviceMemoryMapXml>:
    2c4c:	4800      	ldr	r0, [pc, #0]	; (2c50 <__mriPlatform_GetDeviceMemoryMapXml+0x4>)
    2c4e:	4770      	bx	lr
    2c50:	00003df3 	.word	0x00003df3

00002c54 <NVIC_SetVector>:
    2c54:	b086      	sub	sp, #24
    2c56:	4603      	mov	r3, r0
    2c58:	9100      	str	r1, [sp, #0]
    2c5a:	f88d 3007 	strb.w	r3, [sp, #7]
    2c5e:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2c62:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2c66:	689b      	ldr	r3, [r3, #8]
    2c68:	9305      	str	r3, [sp, #20]
    2c6a:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2c6e:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2c72:	689b      	ldr	r3, [r3, #8]
    2c74:	2b00      	cmp	r3, #0
    2c76:	d122      	bne.n	2cbe <NVIC_SetVector+0x6a>
    2c78:	9b05      	ldr	r3, [sp, #20]
    2c7a:	9303      	str	r3, [sp, #12]
    2c7c:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    2c80:	9305      	str	r3, [sp, #20]
    2c82:	f04f 0300 	mov.w	r3, #0
    2c86:	9304      	str	r3, [sp, #16]
    2c88:	e00f      	b.n	2caa <NVIC_SetVector+0x56>
    2c8a:	9b04      	ldr	r3, [sp, #16]
    2c8c:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2c90:	9a05      	ldr	r2, [sp, #20]
    2c92:	18d3      	adds	r3, r2, r3
    2c94:	9a04      	ldr	r2, [sp, #16]
    2c96:	ea4f 0282 	mov.w	r2, r2, lsl #2
    2c9a:	9903      	ldr	r1, [sp, #12]
    2c9c:	188a      	adds	r2, r1, r2
    2c9e:	6812      	ldr	r2, [r2, #0]
    2ca0:	601a      	str	r2, [r3, #0]
    2ca2:	9b04      	ldr	r3, [sp, #16]
    2ca4:	f103 0301 	add.w	r3, r3, #1
    2ca8:	9304      	str	r3, [sp, #16]
    2caa:	9b04      	ldr	r3, [sp, #16]
    2cac:	2b30      	cmp	r3, #48	; 0x30
    2cae:	d9ec      	bls.n	2c8a <NVIC_SetVector+0x36>
    2cb0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2cb4:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2cb8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2cbc:	609a      	str	r2, [r3, #8]
    2cbe:	f99d 3007 	ldrsb.w	r3, [sp, #7]
    2cc2:	f103 0310 	add.w	r3, r3, #16
    2cc6:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2cca:	9a05      	ldr	r2, [sp, #20]
    2ccc:	18d3      	adds	r3, r2, r3
    2cce:	9a00      	ldr	r2, [sp, #0]
    2cd0:	601a      	str	r2, [r3, #0]
    2cd2:	b006      	add	sp, #24
    2cd4:	4770      	bx	lr
    2cd6:	bf00      	nop

00002cd8 <SystemInit>:
    2cd8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2cdc:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2ce0:	f04f 0220 	mov.w	r2, #32
    2ce4:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
    2ce8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2cec:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2cf0:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2cf4:	f003 0320 	and.w	r3, r3, #32
    2cf8:	2b00      	cmp	r3, #0
    2cfa:	d00a      	beq.n	2d12 <SystemInit+0x3a>
    2cfc:	bf00      	nop
    2cfe:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d02:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d06:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2d0a:	f003 0340 	and.w	r3, r3, #64	; 0x40
    2d0e:	2b00      	cmp	r3, #0
    2d10:	d0f5      	beq.n	2cfe <SystemInit+0x26>
    2d12:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d16:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d1a:	f04f 0202 	mov.w	r2, #2
    2d1e:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
    2d22:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d26:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d2a:	f04f 0200 	mov.w	r2, #0
    2d2e:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    2d32:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d36:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d3a:	f04f 0200 	mov.w	r2, #0
    2d3e:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    2d42:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d46:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d4a:	f04f 0201 	mov.w	r2, #1
    2d4e:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
    2d52:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d56:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d5a:	f04f 020b 	mov.w	r2, #11
    2d5e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    2d62:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d66:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d6a:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2d6e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2d72:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d76:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d7a:	f04f 0255 	mov.w	r2, #85	; 0x55
    2d7e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2d82:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d86:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d8a:	f04f 0201 	mov.w	r2, #1
    2d8e:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2d92:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d96:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d9a:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2d9e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2da2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2da6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2daa:	f04f 0255 	mov.w	r2, #85	; 0x55
    2dae:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2db2:	bf00      	nop
    2db4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2db8:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2dbc:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2dc0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
    2dc4:	2b00      	cmp	r3, #0
    2dc6:	d0f5      	beq.n	2db4 <SystemInit+0xdc>
    2dc8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2dcc:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2dd0:	f04f 0203 	mov.w	r2, #3
    2dd4:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2dd8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ddc:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2de0:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2de4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2de8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2dec:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2df0:	f04f 0255 	mov.w	r2, #85	; 0x55
    2df4:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2df8:	bf00      	nop
    2dfa:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2dfe:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2e02:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2e06:	f003 7340 	and.w	r3, r3, #50331648	; 0x3000000
    2e0a:	2b00      	cmp	r3, #0
    2e0c:	d0f5      	beq.n	2dfa <SystemInit+0x122>
    2e0e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e12:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2e16:	f04f 0205 	mov.w	r2, #5
    2e1a:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
    2e1e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e22:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2e26:	f248 72de 	movw	r2, #34782	; 0x87de
    2e2a:	f2c0 4228 	movt	r2, #1064	; 0x428
    2e2e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    2e32:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e36:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2e3a:	f04f 0200 	mov.w	r2, #0
    2e3e:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
    2e42:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e46:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2e4a:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2e4e:	f2c4 020f 	movt	r2, #16399	; 0x400f
    2e52:	6812      	ldr	r2, [r2, #0]
    2e54:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
    2e58:	f022 023a 	bic.w	r2, r2, #58	; 0x3a
    2e5c:	f442 5240 	orr.w	r2, r2, #12288	; 0x3000
    2e60:	f042 023a 	orr.w	r2, r2, #58	; 0x3a
    2e64:	601a      	str	r2, [r3, #0]
    2e66:	4770      	bx	lr

00002e68 <exit>:
    2e68:	b500      	push	{lr}
    2e6a:	b083      	sub	sp, #12
    2e6c:	9001      	str	r0, [sp, #4]
    2e6e:	f000 f80b 	bl	2e88 <mbed_interface_connected>
    2e72:	4603      	mov	r3, r0
    2e74:	2b00      	cmp	r3, #0
    2e76:	d001      	beq.n	2e7c <exit+0x14>
    2e78:	f000 f81c 	bl	2eb4 <semihost_exit>
    2e7c:	9b01      	ldr	r3, [sp, #4]
    2e7e:	2b00      	cmp	r3, #0
    2e80:	d001      	beq.n	2e86 <exit+0x1e>
    2e82:	f000 f955 	bl	3130 <mbed_die>
    2e86:	e7fe      	b.n	2e86 <exit+0x1e>

00002e88 <mbed_interface_connected>:
    2e88:	b508      	push	{r3, lr}
    2e8a:	f7fd fa63 	bl	354 <__wrap_semihost_connected>
    2e8e:	4603      	mov	r3, r0
    2e90:	4618      	mov	r0, r3
    2e92:	bd08      	pop	{r3, pc}

00002e94 <__semihost>:
    2e94:	b530      	push	{r4, r5, lr}
    2e96:	b085      	sub	sp, #20
    2e98:	9001      	str	r0, [sp, #4]
    2e9a:	9100      	str	r1, [sp, #0]
    2e9c:	9c01      	ldr	r4, [sp, #4]
    2e9e:	9d00      	ldr	r5, [sp, #0]
    2ea0:	4620      	mov	r0, r4
    2ea2:	4629      	mov	r1, r5
    2ea4:	beab      	bkpt	0x00ab
    2ea6:	4604      	mov	r4, r0
    2ea8:	9403      	str	r4, [sp, #12]
    2eaa:	9b03      	ldr	r3, [sp, #12]
    2eac:	4618      	mov	r0, r3
    2eae:	b005      	add	sp, #20
    2eb0:	bd30      	pop	{r4, r5, pc}
    2eb2:	bf00      	nop

00002eb4 <semihost_exit>:
    2eb4:	b500      	push	{lr}
    2eb6:	b085      	sub	sp, #20
    2eb8:	466b      	mov	r3, sp
    2eba:	f04f 0018 	mov.w	r0, #24
    2ebe:	4619      	mov	r1, r3
    2ec0:	f7ff ffe8 	bl	2e94 <__semihost>
    2ec4:	4603      	mov	r3, r0
    2ec6:	4618      	mov	r0, r3
    2ec8:	b005      	add	sp, #20
    2eca:	bd00      	pop	{pc}

00002ecc <Reset_Handler>:
    2ecc:	4907      	ldr	r1, [pc, #28]	; (2eec <.flash_to_ram_loop+0x1a>)
    2ece:	4a08      	ldr	r2, [pc, #32]	; (2ef0 <.flash_to_ram_loop+0x1e>)
    2ed0:	4b08      	ldr	r3, [pc, #32]	; (2ef4 <.flash_to_ram_loop+0x22>)

00002ed2 <.flash_to_ram_loop>:
    2ed2:	429a      	cmp	r2, r3
    2ed4:	bfbe      	ittt	lt
    2ed6:	f851 0b04 	ldrlt.w	r0, [r1], #4
    2eda:	f842 0b04 	strlt.w	r0, [r2], #4
    2ede:	f7ff bff8 	blt.w	2ed2 <.flash_to_ram_loop>
    2ee2:	4805      	ldr	r0, [pc, #20]	; (2ef8 <.flash_to_ram_loop+0x26>)
    2ee4:	4780      	blx	r0
    2ee6:	4805      	ldr	r0, [pc, #20]	; (2efc <.flash_to_ram_loop+0x2a>)
    2ee8:	4700      	bx	r0
    2eea:	0000      	.short	0x0000
    2eec:	000043c0 	.word	0x000043c0
    2ef0:	100000c8 	.word	0x100000c8
    2ef4:	100000d4 	.word	0x100000d4
    2ef8:	00002cd9 	.word	0x00002cd9
    2efc:	00000309 	.word	0x00000309

00002f00 <NMI_Handler>:
    2f00:	e7fe      	b.n	2f00 <NMI_Handler>
    2f02:	e7fe      	b.n	2f02 <NMI_Handler+0x2>
    2f04:	e7fe      	b.n	2f04 <NMI_Handler+0x4>
    2f06:	e7fe      	b.n	2f06 <NMI_Handler+0x6>
    2f08:	e7fe      	b.n	2f08 <NMI_Handler+0x8>
    2f0a:	e7fe      	b.n	2f0a <NMI_Handler+0xa>
    2f0c:	e7fe      	b.n	2f0c <NMI_Handler+0xc>

00002f0e <PendSV_Handler>:
    2f0e:	e7fe      	b.n	2f0e <PendSV_Handler>

00002f10 <SysTick_Handler>:
    2f10:	e7fe      	b.n	2f10 <SysTick_Handler>

00002f12 <DEF_IRQHandler>:
    2f12:	e7fe      	b.n	2f12 <DEF_IRQHandler>

00002f14 <WDT_IRQHandler>:
    2f14:	e7fe      	b.n	2f14 <WDT_IRQHandler>

00002f16 <TIMER0_IRQHandler>:
    2f16:	e7fe      	b.n	2f16 <TIMER0_IRQHandler>

00002f18 <TIMER1_IRQHandler>:
    2f18:	e7fe      	b.n	2f18 <TIMER1_IRQHandler>

00002f1a <TIMER2_IRQHandler>:
    2f1a:	e7fe      	b.n	2f1a <TIMER2_IRQHandler>

00002f1c <TIMER3_IRQHandler>:
    2f1c:	e7fe      	b.n	2f1c <TIMER3_IRQHandler>
    2f1e:	e7fe      	b.n	2f1e <TIMER3_IRQHandler+0x2>
    2f20:	e7fe      	b.n	2f20 <TIMER3_IRQHandler+0x4>
    2f22:	e7fe      	b.n	2f22 <TIMER3_IRQHandler+0x6>
    2f24:	e7fe      	b.n	2f24 <TIMER3_IRQHandler+0x8>

00002f26 <PWM1_IRQHandler>:
    2f26:	e7fe      	b.n	2f26 <PWM1_IRQHandler>

00002f28 <I2C0_IRQHandler>:
    2f28:	e7fe      	b.n	2f28 <I2C0_IRQHandler>

00002f2a <I2C1_IRQHandler>:
    2f2a:	e7fe      	b.n	2f2a <I2C1_IRQHandler>

00002f2c <I2C2_IRQHandler>:
    2f2c:	e7fe      	b.n	2f2c <I2C2_IRQHandler>

00002f2e <SPI_IRQHandler>:
    2f2e:	e7fe      	b.n	2f2e <SPI_IRQHandler>

00002f30 <SSP0_IRQHandler>:
    2f30:	e7fe      	b.n	2f30 <SSP0_IRQHandler>

00002f32 <SSP1_IRQHandler>:
    2f32:	e7fe      	b.n	2f32 <SSP1_IRQHandler>

00002f34 <PLL0_IRQHandler>:
    2f34:	e7fe      	b.n	2f34 <PLL0_IRQHandler>

00002f36 <RTC_IRQHandler>:
    2f36:	e7fe      	b.n	2f36 <RTC_IRQHandler>

00002f38 <EINT0_IRQHandler>:
    2f38:	e7fe      	b.n	2f38 <EINT0_IRQHandler>

00002f3a <EINT1_IRQHandler>:
    2f3a:	e7fe      	b.n	2f3a <EINT1_IRQHandler>

00002f3c <EINT2_IRQHandler>:
    2f3c:	e7fe      	b.n	2f3c <EINT2_IRQHandler>

00002f3e <EINT3_IRQHandler>:
    2f3e:	e7fe      	b.n	2f3e <EINT3_IRQHandler>

00002f40 <ADC_IRQHandler>:
    2f40:	e7fe      	b.n	2f40 <ADC_IRQHandler>

00002f42 <BOD_IRQHandler>:
    2f42:	e7fe      	b.n	2f42 <BOD_IRQHandler>

00002f44 <USB_IRQHandler>:
    2f44:	e7fe      	b.n	2f44 <USB_IRQHandler>

00002f46 <CAN_IRQHandler>:
    2f46:	e7fe      	b.n	2f46 <CAN_IRQHandler>

00002f48 <DMA_IRQHandler>:
    2f48:	e7fe      	b.n	2f48 <DMA_IRQHandler>

00002f4a <I2S_IRQHandler>:
    2f4a:	e7fe      	b.n	2f4a <I2S_IRQHandler>

00002f4c <ENET_IRQHandler>:
    2f4c:	e7fe      	b.n	2f4c <ENET_IRQHandler>

00002f4e <RIT_IRQHandler>:
    2f4e:	e7fe      	b.n	2f4e <RIT_IRQHandler>

00002f50 <MCPWM_IRQHandler>:
    2f50:	e7fe      	b.n	2f50 <MCPWM_IRQHandler>

00002f52 <QEI_IRQHandler>:
    2f52:	e7fe      	b.n	2f52 <QEI_IRQHandler>

00002f54 <PLL1_IRQHandler>:
    2f54:	e7fe      	b.n	2f54 <PLL1_IRQHandler>

00002f56 <USBActivity_IRQHandler>:
    2f56:	e7fe      	b.n	2f56 <USBActivity_IRQHandler>

00002f58 <CANActivity_IRQHandler>:
    2f58:	e7fe      	b.n	2f58 <CANActivity_IRQHandler>
    2f5a:	bf00      	nop

00002f5c <pin_function>:
    2f5c:	b086      	sub	sp, #24
    2f5e:	9001      	str	r0, [sp, #4]
    2f60:	9100      	str	r1, [sp, #0]
    2f62:	9b01      	ldr	r3, [sp, #4]
    2f64:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2f68:	d039      	beq.n	2fde <pin_function+0x82>
    2f6a:	9b01      	ldr	r3, [sp, #4]
    2f6c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2f70:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    2f74:	9305      	str	r3, [sp, #20]
    2f76:	9b05      	ldr	r3, [sp, #20]
    2f78:	ea4f 1313 	mov.w	r3, r3, lsr #4
    2f7c:	9304      	str	r3, [sp, #16]
    2f7e:	9b05      	ldr	r3, [sp, #20]
    2f80:	f003 030f 	and.w	r3, r3, #15
    2f84:	ea4f 0343 	mov.w	r3, r3, lsl #1
    2f88:	9303      	str	r3, [sp, #12]
    2f8a:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2f8e:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2f92:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2f96:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2f9a:	9904      	ldr	r1, [sp, #16]
    2f9c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2fa0:	f04f 0003 	mov.w	r0, #3
    2fa4:	9a03      	ldr	r2, [sp, #12]
    2fa6:	fa00 f202 	lsl.w	r2, r0, r2
    2faa:	ea6f 0202 	mvn.w	r2, r2
    2fae:	4011      	ands	r1, r2
    2fb0:	9a04      	ldr	r2, [sp, #16]
    2fb2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2fb6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2fba:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2fbe:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2fc2:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2fc6:	9904      	ldr	r1, [sp, #16]
    2fc8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2fcc:	9800      	ldr	r0, [sp, #0]
    2fce:	9a03      	ldr	r2, [sp, #12]
    2fd0:	fa00 f202 	lsl.w	r2, r0, r2
    2fd4:	4311      	orrs	r1, r2
    2fd6:	9a04      	ldr	r2, [sp, #16]
    2fd8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2fdc:	e000      	b.n	2fe0 <pin_function+0x84>
    2fde:	bf00      	nop
    2fe0:	b006      	add	sp, #24
    2fe2:	4770      	bx	lr

00002fe4 <pin_mode>:
    2fe4:	b086      	sub	sp, #24
    2fe6:	9001      	str	r0, [sp, #4]
    2fe8:	460b      	mov	r3, r1
    2fea:	f88d 3003 	strb.w	r3, [sp, #3]
    2fee:	9b01      	ldr	r3, [sp, #4]
    2ff0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2ff4:	f000 8085 	beq.w	3102 <pin_mode+0x11e>
    2ff8:	9b01      	ldr	r3, [sp, #4]
    2ffa:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2ffe:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    3002:	9305      	str	r3, [sp, #20]
    3004:	9b05      	ldr	r3, [sp, #20]
    3006:	ea4f 1353 	mov.w	r3, r3, lsr #5
    300a:	9304      	str	r3, [sp, #16]
    300c:	9b05      	ldr	r3, [sp, #20]
    300e:	f003 031f 	and.w	r3, r3, #31
    3012:	9303      	str	r3, [sp, #12]
    3014:	f89d 3003 	ldrb.w	r3, [sp, #3]
    3018:	f003 0304 	and.w	r3, r3, #4
    301c:	ea4f 0393 	mov.w	r3, r3, lsr #2
    3020:	9302      	str	r3, [sp, #8]
    3022:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    3026:	f2c4 0302 	movt	r3, #16386	; 0x4002
    302a:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    302e:	f2c4 0202 	movt	r2, #16386	; 0x4002
    3032:	9904      	ldr	r1, [sp, #16]
    3034:	f101 011a 	add.w	r1, r1, #26
    3038:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    303c:	9802      	ldr	r0, [sp, #8]
    303e:	9a03      	ldr	r2, [sp, #12]
    3040:	fa00 f202 	lsl.w	r2, r0, r2
    3044:	ea6f 0202 	mvn.w	r2, r2
    3048:	4011      	ands	r1, r2
    304a:	9a04      	ldr	r2, [sp, #16]
    304c:	f102 021a 	add.w	r2, r2, #26
    3050:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    3054:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    3058:	f2c4 0302 	movt	r3, #16386	; 0x4002
    305c:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    3060:	f2c4 0202 	movt	r2, #16386	; 0x4002
    3064:	9904      	ldr	r1, [sp, #16]
    3066:	f101 011a 	add.w	r1, r1, #26
    306a:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    306e:	9802      	ldr	r0, [sp, #8]
    3070:	9a03      	ldr	r2, [sp, #12]
    3072:	fa00 f202 	lsl.w	r2, r0, r2
    3076:	4311      	orrs	r1, r2
    3078:	9a04      	ldr	r2, [sp, #16]
    307a:	f102 021a 	add.w	r2, r2, #26
    307e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    3082:	9b02      	ldr	r3, [sp, #8]
    3084:	2b00      	cmp	r3, #0
    3086:	d13d      	bne.n	3104 <pin_mode+0x120>
    3088:	9b05      	ldr	r3, [sp, #20]
    308a:	ea4f 1313 	mov.w	r3, r3, lsr #4
    308e:	9304      	str	r3, [sp, #16]
    3090:	9b05      	ldr	r3, [sp, #20]
    3092:	f003 030f 	and.w	r3, r3, #15
    3096:	ea4f 0343 	mov.w	r3, r3, lsl #1
    309a:	9303      	str	r3, [sp, #12]
    309c:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    30a0:	f2c4 0302 	movt	r3, #16386	; 0x4002
    30a4:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    30a8:	f2c4 0202 	movt	r2, #16386	; 0x4002
    30ac:	9904      	ldr	r1, [sp, #16]
    30ae:	f101 0110 	add.w	r1, r1, #16
    30b2:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    30b6:	f04f 0003 	mov.w	r0, #3
    30ba:	9a03      	ldr	r2, [sp, #12]
    30bc:	fa00 f202 	lsl.w	r2, r0, r2
    30c0:	ea6f 0202 	mvn.w	r2, r2
    30c4:	4011      	ands	r1, r2
    30c6:	9a04      	ldr	r2, [sp, #16]
    30c8:	f102 0210 	add.w	r2, r2, #16
    30cc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    30d0:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    30d4:	f2c4 0302 	movt	r3, #16386	; 0x4002
    30d8:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    30dc:	f2c4 0202 	movt	r2, #16386	; 0x4002
    30e0:	9904      	ldr	r1, [sp, #16]
    30e2:	f101 0110 	add.w	r1, r1, #16
    30e6:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    30ea:	f89d 0003 	ldrb.w	r0, [sp, #3]
    30ee:	9a03      	ldr	r2, [sp, #12]
    30f0:	fa00 f202 	lsl.w	r2, r0, r2
    30f4:	4311      	orrs	r1, r2
    30f6:	9a04      	ldr	r2, [sp, #16]
    30f8:	f102 0210 	add.w	r2, r2, #16
    30fc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    3100:	e000      	b.n	3104 <pin_mode+0x120>
    3102:	bf00      	nop
    3104:	b006      	add	sp, #24
    3106:	4770      	bx	lr

00003108 <gpio_write>:
    3108:	b082      	sub	sp, #8
    310a:	9001      	str	r0, [sp, #4]
    310c:	9100      	str	r1, [sp, #0]
    310e:	9b00      	ldr	r3, [sp, #0]
    3110:	2b00      	cmp	r3, #0
    3112:	d005      	beq.n	3120 <gpio_write+0x18>
    3114:	9b01      	ldr	r3, [sp, #4]
    3116:	68db      	ldr	r3, [r3, #12]
    3118:	9a01      	ldr	r2, [sp, #4]
    311a:	6852      	ldr	r2, [r2, #4]
    311c:	601a      	str	r2, [r3, #0]
    311e:	e004      	b.n	312a <gpio_write+0x22>
    3120:	9b01      	ldr	r3, [sp, #4]
    3122:	691b      	ldr	r3, [r3, #16]
    3124:	9a01      	ldr	r2, [sp, #4]
    3126:	6852      	ldr	r2, [r2, #4]
    3128:	601a      	str	r2, [r3, #0]
    312a:	b002      	add	sp, #8
    312c:	4770      	bx	lr
    312e:	bf00      	nop

00003130 <mbed_die>:
    3130:	b500      	push	{lr}
    3132:	b099      	sub	sp, #100	; 0x64
    3134:	ab12      	add	r3, sp, #72	; 0x48
    3136:	4618      	mov	r0, r3
    3138:	f24c 0132 	movw	r1, #49202	; 0xc032
    313c:	f2c2 0109 	movt	r1, #8201	; 0x2009
    3140:	f04f 0201 	mov.w	r2, #1
    3144:	f000 f88a 	bl	325c <gpio_init>
    3148:	ab0c      	add	r3, sp, #48	; 0x30
    314a:	4618      	mov	r0, r3
    314c:	f24c 0134 	movw	r1, #49204	; 0xc034
    3150:	f2c2 0109 	movt	r1, #8201	; 0x2009
    3154:	f04f 0201 	mov.w	r2, #1
    3158:	f000 f880 	bl	325c <gpio_init>
    315c:	ab06      	add	r3, sp, #24
    315e:	4618      	mov	r0, r3
    3160:	f24c 0135 	movw	r1, #49205	; 0xc035
    3164:	f2c2 0109 	movt	r1, #8201	; 0x2009
    3168:	f04f 0201 	mov.w	r2, #1
    316c:	f000 f876 	bl	325c <gpio_init>
    3170:	466b      	mov	r3, sp
    3172:	4618      	mov	r0, r3
    3174:	f24c 0137 	movw	r1, #49207	; 0xc037
    3178:	f2c2 0109 	movt	r1, #8201	; 0x2009
    317c:	f04f 0201 	mov.w	r2, #1
    3180:	f000 f86c 	bl	325c <gpio_init>
    3184:	ab12      	add	r3, sp, #72	; 0x48
    3186:	4618      	mov	r0, r3
    3188:	f04f 0101 	mov.w	r1, #1
    318c:	f7ff ffbc 	bl	3108 <gpio_write>
    3190:	ab0c      	add	r3, sp, #48	; 0x30
    3192:	4618      	mov	r0, r3
    3194:	f04f 0100 	mov.w	r1, #0
    3198:	f7ff ffb6 	bl	3108 <gpio_write>
    319c:	ab06      	add	r3, sp, #24
    319e:	4618      	mov	r0, r3
    31a0:	f04f 0100 	mov.w	r1, #0
    31a4:	f7ff ffb0 	bl	3108 <gpio_write>
    31a8:	466b      	mov	r3, sp
    31aa:	4618      	mov	r0, r3
    31ac:	f04f 0101 	mov.w	r1, #1
    31b0:	f7ff ffaa 	bl	3108 <gpio_write>
    31b4:	f04f 0096 	mov.w	r0, #150	; 0x96
    31b8:	f000 f81e 	bl	31f8 <wait_ms>
    31bc:	ab12      	add	r3, sp, #72	; 0x48
    31be:	4618      	mov	r0, r3
    31c0:	f04f 0100 	mov.w	r1, #0
    31c4:	f7ff ffa0 	bl	3108 <gpio_write>
    31c8:	ab0c      	add	r3, sp, #48	; 0x30
    31ca:	4618      	mov	r0, r3
    31cc:	f04f 0101 	mov.w	r1, #1
    31d0:	f7ff ff9a 	bl	3108 <gpio_write>
    31d4:	ab06      	add	r3, sp, #24
    31d6:	4618      	mov	r0, r3
    31d8:	f04f 0101 	mov.w	r1, #1
    31dc:	f7ff ff94 	bl	3108 <gpio_write>
    31e0:	466b      	mov	r3, sp
    31e2:	4618      	mov	r0, r3
    31e4:	f04f 0100 	mov.w	r1, #0
    31e8:	f7ff ff8e 	bl	3108 <gpio_write>
    31ec:	f04f 0096 	mov.w	r0, #150	; 0x96
    31f0:	f000 f802 	bl	31f8 <wait_ms>
    31f4:	e7c6      	b.n	3184 <mbed_die+0x54>
    31f6:	bf00      	nop

000031f8 <wait_ms>:
    31f8:	b500      	push	{lr}
    31fa:	b083      	sub	sp, #12
    31fc:	9001      	str	r0, [sp, #4]
    31fe:	9b01      	ldr	r3, [sp, #4]
    3200:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    3204:	fb02 f303 	mul.w	r3, r2, r3
    3208:	4618      	mov	r0, r3
    320a:	f000 f803 	bl	3214 <wait_us>
    320e:	b003      	add	sp, #12
    3210:	bd00      	pop	{pc}
    3212:	bf00      	nop

00003214 <wait_us>:
    3214:	b500      	push	{lr}
    3216:	b085      	sub	sp, #20
    3218:	9001      	str	r0, [sp, #4]
    321a:	f000 f8ff 	bl	341c <us_ticker_read>
    321e:	9003      	str	r0, [sp, #12]
    3220:	bf00      	nop
    3222:	f000 f8fb 	bl	341c <us_ticker_read>
    3226:	4602      	mov	r2, r0
    3228:	9b03      	ldr	r3, [sp, #12]
    322a:	1ad2      	subs	r2, r2, r3
    322c:	9b01      	ldr	r3, [sp, #4]
    322e:	429a      	cmp	r2, r3
    3230:	d3f7      	bcc.n	3222 <wait_us+0xe>
    3232:	b005      	add	sp, #20
    3234:	bd00      	pop	{pc}
    3236:	bf00      	nop

00003238 <gpio_set>:
    3238:	b500      	push	{lr}
    323a:	b083      	sub	sp, #12
    323c:	9001      	str	r0, [sp, #4]
    323e:	9801      	ldr	r0, [sp, #4]
    3240:	f04f 0100 	mov.w	r1, #0
    3244:	f7ff fe8a 	bl	2f5c <pin_function>
    3248:	9b01      	ldr	r3, [sp, #4]
    324a:	f003 031f 	and.w	r3, r3, #31
    324e:	f04f 0201 	mov.w	r2, #1
    3252:	fa02 f303 	lsl.w	r3, r2, r3
    3256:	4618      	mov	r0, r3
    3258:	b003      	add	sp, #12
    325a:	bd00      	pop	{pc}

0000325c <gpio_init>:
    325c:	b500      	push	{lr}
    325e:	b087      	sub	sp, #28
    3260:	9003      	str	r0, [sp, #12]
    3262:	9102      	str	r1, [sp, #8]
    3264:	4613      	mov	r3, r2
    3266:	f88d 3007 	strb.w	r3, [sp, #7]
    326a:	9b02      	ldr	r3, [sp, #8]
    326c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    3270:	d037      	beq.n	32e2 <gpio_init+0x86>
    3272:	9b03      	ldr	r3, [sp, #12]
    3274:	9a02      	ldr	r2, [sp, #8]
    3276:	601a      	str	r2, [r3, #0]
    3278:	9802      	ldr	r0, [sp, #8]
    327a:	f7ff ffdd 	bl	3238 <gpio_set>
    327e:	4602      	mov	r2, r0
    3280:	9b03      	ldr	r3, [sp, #12]
    3282:	605a      	str	r2, [r3, #4]
    3284:	9b02      	ldr	r3, [sp, #8]
    3286:	f023 031f 	bic.w	r3, r3, #31
    328a:	9305      	str	r3, [sp, #20]
    328c:	9b05      	ldr	r3, [sp, #20]
    328e:	f103 0218 	add.w	r2, r3, #24
    3292:	9b03      	ldr	r3, [sp, #12]
    3294:	60da      	str	r2, [r3, #12]
    3296:	9b05      	ldr	r3, [sp, #20]
    3298:	f103 021c 	add.w	r2, r3, #28
    329c:	9b03      	ldr	r3, [sp, #12]
    329e:	611a      	str	r2, [r3, #16]
    32a0:	9b05      	ldr	r3, [sp, #20]
    32a2:	f103 0214 	add.w	r2, r3, #20
    32a6:	9b03      	ldr	r3, [sp, #12]
    32a8:	615a      	str	r2, [r3, #20]
    32aa:	9a05      	ldr	r2, [sp, #20]
    32ac:	9b03      	ldr	r3, [sp, #12]
    32ae:	609a      	str	r2, [r3, #8]
    32b0:	f89d 3007 	ldrb.w	r3, [sp, #7]
    32b4:	9803      	ldr	r0, [sp, #12]
    32b6:	4619      	mov	r1, r3
    32b8:	f000 f816 	bl	32e8 <gpio_dir>
    32bc:	f89d 3007 	ldrb.w	r3, [sp, #7]
    32c0:	2b00      	cmp	r3, #0
    32c2:	d007      	beq.n	32d4 <gpio_init+0x78>
    32c4:	2b01      	cmp	r3, #1
    32c6:	d10d      	bne.n	32e4 <gpio_init+0x88>
    32c8:	9802      	ldr	r0, [sp, #8]
    32ca:	f04f 0102 	mov.w	r1, #2
    32ce:	f7ff fe89 	bl	2fe4 <pin_mode>
    32d2:	e007      	b.n	32e4 <gpio_init+0x88>
    32d4:	9802      	ldr	r0, [sp, #8]
    32d6:	f04f 0103 	mov.w	r1, #3
    32da:	f7ff fe83 	bl	2fe4 <pin_mode>
    32de:	bf00      	nop
    32e0:	e000      	b.n	32e4 <gpio_init+0x88>
    32e2:	bf00      	nop
    32e4:	b007      	add	sp, #28
    32e6:	bd00      	pop	{pc}

000032e8 <gpio_dir>:
    32e8:	b082      	sub	sp, #8
    32ea:	9001      	str	r0, [sp, #4]
    32ec:	460b      	mov	r3, r1
    32ee:	f88d 3003 	strb.w	r3, [sp, #3]
    32f2:	f89d 3003 	ldrb.w	r3, [sp, #3]
    32f6:	2b00      	cmp	r3, #0
    32f8:	d002      	beq.n	3300 <gpio_dir+0x18>
    32fa:	2b01      	cmp	r3, #1
    32fc:	d00c      	beq.n	3318 <gpio_dir+0x30>
    32fe:	e015      	b.n	332c <gpio_dir+0x44>
    3300:	9b01      	ldr	r3, [sp, #4]
    3302:	689b      	ldr	r3, [r3, #8]
    3304:	9a01      	ldr	r2, [sp, #4]
    3306:	6892      	ldr	r2, [r2, #8]
    3308:	6811      	ldr	r1, [r2, #0]
    330a:	9a01      	ldr	r2, [sp, #4]
    330c:	6852      	ldr	r2, [r2, #4]
    330e:	ea6f 0202 	mvn.w	r2, r2
    3312:	400a      	ands	r2, r1
    3314:	601a      	str	r2, [r3, #0]
    3316:	e009      	b.n	332c <gpio_dir+0x44>
    3318:	9b01      	ldr	r3, [sp, #4]
    331a:	689b      	ldr	r3, [r3, #8]
    331c:	9a01      	ldr	r2, [sp, #4]
    331e:	6892      	ldr	r2, [r2, #8]
    3320:	6811      	ldr	r1, [r2, #0]
    3322:	9a01      	ldr	r2, [sp, #4]
    3324:	6852      	ldr	r2, [r2, #4]
    3326:	430a      	orrs	r2, r1
    3328:	601a      	str	r2, [r3, #0]
    332a:	bf00      	nop
    332c:	b002      	add	sp, #8
    332e:	4770      	bx	lr

00003330 <NVIC_EnableIRQ>:
    3330:	b082      	sub	sp, #8
    3332:	4603      	mov	r3, r0
    3334:	f88d 3007 	strb.w	r3, [sp, #7]
    3338:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    333c:	f2ce 0300 	movt	r3, #57344	; 0xe000
    3340:	f99d 2007 	ldrsb.w	r2, [sp, #7]
    3344:	ea4f 1252 	mov.w	r2, r2, lsr #5
    3348:	f89d 1007 	ldrb.w	r1, [sp, #7]
    334c:	f001 011f 	and.w	r1, r1, #31
    3350:	f04f 0001 	mov.w	r0, #1
    3354:	fa00 f101 	lsl.w	r1, r0, r1
    3358:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    335c:	b002      	add	sp, #8
    335e:	4770      	bx	lr

00003360 <us_ticker_init>:
    3360:	b500      	push	{lr}
    3362:	b083      	sub	sp, #12
    3364:	f240 1340 	movw	r3, #320	; 0x140
    3368:	f2c1 0300 	movt	r3, #4096	; 0x1000
    336c:	681b      	ldr	r3, [r3, #0]
    336e:	2b00      	cmp	r3, #0
    3370:	d151      	bne.n	3416 <us_ticker_init+0xb6>
    3372:	f240 1340 	movw	r3, #320	; 0x140
    3376:	f2c1 0300 	movt	r3, #4096	; 0x1000
    337a:	f04f 0201 	mov.w	r2, #1
    337e:	601a      	str	r2, [r3, #0]
    3380:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    3384:	f2c4 030f 	movt	r3, #16399	; 0x400f
    3388:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    338c:	f2c4 020f 	movt	r2, #16399	; 0x400f
    3390:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    3394:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
    3398:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    339c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    33a0:	f2c4 0309 	movt	r3, #16393	; 0x4009
    33a4:	f04f 0200 	mov.w	r2, #0
    33a8:	671a      	str	r2, [r3, #112]	; 0x70
    33aa:	f240 03c8 	movw	r3, #200	; 0xc8
    33ae:	f2c1 0300 	movt	r3, #4096	; 0x1000
    33b2:	681b      	ldr	r3, [r3, #0]
    33b4:	ea4f 0393 	mov.w	r3, r3, lsr #2
    33b8:	9301      	str	r3, [sp, #4]
    33ba:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    33be:	f2c4 0309 	movt	r3, #16393	; 0x4009
    33c2:	f04f 0202 	mov.w	r2, #2
    33c6:	605a      	str	r2, [r3, #4]
    33c8:	9a01      	ldr	r2, [sp, #4]
    33ca:	f64d 6383 	movw	r3, #56963	; 0xde83
    33ce:	f2c4 331b 	movt	r3, #17179	; 0x431b
    33d2:	fba3 1302 	umull	r1, r3, r3, r2
    33d6:	ea4f 4393 	mov.w	r3, r3, lsr #18
    33da:	9300      	str	r3, [sp, #0]
    33dc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    33e0:	f2c4 0309 	movt	r3, #16393	; 0x4009
    33e4:	9a00      	ldr	r2, [sp, #0]
    33e6:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
    33ea:	60da      	str	r2, [r3, #12]
    33ec:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    33f0:	f2c4 0309 	movt	r3, #16393	; 0x4009
    33f4:	f04f 0201 	mov.w	r2, #1
    33f8:	605a      	str	r2, [r3, #4]
    33fa:	f243 4399 	movw	r3, #13465	; 0x3499
    33fe:	f2c0 0300 	movt	r3, #0
    3402:	f04f 0004 	mov.w	r0, #4
    3406:	4619      	mov	r1, r3
    3408:	f7ff fc24 	bl	2c54 <NVIC_SetVector>
    340c:	f04f 0004 	mov.w	r0, #4
    3410:	f7ff ff8e 	bl	3330 <NVIC_EnableIRQ>
    3414:	e000      	b.n	3418 <us_ticker_init+0xb8>
    3416:	bf00      	nop
    3418:	b003      	add	sp, #12
    341a:	bd00      	pop	{pc}

0000341c <us_ticker_read>:
    341c:	b508      	push	{r3, lr}
    341e:	f240 1340 	movw	r3, #320	; 0x140
    3422:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3426:	681b      	ldr	r3, [r3, #0]
    3428:	2b00      	cmp	r3, #0
    342a:	d101      	bne.n	3430 <us_ticker_read+0x14>
    342c:	f7ff ff98 	bl	3360 <us_ticker_init>
    3430:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3434:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3438:	689b      	ldr	r3, [r3, #8]
    343a:	4618      	mov	r0, r3
    343c:	bd08      	pop	{r3, pc}
    343e:	bf00      	nop

00003440 <us_ticker_set_interrupt>:
    3440:	b082      	sub	sp, #8
    3442:	9001      	str	r0, [sp, #4]
    3444:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3448:	f2c4 0309 	movt	r3, #16393	; 0x4009
    344c:	9a01      	ldr	r2, [sp, #4]
    344e:	619a      	str	r2, [r3, #24]
    3450:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3454:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3458:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    345c:	f2c4 0209 	movt	r2, #16393	; 0x4009
    3460:	6952      	ldr	r2, [r2, #20]
    3462:	f042 0201 	orr.w	r2, r2, #1
    3466:	615a      	str	r2, [r3, #20]
    3468:	b002      	add	sp, #8
    346a:	4770      	bx	lr

0000346c <us_ticker_disable_interrupt>:
    346c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3470:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3474:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    3478:	f2c4 0209 	movt	r2, #16393	; 0x4009
    347c:	6952      	ldr	r2, [r2, #20]
    347e:	f022 0201 	bic.w	r2, r2, #1
    3482:	615a      	str	r2, [r3, #20]
    3484:	4770      	bx	lr
    3486:	bf00      	nop

00003488 <us_ticker_clear_interrupt>:
    3488:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    348c:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3490:	f04f 0201 	mov.w	r2, #1
    3494:	601a      	str	r2, [r3, #0]
    3496:	4770      	bx	lr

00003498 <us_ticker_irq_handler>:
    3498:	b510      	push	{r4, lr}
    349a:	b082      	sub	sp, #8
    349c:	f7ff fff4 	bl	3488 <us_ticker_clear_interrupt>
    34a0:	e000      	b.n	34a4 <us_ticker_irq_handler+0xc>
    34a2:	bf00      	nop
    34a4:	f240 1348 	movw	r3, #328	; 0x148
    34a8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    34ac:	681b      	ldr	r3, [r3, #0]
    34ae:	2b00      	cmp	r3, #0
    34b0:	d102      	bne.n	34b8 <us_ticker_irq_handler+0x20>
    34b2:	f7ff ffdb 	bl	346c <us_ticker_disable_interrupt>
    34b6:	e037      	b.n	3528 <us_ticker_irq_handler+0x90>
    34b8:	f240 1348 	movw	r3, #328	; 0x148
    34bc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    34c0:	681b      	ldr	r3, [r3, #0]
    34c2:	681c      	ldr	r4, [r3, #0]
    34c4:	f7ff ffaa 	bl	341c <us_ticker_read>
    34c8:	4603      	mov	r3, r0
    34ca:	1ae3      	subs	r3, r4, r3
    34cc:	2b00      	cmp	r3, #0
    34ce:	dc21      	bgt.n	3514 <us_ticker_irq_handler+0x7c>
    34d0:	f240 1348 	movw	r3, #328	; 0x148
    34d4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    34d8:	681b      	ldr	r3, [r3, #0]
    34da:	9301      	str	r3, [sp, #4]
    34dc:	f240 1348 	movw	r3, #328	; 0x148
    34e0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    34e4:	681b      	ldr	r3, [r3, #0]
    34e6:	689a      	ldr	r2, [r3, #8]
    34e8:	f240 1348 	movw	r3, #328	; 0x148
    34ec:	f2c1 0300 	movt	r3, #4096	; 0x1000
    34f0:	601a      	str	r2, [r3, #0]
    34f2:	f240 1344 	movw	r3, #324	; 0x144
    34f6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    34fa:	681b      	ldr	r3, [r3, #0]
    34fc:	2b00      	cmp	r3, #0
    34fe:	d0d0      	beq.n	34a2 <us_ticker_irq_handler+0xa>
    3500:	f240 1344 	movw	r3, #324	; 0x144
    3504:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3508:	681b      	ldr	r3, [r3, #0]
    350a:	9a01      	ldr	r2, [sp, #4]
    350c:	6852      	ldr	r2, [r2, #4]
    350e:	4610      	mov	r0, r2
    3510:	4798      	blx	r3
    3512:	e7c6      	b.n	34a2 <us_ticker_irq_handler+0xa>
    3514:	f240 1348 	movw	r3, #328	; 0x148
    3518:	f2c1 0300 	movt	r3, #4096	; 0x1000
    351c:	681b      	ldr	r3, [r3, #0]
    351e:	681b      	ldr	r3, [r3, #0]
    3520:	4618      	mov	r0, r3
    3522:	f7ff ff8d 	bl	3440 <us_ticker_set_interrupt>
    3526:	bf00      	nop
    3528:	b002      	add	sp, #8
    352a:	bd10      	pop	{r4, pc}

0000352c <__libc_init_array>:
    352c:	b538      	push	{r3, r4, r5, lr}
    352e:	4d0e      	ldr	r5, [pc, #56]	; (3568 <__libc_init_array+0x3c>)
    3530:	4b0e      	ldr	r3, [pc, #56]	; (356c <__libc_init_array+0x40>)
    3532:	2400      	movs	r4, #0
    3534:	1ae8      	subs	r0, r5, r3
    3536:	1085      	asrs	r5, r0, #2
    3538:	42ac      	cmp	r4, r5
    353a:	d005      	beq.n	3548 <__libc_init_array+0x1c>
    353c:	490b      	ldr	r1, [pc, #44]	; (356c <__libc_init_array+0x40>)
    353e:	f851 2024 	ldr.w	r2, [r1, r4, lsl #2]
    3542:	4790      	blx	r2
    3544:	3401      	adds	r4, #1
    3546:	e7f7      	b.n	3538 <__libc_init_array+0xc>
    3548:	f000 f868 	bl	361c <_init>
    354c:	4908      	ldr	r1, [pc, #32]	; (3570 <__libc_init_array+0x44>)
    354e:	4a09      	ldr	r2, [pc, #36]	; (3574 <__libc_init_array+0x48>)
    3550:	1a54      	subs	r4, r2, r1
    3552:	10a5      	asrs	r5, r4, #2
    3554:	2400      	movs	r4, #0
    3556:	42ac      	cmp	r4, r5
    3558:	d005      	beq.n	3566 <__libc_init_array+0x3a>
    355a:	4b05      	ldr	r3, [pc, #20]	; (3570 <__libc_init_array+0x44>)
    355c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    3560:	4780      	blx	r0
    3562:	3401      	adds	r4, #1
    3564:	e7f7      	b.n	3556 <__libc_init_array+0x2a>
    3566:	bd38      	pop	{r3, r4, r5, pc}
    3568:	100000cc 	.word	0x100000cc
    356c:	100000cc 	.word	0x100000cc
    3570:	100000cc 	.word	0x100000cc
    3574:	100000d0 	.word	0x100000d0

00003578 <memcpy>:
    3578:	b510      	push	{r4, lr}
    357a:	2300      	movs	r3, #0
    357c:	4293      	cmp	r3, r2
    357e:	d003      	beq.n	3588 <memcpy+0x10>
    3580:	5ccc      	ldrb	r4, [r1, r3]
    3582:	54c4      	strb	r4, [r0, r3]
    3584:	3301      	adds	r3, #1
    3586:	e7f9      	b.n	357c <memcpy+0x4>
    3588:	bd10      	pop	{r4, pc}

0000358a <memset>:
    358a:	1882      	adds	r2, r0, r2
    358c:	4603      	mov	r3, r0
    358e:	4293      	cmp	r3, r2
    3590:	d002      	beq.n	3598 <memset+0xe>
    3592:	f803 1b01 	strb.w	r1, [r3], #1
    3596:	e7fa      	b.n	358e <memset+0x4>
    3598:	4770      	bx	lr

0000359a <strcmp>:
    359a:	f810 2b01 	ldrb.w	r2, [r0], #1
    359e:	f811 3b01 	ldrb.w	r3, [r1], #1
    35a2:	2a01      	cmp	r2, #1
    35a4:	bf28      	it	cs
    35a6:	429a      	cmpcs	r2, r3
    35a8:	d0f7      	beq.n	359a <strcmp>
    35aa:	eba2 0003 	sub.w	r0, r2, r3
    35ae:	4770      	bx	lr

000035b0 <strlen>:
    35b0:	4603      	mov	r3, r0
    35b2:	f813 2b01 	ldrb.w	r2, [r3], #1
    35b6:	2a00      	cmp	r2, #0
    35b8:	d1fb      	bne.n	35b2 <strlen+0x2>
    35ba:	1a18      	subs	r0, r3, r0
    35bc:	3801      	subs	r0, #1
    35be:	4770      	bx	lr

000035c0 <strncmp>:
    35c0:	b570      	push	{r4, r5, r6, lr}
    35c2:	b192      	cbz	r2, 35ea <strncmp+0x2a>
    35c4:	460b      	mov	r3, r1
    35c6:	4605      	mov	r5, r0
    35c8:	b91a      	cbnz	r2, 35d2 <strncmp+0x12>
    35ca:	7828      	ldrb	r0, [r5, #0]
    35cc:	7819      	ldrb	r1, [r3, #0]
    35ce:	1a40      	subs	r0, r0, r1
    35d0:	bd70      	pop	{r4, r5, r6, pc}
    35d2:	f810 6b01 	ldrb.w	r6, [r0], #1
    35d6:	781c      	ldrb	r4, [r3, #0]
    35d8:	3101      	adds	r1, #1
    35da:	42b4      	cmp	r4, r6
    35dc:	d1f5      	bne.n	35ca <strncmp+0xa>
    35de:	2a01      	cmp	r2, #1
    35e0:	d0f3      	beq.n	35ca <strncmp+0xa>
    35e2:	3a01      	subs	r2, #1
    35e4:	2c00      	cmp	r4, #0
    35e6:	d1ed      	bne.n	35c4 <strncmp+0x4>
    35e8:	e7ef      	b.n	35ca <strncmp+0xa>
    35ea:	4610      	mov	r0, r2
    35ec:	bd70      	pop	{r4, r5, r6, pc}

000035ee <strstr>:
    35ee:	b530      	push	{r4, r5, lr}
    35f0:	7803      	ldrb	r3, [r0, #0]
    35f2:	b10b      	cbz	r3, 35f8 <strstr+0xa>
    35f4:	4602      	mov	r2, r0
    35f6:	e003      	b.n	3600 <strstr+0x12>
    35f8:	7809      	ldrb	r1, [r1, #0]
    35fa:	b171      	cbz	r1, 361a <strstr+0x2c>
    35fc:	2000      	movs	r0, #0
    35fe:	bd30      	pop	{r4, r5, pc}
    3600:	4610      	mov	r0, r2
    3602:	7803      	ldrb	r3, [r0, #0]
    3604:	3201      	adds	r2, #1
    3606:	2b00      	cmp	r3, #0
    3608:	d0f8      	beq.n	35fc <strstr+0xe>
    360a:	2300      	movs	r3, #0
    360c:	5ccc      	ldrb	r4, [r1, r3]
    360e:	b124      	cbz	r4, 361a <strstr+0x2c>
    3610:	5cc5      	ldrb	r5, [r0, r3]
    3612:	42a5      	cmp	r5, r4
    3614:	d1f4      	bne.n	3600 <strstr+0x12>
    3616:	3301      	adds	r3, #1
    3618:	e7f8      	b.n	360c <strstr+0x1e>
    361a:	bd30      	pop	{r4, r5, pc}

0000361c <_init>:
    361c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    361e:	bf00      	nop
    3620:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3622:	bc08      	pop	{r3}
    3624:	469e      	mov	lr, r3
    3626:	4770      	bx	lr

00003628 <_fini>:
    3628:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    362a:	bf00      	nop
    362c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    362e:	bc08      	pop	{r3}
    3630:	469e      	mov	lr, r3
    3632:	4770      	bx	lr
    3634:	5f49524d 	.word	0x5f49524d
    3638:	54524155 	.word	0x54524155
    363c:	45424d5f 	.word	0x45424d5f
    3640:	53555f44 	.word	0x53555f44
    3644:	00000042 	.word	0x00000042
    3648:	00343045 	.word	0x00343045

0000364c <commandTable.5680>:
    364c:	0000287d 0000003f 00002261 00000063     }(..?...a"..c...
    365c:	0000253d 00000046 000028a5 00000067     =%..F....(..g...
    366c:	000028b5 00000047 00002591 0000006d     .(..G....%..m...
    367c:	000025cd 0000004d 00002779 00000071     .%..M...y'..q...
    368c:	000028e1 00000073 00002625 00000058     .(..s...%&..X...
    369c:	00002169 0000007a 000020fd 0000005a     i!..z.... ..Z...

000036ac <NibbleToHexChar>:
    36ac:	33323130 37363534 62613938 66656463     0123456789abcdef
    36bc:	3c000920                                          ..

000036bf <g_targetXml>:
    36bf:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    36cf:	3f22302e 213c0a3e 54434f44 20455059     .0"?>.<!DOCTYPE 
    36df:	74616566 20657275 54535953 22204d45     feature SYSTEM "
    36ef:	2d626467 67726174 642e7465 3e226474     gdb-target.dtd">
    36ff:	61743c0a 74656772 663c0a3e 75746165     .<target>.<featu
    370f:	6e206572 3d656d61 67726f22 756e672e     re name="org.gnu
    371f:	6264672e 6d72612e 702d6d2e 69666f72     .gdb.arm.m-profi
    372f:	3e22656c 65723c0a 616e2067 223d656d     le">.<reg name="
    373f:	20223072 73746962 3d657a69 22323322     r0" bitsize="32"
    374f:	3c0a3e2f 20676572 656d616e 3172223d     />.<reg name="r1
    375f:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    376f:	65723c0a 616e2067 223d656d 20223272     .<reg name="r2" 
    377f:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    378f:	20676572 656d616e 3372223d 69622022     reg name="r3" bi
    379f:	7a697374 33223d65 3e2f2232 65723c0a     tsize="32"/>.<re
    37af:	616e2067 223d656d 20223472 73746962     g name="r4" bits
    37bf:	3d657a69 22323322 3c0a3e2f 20676572     ize="32"/>.<reg 
    37cf:	656d616e 3572223d 69622022 7a697374     name="r5" bitsiz
    37df:	33223d65 3e2f2232 65723c0a 616e2067     e="32"/>.<reg na
    37ef:	223d656d 20223672 73746962 3d657a69     me="r6" bitsize=
    37ff:	22323322 3c0a3e2f 20676572 656d616e     "32"/>.<reg name
    380f:	3772223d 69622022 7a697374 33223d65     ="r7" bitsize="3
    381f:	3e2f2232 65723c0a 616e2067 223d656d     2"/>.<reg name="
    382f:	20223872 73746962 3d657a69 22323322     r8" bitsize="32"
    383f:	3c0a3e2f 20676572 656d616e 3972223d     />.<reg name="r9
    384f:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    385f:	65723c0a 616e2067 223d656d 22303172     .<reg name="r10"
    386f:	74696220 657a6973 3233223d 0a3e2f22      bitsize="32"/>.
    387f:	6765723c 6d616e20 72223d65 20223131     <reg name="r11" 
    388f:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    389f:	20676572 656d616e 3172223d 62202232     reg name="r12" b
    38af:	69737469 223d657a 2f223233 723c0a3e     itsize="32"/>.<r
    38bf:	6e206765 3d656d61 22707322 74696220     eg name="sp" bit
    38cf:	657a6973 3233223d 79742022 223d6570     size="32" type="
    38df:	61746164 7274705f 0a3e2f22 6765723c     data_ptr"/>.<reg
    38ef:	6d616e20 6c223d65 62202272 69737469      name="lr" bitsi
    38ff:	223d657a 2f223233 723c0a3e 6e206765     ze="32"/>.<reg n
    390f:	3d656d61 22637022 74696220 657a6973     ame="pc" bitsize
    391f:	3233223d 79742022 223d6570 65646f63     ="32" type="code
    392f:	7274705f 0a3e2f22 6765723c 6d616e20     _ptr"/>.<reg nam
    393f:	78223d65 22727370 74696220 657a6973     e="xpsr" bitsize
    394f:	3233223d 65722022 6d756e67 3532223d     ="32" regnum="25
    395f:	0a3e2f22 65662f3c 72757461 3c0a3e65     "/>.</feature>.<
    396f:	7261742f 3e746567 0000000a addead00              /target>.....

0000397c <__mriCortexMFakeStack>:
    397c:	deaddead deaddead deaddead deaddead     ................
    398c:	deaddead deaddead deaddead deaddead     ................
    399c:	4d2a2a0a 46205550 746c7561 0a002a2a     .**MPU Fault**..
    39ac:	74532020 73757461 67655220 65747369       Status Registe
    39bc:	00203a72 2020200a 75614620 4120746c     r: ..    Fault A
    39cc:	65726464 203a7373 20200a00 50462020     ddress: ..    FP
    39dc:	7a614c20 72502079 72657365 69746176      Lazy Preservati
    39ec:	0a006e6f 20202020 63617453 676e696b     on..    Stacking
    39fc:	72724520 7720726f 5053202f 00203d20      Error w/ SP = .
    3a0c:	2020200a 736e5520 6b636174 20676e69     .    Unstacking 
    3a1c:	6f727245 2f772072 20505320 0a00203d     Error w/ SP = ..
    3a2c:	20202020 61746144 63634120 00737365         Data Access.
    3a3c:	2020200a 736e4920 63757274 6e6f6974     .    Instruction
    3a4c:	74654620 0a006863 75422a2a 61462073      Fetch..**Bus Fa
    3a5c:	2a746c75 200a002a 49202020 6572706d     ult**..    Impre
    3a6c:	65736963 74614420 63412061 73736563     cise Data Access
    3a7c:	20200a00 72502020 73696365 61442065     ..    Precise Da
    3a8c:	41206174 73656363 200a0073 49202020     ta Access..    I
    3a9c:	7274736e 69746375 50206e6f 65666572     nstruction Prefe
    3aac:	00686374 552a2a0a 65676173 75614620     tch..**Usage Fau
    3abc:	2a2a746c 20200a00 69442020 65646976     lt**..    Divide
    3acc:	20796220 6f72655a 20200a00 6e552020      by Zero..    Un
    3adc:	67696c61 2064656e 65636341 0a007373     aligned Access..
    3aec:	20202020 72706f43 7365636f 20726f73         Coprocessor 
    3afc:	65636341 0a007373 20202020 61766e49     Access..    Inva
    3b0c:	2064696c 65637845 6f697470 6552206e     lid Exception Re
    3b1c:	6e727574 61745320 0a006574 20202020     turn State..    
    3b2c:	61766e49 2064696c 74617453 200a0065     Invalid State.. 
    3b3c:	55202020 6665646e 64656e69 736e4920        Undefined Ins
    3b4c:	63757274 6e6f6974 2a2a0a00 64726148     truction..**Hard
    3b5c:	75614620 2a2a746c 20200a00 65442020      Fault**..    De
    3b6c:	20677562 6e657645 200a0074 56202020     bug Event..    V
    3b7c:	6f746365 61542072 20656c62 64616552     ector Table Read
    3b8c:	20200a00 6f462020 64656372 00000a00     ..    Forced....

00003b9c <debugEventToSignalMap.7056>:
    3b9c:	00000010 00000011 00000004 00000005     ................
    3bac:	00000002 00000005 00000001 00000005     ................

00003bbc <CSWTCH.128>:
    3bbc:	00070506                                ....

00003bc0 <g_uartConfigurations>:
    3bc0:	400fc1a8 4002c000 4002c000 4000c000     ...@...@...@...@
    3bd0:	00000008 000000c0 00000030 000000c0     ........0.......
    3be0:	55555555 400fc1a8 4002c000 4002c004     UUUU...@...@...@
    3bf0:	40010000 00000010 00000300 c0000000     ...@............
    3c00:	00000003 55555555 400fc1ac 4002c000     ....UUUU...@...@
    3c10:	4002c000 40098000 01000000 00030000     ...@...@........
    3c20:	00300000 00c00000 55555555 400fc1ac     ..0.....UUUU...@
    3c30:	4002c000 4002c000 4009c000 02000000     ...@...@...@....
    3c40:	000c0000 00000003 0000000c aaaaaaaa     ................
    3c50:	5f49524d 54524155 45424d5f 53555f44     MRI_UART_MBED_US
    3c60:	524d0042 41555f49 4d5f5452 5f444542     B.MRI_UART_MBED_
    3c70:	505f3950 4d003031 555f4952 5f545241     P9_P10.MRI_UART_
    3c80:	4445424d 3331505f 3431505f 49524d00     MBED_P13_P14.MRI
    3c90:	5241555f 424d5f54 505f4445 505f3832     _UART_MBED_P28_P
    3ca0:	4d003732 555f4952 5f545241 524d0030     27.MRI_UART_0.MR
    3cb0:	41555f49 315f5452 49524d00 5241555f     I_UART_1.MRI_UAR
    3cc0:	00325f54 5f49524d 54524155 4d00335f     T_2.MRI_UART_3.M
    3cd0:	555f4952 5f545241 52414853 524d0045              RI_UART_SHARE.

00003cde <baudRatePrefix.7379>:
    3cde:	5f49524d 54524155 5541425f 31003d44     MRI_UART_BAUD=.1
    3cee:	30303130 30303030 30303030 30303030     0100000000000000
    3cfe:	30303030 46323030 30304637 00303030     0000002F7F00000.
    3d0e:	30000000                                         ...

00003d11 <NibbleToHexChar>:
    3d11:	33323130 37363534 62613938 66656463     0123456789abcdef
    3d21:	00313045 00353045 46004b4f                       E01.E05.OK.

00003d2c <gdbUnlinkCommand.4679>:
    3d2c:	6c6e7546 2c6b6e69 6c634600                       Funlink,.

00003d35 <gdbCloseCommand.4663>:
    3d35:	6f6c6346 002c6573                       Fclose,.

00003d3d <gdbCommand.4689>:
    3d3d:	6e657246 2c656d61 72774600                       Frename,.

00003d46 <gdbWriteCommand.4653>:
    3d46:	69727746 002c6574                       Fwrite,.

00003d4e <gdbOpenCommand.4648>:
    3d4e:	65706f46 46002c6e                                Fopen,.

00003d55 <gdbStatCommand.4674>:
    3d55:	74736646 002c7461                       Ffstat,.

00003d5d <controlCFlag.4694>:
    3d5d:	4600432c                                         ,C.

00003d60 <gdbReadCommand.4658>:
    3d60:	61657246 46002c64                                Fread,.

00003d67 <gdbSeekCommand.4668>:
    3d67:	65736c46 002c6b65                       Flseek,.

00003d6f <gdbStatCommand.4684>:
    3d6f:	61747346 45002c74 72003330                       Fstat,.E03.

00003d7a <readCommand.4768>:
    3d7a:	64616572 65665800                                read.

00003d7f <qXferCommand.4745>:
    3d7f:	72656658 70755300                                Xfer.

00003d84 <qSupportedCommand.4744>:
    3d84:	70707553 6574726f 61740064                       Supported.

00003d8e <targetXmlAnnex.4773>:
    3d8e:	67726174 782e7465 74006c6d 65677261     target.xml.targe
    3d9e:	6d782e74 5871006c                                t.xml.

00003da4 <querySupportResponse.4749>:
    3da4:	65665871 656d3a72 79726f6d 70616d2d     qXfer:memory-map
    3db4:	6165723a 713b2b64 72656658 6165663a     :read+;qXfer:fea
    3dc4:	65727574 65723a73 3b2b6461 6b636150     tures:read+;Pack
    3dd4:	69537465 003d657a                       etSize=.

00003ddc <featureObject.4757>:
    3ddc:	74616566 73657275 6d656d00                       features.

00003de5 <memoryMapObject.4756>:
    3de5:	6f6d656d 6d2d7972 30007061 3f3c0078              memory-map.0x.

00003df3 <g_memoryMapXml>:
    3df3:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    3e03:	3f22302e 44213c3e 5954434f 6d204550     .0"?><!DOCTYPE m
    3e13:	726f6d65 616d2d79 55502070 43494c42     emory-map PUBLIC
    3e23:	2f2b2220 4e44492f 756e6720 67726f2e      "+//IDN gnu.org
    3e33:	54442f2f 44472044 654d2042 79726f6d     //DTD GDB Memory
    3e43:	70614d20 2e315620 452f2f30 2220224e      Map V1.0//EN" "
    3e53:	70747468 732f2f3a 6372756f 72617765     http://sourcewar
    3e63:	726f2e65 64672f67 64672f62 656d2d62     e.org/gdb/gdb-me
    3e73:	79726f6d 70616d2d 6474642e 6d3c3e22     mory-map.dtd"><m
    3e83:	726f6d65 616d2d79 6d3c3e70 726f6d65     emory-map><memor
    3e93:	79742079 223d6570 73616c66 73202268     y type="flash" s
    3ea3:	74726174 7830223d 6c202230 74676e65     tart="0x0" lengt
    3eb3:	30223d68 30303178 3e223030 72703c20     h="0x10000"> <pr
    3ec3:	7265706f 6e207974 3d656d61 6f6c6222     operty name="blo
    3ed3:	69736b63 3e22657a 30317830 2f3c3030     cksize">0x1000</
    3ee3:	706f7270 79747265 6d2f3c3e 726f6d65     property></memor
    3ef3:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    3f03:	73616c66 73202268 74726174 7830223d     flash" start="0x
    3f13:	30303031 6c202230 74676e65 30223d68     10000" length="0
    3f23:	30303778 3e223030 72703c20 7265706f     x70000"> <proper
    3f33:	6e207974 3d656d61 6f6c6222 69736b63     ty name="blocksi
    3f43:	3e22657a 30387830 2f3c3030 706f7270     ze">0x8000</prop
    3f53:	79747265 6d2f3c3e 726f6d65 6d3c3e79     erty></memory><m
    3f63:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3f73:	61747320 223d7472 30317830 30303030      start="0x100000
    3f83:	20223030 676e656c 223d6874 30387830     00" length="0x80
    3f93:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3fa3:	726f6d65 79742079 223d6570 226d6f72     emory type="rom"
    3fb3:	61747320 223d7472 46317830 30304646      start="0x1FFF00
    3fc3:	20223030 676e656c 223d6874 30327830     00" length="0x20
    3fd3:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3fe3:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3ff3:	61747320 223d7472 30327830 30433730      start="0x2007C0
    4003:	20223030 676e656c 223d6874 30387830     00" length="0x80
    4013:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    4023:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    4033:	61747320 223d7472 30327830 30433930      start="0x2009C0
    4043:	20223030 676e656c 223d6874 30347830     00" length="0x40
    4053:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    4063:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    4073:	61747320 223d7472 32327830 30303030      start="0x220000
    4083:	20223030 676e656c 223d6874 30327830     00" length="0x20
    4093:	30303030 203e2230 656d2f3c 79726f6d     00000"> </memory
    40a3:	656d3c3e 79726f6d 70797420 72223d65     ><memory type="r
    40b3:	20226d61 72617473 30223d74 30303478     am" start="0x400
    40c3:	30303030 6c202230 74676e65 30223d68     00000" length="0
    40d3:	30343178 3e223030 6d2f3c20 726f6d65     x14000"> </memor
    40e3:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    40f3:	226d6172 61747320 223d7472 30347830     ram" start="0x40
    4103:	30383130 20223030 676e656c 223d6874     018000" length="
    4113:	34337830 22303030 2f3c203e 6f6d656d     0x34000"> </memo
    4123:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    4133:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    4143:	43353030 22303030 6e656c20 3d687467     005C000" length=
    4153:	34783022 22303030 2f3c203e 6f6d656d     "0x4000"> </memo
    4163:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    4173:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    4183:	38383030 22303030 6e656c20 3d687467     0088000" length=
    4193:	31783022 30303043 3c203e22 6d656d2f     "0x1C000"> </mem
    41a3:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    41b3:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    41c3:	41303034 30303038 656c2022 6874676e     400A8000" length
    41d3:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    41e3:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    41f3:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    4203:	42303034 30303030 656c2022 6874676e     400B0000" length
    4213:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    4223:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    4233:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    4243:	42303034 30303038 656c2022 6874676e     400B8000" length
    4253:	7830223d 30303038 3c203e22 6d656d2f     ="0x8000"> </mem
    4263:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    4273:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    4283:	46303034 30303043 656c2022 6874676e     400FC000" length
    4293:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    42a3:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    42b3:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    42c3:	30303234 30303030 656c2022 6874676e     42000000" length
    42d3:	7830223d 30303032 22303030 2f3c203e     ="0x2000000"> </
    42e3:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    42f3:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    4303:	35783022 30303030 22303030 6e656c20     "0x50000000" len
    4313:	3d687467 38783022 22303030 2f3c203e     gth="0x8000"> </
    4323:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    4333:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    4343:	35783022 43303030 22303030 6e656c20     "0x5000C000" len
    4353:	3d687467 34783022 22303030 2f3c203e     gth="0x4000"> </
    4363:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    4373:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    4383:	45783022 30303030 22303030 6e656c20     "0xE0000000" len
    4393:	3d687467 31783022 30303030 203e2230     gth="0x100000"> 
    43a3:	656d2f3c 79726f6d 6d2f3c3e 726f6d65     </memory></memor
    43b3:	616d2d79 00003e70 00000000                       y-map>...

000043bc <__EH_FRAME_BEGIN__>:
    43bc:	00000000                                ....
