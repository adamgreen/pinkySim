
LPC1768/realarm.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00002d11


Disassembly of section .text:

00000000 <__isr_vector>:
       0:	10008000 	.word	0x10008000
       4:	00002d11 	.word	0x00002d11
       8:	00002d45 	.word	0x00002d45
       c:	00001b43 	.word	0x00001b43
      10:	00001b47 	.word	0x00001b47
      14:	00001b4b 	.word	0x00001b4b
      18:	00001b4f 	.word	0x00001b4f
	...
      2c:	00002d4f 	.word	0x00002d4f
      30:	00001b53 	.word	0x00001b53
      34:	00000000 	.word	0x00000000
      38:	00002d53 	.word	0x00002d53
      3c:	00002d55 	.word	0x00002d55
      40:	00002d59 	.word	0x00002d59
      44:	00002d5b 	.word	0x00002d5b
      48:	00002d5d 	.word	0x00002d5d
      4c:	00002d5f 	.word	0x00002d5f
      50:	00002d61 	.word	0x00002d61
      54:	00001b57 	.word	0x00001b57
      58:	00001b5b 	.word	0x00001b5b
      5c:	00001b5f 	.word	0x00001b5f
      60:	00001b63 	.word	0x00001b63
      64:	00002d6b 	.word	0x00002d6b
      68:	00002d6d 	.word	0x00002d6d
      6c:	00002d6f 	.word	0x00002d6f
      70:	00002d71 	.word	0x00002d71
      74:	00002d73 	.word	0x00002d73
      78:	00002d75 	.word	0x00002d75
      7c:	00002d77 	.word	0x00002d77
      80:	00002d79 	.word	0x00002d79
      84:	00002d7b 	.word	0x00002d7b
      88:	00002d7d 	.word	0x00002d7d
      8c:	00002d7f 	.word	0x00002d7f
      90:	00002d81 	.word	0x00002d81
      94:	00002d83 	.word	0x00002d83
      98:	00002d85 	.word	0x00002d85
      9c:	00002d87 	.word	0x00002d87
      a0:	00002d89 	.word	0x00002d89
      a4:	00002d8b 	.word	0x00002d8b
      a8:	00002d8d 	.word	0x00002d8d
      ac:	00002d8f 	.word	0x00002d8f
      b0:	00002d91 	.word	0x00002d91
      b4:	00002d93 	.word	0x00002d93
      b8:	00002d95 	.word	0x00002d95
      bc:	00002d97 	.word	0x00002d97
      c0:	00002d99 	.word	0x00002d99
      c4:	00002d9b 	.word	0x00002d9b
      c8:	00002d9d 	.word	0x00002d9d

000000cc <__do_global_dtors_aux>:
      cc:	b510      	push	{r4, lr}
      ce:	4c05      	ldr	r4, [pc, #20]	; (e4 <__do_global_dtors_aux+0x18>)
      d0:	7823      	ldrb	r3, [r4, #0]
      d2:	b933      	cbnz	r3, e2 <__do_global_dtors_aux+0x16>
      d4:	4804      	ldr	r0, [pc, #16]	; (e8 <__do_global_dtors_aux+0x1c>)
      d6:	b110      	cbz	r0, de <__do_global_dtors_aux+0x12>
      d8:	4804      	ldr	r0, [pc, #16]	; (ec <__do_global_dtors_aux+0x20>)
      da:	f3af 8000 	nop.w
      de:	2101      	movs	r1, #1
      e0:	7021      	strb	r1, [r4, #0]
      e2:	bd10      	pop	{r4, pc}
      e4:	10000168 	.word	0x10000168
      e8:	00000000 	.word	0x00000000
      ec:	0000416c 	.word	0x0000416c

000000f0 <frame_dummy>:
      f0:	b508      	push	{r3, lr}
      f2:	4b06      	ldr	r3, [pc, #24]	; (10c <frame_dummy+0x1c>)
      f4:	b11b      	cbz	r3, fe <frame_dummy+0xe>
      f6:	4806      	ldr	r0, [pc, #24]	; (110 <frame_dummy+0x20>)
      f8:	4906      	ldr	r1, [pc, #24]	; (114 <frame_dummy+0x24>)
      fa:	f3af 8000 	nop.w
      fe:	4806      	ldr	r0, [pc, #24]	; (118 <frame_dummy+0x28>)
     100:	6801      	ldr	r1, [r0, #0]
     102:	b111      	cbz	r1, 10a <frame_dummy+0x1a>
     104:	4a05      	ldr	r2, [pc, #20]	; (11c <frame_dummy+0x2c>)
     106:	b102      	cbz	r2, 10a <frame_dummy+0x1a>
     108:	4790      	blx	r2
     10a:	bd08      	pop	{r3, pc}
     10c:	00000000 	.word	0x00000000
     110:	0000416c 	.word	0x0000416c
     114:	1000016c 	.word	0x1000016c
     118:	10000164 	.word	0x10000164
     11c:	00000000 	.word	0x00000000

00000120 <getMPUDataRegionCount()>:
     120:	f64e 5390 	movw	r3, #60816	; 0xed90
     124:	f2ce 0300 	movt	r3, #57344	; 0xe000
     128:	681b      	ldr	r3, [r3, #0]
     12a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
     12e:	ea4f 2313 	mov.w	r3, r3, lsr #8
     132:	4618      	mov	r0, r3
     134:	4770      	bx	lr
     136:	bf00      	nop

00000138 <getHighestMPUDataRegionIndex()>:
     138:	b508      	push	{r3, lr}
     13a:	f7ff fff1 	bl	120 <getMPUDataRegionCount()>
     13e:	4603      	mov	r3, r0
     140:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
     144:	4618      	mov	r0, r3
     146:	bd08      	pop	{r3, pc}

00000148 <isMPURegionNumberValid(unsigned long)>:
     148:	b500      	push	{lr}
     14a:	b083      	sub	sp, #12
     14c:	9001      	str	r0, [sp, #4]
     14e:	f7ff ffe7 	bl	120 <getMPUDataRegionCount()>
     152:	4602      	mov	r2, r0
     154:	9b01      	ldr	r3, [sp, #4]
     156:	429a      	cmp	r2, r3
     158:	bf94      	ite	ls
     15a:	2300      	movls	r3, #0
     15c:	2301      	movhi	r3, #1
     15e:	b2db      	uxtb	r3, r3
     160:	4618      	mov	r0, r3
     162:	b003      	add	sp, #12
     164:	bd00      	pop	{pc}
     166:	bf00      	nop

00000168 <isMPUNotPresent()>:
     168:	b508      	push	{r3, lr}
     16a:	f7ff ffd9 	bl	120 <getMPUDataRegionCount()>
     16e:	4603      	mov	r3, r0
     170:	2b00      	cmp	r3, #0
     172:	bf14      	ite	ne
     174:	2300      	movne	r3, #0
     176:	2301      	moveq	r3, #1
     178:	b2db      	uxtb	r3, r3
     17a:	4618      	mov	r0, r3
     17c:	bd08      	pop	{r3, pc}
     17e:	bf00      	nop

00000180 <disableMPU()>:
     180:	b508      	push	{r3, lr}
     182:	f7ff fff1 	bl	168 <isMPUNotPresent()>
     186:	4603      	mov	r3, r0
     188:	2b00      	cmp	r3, #0
     18a:	bf0c      	ite	eq
     18c:	2300      	moveq	r3, #0
     18e:	2301      	movne	r3, #1
     190:	b2db      	uxtb	r3, r3
     192:	2b00      	cmp	r3, #0
     194:	d110      	bne.n	1b8 <disableMPU()+0x38>
     196:	f64e 5390 	movw	r3, #60816	; 0xed90
     19a:	f2ce 0300 	movt	r3, #57344	; 0xe000
     19e:	f64e 5290 	movw	r2, #60816	; 0xed90
     1a2:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1a6:	6852      	ldr	r2, [r2, #4]
     1a8:	f022 0201 	bic.w	r2, r2, #1
     1ac:	605a      	str	r2, [r3, #4]
     1ae:	f3bf 8f4f 	dsb	sy
     1b2:	f3bf 8f6f 	isb	sy
     1b6:	e000      	b.n	1ba <disableMPU()+0x3a>
     1b8:	bf00      	nop
     1ba:	bd08      	pop	{r3, pc}

000001bc <enableMPUWithHardAndNMIFaults()>:
     1bc:	b508      	push	{r3, lr}
     1be:	f7ff ffd3 	bl	168 <isMPUNotPresent()>
     1c2:	4603      	mov	r3, r0
     1c4:	2b00      	cmp	r3, #0
     1c6:	bf0c      	ite	eq
     1c8:	2300      	moveq	r3, #0
     1ca:	2301      	movne	r3, #1
     1cc:	b2db      	uxtb	r3, r3
     1ce:	2b00      	cmp	r3, #0
     1d0:	d110      	bne.n	1f4 <enableMPUWithHardAndNMIFaults()+0x38>
     1d2:	f64e 5390 	movw	r3, #60816	; 0xed90
     1d6:	f2ce 0300 	movt	r3, #57344	; 0xe000
     1da:	f64e 5290 	movw	r2, #60816	; 0xed90
     1de:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1e2:	6852      	ldr	r2, [r2, #4]
     1e4:	f042 0203 	orr.w	r2, r2, #3
     1e8:	605a      	str	r2, [r3, #4]
     1ea:	f3bf 8f4f 	dsb	sy
     1ee:	f3bf 8f6f 	isb	sy
     1f2:	e000      	b.n	1f6 <enableMPUWithHardAndNMIFaults()+0x3a>
     1f4:	bf00      	nop
     1f6:	bd08      	pop	{r3, pc}

000001f8 <prepareToAccessMPURegion(unsigned long)>:
     1f8:	b500      	push	{lr}
     1fa:	b083      	sub	sp, #12
     1fc:	9001      	str	r0, [sp, #4]
     1fe:	9801      	ldr	r0, [sp, #4]
     200:	f7ff ffa2 	bl	148 <isMPURegionNumberValid(unsigned long)>
     204:	4603      	mov	r3, r0
     206:	2b00      	cmp	r3, #0
     208:	bf14      	ite	ne
     20a:	2300      	movne	r3, #0
     20c:	2301      	moveq	r3, #1
     20e:	b2db      	uxtb	r3, r3
     210:	2b00      	cmp	r3, #0
     212:	d002      	beq.n	21a <prepareToAccessMPURegion(unsigned long)+0x22>
     214:	f04f 0300 	mov.w	r3, #0
     218:	e007      	b.n	22a <prepareToAccessMPURegion(unsigned long)+0x32>
     21a:	f64e 5390 	movw	r3, #60816	; 0xed90
     21e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     222:	9a01      	ldr	r2, [sp, #4]
     224:	609a      	str	r2, [r3, #8]
     226:	f04f 0301 	mov.w	r3, #1
     22a:	4618      	mov	r0, r3
     22c:	b003      	add	sp, #12
     22e:	bd00      	pop	{pc}

00000230 <setMPURegionAddress(unsigned long)>:
     230:	b500      	push	{lr}
     232:	b083      	sub	sp, #12
     234:	9001      	str	r0, [sp, #4]
     236:	f7ff ff97 	bl	168 <isMPUNotPresent()>
     23a:	4603      	mov	r3, r0
     23c:	2b00      	cmp	r3, #0
     23e:	bf0c      	ite	eq
     240:	2300      	moveq	r3, #0
     242:	2301      	movne	r3, #1
     244:	b2db      	uxtb	r3, r3
     246:	2b00      	cmp	r3, #0
     248:	d108      	bne.n	25c <setMPURegionAddress(unsigned long)+0x2c>
     24a:	f64e 5390 	movw	r3, #60816	; 0xed90
     24e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     252:	9a01      	ldr	r2, [sp, #4]
     254:	ea4f 1242 	mov.w	r2, r2, lsl #5
     258:	60da      	str	r2, [r3, #12]
     25a:	e000      	b.n	25e <setMPURegionAddress(unsigned long)+0x2e>
     25c:	bf00      	nop
     25e:	b003      	add	sp, #12
     260:	bd00      	pop	{pc}
     262:	bf00      	nop

00000264 <setMPURegionAttributeAndSize(unsigned long)>:
     264:	b500      	push	{lr}
     266:	b083      	sub	sp, #12
     268:	9001      	str	r0, [sp, #4]
     26a:	f7ff ff7d 	bl	168 <isMPUNotPresent()>
     26e:	4603      	mov	r3, r0
     270:	2b00      	cmp	r3, #0
     272:	bf0c      	ite	eq
     274:	2300      	moveq	r3, #0
     276:	2301      	movne	r3, #1
     278:	b2db      	uxtb	r3, r3
     27a:	2b00      	cmp	r3, #0
     27c:	d106      	bne.n	28c <setMPURegionAttributeAndSize(unsigned long)+0x28>
     27e:	f64e 5390 	movw	r3, #60816	; 0xed90
     282:	f2ce 0300 	movt	r3, #57344	; 0xe000
     286:	9a01      	ldr	r2, [sp, #4]
     288:	611a      	str	r2, [r3, #16]
     28a:	e000      	b.n	28e <setMPURegionAttributeAndSize(unsigned long)+0x2a>
     28c:	bf00      	nop
     28e:	b003      	add	sp, #12
     290:	bd00      	pop	{pc}
     292:	bf00      	nop

00000294 <attemptUnalignedAccess()>:
     294:	4770      	bx	lr
     296:	bf00      	nop

00000298 <attemptMemoryWriteFault()>:
     298:	4770      	bx	lr
     29a:	bf00      	nop

0000029c <disallowUnalignedAccesses()>:
     29c:	f44f 436d 	mov.w	r3, #60672	; 0xed00
     2a0:	f2ce 0300 	movt	r3, #57344	; 0xe000
     2a4:	f44f 426d 	mov.w	r2, #60672	; 0xed00
     2a8:	f2ce 0200 	movt	r2, #57344	; 0xe000
     2ac:	6952      	ldr	r2, [r2, #20]
     2ae:	f042 0208 	orr.w	r2, r2, #8
     2b2:	615a      	str	r2, [r3, #20]
     2b4:	4770      	bx	lr
     2b6:	bf00      	nop

000002b8 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>:
     2b8:	b508      	push	{r3, lr}
     2ba:	f7ff ff3d 	bl	138 <getHighestMPUDataRegionIndex()>
     2be:	4603      	mov	r3, r0
     2c0:	4618      	mov	r0, r3
     2c2:	f7ff ff99 	bl	1f8 <prepareToAccessMPURegion(unsigned long)>
     2c6:	f04f 0000 	mov.w	r0, #0
     2ca:	f7ff ffb1 	bl	230 <setMPURegionAddress(unsigned long)>
     2ce:	f04f 003f 	mov.w	r0, #63	; 0x3f
     2d2:	f2c0 1000 	movt	r0, #256	; 0x100
     2d6:	f7ff ffc5 	bl	264 <setMPURegionAttributeAndSize(unsigned long)>
     2da:	bd08      	pop	{r3, pc}

000002dc <disableWriteCaching()>:
     2dc:	b508      	push	{r3, lr}
     2de:	f7ff ff4f 	bl	180 <disableMPU()>
     2e2:	f7ff ffe9 	bl	2b8 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>
     2e6:	f7ff ff69 	bl	1bc <enableMPUWithHardAndNMIFaults()>
     2ea:	bd08      	pop	{r3, pc}

000002ec <main>:
     2ec:	b508      	push	{r3, lr}
     2ee:	f7ff ffd5 	bl	29c <disallowUnalignedAccesses()>
     2f2:	f7ff fff3 	bl	2dc <disableWriteCaching()>
     2f6:	f7ff ffcd 	bl	294 <attemptUnalignedAccess()>
     2fa:	f7ff ffcd 	bl	298 <attemptMemoryWriteFault()>
     2fe:	be00      	bkpt	0x0000
     300:	e7fd      	b.n	2fe <main+0x12>
     302:	bf00      	nop

00000304 <_start>:
     304:	b500      	push	{lr}
     306:	b083      	sub	sp, #12
     308:	f240 42ec 	movw	r2, #1260	; 0x4ec
     30c:	f2c1 0200 	movt	r2, #4096	; 0x1000
     310:	f240 1368 	movw	r3, #360	; 0x168
     314:	f2c1 0300 	movt	r3, #4096	; 0x1000
     318:	1ad3      	subs	r3, r2, r3
     31a:	9301      	str	r3, [sp, #4]
     31c:	9b01      	ldr	r3, [sp, #4]
     31e:	f240 1068 	movw	r0, #360	; 0x168
     322:	f2c1 0000 	movt	r0, #4096	; 0x1000
     326:	f04f 0100 	mov.w	r1, #0
     32a:	461a      	mov	r2, r3
     32c:	f003 f84f 	bl	33ce <memset>
     330:	f243 4078 	movw	r0, #13432	; 0x3478
     334:	f2c0 0000 	movt	r0, #0
     338:	f000 f80e 	bl	358 <__mriInit>
     33c:	f3af 8000 	nop.w
     340:	f003 f816 	bl	3370 <__libc_init_array>
     344:	f7ff ffd2 	bl	2ec <main>
     348:	9000      	str	r0, [sp, #0]
     34a:	9800      	ldr	r0, [sp, #0]
     34c:	f002 fcae 	bl	2cac <exit>

00000350 <__wrap_semihost_connected>:
     350:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     354:	4618      	mov	r0, r3
     356:	4770      	bx	lr

00000358 <__mriInit>:
     358:	b570      	push	{r4, r5, r6, lr}
     35a:	2100      	movs	r1, #0
     35c:	b09e      	sub	sp, #120	; 0x78
     35e:	2224      	movs	r2, #36	; 0x24
     360:	4606      	mov	r6, r0
     362:	480f      	ldr	r0, [pc, #60]	; (3a0 <__mriInit+0x48>)
     364:	f003 f833 	bl	33ce <memset>
     368:	4c0e      	ldr	r4, [pc, #56]	; (3a4 <__mriInit+0x4c>)
     36a:	480d      	ldr	r0, [pc, #52]	; (3a0 <__mriInit+0x48>)
     36c:	f000 f95a 	bl	624 <__mriPacket_Init>
     370:	2500      	movs	r5, #0
     372:	a801      	add	r0, sp, #4
     374:	6025      	str	r5, [r4, #0]
     376:	f000 f9eb 	bl	750 <__mriToken_Init>
     37a:	a801      	add	r0, sp, #4
     37c:	4631      	mov	r1, r6
     37e:	6025      	str	r5, [r4, #0]
     380:	f000 f9f0 	bl	764 <__mriToken_SplitString>
     384:	6823      	ldr	r3, [r4, #0]
     386:	b913      	cbnz	r3, 38e <__mriInit+0x36>
     388:	a801      	add	r0, sp, #4
     38a:	f001 f9a1 	bl	16d0 <__mriPlatform_Init>
     38e:	6820      	ldr	r0, [r4, #0]
     390:	b920      	cbnz	r0, 39c <__mriInit+0x44>
     392:	4903      	ldr	r1, [pc, #12]	; (3a0 <__mriInit+0x48>)
     394:	694a      	ldr	r2, [r1, #20]
     396:	f042 0303 	orr.w	r3, r2, #3
     39a:	614b      	str	r3, [r1, #20]
     39c:	b01e      	add	sp, #120	; 0x78
     39e:	bd70      	pop	{r4, r5, r6, pc}
     3a0:	10000184 	.word	0x10000184
     3a4:	100001dc 	.word	0x100001dc

000003a8 <__mriCore_InitBuffer>:
     3a8:	b510      	push	{r4, lr}
     3aa:	f000 fc95 	bl	cd8 <__mriPlatform_GetPacketBuffer>
     3ae:	4604      	mov	r4, r0
     3b0:	f000 fc96 	bl	ce0 <__mriPlatform_GetPacketBufferSize>
     3b4:	4602      	mov	r2, r0
     3b6:	4803      	ldr	r0, [pc, #12]	; (3c4 <__mriCore_InitBuffer+0x1c>)
     3b8:	4621      	mov	r1, r4
     3ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3be:	f001 bc2d 	b.w	1c1c <__mriBuffer_Init>
     3c2:	bf00      	nop
     3c4:	1000018c 	.word	0x1000018c

000003c8 <__mriCore_PrepareStringResponse>:
     3c8:	b510      	push	{r4, lr}
     3ca:	4604      	mov	r4, r0
     3cc:	f7ff ffec 	bl	3a8 <__mriCore_InitBuffer>
     3d0:	4802      	ldr	r0, [pc, #8]	; (3dc <__mriCore_PrepareStringResponse+0x14>)
     3d2:	4621      	mov	r1, r4
     3d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3d8:	f001 bcd2 	b.w	1d80 <__mriBuffer_WriteString>
     3dc:	1000018c 	.word	0x1000018c

000003e0 <__mriCore_WasControlCFlagSentFromGdb>:
     3e0:	4b02      	ldr	r3, [pc, #8]	; (3ec <__mriCore_WasControlCFlagSentFromGdb+0xc>)
     3e2:	6958      	ldr	r0, [r3, #20]
     3e4:	f000 0004 	and.w	r0, r0, #4
     3e8:	4770      	bx	lr
     3ea:	bf00      	nop
     3ec:	10000184 	.word	0x10000184

000003f0 <__mriCore_IsWaitingForGdbToConnect>:
     3f0:	b508      	push	{r3, lr}
     3f2:	4b05      	ldr	r3, [pc, #20]	; (408 <CFSR_BUS_IMPRECISE_BIT+0x8>)
     3f4:	6958      	ldr	r0, [r3, #20]
     3f6:	f010 0002 	ands.w	r0, r0, #2
     3fa:	d004      	beq.n	406 <CFSR_BUS_IMPRECISE_BIT+0x6>
     3fc:	f000 ff9c 	bl	1338 <__mriPlatform_CommShouldWaitForGdbConnect>
     400:	3000      	adds	r0, #0
     402:	bf18      	it	ne
     404:	2001      	movne	r0, #1
     406:	bd08      	pop	{r3, pc}
     408:	10000184 	.word	0x10000184

0000040c <__mriCore_RecordControlCFlagSentFromGdb>:
     40c:	4b04      	ldr	r3, [pc, #16]	; (420 <__mriCore_RecordControlCFlagSentFromGdb+0x14>)
     40e:	695a      	ldr	r2, [r3, #20]
     410:	b110      	cbz	r0, 418 <__mriCore_RecordControlCFlagSentFromGdb+0xc>
     412:	f042 0004 	orr.w	r0, r2, #4
     416:	e001      	b.n	41c <__mriCore_RecordControlCFlagSentFromGdb+0x10>
     418:	f022 0004 	bic.w	r0, r2, #4
     41c:	6158      	str	r0, [r3, #20]
     41e:	4770      	bx	lr
     420:	10000184 	.word	0x10000184

00000424 <__mriCore_WasSemihostCallCancelledByGdb>:
     424:	4b03      	ldr	r3, [pc, #12]	; (434 <__mriCore_WasSemihostCallCancelledByGdb+0x10>)
     426:	69d8      	ldr	r0, [r3, #28]
     428:	1f01      	subs	r1, r0, #4
     42a:	424a      	negs	r2, r1
     42c:	eb52 0001 	adcs.w	r0, r2, r1
     430:	4770      	bx	lr
     432:	bf00      	nop
     434:	10000184 	.word	0x10000184

00000438 <__mriCore_FlagSemihostCallAsHandled>:
     438:	b510      	push	{r4, lr}
     43a:	4c06      	ldr	r4, [pc, #24]	; (454 <__mriCore_FlagSemihostCallAsHandled+0x1c>)
     43c:	f000 fda6 	bl	f8c <__mriPlatform_AdvanceProgramCounterToNextInstruction>
     440:	69a0      	ldr	r0, [r4, #24]
     442:	f000 fdfb 	bl	103c <__mriPlatform_SetSemihostCallReturnValue>
     446:	69a3      	ldr	r3, [r4, #24]
     448:	b113      	cbz	r3, 450 <__mriCore_FlagSemihostCallAsHandled+0x18>
     44a:	69e2      	ldr	r2, [r4, #28]
     44c:	4802      	ldr	r0, [pc, #8]	; (458 <__mriCore_FlagSemihostCallAsHandled+0x20>)
     44e:	6002      	str	r2, [r0, #0]
     450:	bd10      	pop	{r4, pc}
     452:	bf00      	nop
     454:	10000184 	.word	0x10000184
     458:	100004e8 	.word	0x100004e8

0000045c <__mriCore_IsFirstException>:
     45c:	4b02      	ldr	r3, [pc, #8]	; (468 <__mriCore_IsFirstException+0xc>)
     45e:	6958      	ldr	r0, [r3, #20]
     460:	f000 0002 	and.w	r0, r0, #2
     464:	4770      	bx	lr
     466:	bf00      	nop
     468:	10000184 	.word	0x10000184

0000046c <__mriCore_SetSignalValue>:
     46c:	4b01      	ldr	r3, [pc, #4]	; (474 <__mriCore_SetSignalValue+0x8>)
     46e:	f883 0020 	strb.w	r0, [r3, #32]
     472:	4770      	bx	lr
     474:	10000184 	.word	0x10000184

00000478 <__mriCore_GetSignalValue>:
     478:	4b01      	ldr	r3, [pc, #4]	; (480 <__mriCore_GetSignalValue+0x8>)
     47a:	f893 0020 	ldrb.w	r0, [r3, #32]
     47e:	4770      	bx	lr
     480:	10000184 	.word	0x10000184

00000484 <__mriCore_SetSemihostReturnValues>:
     484:	4b01      	ldr	r3, [pc, #4]	; (48c <__mriCore_SetSemihostReturnValues+0x8>)
     486:	6198      	str	r0, [r3, #24]
     488:	61d9      	str	r1, [r3, #28]
     48a:	4770      	bx	lr
     48c:	10000184 	.word	0x10000184

00000490 <__mriCore_GetSemihostReturnCode>:
     490:	4b01      	ldr	r3, [pc, #4]	; (498 <__mriCore_GetSemihostReturnCode+0x8>)
     492:	6998      	ldr	r0, [r3, #24]
     494:	4770      	bx	lr
     496:	bf00      	nop
     498:	10000184 	.word	0x10000184

0000049c <__mriCore_GetBuffer>:
     49c:	4800      	ldr	r0, [pc, #0]	; (4a0 <__mriCore_GetBuffer+0x4>)
     49e:	4770      	bx	lr
     4a0:	1000018c 	.word	0x1000018c

000004a4 <__mriCore_GetInitializedBuffer>:
     4a4:	b508      	push	{r3, lr}
     4a6:	f7ff ff7f 	bl	3a8 <__mriCore_InitBuffer>
     4aa:	4801      	ldr	r0, [pc, #4]	; (4b0 <__mriCore_GetInitializedBuffer+0xc>)
     4ac:	bd08      	pop	{r3, pc}
     4ae:	bf00      	nop
     4b0:	1000018c 	.word	0x1000018c

000004b4 <__mriCore_SendPacketToGdb>:
     4b4:	b508      	push	{r3, lr}
     4b6:	480a      	ldr	r0, [pc, #40]	; (4e0 <__mriCore_SendPacketToGdb+0x2c>)
     4b8:	f001 fbd8 	bl	1c6c <__mriBuffer_OverrunDetected>
     4bc:	b128      	cbz	r0, 4ca <__mriCore_SendPacketToGdb+0x16>
     4be:	f7ff ff73 	bl	3a8 <__mriCore_InitBuffer>
     4c2:	4807      	ldr	r0, [pc, #28]	; (4e0 <__mriCore_SendPacketToGdb+0x2c>)
     4c4:	4907      	ldr	r1, [pc, #28]	; (4e4 <__mriCore_SendPacketToGdb+0x30>)
     4c6:	f001 fc5b 	bl	1d80 <__mriBuffer_WriteString>
     4ca:	4805      	ldr	r0, [pc, #20]	; (4e0 <__mriCore_SendPacketToGdb+0x2c>)
     4cc:	f001 fbae 	bl	1c2c <__mriBuffer_SetEndOfBuffer>
     4d0:	4805      	ldr	r0, [pc, #20]	; (4e8 <__mriCore_SendPacketToGdb+0x34>)
     4d2:	f100 0108 	add.w	r1, r0, #8
     4d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
     4da:	f000 b8f7 	b.w	6cc <__mriPacket_SendToGDB>
     4de:	bf00      	nop
     4e0:	1000018c 	.word	0x1000018c
     4e4:	0000348c 	.word	0x0000348c
     4e8:	10000184 	.word	0x10000184

000004ec <__mriCore_GdbCommandHandlingLoop>:
     4ec:	b510      	push	{r4, lr}
     4ee:	f7ff ff5b 	bl	3a8 <__mriCore_InitBuffer>
     4f2:	4812      	ldr	r0, [pc, #72]	; (53c <__mriCore_GdbCommandHandlingLoop+0x50>)
     4f4:	f100 0108 	add.w	r1, r0, #8
     4f8:	f000 f898 	bl	62c <__mriPacket_GetFromGDB>
     4fc:	4810      	ldr	r0, [pc, #64]	; (540 <__mriCore_GdbCommandHandlingLoop+0x54>)
     4fe:	f001 fbcf 	bl	1ca0 <__mriBuffer_ReadChar>
     502:	2300      	movs	r3, #0
     504:	4a0f      	ldr	r2, [pc, #60]	; (544 <__mriCore_GdbCommandHandlingLoop+0x58>)
     506:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
     50a:	790c      	ldrb	r4, [r1, #4]
     50c:	4284      	cmp	r4, r0
     50e:	d106      	bne.n	51e <__mriCore_GdbCommandHandlingLoop+0x32>
     510:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
     514:	4780      	blx	r0
     516:	0782      	lsls	r2, r0, #30
     518:	4604      	mov	r4, r0
     51a:	d507      	bpl.n	52c <__mriCore_GdbCommandHandlingLoop+0x40>
     51c:	e008      	b.n	530 <__mriCore_GdbCommandHandlingLoop+0x44>
     51e:	3301      	adds	r3, #1
     520:	2b0c      	cmp	r3, #12
     522:	d1ef      	bne.n	504 <__mriCore_GdbCommandHandlingLoop+0x18>
     524:	4808      	ldr	r0, [pc, #32]	; (548 <__mriCore_GdbCommandHandlingLoop+0x5c>)
     526:	f7ff ff4f 	bl	3c8 <__mriCore_PrepareStringResponse>
     52a:	2400      	movs	r4, #0
     52c:	f7ff ffc2 	bl	4b4 <__mriCore_SendPacketToGdb>
     530:	f004 0401 	and.w	r4, r4, #1
     534:	2c00      	cmp	r4, #0
     536:	d0da      	beq.n	4ee <__mriCore_GdbCommandHandlingLoop+0x2>
     538:	bd10      	pop	{r4, pc}
     53a:	bf00      	nop
     53c:	10000184 	.word	0x10000184
     540:	1000018c 	.word	0x1000018c
     544:	00003490 	.word	0x00003490
     548:	00003502 	.word	0x00003502

0000054c <__mriDebugException>:
     54c:	b570      	push	{r4, r5, r6, lr}
     54e:	f7ff ff4f 	bl	3f0 <__mriCore_IsWaitingForGdbToConnect>
     552:	4605      	mov	r5, r0
     554:	f000 fbb8 	bl	cc8 <__mriPlatform_IsSingleStepping>
     558:	4606      	mov	r6, r0
     55a:	f000 fed1 	bl	1300 <__mriPlatform_CommCausedInterrupt>
     55e:	b130      	cbz	r0, 56e <__mriDebugException+0x22>
     560:	f000 feaa 	bl	12b8 <__mriPlatform_CommHasReceiveData>
     564:	b918      	cbnz	r0, 56e <__mriDebugException+0x22>
     566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     56a:	f000 bed5 	b.w	1318 <__mriPlatform_CommClearInterrupt>
     56e:	f3af 8000 	nop.w
     572:	f7ff ff3d 	bl	3f0 <__mriCore_IsWaitingForGdbToConnect>
     576:	b160      	cbz	r0, 592 <__mriDebugException+0x46>
     578:	f000 feec 	bl	1354 <__mriPlatform_CommIsWaitingForGdbToConnect>
     57c:	2800      	cmp	r0, #0
     57e:	d1fb      	bne.n	578 <__mriDebugException+0x2c>
     580:	f000 fea4 	bl	12cc <__mriPlatform_CommReceiveChar>
     584:	282b      	cmp	r0, #43	; 0x2b
     586:	d004      	beq.n	592 <__mriDebugException+0x46>
     588:	f001 f854 	bl	1634 <__mriPlatform_CommWaitForReceiveDataToStop>
     58c:	f000 fef0 	bl	1370 <__mriPlatform_CommPrepareToWaitForGdbConnection>
     590:	e7f2      	b.n	578 <__mriDebugException+0x2c>
     592:	f000 fc21 	bl	dd8 <__mriPlatform_EnteringDebugger>
     596:	f000 fba5 	bl	ce4 <__mriPlatform_DetermineCauseOfException>
     59a:	4c13      	ldr	r4, [pc, #76]	; (5e8 <__mriDebugException+0x9c>)
     59c:	2805      	cmp	r0, #5
     59e:	f884 0020 	strb.w	r0, [r4, #32]
     5a2:	d10f      	bne.n	5c4 <__mriDebugException+0x78>
     5a4:	f001 f8e2 	bl	176c <__mriSemihost_IsDebuggeeMakingSemihostCall>
     5a8:	b160      	cbz	r0, 5c4 <__mriDebugException+0x78>
     5aa:	f001 f8e9 	bl	1780 <__mriSemihost_HandleSemihostRequest>
     5ae:	b148      	cbz	r0, 5c4 <__mriDebugException+0x78>
     5b0:	b946      	cbnz	r6, 5c4 <__mriDebugException+0x78>
     5b2:	f000 fc8f 	bl	ed4 <__mriPlatform_LeavingDebugger>
     5b6:	f3af 8000 	nop.w
     5ba:	6961      	ldr	r1, [r4, #20]
     5bc:	f021 0302 	bic.w	r3, r1, #2
     5c0:	6163      	str	r3, [r4, #20]
     5c2:	bd70      	pop	{r4, r5, r6, pc}
     5c4:	b91d      	cbnz	r5, 5ce <__mriDebugException+0x82>
     5c6:	f000 fbc1 	bl	d4c <__mriPlatform_DisplayFaultCauseToGdbConsole>
     5ca:	f002 f8ef 	bl	27ac <__mriCmd_Send_T_StopResponse>
     5ce:	f7ff ff8d 	bl	4ec <__mriCore_GdbCommandHandlingLoop>
     5d2:	f000 fc7f 	bl	ed4 <__mriPlatform_LeavingDebugger>
     5d6:	f3af 8000 	nop.w
     5da:	4b03      	ldr	r3, [pc, #12]	; (5e8 <__mriDebugException+0x9c>)
     5dc:	695a      	ldr	r2, [r3, #20]
     5de:	f022 0002 	bic.w	r0, r2, #2
     5e2:	6158      	str	r0, [r3, #20]
     5e4:	bd70      	pop	{r4, r5, r6, pc}
     5e6:	bf00      	nop
     5e8:	10000184 	.word	0x10000184

000005ec <HexCharToNibble>:
     5ec:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
     5f0:	2b05      	cmp	r3, #5
     5f2:	d801      	bhi.n	5f8 <HexCharToNibble+0xc>
     5f4:	3857      	subs	r0, #87	; 0x57
     5f6:	4770      	bx	lr
     5f8:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
     5fc:	2905      	cmp	r1, #5
     5fe:	d801      	bhi.n	604 <HexCharToNibble+0x18>
     600:	3837      	subs	r0, #55	; 0x37
     602:	4770      	bx	lr
     604:	3830      	subs	r0, #48	; 0x30
     606:	b2c2      	uxtb	r2, r0
     608:	2a09      	cmp	r2, #9
     60a:	d907      	bls.n	61c <HexCharToNibble+0x30>
     60c:	4804      	ldr	r0, [pc, #16]	; (620 <HexCharToNibble+0x34>)
     60e:	6803      	ldr	r3, [r0, #0]
     610:	2b02      	cmp	r3, #2
     612:	bfb8      	it	lt
     614:	2302      	movlt	r3, #2
     616:	6003      	str	r3, [r0, #0]
     618:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     61c:	4770      	bx	lr
     61e:	bf00      	nop
     620:	100001dc 	.word	0x100001dc

00000624 <__mriPacket_Init>:
     624:	2100      	movs	r1, #0
     626:	2208      	movs	r2, #8
     628:	f002 bed1 	b.w	33ce <memset>

0000062c <__mriPacket_GetFromGDB>:
     62c:	b538      	push	{r3, r4, r5, lr}
     62e:	4604      	mov	r4, r0
     630:	6001      	str	r1, [r0, #0]
     632:	7925      	ldrb	r5, [r4, #4]
     634:	2d24      	cmp	r5, #36	; 0x24
     636:	d004      	beq.n	642 <__mriPacket_GetFromGDB+0x16>
     638:	f000 fe48 	bl	12cc <__mriPlatform_CommReceiveChar>
     63c:	b2c5      	uxtb	r5, r0
     63e:	7125      	strb	r5, [r4, #4]
     640:	e7f8      	b.n	634 <__mriPacket_GetFromGDB+0x8>
     642:	6820      	ldr	r0, [r4, #0]
     644:	f001 faef 	bl	1c26 <__mriBuffer_Reset>
     648:	2300      	movs	r3, #0
     64a:	7163      	strb	r3, [r4, #5]
     64c:	f000 fe3e 	bl	12cc <__mriPlatform_CommReceiveChar>
     650:	b2c5      	uxtb	r5, r0
     652:	7125      	strb	r5, [r4, #4]
     654:	6820      	ldr	r0, [r4, #0]
     656:	f001 faec 	bl	1c32 <__mriBuffer_BytesLeft>
     65a:	b158      	cbz	r0, 674 <__mriPacket_GetFromGDB+0x48>
     65c:	2d24      	cmp	r5, #36	; 0x24
     65e:	d0e8      	beq.n	632 <__mriPacket_GetFromGDB+0x6>
     660:	2d23      	cmp	r5, #35	; 0x23
     662:	d009      	beq.n	678 <__mriPacket_GetFromGDB+0x4c>
     664:	7962      	ldrb	r2, [r4, #5]
     666:	6820      	ldr	r0, [r4, #0]
     668:	18a9      	adds	r1, r5, r2
     66a:	7161      	strb	r1, [r4, #5]
     66c:	4629      	mov	r1, r5
     66e:	f001 fb05 	bl	1c7c <__mriBuffer_WriteChar>
     672:	e7eb      	b.n	64c <__mriPacket_GetFromGDB+0x20>
     674:	2d23      	cmp	r5, #35	; 0x23
     676:	d1dc      	bne.n	632 <__mriPacket_GetFromGDB+0x6>
     678:	f000 fe28 	bl	12cc <__mriPlatform_CommReceiveChar>
     67c:	b2c0      	uxtb	r0, r0
     67e:	7120      	strb	r0, [r4, #4]
     680:	f7ff ffb4 	bl	5ec <HexCharToNibble>
     684:	4605      	mov	r5, r0
     686:	f000 fe21 	bl	12cc <__mriPlatform_CommReceiveChar>
     68a:	b2c0      	uxtb	r0, r0
     68c:	7120      	strb	r0, [r4, #4]
     68e:	f7ff ffad 	bl	5ec <HexCharToNibble>
     692:	b2ed      	uxtb	r5, r5
     694:	ea40 1005 	orr.w	r0, r0, r5, lsl #4
     698:	71a0      	strb	r0, [r4, #6]
     69a:	f000 fe0d 	bl	12b8 <__mriPlatform_CommHasReceiveData>
     69e:	2800      	cmp	r0, #0
     6a0:	d1c7      	bne.n	632 <__mriPacket_GetFromGDB+0x6>
     6a2:	79a2      	ldrb	r2, [r4, #6]
     6a4:	7961      	ldrb	r1, [r4, #5]
     6a6:	428a      	cmp	r2, r1
     6a8:	d001      	beq.n	6ae <__mriPacket_GetFromGDB+0x82>
     6aa:	202d      	movs	r0, #45	; 0x2d
     6ac:	e000      	b.n	6b0 <__mriPacket_GetFromGDB+0x84>
     6ae:	202b      	movs	r0, #43	; 0x2b
     6b0:	f000 fe18 	bl	12e4 <__mriPlatform_CommSendChar>
     6b4:	79a0      	ldrb	r0, [r4, #6]
     6b6:	7963      	ldrb	r3, [r4, #5]
     6b8:	4298      	cmp	r0, r3
     6ba:	d1ba      	bne.n	632 <__mriPacket_GetFromGDB+0x6>
     6bc:	6820      	ldr	r0, [r4, #0]
     6be:	f001 fab5 	bl	1c2c <__mriBuffer_SetEndOfBuffer>
     6c2:	6820      	ldr	r0, [r4, #0]
     6c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
     6c8:	f001 baad 	b.w	1c26 <__mriBuffer_Reset>

000006cc <__mriPacket_SendToGDB>:
     6cc:	b570      	push	{r4, r5, r6, lr}
     6ce:	4604      	mov	r4, r0
     6d0:	6001      	str	r1, [r0, #0]
     6d2:	6820      	ldr	r0, [r4, #0]
     6d4:	f001 faa7 	bl	1c26 <__mriBuffer_Reset>
     6d8:	2300      	movs	r3, #0
     6da:	7163      	strb	r3, [r4, #5]
     6dc:	2024      	movs	r0, #36	; 0x24
     6de:	f000 fe01 	bl	12e4 <__mriPlatform_CommSendChar>
     6e2:	6820      	ldr	r0, [r4, #0]
     6e4:	f001 faa5 	bl	1c32 <__mriBuffer_BytesLeft>
     6e8:	b148      	cbz	r0, 6fe <__mriPacket_SendToGDB+0x32>
     6ea:	6820      	ldr	r0, [r4, #0]
     6ec:	f001 fad8 	bl	1ca0 <__mriBuffer_ReadChar>
     6f0:	4605      	mov	r5, r0
     6f2:	f000 fdf7 	bl	12e4 <__mriPlatform_CommSendChar>
     6f6:	7963      	ldrb	r3, [r4, #5]
     6f8:	18ee      	adds	r6, r5, r3
     6fa:	7166      	strb	r6, [r4, #5]
     6fc:	e7f1      	b.n	6e2 <__mriPacket_SendToGDB+0x16>
     6fe:	2023      	movs	r0, #35	; 0x23
     700:	f000 fdf0 	bl	12e4 <__mriPlatform_CommSendChar>
     704:	7966      	ldrb	r6, [r4, #5]
     706:	4d0b      	ldr	r5, [pc, #44]	; (734 <__mriPacket_SendToGDB+0x68>)
     708:	0930      	lsrs	r0, r6, #4
     70a:	5c28      	ldrb	r0, [r5, r0]
     70c:	f006 060f 	and.w	r6, r6, #15
     710:	f000 fde8 	bl	12e4 <__mriPlatform_CommSendChar>
     714:	5da8      	ldrb	r0, [r5, r6]
     716:	f000 fde5 	bl	12e4 <__mriPlatform_CommSendChar>
     71a:	f000 fdd7 	bl	12cc <__mriPlatform_CommReceiveChar>
     71e:	b2c1      	uxtb	r1, r0
     720:	2903      	cmp	r1, #3
     722:	7120      	strb	r0, [r4, #4]
     724:	d0f9      	beq.n	71a <__mriPacket_SendToGDB+0x4e>
     726:	b2ca      	uxtb	r2, r1
     728:	2a2b      	cmp	r2, #43	; 0x2b
     72a:	d001      	beq.n	730 <__mriPacket_SendToGDB+0x64>
     72c:	2a24      	cmp	r2, #36	; 0x24
     72e:	d1d0      	bne.n	6d2 <__mriPacket_SendToGDB+0x6>
     730:	bd70      	pop	{r4, r5, r6, pc}
     732:	bf00      	nop
     734:	000034f0 	.word	0x000034f0

00000738 <clearTokenObject>:
     738:	b510      	push	{r4, lr}
     73a:	2100      	movs	r1, #0
     73c:	2228      	movs	r2, #40	; 0x28
     73e:	4604      	mov	r4, r0
     740:	f002 fe45 	bl	33ce <memset>
     744:	2300      	movs	r3, #0
     746:	62e3      	str	r3, [r4, #44]	; 0x2c
     748:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
     74c:	bd10      	pop	{r4, pc}
	...

00000750 <__mriToken_Init>:
     750:	b510      	push	{r4, lr}
     752:	4604      	mov	r4, r0
     754:	f7ff fff0 	bl	738 <clearTokenObject>
     758:	4b01      	ldr	r3, [pc, #4]	; (760 <__mriToken_Init+0x10>)
     75a:	62a3      	str	r3, [r4, #40]	; 0x28
     75c:	bd10      	pop	{r4, pc}
     75e:	bf00      	nop
     760:	00003500 	.word	0x00003500

00000764 <__mriToken_SplitString>:
     764:	4b2b      	ldr	r3, [pc, #172]	; (814 <Heap_Size+0x14>)
     766:	b570      	push	{r4, r5, r6, lr}
     768:	2200      	movs	r2, #0
     76a:	4604      	mov	r4, r0
     76c:	460d      	mov	r5, r1
     76e:	601a      	str	r2, [r3, #0]
     770:	f7ff ffe2 	bl	738 <clearTokenObject>
     774:	f104 0330 	add.w	r3, r4, #48	; 0x30
     778:	4629      	mov	r1, r5
     77a:	461a      	mov	r2, r3
     77c:	f105 0640 	add.w	r6, r5, #64	; 0x40
     780:	4608      	mov	r0, r1
     782:	f811 5b01 	ldrb.w	r5, [r1], #1
     786:	b125      	cbz	r5, 792 <__mriToken_SplitString+0x2e>
     788:	42b1      	cmp	r1, r6
     78a:	f802 5b01 	strb.w	r5, [r2], #1
     78e:	4608      	mov	r0, r1
     790:	d1f6      	bne.n	780 <__mriToken_SplitString+0x1c>
     792:	2100      	movs	r1, #0
     794:	7011      	strb	r1, [r2, #0]
     796:	7800      	ldrb	r0, [r0, #0]
     798:	4a1e      	ldr	r2, [pc, #120]	; (814 <Heap_Size+0x14>)
     79a:	b120      	cbz	r0, 7a6 <__mriToken_SplitString+0x42>
     79c:	6811      	ldr	r1, [r2, #0]
     79e:	2901      	cmp	r1, #1
     7a0:	bfb8      	it	lt
     7a2:	2101      	movlt	r1, #1
     7a4:	6011      	str	r1, [r2, #0]
     7a6:	6810      	ldr	r0, [r2, #0]
     7a8:	2800      	cmp	r0, #0
     7aa:	d132      	bne.n	812 <Heap_Size+0x12>
     7ac:	781a      	ldrb	r2, [r3, #0]
     7ae:	2a00      	cmp	r2, #0
     7b0:	d02f      	beq.n	812 <Heap_Size+0x12>
     7b2:	461a      	mov	r2, r3
     7b4:	f813 5b01 	ldrb.w	r5, [r3], #1
     7b8:	b92d      	cbnz	r5, 7c6 <__mriToken_SplitString+0x62>
     7ba:	4b16      	ldr	r3, [pc, #88]	; (814 <Heap_Size+0x14>)
     7bc:	2000      	movs	r0, #0
     7be:	6018      	str	r0, [r3, #0]
     7c0:	7811      	ldrb	r1, [r2, #0]
     7c2:	b949      	cbnz	r1, 7d8 <__mriToken_SplitString+0x74>
     7c4:	e012      	b.n	7ec <__mriToken_SplitString+0x88>
     7c6:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     7c8:	1e48      	subs	r0, r1, #1
     7ca:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     7ce:	2900      	cmp	r1, #0
     7d0:	d0f3      	beq.n	7ba <__mriToken_SplitString+0x56>
     7d2:	428d      	cmp	r5, r1
     7d4:	d1f9      	bne.n	7ca <__mriToken_SplitString+0x66>
     7d6:	e7ec      	b.n	7b2 <__mriToken_SplitString+0x4e>
     7d8:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
     7da:	2809      	cmp	r0, #9
     7dc:	d902      	bls.n	7e4 <__mriToken_SplitString+0x80>
     7de:	2001      	movs	r0, #1
     7e0:	6018      	str	r0, [r3, #0]
     7e2:	e003      	b.n	7ec <__mriToken_SplitString+0x88>
     7e4:	1c41      	adds	r1, r0, #1
     7e6:	f844 2020 	str.w	r2, [r4, r0, lsl #2]
     7ea:	62e1      	str	r1, [r4, #44]	; 0x2c
     7ec:	681b      	ldr	r3, [r3, #0]
     7ee:	b983      	cbnz	r3, 812 <Heap_Size+0x12>
     7f0:	4613      	mov	r3, r2
     7f2:	f812 5b01 	ldrb.w	r5, [r2], #1
     7f6:	2d00      	cmp	r5, #0
     7f8:	d0d8      	beq.n	7ac <__mriToken_SplitString+0x48>
     7fa:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     7fc:	1e48      	subs	r0, r1, #1
     7fe:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     802:	2900      	cmp	r1, #0
     804:	d0f4      	beq.n	7f0 <__mriToken_SplitString+0x8c>
     806:	428d      	cmp	r5, r1
     808:	d1f9      	bne.n	7fe <__mriToken_SplitString+0x9a>
     80a:	2100      	movs	r1, #0
     80c:	f803 1b01 	strb.w	r1, [r3], #1
     810:	e7cc      	b.n	7ac <__mriToken_SplitString+0x48>
     812:	bd70      	pop	{r4, r5, r6, pc}
     814:	100001dc 	.word	0x100001dc

00000818 <__mriToken_MatchingString>:
     818:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     81c:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     81e:	4606      	mov	r6, r0
     820:	4688      	mov	r8, r1
     822:	2400      	movs	r4, #0
     824:	42bc      	cmp	r4, r7
     826:	d008      	beq.n	83a <__mriToken_MatchingString+0x22>
     828:	f856 5024 	ldr.w	r5, [r6, r4, lsl #2]
     82c:	4641      	mov	r1, r8
     82e:	4628      	mov	r0, r5
     830:	f002 fdd5 	bl	33de <strcmp>
     834:	b110      	cbz	r0, 83c <__mriToken_MatchingString+0x24>
     836:	3401      	adds	r4, #1
     838:	e7f4      	b.n	824 <__mriToken_MatchingString+0xc>
     83a:	2500      	movs	r5, #0
     83c:	4628      	mov	r0, r5
     83e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

00000842 <__mriToken_MatchingStringPrefix>:
     842:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     846:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     848:	4606      	mov	r6, r0
     84a:	4688      	mov	r8, r1
     84c:	2500      	movs	r5, #0
     84e:	42bd      	cmp	r5, r7
     850:	d009      	beq.n	866 <__mriToken_MatchingStringPrefix+0x24>
     852:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
     856:	4641      	mov	r1, r8
     858:	4620      	mov	r0, r4
     85a:	f002 fdea 	bl	3432 <strstr>
     85e:	4284      	cmp	r4, r0
     860:	d002      	beq.n	868 <__mriToken_MatchingStringPrefix+0x26>
     862:	3501      	adds	r5, #1
     864:	e7f3      	b.n	84e <__mriToken_MatchingStringPrefix+0xc>
     866:	2400      	movs	r4, #0
     868:	4620      	mov	r0, r4
     86a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

00000870 <findDWTComparator>:
     870:	4b12      	ldr	r3, [pc, #72]	; (8bc <findDWTComparator+0x4c>)
     872:	b5f0      	push	{r4, r5, r6, r7, lr}
     874:	681f      	ldr	r7, [r3, #0]
     876:	4606      	mov	r6, r0
     878:	0f3f      	lsrs	r7, r7, #28
     87a:	2300      	movs	r3, #0
     87c:	f103 6060 	add.w	r0, r3, #234881024	; 0xe000000
     880:	f500 7081 	add.w	r0, r0, #258	; 0x102
     884:	0100      	lsls	r0, r0, #4
     886:	42bb      	cmp	r3, r7
     888:	d013      	beq.n	8b2 <findDWTComparator+0x42>
     88a:	6885      	ldr	r5, [r0, #8]
     88c:	4c0c      	ldr	r4, [pc, #48]	; (8c0 <findDWTComparator+0x50>)
     88e:	402c      	ands	r4, r5
     890:	4294      	cmp	r4, r2
     892:	d110      	bne.n	8b6 <findDWTComparator+0x46>
     894:	6804      	ldr	r4, [r0, #0]
     896:	42b4      	cmp	r4, r6
     898:	d10d      	bne.n	8b6 <findDWTComparator+0x46>
     89a:	f8d0 c004 	ldr.w	r12, [r0, #4]
     89e:	460d      	mov	r5, r1
     8a0:	2400      	movs	r4, #0
     8a2:	2d01      	cmp	r5, #1
     8a4:	d902      	bls.n	8ac <findDWTComparator+0x3c>
     8a6:	086d      	lsrs	r5, r5, #1
     8a8:	3401      	adds	r4, #1
     8aa:	e7fa      	b.n	8a2 <findDWTComparator+0x32>
     8ac:	45a4      	cmp	r12, r4
     8ae:	d102      	bne.n	8b6 <findDWTComparator+0x46>
     8b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8b2:	2000      	movs	r0, #0
     8b4:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8b6:	3301      	adds	r3, #1
     8b8:	e7e0      	b.n	87c <findDWTComparator+0xc>
     8ba:	bf00      	nop
     8bc:	e0001000 	.word	0xe0001000
     8c0:	000ffdaf 	.word	0x000ffdaf

000008c4 <getFPBCodeComparatorCount>:
     8c4:	4b04      	ldr	r3, [pc, #16]	; (8d8 <getFPBCodeComparatorCount+0x14>)
     8c6:	6819      	ldr	r1, [r3, #0]
     8c8:	f3c1 1003 	ubfx	r0, r1, #4, #4
     8cc:	f401 42e0 	and.w	r2, r1, #28672	; 0x7000
     8d0:	ea40 2012 	orr.w	r0, r0, r2, lsr #8
     8d4:	4770      	bx	lr
     8d6:	bf00      	nop
     8d8:	e0002000 	.word	0xe0002000

000008dc <prepareToAccessMPURegion>:
     8dc:	4b05      	ldr	r3, [pc, #20]	; (8f4 <prepareToAccessMPURegion+0x18>)
     8de:	681a      	ldr	r2, [r3, #0]
     8e0:	f3c2 2107 	ubfx	r1, r2, #8, #8
     8e4:	4288      	cmp	r0, r1
     8e6:	d202      	bcs.n	8ee <prepareToAccessMPURegion+0x12>
     8e8:	6098      	str	r0, [r3, #8]
     8ea:	2001      	movs	r0, #1
     8ec:	4770      	bx	lr
     8ee:	2000      	movs	r0, #0
     8f0:	4770      	bx	lr
     8f2:	bf00      	nop
     8f4:	e000ed90 	.word	0xe000ed90

000008f8 <displayMemFaultCauseToGdbConsole>:
     8f8:	b570      	push	{r4, r5, r6, lr}
     8fa:	4d1e      	ldr	r5, [pc, #120]	; (974 <displayMemFaultCauseToGdbConsole+0x7c>)
     8fc:	6aac      	ldr	r4, [r5, #40]	; 0x28
     8fe:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     902:	d035      	beq.n	970 <displayMemFaultCauseToGdbConsole+0x78>
     904:	481c      	ldr	r0, [pc, #112]	; (978 <displayMemFaultCauseToGdbConsole+0x80>)
     906:	f001 ff90 	bl	282a <__mriGdbConsole_WriteString>
     90a:	481c      	ldr	r0, [pc, #112]	; (97c <displayMemFaultCauseToGdbConsole+0x84>)
     90c:	f001 ff8d 	bl	282a <__mriGdbConsole_WriteString>
     910:	4630      	mov	r0, r6
     912:	f001 ffb1 	bl	2878 <__mriGdbConsole_WriteHexValue>
     916:	0622      	lsls	r2, r4, #24
     918:	d505      	bpl.n	926 <displayMemFaultCauseToGdbConsole+0x2e>
     91a:	4819      	ldr	r0, [pc, #100]	; (980 <displayMemFaultCauseToGdbConsole+0x88>)
     91c:	f001 ff85 	bl	282a <__mriGdbConsole_WriteString>
     920:	6b68      	ldr	r0, [r5, #52]	; 0x34
     922:	f001 ffa9 	bl	2878 <__mriGdbConsole_WriteHexValue>
     926:	06a3      	lsls	r3, r4, #26
     928:	d502      	bpl.n	930 <displayMemFaultCauseToGdbConsole+0x38>
     92a:	4816      	ldr	r0, [pc, #88]	; (984 <displayMemFaultCauseToGdbConsole+0x8c>)
     92c:	f001 ff7d 	bl	282a <__mriGdbConsole_WriteString>
     930:	06e0      	lsls	r0, r4, #27
     932:	d507      	bpl.n	944 <displayMemFaultCauseToGdbConsole+0x4c>
     934:	4814      	ldr	r0, [pc, #80]	; (988 <displayMemFaultCauseToGdbConsole+0x90>)
     936:	f001 ff78 	bl	282a <__mriGdbConsole_WriteString>
     93a:	4b14      	ldr	r3, [pc, #80]	; (98c <displayMemFaultCauseToGdbConsole+0x94>)
     93c:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     940:	f001 ff9a 	bl	2878 <__mriGdbConsole_WriteHexValue>
     944:	0721      	lsls	r1, r4, #28
     946:	d507      	bpl.n	958 <displayMemFaultCauseToGdbConsole+0x60>
     948:	4811      	ldr	r0, [pc, #68]	; (990 <displayMemFaultCauseToGdbConsole+0x98>)
     94a:	f001 ff6e 	bl	282a <__mriGdbConsole_WriteString>
     94e:	480f      	ldr	r0, [pc, #60]	; (98c <displayMemFaultCauseToGdbConsole+0x94>)
     950:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     954:	f001 ff90 	bl	2878 <__mriGdbConsole_WriteHexValue>
     958:	07a2      	lsls	r2, r4, #30
     95a:	d502      	bpl.n	962 <displayMemFaultCauseToGdbConsole+0x6a>
     95c:	480d      	ldr	r0, [pc, #52]	; (994 <displayMemFaultCauseToGdbConsole+0x9c>)
     95e:	f001 ff64 	bl	282a <__mriGdbConsole_WriteString>
     962:	07e3      	lsls	r3, r4, #31
     964:	d504      	bpl.n	970 <displayMemFaultCauseToGdbConsole+0x78>
     966:	480c      	ldr	r0, [pc, #48]	; (998 <displayMemFaultCauseToGdbConsole+0xa0>)
     968:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     96c:	f001 bf5d 	b.w	282a <__mriGdbConsole_WriteString>
     970:	bd70      	pop	{r4, r5, r6, pc}
     972:	bf00      	nop
     974:	e000ed00 	.word	0xe000ed00
     978:	00003803 	.word	0x00003803
     97c:	00003812 	.word	0x00003812
     980:	00003827 	.word	0x00003827
     984:	0000383c 	.word	0x0000383c
     988:	00003856 	.word	0x00003856
     98c:	100001e0 	.word	0x100001e0
     990:	00003873 	.word	0x00003873
     994:	00003892 	.word	0x00003892
     998:	000038a3 	.word	0x000038a3

0000099c <displayBusFaultCauseToGdbConsole>:
     99c:	b570      	push	{r4, r5, r6, lr}
     99e:	4d21      	ldr	r5, [pc, #132]	; (a24 <displayBusFaultCauseToGdbConsole+0x88>)
     9a0:	6aac      	ldr	r4, [r5, #40]	; 0x28
     9a2:	0a24      	lsrs	r4, r4, #8
     9a4:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     9a8:	d03a      	beq.n	a20 <displayBusFaultCauseToGdbConsole+0x84>
     9aa:	481f      	ldr	r0, [pc, #124]	; (a28 <displayBusFaultCauseToGdbConsole+0x8c>)
     9ac:	f001 ff3d 	bl	282a <__mriGdbConsole_WriteString>
     9b0:	481e      	ldr	r0, [pc, #120]	; (a2c <displayBusFaultCauseToGdbConsole+0x90>)
     9b2:	f001 ff3a 	bl	282a <__mriGdbConsole_WriteString>
     9b6:	4630      	mov	r0, r6
     9b8:	f001 ff5e 	bl	2878 <__mriGdbConsole_WriteHexValue>
     9bc:	0623      	lsls	r3, r4, #24
     9be:	d505      	bpl.n	9cc <displayBusFaultCauseToGdbConsole+0x30>
     9c0:	481b      	ldr	r0, [pc, #108]	; (a30 <displayBusFaultCauseToGdbConsole+0x94>)
     9c2:	f001 ff32 	bl	282a <__mriGdbConsole_WriteString>
     9c6:	6ba8      	ldr	r0, [r5, #56]	; 0x38
     9c8:	f001 ff56 	bl	2878 <__mriGdbConsole_WriteHexValue>
     9cc:	06a0      	lsls	r0, r4, #26
     9ce:	d502      	bpl.n	9d6 <displayBusFaultCauseToGdbConsole+0x3a>
     9d0:	4818      	ldr	r0, [pc, #96]	; (a34 <displayBusFaultCauseToGdbConsole+0x98>)
     9d2:	f001 ff2a 	bl	282a <__mriGdbConsole_WriteString>
     9d6:	06e1      	lsls	r1, r4, #27
     9d8:	d507      	bpl.n	9ea <displayBusFaultCauseToGdbConsole+0x4e>
     9da:	4817      	ldr	r0, [pc, #92]	; (a38 <displayBusFaultCauseToGdbConsole+0x9c>)
     9dc:	f001 ff25 	bl	282a <__mriGdbConsole_WriteString>
     9e0:	4b16      	ldr	r3, [pc, #88]	; (a3c <displayBusFaultCauseToGdbConsole+0xa0>)
     9e2:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     9e6:	f001 ff47 	bl	2878 <__mriGdbConsole_WriteHexValue>
     9ea:	0722      	lsls	r2, r4, #28
     9ec:	d507      	bpl.n	9fe <displayBusFaultCauseToGdbConsole+0x62>
     9ee:	4814      	ldr	r0, [pc, #80]	; (a40 <displayBusFaultCauseToGdbConsole+0xa4>)
     9f0:	f001 ff1b 	bl	282a <__mriGdbConsole_WriteString>
     9f4:	4811      	ldr	r0, [pc, #68]	; (a3c <displayBusFaultCauseToGdbConsole+0xa0>)
     9f6:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     9fa:	f001 ff3d 	bl	2878 <__mriGdbConsole_WriteHexValue>
     9fe:	0763      	lsls	r3, r4, #29
     a00:	d502      	bpl.n	a08 <displayBusFaultCauseToGdbConsole+0x6c>
     a02:	4810      	ldr	r0, [pc, #64]	; (a44 <displayBusFaultCauseToGdbConsole+0xa8>)
     a04:	f001 ff11 	bl	282a <__mriGdbConsole_WriteString>
     a08:	07a0      	lsls	r0, r4, #30
     a0a:	d502      	bpl.n	a12 <displayBusFaultCauseToGdbConsole+0x76>
     a0c:	480e      	ldr	r0, [pc, #56]	; (a48 <displayBusFaultCauseToGdbConsole+0xac>)
     a0e:	f001 ff0c 	bl	282a <__mriGdbConsole_WriteString>
     a12:	07e1      	lsls	r1, r4, #31
     a14:	d504      	bpl.n	a20 <displayBusFaultCauseToGdbConsole+0x84>
     a16:	480d      	ldr	r0, [pc, #52]	; (a4c <displayBusFaultCauseToGdbConsole+0xb0>)
     a18:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     a1c:	f001 bf05 	b.w	282a <__mriGdbConsole_WriteString>
     a20:	bd70      	pop	{r4, r5, r6, pc}
     a22:	bf00      	nop
     a24:	e000ed00 	.word	0xe000ed00
     a28:	000038ba 	.word	0x000038ba
     a2c:	00003812 	.word	0x00003812
     a30:	00003827 	.word	0x00003827
     a34:	0000383c 	.word	0x0000383c
     a38:	00003856 	.word	0x00003856
     a3c:	100001e0 	.word	0x100001e0
     a40:	00003873 	.word	0x00003873
     a44:	000038c9 	.word	0x000038c9
     a48:	000038e4 	.word	0x000038e4
     a4c:	000038fd 	.word	0x000038fd

00000a50 <displayUsageFaultCauseToGdbConsole>:
     a50:	4b17      	ldr	r3, [pc, #92]	; (ab0 <displayUsageFaultCauseToGdbConsole+0x60>)
     a52:	b510      	push	{r4, lr}
     a54:	6a9c      	ldr	r4, [r3, #40]	; 0x28
     a56:	0c24      	lsrs	r4, r4, #16
     a58:	d028      	beq.n	aac <displayUsageFaultCauseToGdbConsole+0x5c>
     a5a:	4816      	ldr	r0, [pc, #88]	; (ab4 <displayUsageFaultCauseToGdbConsole+0x64>)
     a5c:	f001 fee5 	bl	282a <__mriGdbConsole_WriteString>
     a60:	4815      	ldr	r0, [pc, #84]	; (ab8 <displayUsageFaultCauseToGdbConsole+0x68>)
     a62:	f001 fee2 	bl	282a <__mriGdbConsole_WriteString>
     a66:	4620      	mov	r0, r4
     a68:	f001 ff06 	bl	2878 <__mriGdbConsole_WriteHexValue>
     a6c:	05a1      	lsls	r1, r4, #22
     a6e:	d502      	bpl.n	a76 <displayUsageFaultCauseToGdbConsole+0x26>
     a70:	4812      	ldr	r0, [pc, #72]	; (abc <displayUsageFaultCauseToGdbConsole+0x6c>)
     a72:	f001 feda 	bl	282a <__mriGdbConsole_WriteString>
     a76:	05e2      	lsls	r2, r4, #23
     a78:	d502      	bpl.n	a80 <displayUsageFaultCauseToGdbConsole+0x30>
     a7a:	4811      	ldr	r0, [pc, #68]	; (ac0 <displayUsageFaultCauseToGdbConsole+0x70>)
     a7c:	f001 fed5 	bl	282a <__mriGdbConsole_WriteString>
     a80:	0723      	lsls	r3, r4, #28
     a82:	d502      	bpl.n	a8a <displayUsageFaultCauseToGdbConsole+0x3a>
     a84:	480f      	ldr	r0, [pc, #60]	; (ac4 <displayUsageFaultCauseToGdbConsole+0x74>)
     a86:	f001 fed0 	bl	282a <__mriGdbConsole_WriteString>
     a8a:	0760      	lsls	r0, r4, #29
     a8c:	d502      	bpl.n	a94 <displayUsageFaultCauseToGdbConsole+0x44>
     a8e:	480e      	ldr	r0, [pc, #56]	; (ac8 <displayUsageFaultCauseToGdbConsole+0x78>)
     a90:	f001 fecb 	bl	282a <__mriGdbConsole_WriteString>
     a94:	07a1      	lsls	r1, r4, #30
     a96:	d502      	bpl.n	a9e <displayUsageFaultCauseToGdbConsole+0x4e>
     a98:	480c      	ldr	r0, [pc, #48]	; (acc <displayUsageFaultCauseToGdbConsole+0x7c>)
     a9a:	f001 fec6 	bl	282a <__mriGdbConsole_WriteString>
     a9e:	07e2      	lsls	r2, r4, #31
     aa0:	d504      	bpl.n	aac <displayUsageFaultCauseToGdbConsole+0x5c>
     aa2:	480b      	ldr	r0, [pc, #44]	; (ad0 <displayUsageFaultCauseToGdbConsole+0x80>)
     aa4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     aa8:	f001 bebf 	b.w	282a <__mriGdbConsole_WriteString>
     aac:	bd10      	pop	{r4, pc}
     aae:	bf00      	nop
     ab0:	e000ed00 	.word	0xe000ed00
     ab4:	00003917 	.word	0x00003917
     ab8:	00003812 	.word	0x00003812
     abc:	00003928 	.word	0x00003928
     ac0:	0000393c 	.word	0x0000393c
     ac4:	00003952 	.word	0x00003952
     ac8:	0000396a 	.word	0x0000396a
     acc:	0000398e 	.word	0x0000398e
     ad0:	000039a1 	.word	0x000039a1

00000ad4 <calculateFPBComparatorValue>:
     ad4:	4b0c      	ldr	r3, [pc, #48]	; (b08 <calculateFPBComparatorValue+0x34>)
     ad6:	4003      	ands	r3, r0
     ad8:	b113      	cbz	r3, ae0 <calculateFPBComparatorValue+0xc>
     ada:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     ade:	4770      	bx	lr
     ae0:	f020 4260 	bic.w	r2, r0, #3758096384	; 0xe0000000
     ae4:	f022 0303 	bic.w	r3, r2, #3
     ae8:	f043 0201 	orr.w	r2, r3, #1
     aec:	b939      	cbnz	r1, afe <calculateFPBComparatorValue+0x2a>
     aee:	f010 0f02 	tst.w	r0, #2
     af2:	bf0c      	ite	eq
     af4:	f04f 4080 	moveq.w	r0, #1073741824	; 0x40000000
     af8:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
     afc:	e001      	b.n	b02 <calculateFPBComparatorValue+0x2e>
     afe:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
     b02:	4310      	orrs	r0, r2
     b04:	4770      	bx	lr
     b06:	bf00      	nop
     b08:	e0000001 	.word	0xe0000001

00000b0c <findFPBBreakpointComparator>:
     b0c:	b538      	push	{r3, r4, r5, lr}
     b0e:	f7ff ffe1 	bl	ad4 <calculateFPBComparatorValue>
     b12:	4604      	mov	r4, r0
     b14:	f7ff fed6 	bl	8c4 <getFPBCodeComparatorCount>
     b18:	4a08      	ldr	r2, [pc, #32]	; (b3c <findFPBBreakpointComparator+0x30>)
     b1a:	2300      	movs	r3, #0
     b1c:	4283      	cmp	r3, r0
     b1e:	4611      	mov	r1, r2
     b20:	d009      	beq.n	b36 <findFPBBreakpointComparator+0x2a>
     b22:	f852 5b04 	ldr.w	r5, [r2], #4
     b26:	f025 5500 	bic.w	r5, r5, #536870912	; 0x20000000
     b2a:	f025 0502 	bic.w	r5, r5, #2
     b2e:	42ac      	cmp	r4, r5
     b30:	d002      	beq.n	b38 <findFPBBreakpointComparator+0x2c>
     b32:	3301      	adds	r3, #1
     b34:	e7f2      	b.n	b1c <findFPBBreakpointComparator+0x10>
     b36:	2100      	movs	r1, #0
     b38:	4608      	mov	r0, r1
     b3a:	bd38      	pop	{r3, r4, r5, pc}
     b3c:	e0002008 	.word	0xe0002008

00000b40 <isMPUNotPresent>:
     b40:	4b04      	ldr	r3, [pc, #16]	; (b54 <isMPUNotPresent+0x14>)
     b42:	6818      	ldr	r0, [r3, #0]
     b44:	f3c0 2107 	ubfx	r1, r0, #8, #8
     b48:	f1d1 0001 	rsbs	r0, r1, #1
     b4c:	bf38      	it	cc
     b4e:	2000      	movcc	r0, #0
     b50:	4770      	bx	lr
     b52:	bf00      	nop
     b54:	e000ed90 	.word	0xe000ed90

00000b58 <sendRegisterForTResponse>:
     b58:	b573      	push	{r0, r1, r4, r5, r6, lr}
     b5a:	4604      	mov	r4, r0
     b5c:	ad02      	add	r5, sp, #8
     b5e:	f845 2d04 	str.w	r2, [r5, #-4]!
     b62:	f001 f8b1 	bl	1cc8 <__mriBuffer_WriteByteAsHex>
     b66:	4620      	mov	r0, r4
     b68:	213a      	movs	r1, #58	; 0x3a
     b6a:	f001 f887 	bl	1c7c <__mriBuffer_WriteChar>
     b6e:	3d01      	subs	r5, #1
     b70:	f10d 0607 	add.w	r6, sp, #7
     b74:	f815 1f01 	ldrb.w	r1, [r5, #1]!
     b78:	4620      	mov	r0, r4
     b7a:	f001 f8a5 	bl	1cc8 <__mriBuffer_WriteByteAsHex>
     b7e:	42b5      	cmp	r5, r6
     b80:	d1f8      	bne.n	b74 <sendRegisterForTResponse+0x1c>
     b82:	4620      	mov	r0, r4
     b84:	213b      	movs	r1, #59	; 0x3b
     b86:	f001 f879 	bl	1c7c <__mriBuffer_WriteChar>
     b8a:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

00000b8c <__mriPlatform_DisableSingleStep>:
     b8c:	4b06      	ldr	r3, [pc, #24]	; (ba8 <__mriPlatform_DisableSingleStep+0x1c>)
     b8e:	4907      	ldr	r1, [pc, #28]	; (bac <__mriPlatform_DisableSingleStep+0x20>)
     b90:	68da      	ldr	r2, [r3, #12]
     b92:	f422 2080 	bic.w	r0, r2, #262144	; 0x40000
     b96:	60d8      	str	r0, [r3, #12]
     b98:	f8d1 3200 	ldr.w	r3, [r1, #512]	; 0x200
     b9c:	f023 0204 	bic.w	r2, r3, #4
     ba0:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
     ba4:	4770      	bx	lr
     ba6:	bf00      	nop
     ba8:	e000edf0 	.word	0xe000edf0
     bac:	100001e0 	.word	0x100001e0

00000bb0 <__mriCortexMInit>:
     bb0:	b510      	push	{r4, lr}
     bb2:	2100      	movs	r1, #0
     bb4:	f44f 7240 	mov.w	r2, #768	; 0x300
     bb8:	4823      	ldr	r0, [pc, #140]	; (c48 <Stack_Size+0x48>)
     bba:	f002 fc08 	bl	33ce <memset>
     bbe:	4b23      	ldr	r3, [pc, #140]	; (c4c <Stack_Size+0x4c>)
     bc0:	4923      	ldr	r1, [pc, #140]	; (c50 <Stack_Size+0x50>)
     bc2:	68da      	ldr	r2, [r3, #12]
     bc4:	f042 7080 	orr.w	r0, r2, #16777216	; 0x1000000
     bc8:	60d8      	str	r0, [r3, #12]
     bca:	680c      	ldr	r4, [r1, #0]
     bcc:	2300      	movs	r3, #0
     bce:	0f20      	lsrs	r0, r4, #28
     bd0:	f103 6260 	add.w	r2, r3, #234881024	; 0xe000000
     bd4:	f502 7181 	add.w	r1, r2, #258	; 0x102
     bd8:	010c      	lsls	r4, r1, #4
     bda:	4283      	cmp	r3, r0
     bdc:	d00a      	beq.n	bf4 <__mriCortexMInit+0x44>
     bde:	2100      	movs	r1, #0
     be0:	6021      	str	r1, [r4, #0]
     be2:	6061      	str	r1, [r4, #4]
     be4:	68a2      	ldr	r2, [r4, #8]
     be6:	3301      	adds	r3, #1
     be8:	f422 71d7 	bic.w	r1, r2, #430	; 0x1ae
     bec:	f021 0201 	bic.w	r2, r1, #1
     bf0:	60a2      	str	r2, [r4, #8]
     bf2:	e7ed      	b.n	bd0 <__mriCortexMInit+0x20>
     bf4:	f7ff fe66 	bl	8c4 <getFPBCodeComparatorCount>
     bf8:	4a16      	ldr	r2, [pc, #88]	; (c54 <Stack_Size+0x54>)
     bfa:	6813      	ldr	r3, [r2, #0]
     bfc:	f3c3 2103 	ubfx	r1, r3, #8, #4
     c00:	1840      	adds	r0, r0, r1
     c02:	4915      	ldr	r1, [pc, #84]	; (c58 <Stack_Size+0x58>)
     c04:	2300      	movs	r3, #0
     c06:	4283      	cmp	r3, r0
     c08:	d004      	beq.n	c14 <Stack_Size+0x14>
     c0a:	2400      	movs	r4, #0
     c0c:	f841 4b04 	str.w	r4, [r1], #4
     c10:	3301      	adds	r3, #1
     c12:	e7f8      	b.n	c06 <Stack_Size+0x6>
     c14:	6810      	ldr	r0, [r2, #0]
     c16:	f040 0403 	orr.w	r4, r0, #3
     c1a:	6014      	str	r4, [r2, #0]
     c1c:	4c0f      	ldr	r4, [pc, #60]	; (c5c <Stack_Size+0x5c>)
     c1e:	2208      	movs	r2, #8
     c20:	77e2      	strb	r2, [r4, #31]
     c22:	f884 2022 	strb.w	r2, [r4, #34]	; 0x22
     c26:	f884 2023 	strb.w	r2, [r4, #35]	; 0x23
     c2a:	f7ff ffaf 	bl	b8c <__mriPlatform_DisableSingleStep>
     c2e:	4b07      	ldr	r3, [pc, #28]	; (c4c <Stack_Size+0x4c>)
     c30:	2200      	movs	r2, #0
     c32:	68d9      	ldr	r1, [r3, #12]
     c34:	f421 3000 	bic.w	r0, r1, #131072	; 0x20000
     c38:	60d8      	str	r0, [r3, #12]
     c3a:	f884 2020 	strb.w	r2, [r4, #32]
     c3e:	68d9      	ldr	r1, [r3, #12]
     c40:	f441 3080 	orr.w	r0, r1, #65536	; 0x10000
     c44:	60d8      	str	r0, [r3, #12]
     c46:	bd10      	pop	{r4, pc}
     c48:	100001e0 	.word	0x100001e0
     c4c:	e000edf0 	.word	0xe000edf0
     c50:	e0001000 	.word	0xe0001000
     c54:	e0002000 	.word	0xe0002000
     c58:	e0002008 	.word	0xe0002008
     c5c:	e000ed00 	.word	0xe000ed00

00000c60 <__mriPlatform_EnableSingleStep>:
     c60:	b508      	push	{r3, lr}
     c62:	4b17      	ldr	r3, [pc, #92]	; (cc0 <__mriPlatform_EnableSingleStep+0x60>)
     c64:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
     c68:	f042 0004 	orr.w	r0, r2, #4
     c6c:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
     c70:	f8d3 3248 	ldr.w	r3, [r3, #584]	; 0x248
     c74:	8819      	ldrh	r1, [r3, #0]
     c76:	f021 020f 	bic.w	r2, r1, #15
     c7a:	b290      	uxth	r0, r2
     c7c:	f24f 3180 	movw	r1, #62336	; 0xf380
     c80:	4288      	cmp	r0, r1
     c82:	d110      	bne.n	ca6 <__mriPlatform_EnableSingleStep+0x46>
     c84:	885b      	ldrh	r3, [r3, #2]
     c86:	f648 0211 	movw	r2, #34833	; 0x8811
     c8a:	4293      	cmp	r3, r2
     c8c:	d002      	beq.n	c94 <__mriPlatform_EnableSingleStep+0x34>
     c8e:	1c50      	adds	r0, r2, #1
     c90:	4283      	cmp	r3, r0
     c92:	d108      	bne.n	ca6 <__mriPlatform_EnableSingleStep+0x46>
     c94:	2008      	movs	r0, #8
     c96:	f000 feac 	bl	19f2 <__mriSetBASEPRI>
     c9a:	480a      	ldr	r0, [pc, #40]	; (cc4 <__mriPlatform_EnableSingleStep+0x64>)
     c9c:	68c1      	ldr	r1, [r0, #12]
     c9e:	f441 2380 	orr.w	r3, r1, #262144	; 0x40000
     ca2:	60c3      	str	r3, [r0, #12]
     ca4:	bd08      	pop	{r3, pc}
     ca6:	f000 fea7 	bl	19f8 <__mriGetBASEPRI>
     caa:	4905      	ldr	r1, [pc, #20]	; (cc0 <__mriPlatform_EnableSingleStep+0x60>)
     cac:	f8d1 3200 	ldr.w	r3, [r1, #512]	; 0x200
     cb0:	f8c1 0268 	str.w	r0, [r1, #616]	; 0x268
     cb4:	f043 0208 	orr.w	r2, r3, #8
     cb8:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
     cbc:	e7ea      	b.n	c94 <__mriPlatform_EnableSingleStep+0x34>
     cbe:	bf00      	nop
     cc0:	100001e0 	.word	0x100001e0
     cc4:	e000edf0 	.word	0xe000edf0

00000cc8 <__mriPlatform_IsSingleStepping>:
     cc8:	4b02      	ldr	r3, [pc, #8]	; (cd4 <__mriPlatform_IsSingleStepping+0xc>)
     cca:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
     cce:	f000 0004 	and.w	r0, r0, #4
     cd2:	4770      	bx	lr
     cd4:	100001e0 	.word	0x100001e0

00000cd8 <__mriPlatform_GetPacketBuffer>:
     cd8:	4800      	ldr	r0, [pc, #0]	; (cdc <__mriPlatform_GetPacketBuffer+0x4>)
     cda:	4770      	bx	lr
     cdc:	10000450 	.word	0x10000450

00000ce0 <__mriPlatform_GetPacketBufferSize>:
     ce0:	2089      	movs	r0, #137	; 0x89
     ce2:	4770      	bx	lr

00000ce4 <__mriPlatform_DetermineCauseOfException>:
     ce4:	b510      	push	{r4, lr}
     ce6:	f000 fe81 	bl	19ec <__mriGetIPSR>
     cea:	b2c0      	uxtb	r0, r0
     cec:	1e81      	subs	r1, r0, #2
     cee:	2916      	cmp	r1, #22
     cf0:	d824      	bhi.n	d3c <__mriPlatform_DetermineCauseOfException+0x58>
     cf2:	e8df f001 	tbb	[pc, r1]
     cf6:	250c      	.short	0x250c
     cf8:	23100e25 	.word	0x23100e25
     cfc:	23232323 	.word	0x23232323
     d00:	23232312 	.word	0x23232312
     d04:	23232323 	.word	0x23232323
     d08:	0c0c0c23 	.word	0x0c0c0c23
     d0c:	0c          	.byte	0x0c
     d0d:	00          	.byte	0x00
     d0e:	2002      	movs	r0, #2
     d10:	bd10      	pop	{r4, pc}
     d12:	200a      	movs	r0, #10
     d14:	bd10      	pop	{r4, pc}
     d16:	2004      	movs	r0, #4
     d18:	bd10      	pop	{r4, pc}
     d1a:	4b0a      	ldr	r3, [pc, #40]	; (d44 <__mriPlatform_DetermineCauseOfException+0x60>)
     d1c:	6b18      	ldr	r0, [r3, #48]	; 0x30
     d1e:	2300      	movs	r3, #0
     d20:	4a09      	ldr	r2, [pc, #36]	; (d48 <__mriPlatform_DetermineCauseOfException+0x64>)
     d22:	00dc      	lsls	r4, r3, #3
     d24:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
     d28:	4201      	tst	r1, r0
     d2a:	d004      	beq.n	d36 <__mriPlatform_DetermineCauseOfException+0x52>
     d2c:	4805      	ldr	r0, [pc, #20]	; (d44 <__mriPlatform_DetermineCauseOfException+0x60>)
     d2e:	1912      	adds	r2, r2, r4
     d30:	6301      	str	r1, [r0, #48]	; 0x30
     d32:	7910      	ldrb	r0, [r2, #4]
     d34:	bd10      	pop	{r4, pc}
     d36:	3301      	adds	r3, #1
     d38:	2b04      	cmp	r3, #4
     d3a:	d1f1      	bne.n	d20 <__mriPlatform_DetermineCauseOfException+0x3c>
     d3c:	2011      	movs	r0, #17
     d3e:	bd10      	pop	{r4, pc}
     d40:	200b      	movs	r0, #11
     d42:	bd10      	pop	{r4, pc}
     d44:	e000ed00 	.word	0xe000ed00
     d48:	000037c0 	.word	0x000037c0

00000d4c <__mriPlatform_DisplayFaultCauseToGdbConsole>:
     d4c:	b510      	push	{r4, lr}
     d4e:	f000 fe4d 	bl	19ec <__mriGetIPSR>
     d52:	b2c0      	uxtb	r0, r0
     d54:	1ec1      	subs	r1, r0, #3
     d56:	2903      	cmp	r1, #3
     d58:	d82f      	bhi.n	dba <__mriPlatform_DisplayFaultCauseToGdbConsole+0x6e>
     d5a:	e8df f001 	tbb	[pc, r1]
     d5e:	2102      	.short	0x2102
     d60:	2724      	.short	0x2724
     d62:	4b16      	ldr	r3, [pc, #88]	; (dbc <__mriPlatform_DisplayFaultCauseToGdbConsole+0x70>)
     d64:	4816      	ldr	r0, [pc, #88]	; (dc0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x74>)
     d66:	6adc      	ldr	r4, [r3, #44]	; 0x2c
     d68:	f001 fd5f 	bl	282a <__mriGdbConsole_WriteString>
     d6c:	4815      	ldr	r0, [pc, #84]	; (dc4 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x78>)
     d6e:	f001 fd5c 	bl	282a <__mriGdbConsole_WriteString>
     d72:	4620      	mov	r0, r4
     d74:	f001 fd80 	bl	2878 <__mriGdbConsole_WriteHexValue>
     d78:	2c00      	cmp	r4, #0
     d7a:	da02      	bge.n	d82 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x36>
     d7c:	4812      	ldr	r0, [pc, #72]	; (dc8 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x7c>)
     d7e:	f001 fd54 	bl	282a <__mriGdbConsole_WriteString>
     d82:	07a3      	lsls	r3, r4, #30
     d84:	d502      	bpl.n	d8c <__mriPlatform_DisplayFaultCauseToGdbConsole+0x40>
     d86:	4811      	ldr	r0, [pc, #68]	; (dcc <__mriPlatform_DisplayFaultCauseToGdbConsole+0x80>)
     d88:	f001 fd4f 	bl	282a <__mriGdbConsole_WriteString>
     d8c:	0060      	lsls	r0, r4, #1
     d8e:	d50f      	bpl.n	db0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     d90:	480f      	ldr	r0, [pc, #60]	; (dd0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x84>)
     d92:	f001 fd4a 	bl	282a <__mriGdbConsole_WriteString>
     d96:	f7ff fdaf 	bl	8f8 <displayMemFaultCauseToGdbConsole>
     d9a:	f7ff fdff 	bl	99c <displayBusFaultCauseToGdbConsole>
     d9e:	e005      	b.n	dac <__mriPlatform_DisplayFaultCauseToGdbConsole+0x60>
     da0:	f7ff fdaa 	bl	8f8 <displayMemFaultCauseToGdbConsole>
     da4:	e004      	b.n	db0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     da6:	f7ff fdf9 	bl	99c <displayBusFaultCauseToGdbConsole>
     daa:	e001      	b.n	db0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     dac:	f7ff fe50 	bl	a50 <displayUsageFaultCauseToGdbConsole>
     db0:	4808      	ldr	r0, [pc, #32]	; (dd4 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x88>)
     db2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     db6:	f001 bd38 	b.w	282a <__mriGdbConsole_WriteString>
     dba:	bd10      	pop	{r4, pc}
     dbc:	e000ed00 	.word	0xe000ed00
     dc0:	000039bc 	.word	0x000039bc
     dc4:	00003812 	.word	0x00003812
     dc8:	000039cc 	.word	0x000039cc
     dcc:	000039dd 	.word	0x000039dd
     dd0:	000039f4 	.word	0x000039f4
     dd4:	00003a00 	.word	0x00003a00

00000dd8 <__mriPlatform_EnteringDebugger>:
     dd8:	b510      	push	{r4, lr}
     dda:	4c3b      	ldr	r4, [pc, #236]	; (ec8 <__mriPlatform_EnteringDebugger+0xf0>)
     ddc:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
     de0:	f8d4 224c 	ldr.w	r2, [r4, #588]	; 0x24c
     de4:	f8d4 1248 	ldr.w	r1, [r4, #584]	; 0x248
     de8:	f023 0002 	bic.w	r0, r3, #2
     dec:	f402 7300 	and.w	r3, r2, #512	; 0x200
     df0:	f8c4 1250 	str.w	r1, [r4, #592]	; 0x250
     df4:	f8c4 0200 	str.w	r0, [r4, #512]	; 0x200
     df8:	f8c4 3254 	str.w	r3, [r4, #596]	; 0x254
     dfc:	f7ff fea0 	bl	b40 <isMPUNotPresent>
     e00:	4932      	ldr	r1, [pc, #200]	; (ecc <__mriPlatform_EnteringDebugger+0xf4>)
     e02:	b908      	cbnz	r0, e08 <__mriPlatform_EnteringDebugger+0x30>
     e04:	6848      	ldr	r0, [r1, #4]
     e06:	e001      	b.n	e0c <__mriPlatform_EnteringDebugger+0x34>
     e08:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     e0c:	f8c4 0258 	str.w	r0, [r4, #600]	; 0x258
     e10:	688a      	ldr	r2, [r1, #8]
     e12:	f8c4 225c 	str.w	r2, [r4, #604]	; 0x25c
     e16:	680c      	ldr	r4, [r1, #0]
     e18:	f3c4 2307 	ubfx	r3, r4, #8, #8
     e1c:	1e58      	subs	r0, r3, #1
     e1e:	f7ff fd5d 	bl	8dc <prepareToAccessMPURegion>
     e22:	f7ff fe8d 	bl	b40 <isMPUNotPresent>
     e26:	b918      	cbnz	r0, e30 <__mriPlatform_EnteringDebugger+0x58>
     e28:	4928      	ldr	r1, [pc, #160]	; (ecc <__mriPlatform_EnteringDebugger+0xf4>)
     e2a:	68c8      	ldr	r0, [r1, #12]
     e2c:	0942      	lsrs	r2, r0, #5
     e2e:	e000      	b.n	e32 <__mriPlatform_EnteringDebugger+0x5a>
     e30:	2200      	movs	r2, #0
     e32:	4c25      	ldr	r4, [pc, #148]	; (ec8 <__mriPlatform_EnteringDebugger+0xf0>)
     e34:	f8c4 2260 	str.w	r2, [r4, #608]	; 0x260
     e38:	f7ff fe82 	bl	b40 <isMPUNotPresent>
     e3c:	b910      	cbnz	r0, e44 <__mriPlatform_EnteringDebugger+0x6c>
     e3e:	4b23      	ldr	r3, [pc, #140]	; (ecc <__mriPlatform_EnteringDebugger+0xf4>)
     e40:	6919      	ldr	r1, [r3, #16]
     e42:	e000      	b.n	e46 <__mriPlatform_EnteringDebugger+0x6e>
     e44:	2100      	movs	r1, #0
     e46:	f8c4 1264 	str.w	r1, [r4, #612]	; 0x264
     e4a:	f7ff fe79 	bl	b40 <isMPUNotPresent>
     e4e:	4c1f      	ldr	r4, [pc, #124]	; (ecc <__mriPlatform_EnteringDebugger+0xf4>)
     e50:	b938      	cbnz	r0, e62 <__mriPlatform_EnteringDebugger+0x8a>
     e52:	6860      	ldr	r0, [r4, #4]
     e54:	f020 0201 	bic.w	r2, r0, #1
     e58:	6062      	str	r2, [r4, #4]
     e5a:	f000 fdd0 	bl	19fe <__mriDSB>
     e5e:	f000 fdd1 	bl	1a04 <__mriISB>
     e62:	6823      	ldr	r3, [r4, #0]
     e64:	f3c3 2107 	ubfx	r1, r3, #8, #8
     e68:	1e48      	subs	r0, r1, #1
     e6a:	f7ff fd37 	bl	8dc <prepareToAccessMPURegion>
     e6e:	f7ff fe67 	bl	b40 <isMPUNotPresent>
     e72:	b908      	cbnz	r0, e78 <__mriPlatform_EnteringDebugger+0xa0>
     e74:	4c15      	ldr	r4, [pc, #84]	; (ecc <__mriPlatform_EnteringDebugger+0xf4>)
     e76:	60e0      	str	r0, [r4, #12]
     e78:	f7ff fe62 	bl	b40 <isMPUNotPresent>
     e7c:	b910      	cbnz	r0, e84 <__mriPlatform_EnteringDebugger+0xac>
     e7e:	4814      	ldr	r0, [pc, #80]	; (ed0 <__mriPlatform_EnteringDebugger+0xf8>)
     e80:	4a12      	ldr	r2, [pc, #72]	; (ecc <__mriPlatform_EnteringDebugger+0xf4>)
     e82:	6110      	str	r0, [r2, #16]
     e84:	f7ff fe5c 	bl	b40 <isMPUNotPresent>
     e88:	b940      	cbnz	r0, e9c <__mriPlatform_EnteringDebugger+0xc4>
     e8a:	4b10      	ldr	r3, [pc, #64]	; (ecc <__mriPlatform_EnteringDebugger+0xf4>)
     e8c:	6859      	ldr	r1, [r3, #4]
     e8e:	f041 0403 	orr.w	r4, r1, #3
     e92:	605c      	str	r4, [r3, #4]
     e94:	f000 fdb3 	bl	19fe <__mriDSB>
     e98:	f000 fdb4 	bl	1a04 <__mriISB>
     e9c:	4c0a      	ldr	r4, [pc, #40]	; (ec8 <__mriPlatform_EnteringDebugger+0xf0>)
     e9e:	f8d4 0200 	ldr.w	r0, [r4, #512]	; 0x200
     ea2:	0702      	lsls	r2, r0, #28
     ea4:	d50c      	bpl.n	ec0 <__mriPlatform_EnteringDebugger+0xe8>
     ea6:	f8d4 2200 	ldr.w	r2, [r4, #512]	; 0x200
     eaa:	f8d4 0268 	ldr.w	r0, [r4, #616]	; 0x268
     eae:	f022 0308 	bic.w	r3, r2, #8
     eb2:	f8c4 3200 	str.w	r3, [r4, #512]	; 0x200
     eb6:	f000 fd9c 	bl	19f2 <__mriSetBASEPRI>
     eba:	2100      	movs	r1, #0
     ebc:	f8c4 1268 	str.w	r1, [r4, #616]	; 0x268
     ec0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     ec4:	f7ff be62 	b.w	b8c <__mriPlatform_DisableSingleStep>
     ec8:	100001e0 	.word	0x100001e0
     ecc:	e000ed90 	.word	0xe000ed90
     ed0:	0100003f 	.word	0x0100003f

00000ed4 <__mriPlatform_LeavingDebugger>:
     ed4:	b538      	push	{r3, r4, r5, lr}
     ed6:	f7ff fe33 	bl	b40 <isMPUNotPresent>
     eda:	4c22      	ldr	r4, [pc, #136]	; (f64 <__mriPlatform_LeavingDebugger+0x90>)
     edc:	b938      	cbnz	r0, eee <__mriPlatform_LeavingDebugger+0x1a>
     ede:	6863      	ldr	r3, [r4, #4]
     ee0:	f023 0001 	bic.w	r0, r3, #1
     ee4:	6060      	str	r0, [r4, #4]
     ee6:	f000 fd8a 	bl	19fe <__mriDSB>
     eea:	f000 fd8b 	bl	1a04 <__mriISB>
     eee:	6821      	ldr	r1, [r4, #0]
     ef0:	4c1d      	ldr	r4, [pc, #116]	; (f68 <__mriPlatform_LeavingDebugger+0x94>)
     ef2:	f3c1 2207 	ubfx	r2, r1, #8, #8
     ef6:	1e50      	subs	r0, r2, #1
     ef8:	f7ff fcf0 	bl	8dc <prepareToAccessMPURegion>
     efc:	f8d4 5260 	ldr.w	r5, [r4, #608]	; 0x260
     f00:	f7ff fe1e 	bl	b40 <isMPUNotPresent>
     f04:	b910      	cbnz	r0, f0c <__mriPlatform_LeavingDebugger+0x38>
     f06:	4b17      	ldr	r3, [pc, #92]	; (f64 <__mriPlatform_LeavingDebugger+0x90>)
     f08:	016d      	lsls	r5, r5, #5
     f0a:	60dd      	str	r5, [r3, #12]
     f0c:	f8d4 4264 	ldr.w	r4, [r4, #612]	; 0x264
     f10:	f7ff fe16 	bl	b40 <isMPUNotPresent>
     f14:	b908      	cbnz	r0, f1a <__mriPlatform_LeavingDebugger+0x46>
     f16:	4813      	ldr	r0, [pc, #76]	; (f64 <__mriPlatform_LeavingDebugger+0x90>)
     f18:	6104      	str	r4, [r0, #16]
     f1a:	4c13      	ldr	r4, [pc, #76]	; (f68 <__mriPlatform_LeavingDebugger+0x94>)
     f1c:	f8d4 025c 	ldr.w	r0, [r4, #604]	; 0x25c
     f20:	f7ff fcdc 	bl	8dc <prepareToAccessMPURegion>
     f24:	f8d4 4258 	ldr.w	r4, [r4, #600]	; 0x258
     f28:	f7ff fe0a 	bl	b40 <isMPUNotPresent>
     f2c:	b928      	cbnz	r0, f3a <__mriPlatform_LeavingDebugger+0x66>
     f2e:	490d      	ldr	r1, [pc, #52]	; (f64 <__mriPlatform_LeavingDebugger+0x90>)
     f30:	604c      	str	r4, [r1, #4]
     f32:	f000 fd64 	bl	19fe <__mriDSB>
     f36:	f000 fd65 	bl	1a04 <__mriISB>
     f3a:	4b0b      	ldr	r3, [pc, #44]	; (f68 <__mriPlatform_LeavingDebugger+0x94>)
     f3c:	461a      	mov	r2, r3
     f3e:	6811      	ldr	r1, [r2, #0]
     f40:	480a      	ldr	r0, [pc, #40]	; (f6c <__mriPlatform_LeavingDebugger+0x98>)
     f42:	3304      	adds	r3, #4
     f44:	4281      	cmp	r1, r0
     f46:	490a      	ldr	r1, [pc, #40]	; (f70 <__mriPlatform_LeavingDebugger+0x9c>)
     f48:	d102      	bne.n	f50 <__mriPlatform_LeavingDebugger+0x7c>
     f4a:	428b      	cmp	r3, r1
     f4c:	461a      	mov	r2, r3
     f4e:	d3f5      	bcc.n	f3c <__mriPlatform_LeavingDebugger+0x68>
     f50:	4b05      	ldr	r3, [pc, #20]	; (f68 <__mriPlatform_LeavingDebugger+0x94>)
     f52:	1a8a      	subs	r2, r1, r2
     f54:	f8d3 026c 	ldr.w	r0, [r3, #620]	; 0x26c
     f58:	4282      	cmp	r2, r0
     f5a:	bfc8      	it	gt
     f5c:	f8c3 226c 	strgt.w	r2, [r3, #620]	; 0x26c
     f60:	bd38      	pop	{r3, r4, r5, pc}
     f62:	bf00      	nop
     f64:	e000ed90 	.word	0xe000ed90
     f68:	100001e0 	.word	0x100001e0
     f6c:	deadbeef 	.word	0xdeadbeef
     f70:	100003e0 	.word	0x100003e0

00000f74 <__mriPlatform_GetProgramCounter>:
     f74:	4b01      	ldr	r3, [pc, #4]	; (f7c <__mriPlatform_GetProgramCounter+0x8>)
     f76:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     f7a:	4770      	bx	lr
     f7c:	100001e0 	.word	0x100001e0

00000f80 <__mriPlatform_SetProgramCounter>:
     f80:	4b01      	ldr	r3, [pc, #4]	; (f88 <__mriPlatform_SetProgramCounter+0x8>)
     f82:	f8c3 0248 	str.w	r0, [r3, #584]	; 0x248
     f86:	4770      	bx	lr
     f88:	100001e0 	.word	0x100001e0

00000f8c <__mriPlatform_AdvanceProgramCounterToNextInstruction>:
     f8c:	4b0b      	ldr	r3, [pc, #44]	; (fbc <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x30>)
     f8e:	f8d3 2248 	ldr.w	r2, [r3, #584]	; 0x248
     f92:	4618      	mov	r0, r3
     f94:	8811      	ldrh	r1, [r2, #0]
     f96:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
     f9a:	f5b1 4f68 	cmp.w	r1, #59392	; 0xe800
     f9e:	d005      	beq.n	fac <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x20>
     fa0:	f5b1 4f70 	cmp.w	r1, #61440	; 0xf000
     fa4:	d002      	beq.n	fac <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x20>
     fa6:	f5b1 4f78 	cmp.w	r1, #63488	; 0xf800
     faa:	d103      	bne.n	fb4 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x28>
     fac:	1d13      	adds	r3, r2, #4
     fae:	f8c0 3248 	str.w	r3, [r0, #584]	; 0x248
     fb2:	4770      	bx	lr
     fb4:	3202      	adds	r2, #2
     fb6:	f8c3 2248 	str.w	r2, [r3, #584]	; 0x248
     fba:	4770      	bx	lr
     fbc:	100001e0 	.word	0x100001e0

00000fc0 <__mriPlatform_IsCurrentInstructionHardcodedBreakpoint>:
     fc0:	4b04      	ldr	r3, [pc, #16]	; (fd4 <__mriPlatform_IsCurrentInstructionHardcodedBreakpoint+0x14>)
     fc2:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     fc6:	8801      	ldrh	r1, [r0, #0]
     fc8:	f5b1 423e 	subs.w	r2, r1, #48640	; 0xbe00
     fcc:	4253      	negs	r3, r2
     fce:	eb53 0002 	adcs.w	r0, r3, r2
     fd2:	4770      	bx	lr
     fd4:	100001e0 	.word	0x100001e0

00000fd8 <__mriPlatform_WasProgramCounterModifiedByUser>:
     fd8:	4b04      	ldr	r3, [pc, #16]	; (fec <__mriPlatform_WasProgramCounterModifiedByUser+0x14>)
     fda:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     fde:	f8d3 1250 	ldr.w	r1, [r3, #592]	; 0x250
     fe2:	1a40      	subs	r0, r0, r1
     fe4:	bf18      	it	ne
     fe6:	2001      	movne	r0, #1
     fe8:	4770      	bx	lr
     fea:	bf00      	nop
     fec:	100001e0 	.word	0x100001e0

00000ff0 <__mriPlatform_TypeOfCurrentInstruction>:
     ff0:	4b08      	ldr	r3, [pc, #32]	; (1014 <__mriPlatform_TypeOfCurrentInstruction+0x24>)
     ff2:	f64b 62ab 	movw	r2, #48811	; 0xbeab
     ff6:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     ffa:	8801      	ldrh	r1, [r0, #0]
     ffc:	4291      	cmp	r1, r2
     ffe:	d006      	beq.n	100e <__mriPlatform_TypeOfCurrentInstruction+0x1e>
    1000:	f64b 63ff 	movw	r3, #48895	; 0xbeff
    1004:	4299      	cmp	r1, r3
    1006:	bf0c      	ite	eq
    1008:	2002      	moveq	r0, #2
    100a:	2000      	movne	r0, #0
    100c:	4770      	bx	lr
    100e:	2001      	movs	r0, #1
    1010:	4770      	bx	lr
    1012:	bf00      	nop
    1014:	100001e0 	.word	0x100001e0

00001018 <__mriPlatform_GetSemihostCallParameters>:
    1018:	4a07      	ldr	r2, [pc, #28]	; (1038 <__mriPlatform_GetSemihostCallParameters+0x20>)
    101a:	b530      	push	{r4, r5, lr}
    101c:	f8d2 1218 	ldr.w	r1, [r2, #536]	; 0x218
    1020:	f8d2 5210 	ldr.w	r5, [r2, #528]	; 0x210
    1024:	f8d2 4214 	ldr.w	r4, [r2, #532]	; 0x214
    1028:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
    102c:	6084      	str	r4, [r0, #8]
    102e:	e880 0024 	stmia.w	r0, {r2, r5}
    1032:	60c1      	str	r1, [r0, #12]
    1034:	bd30      	pop	{r4, r5, pc}
    1036:	bf00      	nop
    1038:	100001e0 	.word	0x100001e0

0000103c <__mriPlatform_SetSemihostCallReturnValue>:
    103c:	4b01      	ldr	r3, [pc, #4]	; (1044 <__mriPlatform_SetSemihostCallReturnValue+0x8>)
    103e:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
    1042:	4770      	bx	lr
    1044:	100001e0 	.word	0x100001e0

00001048 <__mriPlatform_WasMemoryFaultEncountered>:
    1048:	b508      	push	{r3, lr}
    104a:	f000 fcd8 	bl	19fe <__mriDSB>
    104e:	4b06      	ldr	r3, [pc, #24]	; (1068 <__mriPlatform_WasMemoryFaultEncountered+0x20>)
    1050:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
    1054:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
    1058:	f000 0002 	and.w	r0, r0, #2
    105c:	f022 0102 	bic.w	r1, r2, #2
    1060:	f8c3 1200 	str.w	r1, [r3, #512]	; 0x200
    1064:	bd08      	pop	{r3, pc}
    1066:	bf00      	nop
    1068:	100001e0 	.word	0x100001e0

0000106c <__mriPlatform_WriteTResponseRegistersToBuffer>:
    106c:	b538      	push	{r3, r4, r5, lr}
    106e:	4c0d      	ldr	r4, [pc, #52]	; (10a4 <__mriPlatform_WriteTResponseRegistersToBuffer+0x38>)
    1070:	4605      	mov	r5, r0
    1072:	210c      	movs	r1, #12
    1074:	f8d4 223c 	ldr.w	r2, [r4, #572]	; 0x23c
    1078:	f7ff fd6e 	bl	b58 <sendRegisterForTResponse>
    107c:	4628      	mov	r0, r5
    107e:	210d      	movs	r1, #13
    1080:	f8d4 2240 	ldr.w	r2, [r4, #576]	; 0x240
    1084:	f7ff fd68 	bl	b58 <sendRegisterForTResponse>
    1088:	4628      	mov	r0, r5
    108a:	210e      	movs	r1, #14
    108c:	f8d4 2244 	ldr.w	r2, [r4, #580]	; 0x244
    1090:	f7ff fd62 	bl	b58 <sendRegisterForTResponse>
    1094:	f8d4 2248 	ldr.w	r2, [r4, #584]	; 0x248
    1098:	4628      	mov	r0, r5
    109a:	210f      	movs	r1, #15
    109c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    10a0:	f7ff bd5a 	b.w	b58 <sendRegisterForTResponse>
    10a4:	100001e0 	.word	0x100001e0

000010a8 <__mriPlatform_CopyContextToBuffer>:
    10a8:	b570      	push	{r4, r5, r6, lr}
    10aa:	4c06      	ldr	r4, [pc, #24]	; (10c4 <__mriPlatform_CopyContextToBuffer+0x1c>)
    10ac:	4606      	mov	r6, r0
    10ae:	f104 0544 	add.w	r5, r4, #68	; 0x44
    10b2:	f814 1f01 	ldrb.w	r1, [r4, #1]!
    10b6:	4630      	mov	r0, r6
    10b8:	f000 fe06 	bl	1cc8 <__mriBuffer_WriteByteAsHex>
    10bc:	42ac      	cmp	r4, r5
    10be:	d1f8      	bne.n	10b2 <__mriPlatform_CopyContextToBuffer+0xa>
    10c0:	bd70      	pop	{r4, r5, r6, pc}
    10c2:	bf00      	nop
    10c4:	100003eb 	.word	0x100003eb

000010c8 <__mriPlatform_CopyContextFromBuffer>:
    10c8:	b570      	push	{r4, r5, r6, lr}
    10ca:	4c0b      	ldr	r4, [pc, #44]	; (10f8 <__mriPlatform_CopyContextFromBuffer+0x30>)
    10cc:	4606      	mov	r6, r0
    10ce:	f104 0544 	add.w	r5, r4, #68	; 0x44
    10d2:	4630      	mov	r0, r6
    10d4:	f000 fe14 	bl	1d00 <__mriBuffer_ReadByteAsHex>
    10d8:	f804 0f01 	strb.w	r0, [r4, #1]!
    10dc:	42ac      	cmp	r4, r5
    10de:	d1f8      	bne.n	10d2 <__mriPlatform_CopyContextFromBuffer+0xa>
    10e0:	4b06      	ldr	r3, [pc, #24]	; (10fc <__mriPlatform_CopyContextFromBuffer+0x34>)
    10e2:	f8d3 224c 	ldr.w	r2, [r3, #588]	; 0x24c
    10e6:	f8d3 0254 	ldr.w	r0, [r3, #596]	; 0x254
    10ea:	f422 7100 	bic.w	r1, r2, #512	; 0x200
    10ee:	ea41 0200 	orr.w	r2, r1, r0
    10f2:	f8c3 224c 	str.w	r2, [r3, #588]	; 0x24c
    10f6:	bd70      	pop	{r4, r5, r6, pc}
    10f8:	100003eb 	.word	0x100003eb
    10fc:	100001e0 	.word	0x100001e0

00001100 <__mriPlatform_SetHardwareBreakpoint>:
    1100:	4b19      	ldr	r3, [pc, #100]	; (1168 <__mriPlatform_SetHardwareBreakpoint+0x68>)
    1102:	b570      	push	{r4, r5, r6, lr}
    1104:	2400      	movs	r4, #0
    1106:	2902      	cmp	r1, #2
    1108:	4605      	mov	r5, r0
    110a:	601c      	str	r4, [r3, #0]
    110c:	d008      	beq.n	1120 <__mriPlatform_SetHardwareBreakpoint+0x20>
    110e:	d301      	bcc.n	1114 <__mriPlatform_SetHardwareBreakpoint+0x14>
    1110:	2904      	cmp	r1, #4
    1112:	d904      	bls.n	111e <__mriPlatform_SetHardwareBreakpoint+0x1e>
    1114:	2204      	movs	r2, #4
    1116:	601a      	str	r2, [r3, #0]
    1118:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
    111c:	e000      	b.n	1120 <__mriPlatform_SetHardwareBreakpoint+0x20>
    111e:	2401      	movs	r4, #1
    1120:	6818      	ldr	r0, [r3, #0]
    1122:	b9f8      	cbnz	r0, 1164 <__mriPlatform_SetHardwareBreakpoint+0x64>
    1124:	4628      	mov	r0, r5
    1126:	4621      	mov	r1, r4
    1128:	f7ff fcf0 	bl	b0c <findFPBBreakpointComparator>
    112c:	4606      	mov	r6, r0
    112e:	b9c8      	cbnz	r0, 1164 <__mriPlatform_SetHardwareBreakpoint+0x64>
    1130:	f7ff fbc8 	bl	8c4 <getFPBCodeComparatorCount>
    1134:	4a0d      	ldr	r2, [pc, #52]	; (116c <__mriPlatform_SetHardwareBreakpoint+0x6c>)
    1136:	4633      	mov	r3, r6
    1138:	4283      	cmp	r3, r0
    113a:	4616      	mov	r6, r2
    113c:	d00c      	beq.n	1158 <__mriPlatform_SetHardwareBreakpoint+0x58>
    113e:	f852 1b04 	ldr.w	r1, [r2], #4
    1142:	07c9      	lsls	r1, r1, #31
    1144:	d501      	bpl.n	114a <__mriPlatform_SetHardwareBreakpoint+0x4a>
    1146:	3301      	adds	r3, #1
    1148:	e7f6      	b.n	1138 <__mriPlatform_SetHardwareBreakpoint+0x38>
    114a:	b12e      	cbz	r6, 1158 <__mriPlatform_SetHardwareBreakpoint+0x58>
    114c:	4628      	mov	r0, r5
    114e:	4621      	mov	r1, r4
    1150:	f7ff fcc0 	bl	ad4 <calculateFPBComparatorValue>
    1154:	6030      	str	r0, [r6, #0]
    1156:	bd70      	pop	{r4, r5, r6, pc}
    1158:	4803      	ldr	r0, [pc, #12]	; (1168 <__mriPlatform_SetHardwareBreakpoint+0x68>)
    115a:	6802      	ldr	r2, [r0, #0]
    115c:	2a08      	cmp	r2, #8
    115e:	bfb8      	it	lt
    1160:	2208      	movlt	r2, #8
    1162:	6002      	str	r2, [r0, #0]
    1164:	bd70      	pop	{r4, r5, r6, pc}
    1166:	bf00      	nop
    1168:	100001dc 	.word	0x100001dc
    116c:	e0002008 	.word	0xe0002008

00001170 <__mriPlatform_ClearHardwareBreakpoint>:
    1170:	4b0c      	ldr	r3, [pc, #48]	; (11a4 <__mriPlatform_ClearHardwareBreakpoint+0x34>)
    1172:	2200      	movs	r2, #0
    1174:	2902      	cmp	r1, #2
    1176:	b510      	push	{r4, lr}
    1178:	601a      	str	r2, [r3, #0]
    117a:	d003      	beq.n	1184 <__mriPlatform_ClearHardwareBreakpoint+0x14>
    117c:	d304      	bcc.n	1188 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    117e:	2904      	cmp	r1, #4
    1180:	d802      	bhi.n	1188 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    1182:	e006      	b.n	1192 <__mriPlatform_ClearHardwareBreakpoint+0x22>
    1184:	4611      	mov	r1, r2
    1186:	e005      	b.n	1194 <__mriPlatform_ClearHardwareBreakpoint+0x24>
    1188:	2104      	movs	r1, #4
    118a:	6019      	str	r1, [r3, #0]
    118c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    1190:	e000      	b.n	1194 <__mriPlatform_ClearHardwareBreakpoint+0x24>
    1192:	2101      	movs	r1, #1
    1194:	681c      	ldr	r4, [r3, #0]
    1196:	b91c      	cbnz	r4, 11a0 <__mriPlatform_ClearHardwareBreakpoint+0x30>
    1198:	f7ff fcb8 	bl	b0c <findFPBBreakpointComparator>
    119c:	b100      	cbz	r0, 11a0 <__mriPlatform_ClearHardwareBreakpoint+0x30>
    119e:	6004      	str	r4, [r0, #0]
    11a0:	bd10      	pop	{r4, pc}
    11a2:	bf00      	nop
    11a4:	100001dc 	.word	0x100001dc

000011a8 <__mriPlatform_SetHardwareWatchpoint>:
    11a8:	2a02      	cmp	r2, #2
    11aa:	bf98      	it	ls
    11ac:	4b1f      	ldrls	r3, [pc, #124]	; (122c <__mriPlatform_SetHardwareWatchpoint+0x84>)
    11ae:	b570      	push	{r4, r5, r6, lr}
    11b0:	bf94      	ite	ls
    11b2:	5c9d      	ldrbls	r5, [r3, r2]
    11b4:	2500      	movhi	r5, #0
    11b6:	1e4b      	subs	r3, r1, #1
    11b8:	420b      	tst	r3, r1
    11ba:	4606      	mov	r6, r0
    11bc:	460c      	mov	r4, r1
    11be:	d106      	bne.n	11ce <__mriPlatform_SetHardwareWatchpoint+0x26>
    11c0:	4248      	negs	r0, r1
    11c2:	4030      	ands	r0, r6
    11c4:	4286      	cmp	r6, r0
    11c6:	d102      	bne.n	11ce <__mriPlatform_SetHardwareWatchpoint+0x26>
    11c8:	1f69      	subs	r1, r5, #5
    11ca:	2902      	cmp	r1, #2
    11cc:	d905      	bls.n	11da <__mriPlatform_SetHardwareWatchpoint+0x32>
    11ce:	4b18      	ldr	r3, [pc, #96]	; (1230 <__mriPlatform_SetHardwareWatchpoint+0x88>)
    11d0:	6819      	ldr	r1, [r3, #0]
    11d2:	2904      	cmp	r1, #4
    11d4:	bfb8      	it	lt
    11d6:	2104      	movlt	r1, #4
    11d8:	e026      	b.n	1228 <__mriPlatform_SetHardwareWatchpoint+0x80>
    11da:	4630      	mov	r0, r6
    11dc:	4621      	mov	r1, r4
    11de:	462a      	mov	r2, r5
    11e0:	f7ff fb46 	bl	870 <findDWTComparator>
    11e4:	bb08      	cbnz	r0, 122a <__mriPlatform_SetHardwareWatchpoint+0x82>
    11e6:	4a13      	ldr	r2, [pc, #76]	; (1234 <__mriPlatform_SetHardwareWatchpoint+0x8c>)
    11e8:	6813      	ldr	r3, [r2, #0]
    11ea:	0f19      	lsrs	r1, r3, #28
    11ec:	f100 6260 	add.w	r2, r0, #234881024	; 0xe000000
    11f0:	f502 7381 	add.w	r3, r2, #258	; 0x102
    11f4:	011b      	lsls	r3, r3, #4
    11f6:	4288      	cmp	r0, r1
    11f8:	d011      	beq.n	121e <__mriPlatform_SetHardwareWatchpoint+0x76>
    11fa:	689a      	ldr	r2, [r3, #8]
    11fc:	f012 020f 	ands.w	r2, r2, #15
    1200:	d001      	beq.n	1206 <__mriPlatform_SetHardwareWatchpoint+0x5e>
    1202:	3001      	adds	r0, #1
    1204:	e7f2      	b.n	11ec <__mriPlatform_SetHardwareWatchpoint+0x44>
    1206:	2c01      	cmp	r4, #1
    1208:	d902      	bls.n	1210 <__mriPlatform_SetHardwareWatchpoint+0x68>
    120a:	0864      	lsrs	r4, r4, #1
    120c:	3201      	adds	r2, #1
    120e:	e7fa      	b.n	1206 <__mriPlatform_SetHardwareWatchpoint+0x5e>
    1210:	605a      	str	r2, [r3, #4]
    1212:	6858      	ldr	r0, [r3, #4]
    1214:	4290      	cmp	r0, r2
    1216:	d102      	bne.n	121e <__mriPlatform_SetHardwareWatchpoint+0x76>
    1218:	601e      	str	r6, [r3, #0]
    121a:	609d      	str	r5, [r3, #8]
    121c:	bd70      	pop	{r4, r5, r6, pc}
    121e:	4b04      	ldr	r3, [pc, #16]	; (1230 <__mriPlatform_SetHardwareWatchpoint+0x88>)
    1220:	6819      	ldr	r1, [r3, #0]
    1222:	2908      	cmp	r1, #8
    1224:	bfb8      	it	lt
    1226:	2108      	movlt	r1, #8
    1228:	6019      	str	r1, [r3, #0]
    122a:	bd70      	pop	{r4, r5, r6, pc}
    122c:	00003800 	.word	0x00003800
    1230:	100001dc 	.word	0x100001dc
    1234:	e0001000 	.word	0xe0001000

00001238 <__mriPlatform_ClearHardwareWatchpoint>:
    1238:	2a02      	cmp	r2, #2
    123a:	bf98      	it	ls
    123c:	4b11      	ldrls	r3, [pc, #68]	; (1284 <__mriPlatform_ClearHardwareWatchpoint+0x4c>)
    123e:	b510      	push	{r4, lr}
    1240:	bf94      	ite	ls
    1242:	5c9a      	ldrbls	r2, [r3, r2]
    1244:	2200      	movhi	r2, #0
    1246:	1e4c      	subs	r4, r1, #1
    1248:	400c      	ands	r4, r1
    124a:	d106      	bne.n	125a <__mriPlatform_ClearHardwareWatchpoint+0x22>
    124c:	424b      	negs	r3, r1
    124e:	4003      	ands	r3, r0
    1250:	4298      	cmp	r0, r3
    1252:	d102      	bne.n	125a <__mriPlatform_ClearHardwareWatchpoint+0x22>
    1254:	1f53      	subs	r3, r2, #5
    1256:	2b02      	cmp	r3, #2
    1258:	d906      	bls.n	1268 <__mriPlatform_ClearHardwareWatchpoint+0x30>
    125a:	480b      	ldr	r0, [pc, #44]	; (1288 <__mriPlatform_ClearHardwareWatchpoint+0x50>)
    125c:	6802      	ldr	r2, [r0, #0]
    125e:	2a04      	cmp	r2, #4
    1260:	bfb8      	it	lt
    1262:	2204      	movlt	r2, #4
    1264:	6002      	str	r2, [r0, #0]
    1266:	bd10      	pop	{r4, pc}
    1268:	f7ff fb02 	bl	870 <findDWTComparator>
    126c:	b140      	cbz	r0, 1280 <__mriPlatform_ClearHardwareWatchpoint+0x48>
    126e:	6004      	str	r4, [r0, #0]
    1270:	6044      	str	r4, [r0, #4]
    1272:	6881      	ldr	r1, [r0, #8]
    1274:	f421 73d7 	bic.w	r3, r1, #430	; 0x1ae
    1278:	f023 0201 	bic.w	r2, r3, #1
    127c:	6082      	str	r2, [r0, #8]
    127e:	bd10      	pop	{r4, pc}
    1280:	bd10      	pop	{r4, pc}
    1282:	bf00      	nop
    1284:	00003800 	.word	0x00003800
    1288:	100001dc 	.word	0x100001dc

0000128c <__mriPlatform_GetTargetXmlSize>:
    128c:	f240 20b9 	movw	r0, #697	; 0x2b9
    1290:	4770      	bx	lr
	...

00001294 <__mriPlatform_GetTargetXml>:
    1294:	4800      	ldr	r0, [pc, #0]	; (1298 <__mriPlatform_GetTargetXml+0x4>)
    1296:	4770      	bx	lr
    1298:	00003503 	.word	0x00003503

0000129c <__mriPlatform_CommUartIndex>:
    129c:	4b03      	ldr	r3, [pc, #12]	; (12ac <__mriPlatform_CommUartIndex+0x10>)
    129e:	4804      	ldr	r0, [pc, #16]	; (12b0 <__mriPlatform_CommUartIndex+0x14>)
    12a0:	681a      	ldr	r2, [r3, #0]
    12a2:	1a11      	subs	r1, r2, r0
    12a4:	4803      	ldr	r0, [pc, #12]	; (12b4 <__mriPlatform_CommUartIndex+0x18>)
    12a6:	108b      	asrs	r3, r1, #2
    12a8:	4358      	muls	r0, r3
    12aa:	4770      	bx	lr
    12ac:	100004e0 	.word	0x100004e0
    12b0:	100000c8 	.word	0x100000c8
    12b4:	38e38e39 	.word	0x38e38e39

000012b8 <__mriPlatform_CommHasReceiveData>:
    12b8:	4b03      	ldr	r3, [pc, #12]	; (12c8 <__mriPlatform_CommHasReceiveData+0x10>)
    12ba:	6818      	ldr	r0, [r3, #0]
    12bc:	68c1      	ldr	r1, [r0, #12]
    12be:	7d0a      	ldrb	r2, [r1, #20]
    12c0:	f002 0001 	and.w	r0, r2, #1
    12c4:	4770      	bx	lr
    12c6:	bf00      	nop
    12c8:	100004e0 	.word	0x100004e0

000012cc <__mriPlatform_CommReceiveChar>:
    12cc:	b508      	push	{r3, lr}
    12ce:	f7ff fff3 	bl	12b8 <__mriPlatform_CommHasReceiveData>
    12d2:	2800      	cmp	r0, #0
    12d4:	d0fb      	beq.n	12ce <__mriPlatform_CommReceiveChar+0x2>
    12d6:	4b02      	ldr	r3, [pc, #8]	; (12e0 <__mriPlatform_CommReceiveChar+0x14>)
    12d8:	6818      	ldr	r0, [r3, #0]
    12da:	68c1      	ldr	r1, [r0, #12]
    12dc:	7808      	ldrb	r0, [r1, #0]
    12de:	bd08      	pop	{r3, pc}
    12e0:	100004e0 	.word	0x100004e0

000012e4 <__mriPlatform_CommSendChar>:
    12e4:	4b05      	ldr	r3, [pc, #20]	; (12fc <__mriPlatform_CommSendChar+0x18>)
    12e6:	6819      	ldr	r1, [r3, #0]
    12e8:	68cb      	ldr	r3, [r1, #12]
    12ea:	7d1a      	ldrb	r2, [r3, #20]
    12ec:	f002 0120 	and.w	r1, r2, #32
    12f0:	b2ca      	uxtb	r2, r1
    12f2:	2a00      	cmp	r2, #0
    12f4:	d0f9      	beq.n	12ea <__mriPlatform_CommSendChar+0x6>
    12f6:	b2c0      	uxtb	r0, r0
    12f8:	7018      	strb	r0, [r3, #0]
    12fa:	4770      	bx	lr
    12fc:	100004e0 	.word	0x100004e0

00001300 <__mriPlatform_CommCausedInterrupt>:
    1300:	b510      	push	{r4, lr}
    1302:	f000 fb73 	bl	19ec <__mriGetIPSR>
    1306:	4604      	mov	r4, r0
    1308:	f7ff ffc8 	bl	129c <__mriPlatform_CommUartIndex>
    130c:	b2e3      	uxtb	r3, r4
    130e:	3015      	adds	r0, #21
    1310:	1a19      	subs	r1, r3, r0
    1312:	4248      	negs	r0, r1
    1314:	4148      	adcs	r0, r1
    1316:	bd10      	pop	{r4, pc}

00001318 <__mriPlatform_CommClearInterrupt>:
    1318:	4b02      	ldr	r3, [pc, #8]	; (1324 <__mriPlatform_CommClearInterrupt+0xc>)
    131a:	6818      	ldr	r0, [r3, #0]
    131c:	68c1      	ldr	r1, [r0, #12]
    131e:	688b      	ldr	r3, [r1, #8]
    1320:	4770      	bx	lr
    1322:	bf00      	nop
    1324:	100004e0 	.word	0x100004e0

00001328 <__mriPlatform_CommSharingWithApplication>:
    1328:	4b02      	ldr	r3, [pc, #8]	; (1334 <__mriPlatform_CommSharingWithApplication+0xc>)
    132a:	6858      	ldr	r0, [r3, #4]
    132c:	f000 0001 	and.w	r0, r0, #1
    1330:	4770      	bx	lr
    1332:	bf00      	nop
    1334:	100004e0 	.word	0x100004e0

00001338 <__mriPlatform_CommShouldWaitForGdbConnect>:
    1338:	4b05      	ldr	r3, [pc, #20]	; (1350 <__mriPlatform_CommShouldWaitForGdbConnect+0x18>)
    133a:	6858      	ldr	r0, [r3, #4]
    133c:	0782      	lsls	r2, r0, #30
    133e:	d404      	bmi.n	134a <__mriPlatform_CommShouldWaitForGdbConnect+0x12>
    1340:	f000 0101 	and.w	r1, r0, #1
    1344:	f081 0001 	eor.w	r0, r1, #1
    1348:	4770      	bx	lr
    134a:	2000      	movs	r0, #0
    134c:	4770      	bx	lr
    134e:	bf00      	nop
    1350:	100004e0 	.word	0x100004e0

00001354 <__mriPlatform_CommIsWaitingForGdbToConnect>:
    1354:	b508      	push	{r3, lr}
    1356:	f7ff ffef 	bl	1338 <__mriPlatform_CommShouldWaitForGdbConnect>
    135a:	b128      	cbz	r0, 1368 <__mriPlatform_CommIsWaitingForGdbToConnect+0x14>
    135c:	4b03      	ldr	r3, [pc, #12]	; (136c <__mriPlatform_CommIsWaitingForGdbToConnect+0x18>)
    135e:	6818      	ldr	r0, [r3, #0]
    1360:	68c1      	ldr	r1, [r0, #12]
    1362:	6a0a      	ldr	r2, [r1, #32]
    1364:	f002 0001 	and.w	r0, r2, #1
    1368:	bd08      	pop	{r3, pc}
    136a:	bf00      	nop
    136c:	100004e0 	.word	0x100004e0

00001370 <__mriPlatform_CommPrepareToWaitForGdbConnection>:
    1370:	b508      	push	{r3, lr}
    1372:	f7ff ffe1 	bl	1338 <__mriPlatform_CommShouldWaitForGdbConnect>
    1376:	b120      	cbz	r0, 1382 <__mriPlatform_CommPrepareToWaitForGdbConnection+0x12>
    1378:	4b02      	ldr	r3, [pc, #8]	; (1384 <__mriPlatform_CommPrepareToWaitForGdbConnection+0x14>)
    137a:	2207      	movs	r2, #7
    137c:	6818      	ldr	r0, [r3, #0]
    137e:	68c1      	ldr	r1, [r0, #12]
    1380:	620a      	str	r2, [r1, #32]
    1382:	bd08      	pop	{r3, pc}
    1384:	100004e0 	.word	0x100004e0

00001388 <__mriLpc176xUart_Init>:
    1388:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    138c:	b087      	sub	sp, #28
    138e:	4604      	mov	r4, r0
    1390:	2100      	movs	r1, #0
    1392:	220c      	movs	r2, #12
    1394:	a803      	add	r0, sp, #12
    1396:	f002 f81a 	bl	33ce <memset>
    139a:	4995      	ldr	r1, [pc, #596]	; (15f0 <__mriLpc176xUart_Init+0x268>)
    139c:	4620      	mov	r0, r4
    139e:	f7ff fa3b 	bl	818 <__mriToken_MatchingString>
    13a2:	4620      	mov	r0, r4
    13a4:	4993      	ldr	r1, [pc, #588]	; (15f4 <__mriLpc176xUart_Init+0x26c>)
    13a6:	f7ff fa37 	bl	818 <__mriToken_MatchingString>
    13aa:	b108      	cbz	r0, 13b0 <__mriLpc176xUart_Init+0x28>
    13ac:	2303      	movs	r3, #3
    13ae:	9304      	str	r3, [sp, #16]
    13b0:	4620      	mov	r0, r4
    13b2:	4991      	ldr	r1, [pc, #580]	; (15f8 <__mriLpc176xUart_Init+0x270>)
    13b4:	f7ff fa30 	bl	818 <__mriToken_MatchingString>
    13b8:	b108      	cbz	r0, 13be <__mriLpc176xUart_Init+0x36>
    13ba:	2001      	movs	r0, #1
    13bc:	9004      	str	r0, [sp, #16]
    13be:	4620      	mov	r0, r4
    13c0:	498e      	ldr	r1, [pc, #568]	; (15fc <__mriLpc176xUart_Init+0x274>)
    13c2:	f7ff fa29 	bl	818 <__mriToken_MatchingString>
    13c6:	b108      	cbz	r0, 13cc <__mriLpc176xUart_Init+0x44>
    13c8:	2102      	movs	r1, #2
    13ca:	9104      	str	r1, [sp, #16]
    13cc:	4620      	mov	r0, r4
    13ce:	498c      	ldr	r1, [pc, #560]	; (1600 <__mriLpc176xUart_Init+0x278>)
    13d0:	f7ff fa22 	bl	818 <__mriToken_MatchingString>
    13d4:	b108      	cbz	r0, 13da <__mriLpc176xUart_Init+0x52>
    13d6:	2200      	movs	r2, #0
    13d8:	9204      	str	r2, [sp, #16]
    13da:	4620      	mov	r0, r4
    13dc:	4989      	ldr	r1, [pc, #548]	; (1604 <__mriLpc176xUart_Init+0x27c>)
    13de:	f7ff fa1b 	bl	818 <__mriToken_MatchingString>
    13e2:	b108      	cbz	r0, 13e8 <__mriLpc176xUart_Init+0x60>
    13e4:	2701      	movs	r7, #1
    13e6:	9704      	str	r7, [sp, #16]
    13e8:	4620      	mov	r0, r4
    13ea:	4987      	ldr	r1, [pc, #540]	; (1608 <__mriLpc176xUart_Init+0x280>)
    13ec:	f7ff fa14 	bl	818 <__mriToken_MatchingString>
    13f0:	b108      	cbz	r0, 13f6 <__mriLpc176xUart_Init+0x6e>
    13f2:	2302      	movs	r3, #2
    13f4:	9304      	str	r3, [sp, #16]
    13f6:	4620      	mov	r0, r4
    13f8:	4984      	ldr	r1, [pc, #528]	; (160c <__mriLpc176xUart_Init+0x284>)
    13fa:	f7ff fa0d 	bl	818 <__mriToken_MatchingString>
    13fe:	b108      	cbz	r0, 1404 <__mriLpc176xUart_Init+0x7c>
    1400:	2003      	movs	r0, #3
    1402:	9004      	str	r0, [sp, #16]
    1404:	4620      	mov	r0, r4
    1406:	4982      	ldr	r1, [pc, #520]	; (1610 <__mriLpc176xUart_Init+0x288>)
    1408:	f7ff fa1b 	bl	842 <__mriToken_MatchingStringPrefix>
    140c:	b1d8      	cbz	r0, 1446 <__mriLpc176xUart_Init+0xbe>
    140e:	300e      	adds	r0, #14
    1410:	2300      	movs	r3, #0
    1412:	f810 1b01 	ldrb.w	r1, [r0], #1
    1416:	b1a9      	cbz	r1, 1444 <__mriLpc176xUart_Init+0xbc>
    1418:	4a7e      	ldr	r2, [pc, #504]	; (1614 <__mriLpc176xUart_Init+0x28c>)
    141a:	2500      	movs	r5, #0
    141c:	6015      	str	r5, [r2, #0]
    141e:	f810 1c01 	ldrb.w	r1, [r0, #-1]
    1422:	3930      	subs	r1, #48	; 0x30
    1424:	b2ce      	uxtb	r6, r1
    1426:	2e09      	cmp	r6, #9
    1428:	d902      	bls.n	1430 <__mriLpc176xUart_Init+0xa8>
    142a:	2709      	movs	r7, #9
    142c:	6017      	str	r7, [r2, #0]
    142e:	4629      	mov	r1, r5
    1430:	6812      	ldr	r2, [r2, #0]
    1432:	b11a      	cbz	r2, 143c <__mriLpc176xUart_Init+0xb4>
    1434:	4977      	ldr	r1, [pc, #476]	; (1614 <__mriLpc176xUart_Init+0x28c>)
    1436:	2000      	movs	r0, #0
    1438:	6008      	str	r0, [r1, #0]
    143a:	e003      	b.n	1444 <__mriLpc176xUart_Init+0xbc>
    143c:	270a      	movs	r7, #10
    143e:	fb07 1303 	mla	r3, r7, r3, r1
    1442:	e7e6      	b.n	1412 <__mriLpc176xUart_Init+0x8a>
    1444:	9305      	str	r3, [sp, #20]
    1446:	4620      	mov	r0, r4
    1448:	4973      	ldr	r1, [pc, #460]	; (1618 <__mriLpc176xUart_Init+0x290>)
    144a:	f7ff f9e5 	bl	818 <__mriToken_MatchingString>
    144e:	b108      	cbz	r0, 1454 <__mriLpc176xUart_Init+0xcc>
    1450:	2201      	movs	r2, #1
    1452:	9203      	str	r2, [sp, #12]
    1454:	9f04      	ldr	r7, [sp, #16]
    1456:	2124      	movs	r1, #36	; 0x24
    1458:	4379      	muls	r1, r7
    145a:	4870      	ldr	r0, [pc, #448]	; (161c <__mriLpc176xUart_Init+0x294>)
    145c:	4a70      	ldr	r2, [pc, #448]	; (1620 <__mriLpc176xUart_Init+0x298>)
    145e:	9f03      	ldr	r7, [sp, #12]
    1460:	1843      	adds	r3, r0, r1
    1462:	6013      	str	r3, [r2, #0]
    1464:	b127      	cbz	r7, 1470 <__mriLpc176xUart_Init+0xe8>
    1466:	6851      	ldr	r1, [r2, #4]
    1468:	f041 0301 	orr.w	r3, r1, #1
    146c:	6053      	str	r3, [r2, #4]
    146e:	e0bb      	b.n	15e8 <__mriLpc176xUart_Init+0x260>
    1470:	4a6c      	ldr	r2, [pc, #432]	; (1624 <__mriLpc176xUart_Init+0x29c>)
    1472:	691c      	ldr	r4, [r3, #16]
    1474:	f8d2 50c4 	ldr.w	r5, [r2, #196]	; 0xc4
    1478:	4325      	orrs	r5, r4
    147a:	f8c2 50c4 	str.w	r5, [r2, #196]	; 0xc4
    147e:	5842      	ldr	r2, [r0, r1]
    1480:	6959      	ldr	r1, [r3, #20]
    1482:	6810      	ldr	r0, [r2, #0]
    1484:	ea20 0401 	bic.w	r4, r0, r1
    1488:	6014      	str	r4, [r2, #0]
    148a:	6958      	ldr	r0, [r3, #20]
    148c:	6815      	ldr	r5, [r2, #0]
    148e:	f000 3155 	and.w	r1, r0, #1431655765	; 0x55555555
    1492:	4329      	orrs	r1, r5
    1494:	6011      	str	r1, [r2, #0]
    1496:	68da      	ldr	r2, [r3, #12]
    1498:	2510      	movs	r5, #16
    149a:	f882 5028 	strb.w	r5, [r2, #40]	; 0x28
    149e:	68dc      	ldr	r4, [r3, #12]
    14a0:	2101      	movs	r1, #1
    14a2:	7221      	strb	r1, [r4, #8]
    14a4:	68da      	ldr	r2, [r3, #12]
    14a6:	2003      	movs	r0, #3
    14a8:	7310      	strb	r0, [r2, #12]
    14aa:	9a05      	ldr	r2, [sp, #20]
    14ac:	2a00      	cmp	r2, #0
    14ae:	d05b      	beq.n	1568 <__mriLpc176xUart_Init+0x1e0>
    14b0:	4c5d      	ldr	r4, [pc, #372]	; (1628 <__mriLpc176xUart_Init+0x2a0>)
    14b2:	6820      	ldr	r0, [r4, #0]
    14b4:	ea4f 1c10 	mov.w	r12, r0, lsr #4
    14b8:	fbbc f4f2 	udiv	r4, r12, r2
    14bc:	fb02 f004 	mul.w	r0, r2, r4
    14c0:	4560      	cmp	r0, r12
    14c2:	d03a      	beq.n	153a <__mriLpc176xUart_Init+0x1b2>
    14c4:	0116      	lsls	r6, r2, #4
    14c6:	ea4f 2c0c 	mov.w	r12, r12, lsl #8
    14ca:	9601      	str	r6, [sp, #4]
    14cc:	460d      	mov	r5, r1
    14ce:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
    14d2:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    14d6:	4616      	mov	r6, r2
    14d8:	2001      	movs	r0, #1
    14da:	4288      	cmp	r0, r1
    14dc:	d228      	bcs.n	1530 <__mriLpc176xUart_Init+0x1a8>
    14de:	ea4f 1906 	mov.w	r9, r6, lsl #4
    14e2:	fbb9 fafe 	udiv	r10, r9, lr
    14e6:	eb0a 0b02 	add.w	r11, r10, r2
    14ea:	fbbc f9fb 	udiv	r9, r12, r11
    14ee:	f109 0a80 	add.w	r10, r9, #128	; 0x80
    14f2:	ea4f 291a 	mov.w	r9, r10, lsr #8
    14f6:	ea4f 1a09 	mov.w	r10, r9, lsl #4
    14fa:	fb00 fb0a 	mul.w	r11, r0, r10
    14fe:	ea4f 1b0b 	mov.w	r11, r11, lsl #4
    1502:	fbbb fbfe 	udiv	r11, r11, lr
    1506:	44da      	add	r10, r11
    1508:	f8dd b004 	ldr.w	r11, [sp, #4]
    150c:	fbbc fafa 	udiv	r10, r12, r10
    1510:	ebcb 0a0a 	rsb	r10, r11, r10
    1514:	f1ba 0f00 	cmp.w	r10, #0
    1518:	bfb8      	it	lt
    151a:	f1ca 0a00 	rsblt	r10, r10, #0
    151e:	45c2      	cmp	r10, r8
    1520:	d203      	bcs.n	152a <__mriLpc176xUart_Init+0x1a2>
    1522:	4607      	mov	r7, r0
    1524:	460d      	mov	r5, r1
    1526:	464c      	mov	r4, r9
    1528:	46d0      	mov	r8, r10
    152a:	3001      	adds	r0, #1
    152c:	18b6      	adds	r6, r6, r2
    152e:	e7d4      	b.n	14da <__mriLpc176xUart_Init+0x152>
    1530:	3101      	adds	r1, #1
    1532:	2910      	cmp	r1, #16
    1534:	d1cd      	bne.n	14d2 <__mriLpc176xUart_Init+0x14a>
    1536:	ea47 1505 	orr.w	r5, r7, r5, lsl #4
    153a:	68d8      	ldr	r0, [r3, #12]
    153c:	b2ed      	uxtb	r5, r5
    153e:	7b01      	ldrb	r1, [r0, #12]
    1540:	f041 0280 	orr.w	r2, r1, #128	; 0x80
    1544:	b2e1      	uxtb	r1, r4
    1546:	f3c4 2407 	ubfx	r4, r4, #8, #8
    154a:	7302      	strb	r2, [r0, #12]
    154c:	7001      	strb	r1, [r0, #0]
    154e:	7104      	strb	r4, [r0, #4]
    1550:	f880 5028 	strb.w	r5, [r0, #40]	; 0x28
    1554:	68d8      	ldr	r0, [r3, #12]
    1556:	4c32      	ldr	r4, [pc, #200]	; (1620 <__mriLpc176xUart_Init+0x298>)
    1558:	7b02      	ldrb	r2, [r0, #12]
    155a:	f002 017f 	and.w	r1, r2, #127	; 0x7f
    155e:	7301      	strb	r1, [r0, #12]
    1560:	6860      	ldr	r0, [r4, #4]
    1562:	f040 0202 	orr.w	r2, r0, #2
    1566:	6062      	str	r2, [r4, #4]
    1568:	685a      	ldr	r2, [r3, #4]
    156a:	6999      	ldr	r1, [r3, #24]
    156c:	6814      	ldr	r4, [r2, #0]
    156e:	6a18      	ldr	r0, [r3, #32]
    1570:	ea24 0401 	bic.w	r4, r4, r1
    1574:	4008      	ands	r0, r1
    1576:	4304      	orrs	r4, r0
    1578:	6014      	str	r4, [r2, #0]
    157a:	689a      	ldr	r2, [r3, #8]
    157c:	69d9      	ldr	r1, [r3, #28]
    157e:	6814      	ldr	r4, [r2, #0]
    1580:	6a18      	ldr	r0, [r3, #32]
    1582:	ea24 0401 	bic.w	r4, r4, r1
    1586:	4008      	ands	r0, r1
    1588:	ea44 0100 	orr.w	r1, r4, r0
    158c:	6011      	str	r1, [r2, #0]
    158e:	68da      	ldr	r2, [r3, #12]
    1590:	7b11      	ldrb	r1, [r2, #12]
    1592:	7b10      	ldrb	r0, [r2, #12]
    1594:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    1598:	7310      	strb	r0, [r2, #12]
    159a:	68da      	ldr	r2, [r3, #12]
    159c:	2001      	movs	r0, #1
    159e:	6050      	str	r0, [r2, #4]
    15a0:	68db      	ldr	r3, [r3, #12]
    15a2:	7319      	strb	r1, [r3, #12]
    15a4:	f7ff fee4 	bl	1370 <__mriPlatform_CommPrepareToWaitForGdbConnection>
    15a8:	f7ff fe78 	bl	129c <__mriPlatform_CommUartIndex>
    15ac:	1d41      	adds	r1, r0, #5
    15ae:	b2c8      	uxtb	r0, r1
    15b0:	b2c2      	uxtb	r2, r0
    15b2:	b253      	sxtb	r3, r2
    15b4:	2b00      	cmp	r3, #0
    15b6:	da06      	bge.n	15c6 <__mriLpc176xUart_Init+0x23e>
    15b8:	4b1c      	ldr	r3, [pc, #112]	; (162c <__mriLpc176xUart_Init+0x2a4>)
    15ba:	f000 010f 	and.w	r1, r0, #15
    15be:	18cb      	adds	r3, r1, r3
    15c0:	2100      	movs	r1, #0
    15c2:	7619      	strb	r1, [r3, #24]
    15c4:	e006      	b.n	15d4 <__mriLpc176xUart_Init+0x24c>
    15c6:	f103 4160 	add.w	r1, r3, #3758096384	; 0xe0000000
    15ca:	f501 4361 	add.w	r3, r1, #57600	; 0xe100
    15ce:	2100      	movs	r1, #0
    15d0:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
    15d4:	b252      	sxtb	r2, r2
    15d6:	f000 001f 	and.w	r0, r0, #31
    15da:	2301      	movs	r3, #1
    15dc:	0951      	lsrs	r1, r2, #5
    15de:	fa03 f200 	lsl.w	r2, r3, r0
    15e2:	4813      	ldr	r0, [pc, #76]	; (1630 <__mriLpc176xUart_Init+0x2a8>)
    15e4:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
    15e8:	b007      	add	sp, #28
    15ea:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    15ee:	bf00      	nop
    15f0:	00003a11 	.word	0x00003a11
    15f4:	00003a23 	.word	0x00003a23
    15f8:	00003a38 	.word	0x00003a38
    15fc:	00003a4e 	.word	0x00003a4e
    1600:	00003a64 	.word	0x00003a64
    1604:	00003a6f 	.word	0x00003a6f
    1608:	00003a7a 	.word	0x00003a7a
    160c:	00003a85 	.word	0x00003a85
    1610:	00003a02 	.word	0x00003a02
    1614:	100001dc 	.word	0x100001dc
    1618:	00003a90 	.word	0x00003a90
    161c:	100000c8 	.word	0x100000c8
    1620:	100004e0 	.word	0x100004e0
    1624:	400fc000 	.word	0x400fc000
    1628:	10000158 	.word	0x10000158
    162c:	e000ecfc 	.word	0xe000ecfc
    1630:	e000e100 	.word	0xe000e100

00001634 <__mriPlatform_CommWaitForReceiveDataToStop>:
    1634:	b538      	push	{r3, r4, r5, lr}
    1636:	4b13      	ldr	r3, [pc, #76]	; (1684 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    1638:	681c      	ldr	r4, [r3, #0]
    163a:	685d      	ldr	r5, [r3, #4]
    163c:	68da      	ldr	r2, [r3, #12]
    163e:	f022 407f 	bic.w	r0, r2, #4278190080	; 0xff000000
    1642:	b140      	cbz	r0, 1656 <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    1644:	2200      	movs	r2, #0
    1646:	601a      	str	r2, [r3, #0]
    1648:	68d9      	ldr	r1, [r3, #12]
    164a:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    164e:	6058      	str	r0, [r3, #4]
    1650:	609a      	str	r2, [r3, #8]
    1652:	2205      	movs	r2, #5
    1654:	601a      	str	r2, [r3, #0]
    1656:	f7ff fe2f 	bl	12b8 <__mriPlatform_CommHasReceiveData>
    165a:	4b0a      	ldr	r3, [pc, #40]	; (1684 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    165c:	b930      	cbnz	r0, 166c <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    165e:	68d9      	ldr	r1, [r3, #12]
    1660:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    1664:	b110      	cbz	r0, 166c <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    1666:	681a      	ldr	r2, [r3, #0]
    1668:	03d1      	lsls	r1, r2, #15
    166a:	d5f4      	bpl.n	1656 <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    166c:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
    1670:	605d      	str	r5, [r3, #4]
    1672:	601c      	str	r4, [r3, #0]
    1674:	f7ff fe20 	bl	12b8 <__mriPlatform_CommHasReceiveData>
    1678:	b110      	cbz	r0, 1680 <__mriPlatform_CommWaitForReceiveDataToStop+0x4c>
    167a:	f7ff fe27 	bl	12cc <__mriPlatform_CommReceiveChar>
    167e:	e7da      	b.n	1636 <__mriPlatform_CommWaitForReceiveDataToStop+0x2>
    1680:	bd38      	pop	{r3, r4, r5, pc}
    1682:	bf00      	nop
    1684:	e000e010 	.word	0xe000e010

00001688 <__mriLpc176x_Init>:
    1688:	b538      	push	{r3, r4, r5, lr}
    168a:	4c0c      	ldr	r4, [pc, #48]	; (16bc <__mriLpc176x_Init+0x34>)
    168c:	2300      	movs	r3, #0
    168e:	6023      	str	r3, [r4, #0]
    1690:	4605      	mov	r5, r0
    1692:	f7ff fa8d 	bl	bb0 <__mriCortexMInit>
    1696:	6823      	ldr	r3, [r4, #0]
    1698:	b973      	cbnz	r3, 16b8 <__mriLpc176x_Init+0x30>
    169a:	f103 4260 	add.w	r2, r3, #3758096384	; 0xe0000000
    169e:	3301      	adds	r3, #1
    16a0:	2108      	movs	r1, #8
    16a2:	f502 4061 	add.w	r0, r2, #57600	; 0xe100
    16a6:	2b23      	cmp	r3, #35	; 0x23
    16a8:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
    16ac:	d1f5      	bne.n	169a <__mriLpc176x_Init+0x12>
    16ae:	4628      	mov	r0, r5
    16b0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    16b4:	f7ff be68 	b.w	1388 <__mriLpc176xUart_Init>
    16b8:	bd38      	pop	{r3, r4, r5, pc}
    16ba:	bf00      	nop
    16bc:	100001dc 	.word	0x100001dc

000016c0 <__mriPlatform_GetDeviceMemoryMapXmlSize>:
    16c0:	f240 50c6 	movw	r0, #1478	; 0x5c6
    16c4:	4770      	bx	lr
	...

000016c8 <__mriPlatform_GetDeviceMemoryMapXml>:
    16c8:	4800      	ldr	r0, [pc, #0]	; (16cc <__mriPlatform_GetDeviceMemoryMapXml+0x4>)
    16ca:	4770      	bx	lr
    16cc:	00003a9f 	.word	0x00003a9f

000016d0 <__mriPlatform_Init>:
    16d0:	4a1f      	ldr	r2, [pc, #124]	; (1750 <__mriPlatform_Init+0x80>)
    16d2:	2300      	movs	r3, #0
    16d4:	b570      	push	{r4, r5, r6, lr}
    16d6:	f842 3b04 	str.w	r3, [r2], #4
    16da:	4b1e      	ldr	r3, [pc, #120]	; (1754 <__mriPlatform_Init+0x84>)
    16dc:	4606      	mov	r6, r0
    16de:	f103 0520 	add.w	r5, r3, #32
    16e2:	6818      	ldr	r0, [r3, #0]
    16e4:	6859      	ldr	r1, [r3, #4]
    16e6:	4614      	mov	r4, r2
    16e8:	c403      	stmia	r4!, {r0, r1}
    16ea:	3308      	adds	r3, #8
    16ec:	42ab      	cmp	r3, r5
    16ee:	4622      	mov	r2, r4
    16f0:	d1f7      	bne.n	16e2 <__mriPlatform_Init+0x12>
    16f2:	6818      	ldr	r0, [r3, #0]
    16f4:	4918      	ldr	r1, [pc, #96]	; (1758 <__mriPlatform_Init+0x88>)
    16f6:	6020      	str	r0, [r4, #0]
    16f8:	680b      	ldr	r3, [r1, #0]
    16fa:	4c18      	ldr	r4, [pc, #96]	; (175c <__mriPlatform_Init+0x8c>)
    16fc:	2500      	movs	r5, #0
    16fe:	07d8      	lsls	r0, r3, #31
    1700:	6025      	str	r5, [r4, #0]
    1702:	d51b      	bpl.n	173c <__mriPlatform_Init+0x6c>
    1704:	4816      	ldr	r0, [pc, #88]	; (1760 <__mriPlatform_Init+0x90>)
    1706:	f000 fa51 	bl	1bac <__mriGetMbedUid>
    170a:	f000 fa43 	bl	1b94 <__mriDisableMbed>
    170e:	6025      	str	r5, [r4, #0]
    1710:	f241 3089 	movw	r0, #5001	; 0x1389
    1714:	3801      	subs	r0, #1
    1716:	4a10      	ldr	r2, [pc, #64]	; (1758 <__mriPlatform_Init+0x88>)
    1718:	d002      	beq.n	1720 <__mriPlatform_Init+0x50>
    171a:	6811      	ldr	r1, [r2, #0]
    171c:	07c9      	lsls	r1, r1, #31
    171e:	d4f9      	bmi.n	1714 <__mriPlatform_Init+0x44>
    1720:	6813      	ldr	r3, [r2, #0]
    1722:	480e      	ldr	r0, [pc, #56]	; (175c <__mriPlatform_Init+0x8c>)
    1724:	f013 0f01 	tst.w	r3, #1
    1728:	d001      	beq.n	172e <__mriPlatform_Init+0x5e>
    172a:	2205      	movs	r2, #5
    172c:	6002      	str	r2, [r0, #0]
    172e:	6801      	ldr	r1, [r0, #0]
    1730:	b921      	cbnz	r1, 173c <__mriPlatform_Init+0x6c>
    1732:	4b07      	ldr	r3, [pc, #28]	; (1750 <__mriPlatform_Init+0x80>)
    1734:	6818      	ldr	r0, [r3, #0]
    1736:	f040 0201 	orr.w	r2, r0, #1
    173a:	601a      	str	r2, [r3, #0]
    173c:	4907      	ldr	r1, [pc, #28]	; (175c <__mriPlatform_Init+0x8c>)
    173e:	680b      	ldr	r3, [r1, #0]
    1740:	b923      	cbnz	r3, 174c <__mriPlatform_Init+0x7c>
    1742:	4630      	mov	r0, r6
    1744:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1748:	f7ff bf9e 	b.w	1688 <__mriLpc176x_Init>
    174c:	bd70      	pop	{r4, r5, r6, pc}
    174e:	bf00      	nop
    1750:	100001a8 	.word	0x100001a8
    1754:	00004066 	.word	0x00004066
    1758:	e000edf0 	.word	0xe000edf0
    175c:	100001dc 	.word	0x100001dc
    1760:	100001ac 	.word	0x100001ac

00001764 <__mriMbed1768_GetMbedUid>:
    1764:	4800      	ldr	r0, [pc, #0]	; (1768 <__mriMbed1768_GetMbedUid+0x4>)
    1766:	4770      	bx	lr
    1768:	100001ac 	.word	0x100001ac

0000176c <__mriSemihost_IsDebuggeeMakingSemihostCall>:
    176c:	b508      	push	{r3, lr}
    176e:	f7ff fc3f 	bl	ff0 <__mriPlatform_TypeOfCurrentInstruction>
    1772:	3801      	subs	r0, #1
    1774:	b2c0      	uxtb	r0, r0
    1776:	2801      	cmp	r0, #1
    1778:	bf8c      	ite	hi
    177a:	2000      	movhi	r0, #0
    177c:	2001      	movls	r0, #1
    177e:	bd08      	pop	{r3, pc}

00001780 <__mriSemihost_HandleSemihostRequest>:
    1780:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    1782:	f7ff fc35 	bl	ff0 <__mriPlatform_TypeOfCurrentInstruction>
    1786:	4604      	mov	r4, r0
    1788:	4668      	mov	r0, sp
    178a:	f7ff fc45 	bl	1018 <__mriPlatform_GetSemihostCallParameters>
    178e:	2c01      	cmp	r4, #1
    1790:	d103      	bne.n	179a <__mriSemihost_HandleSemihostRequest+0x1a>
    1792:	4668      	mov	r0, sp
    1794:	f000 f894 	bl	18c0 <__mriSemihost_HandleMbedSemihostRequest>
    1798:	e006      	b.n	17a8 <__mriSemihost_HandleSemihostRequest+0x28>
    179a:	2c02      	cmp	r4, #2
    179c:	d103      	bne.n	17a6 <__mriSemihost_HandleSemihostRequest+0x26>
    179e:	4668      	mov	r0, sp
    17a0:	f000 f804 	bl	17ac <__mriSemihost_HandleNewlibSemihostRequest>
    17a4:	e000      	b.n	17a8 <__mriSemihost_HandleSemihostRequest+0x28>
    17a6:	2000      	movs	r0, #0
    17a8:	b004      	add	sp, #16
    17aa:	bd10      	pop	{r4, pc}

000017ac <__mriSemihost_HandleNewlibSemihostRequest>:
    17ac:	b510      	push	{r4, lr}
    17ae:	b08c      	sub	sp, #48	; 0x30
    17b0:	4604      	mov	r4, r0
    17b2:	f7ff fbdf 	bl	f74 <__mriPlatform_GetProgramCounter>
    17b6:	4b33      	ldr	r3, [pc, #204]	; (1884 <CFSR_STACK_ERROR_BITS+0x6c>)
    17b8:	f040 0001 	orr.w	r0, r0, #1
    17bc:	4298      	cmp	r0, r3
    17be:	d109      	bne.n	17d4 <__mriSemihost_HandleNewlibSemihostRequest+0x28>
    17c0:	6820      	ldr	r0, [r4, #0]
    17c2:	6863      	ldr	r3, [r4, #4]
    17c4:	68a1      	ldr	r1, [r4, #8]
    17c6:	9002      	str	r0, [sp, #8]
    17c8:	a802      	add	r0, sp, #8
    17ca:	9303      	str	r3, [sp, #12]
    17cc:	9104      	str	r1, [sp, #16]
    17ce:	f000 fd3d 	bl	224c <__mriIssueGdbFileWriteRequest>
    17d2:	e055      	b.n	1880 <CFSR_STACK_ERROR_BITS+0x68>
    17d4:	492c      	ldr	r1, [pc, #176]	; (1888 <CFSR_STACK_ERROR_BITS+0x70>)
    17d6:	4288      	cmp	r0, r1
    17d8:	d109      	bne.n	17ee <__mriSemihost_HandleNewlibSemihostRequest+0x42>
    17da:	6823      	ldr	r3, [r4, #0]
    17dc:	6861      	ldr	r1, [r4, #4]
    17de:	68a2      	ldr	r2, [r4, #8]
    17e0:	a802      	add	r0, sp, #8
    17e2:	9302      	str	r3, [sp, #8]
    17e4:	9103      	str	r1, [sp, #12]
    17e6:	9204      	str	r2, [sp, #16]
    17e8:	f000 fd54 	bl	2294 <__mriIssueGdbFileReadRequest>
    17ec:	e048      	b.n	1880 <CFSR_STACK_ERROR_BITS+0x68>
    17ee:	4a27      	ldr	r2, [pc, #156]	; (188c <CFSR_STACK_ERROR_BITS+0x74>)
    17f0:	4290      	cmp	r0, r2
    17f2:	d10c      	bne.n	180e <__mriSemihost_HandleNewlibSemihostRequest+0x62>
    17f4:	6820      	ldr	r0, [r4, #0]
    17f6:	9008      	str	r0, [sp, #32]
    17f8:	f001 fdfc 	bl	33f4 <strlen>
    17fc:	9009      	str	r0, [sp, #36]	; 0x24
    17fe:	68a0      	ldr	r0, [r4, #8]
    1800:	6862      	ldr	r2, [r4, #4]
    1802:	900b      	str	r0, [sp, #44]	; 0x2c
    1804:	a808      	add	r0, sp, #32
    1806:	920a      	str	r2, [sp, #40]	; 0x28
    1808:	f000 fcf2 	bl	21f0 <__mriIssueGdbFileOpenRequest>
    180c:	e038      	b.n	1880 <CFSR_STACK_ERROR_BITS+0x68>
    180e:	4b20      	ldr	r3, [pc, #128]	; (1890 <CFSR_STACK_ERROR_BITS+0x78>)
    1810:	4298      	cmp	r0, r3
    1812:	d108      	bne.n	1826 <CFSR_STACK_ERROR_BITS+0xe>
    1814:	6820      	ldr	r0, [r4, #0]
    1816:	9000      	str	r0, [sp, #0]
    1818:	f001 fdec 	bl	33f4 <strlen>
    181c:	9001      	str	r0, [sp, #4]
    181e:	4668      	mov	r0, sp
    1820:	f000 fdb2 	bl	2388 <__mriIssueGdbFileUnlinkRequest>
    1824:	e02c      	b.n	1880 <CFSR_STACK_ERROR_BITS+0x68>
    1826:	491b      	ldr	r1, [pc, #108]	; (1894 <CFSR_STACK_ERROR_BITS+0x7c>)
    1828:	4288      	cmp	r0, r1
    182a:	d109      	bne.n	1840 <CFSR_STACK_ERROR_BITS+0x28>
    182c:	6820      	ldr	r0, [r4, #0]
    182e:	6863      	ldr	r3, [r4, #4]
    1830:	68a1      	ldr	r1, [r4, #8]
    1832:	9005      	str	r0, [sp, #20]
    1834:	a805      	add	r0, sp, #20
    1836:	9306      	str	r3, [sp, #24]
    1838:	9107      	str	r1, [sp, #28]
    183a:	f000 fd63 	bl	2304 <__mriIssueGdbFileSeekRequest>
    183e:	e01f      	b.n	1880 <CFSR_STACK_ERROR_BITS+0x68>
    1840:	4a15      	ldr	r2, [pc, #84]	; (1898 <CFSR_STACK_ERROR_BITS+0x80>)
    1842:	4290      	cmp	r0, r2
    1844:	d103      	bne.n	184e <CFSR_STACK_ERROR_BITS+0x36>
    1846:	6820      	ldr	r0, [r4, #0]
    1848:	f000 fd48 	bl	22dc <__mriIssueGdbFileCloseRequest>
    184c:	e018      	b.n	1880 <CFSR_STACK_ERROR_BITS+0x68>
    184e:	4b13      	ldr	r3, [pc, #76]	; (189c <CFSR_STACK_ERROR_BITS+0x84>)
    1850:	4298      	cmp	r0, r3
    1852:	d104      	bne.n	185e <CFSR_STACK_ERROR_BITS+0x46>
    1854:	e894 0003 	ldmia.w	r4, {r0, r1}
    1858:	f000 fd78 	bl	234c <__mriIssueGdbFileFStatRequest>
    185c:	e010      	b.n	1880 <CFSR_STACK_ERROR_BITS+0x68>
    185e:	4910      	ldr	r1, [pc, #64]	; (18a0 <CFSR_STACK_ERROR_BITS+0x88>)
    1860:	4288      	cmp	r0, r1
    1862:	d104      	bne.n	186e <CFSR_STACK_ERROR_BITS+0x56>
    1864:	e894 0003 	ldmia.w	r4, {r0, r1}
    1868:	f000 fdac 	bl	23c4 <__mriIssueGdbFileStatRequest>
    186c:	e008      	b.n	1880 <CFSR_STACK_ERROR_BITS+0x68>
    186e:	4a0d      	ldr	r2, [pc, #52]	; (18a4 <CFSR_STACK_ERROR_BITS+0x8c>)
    1870:	4290      	cmp	r0, r2
    1872:	d104      	bne.n	187e <CFSR_STACK_ERROR_BITS+0x66>
    1874:	e894 0003 	ldmia.w	r4, {r0, r1}
    1878:	f000 fdcc 	bl	2414 <__mriIssueGdbFileRenameRequest>
    187c:	e000      	b.n	1880 <CFSR_STACK_ERROR_BITS+0x68>
    187e:	2000      	movs	r0, #0
    1880:	b00c      	add	sp, #48	; 0x30
    1882:	bd10      	pop	{r4, pc}
    1884:	00001bc1 	.word	0x00001bc1
    1888:	00001bc5 	.word	0x00001bc5
    188c:	00001bc9 	.word	0x00001bc9
    1890:	00001bd1 	.word	0x00001bd1
    1894:	00001bd9 	.word	0x00001bd9
    1898:	00001bdd 	.word	0x00001bdd
    189c:	00001be1 	.word	0x00001be1
    18a0:	00001bd5 	.word	0x00001bd5
    18a4:	00001bcd 	.word	0x00001bcd

000018a8 <convertBytesTransferredToBytesNotTransferred>:
    18a8:	b510      	push	{r4, lr}
    18aa:	4604      	mov	r4, r0
    18ac:	f7fe fdf0 	bl	490 <__mriCore_GetSemihostReturnCode>
    18b0:	1e03      	subs	r3, r0, #0
    18b2:	bfa8      	it	ge
    18b4:	ebc3 0004 	rsbge	r0, r3, r4
    18b8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    18bc:	f7ff bbbe 	b.w	103c <__mriPlatform_SetSemihostCallReturnValue>

000018c0 <__mriSemihost_HandleMbedSemihostRequest>:
    18c0:	b530      	push	{r4, r5, lr}
    18c2:	6803      	ldr	r3, [r0, #0]
    18c4:	b099      	sub	sp, #100	; 0x64
    18c6:	2b09      	cmp	r3, #9
    18c8:	f000 8084 	beq.w	19d4 <__mriSemihost_HandleMbedSemihostRequest+0x114>
    18cc:	d80f      	bhi.n	18ee <__mriSemihost_HandleMbedSemihostRequest+0x2e>
    18ce:	2b02      	cmp	r3, #2
    18d0:	d051      	beq.n	1976 <__mriSemihost_HandleMbedSemihostRequest+0xb6>
    18d2:	d803      	bhi.n	18dc <__mriSemihost_HandleMbedSemihostRequest+0x1c>
    18d4:	2b01      	cmp	r3, #1
    18d6:	f040 8084 	bne.w	19e2 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    18da:	e02c      	b.n	1936 <__mriSemihost_HandleMbedSemihostRequest+0x76>
    18dc:	2b05      	cmp	r3, #5
    18de:	d050      	beq.n	1982 <__mriSemihost_HandleMbedSemihostRequest+0xc2>
    18e0:	2b06      	cmp	r3, #6
    18e2:	d17e      	bne.n	19e2 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    18e4:	6845      	ldr	r5, [r0, #4]
    18e6:	4628      	mov	r0, r5
    18e8:	f000 fcd4 	bl	2294 <__mriIssueGdbFileReadRequest>
    18ec:	e04d      	b.n	198a <__mriSemihost_HandleMbedSemihostRequest+0xca>
    18ee:	2b0c      	cmp	r3, #12
    18f0:	d051      	beq.n	1996 <__mriSemihost_HandleMbedSemihostRequest+0xd6>
    18f2:	d80c      	bhi.n	190e <__mriSemihost_HandleMbedSemihostRequest+0x4e>
    18f4:	2b0a      	cmp	r3, #10
    18f6:	d174      	bne.n	19e2 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    18f8:	6843      	ldr	r3, [r0, #4]
    18fa:	2000      	movs	r0, #0
    18fc:	681a      	ldr	r2, [r3, #0]
    18fe:	6859      	ldr	r1, [r3, #4]
    1900:	9003      	str	r0, [sp, #12]
    1902:	a801      	add	r0, sp, #4
    1904:	9201      	str	r2, [sp, #4]
    1906:	9102      	str	r1, [sp, #8]
    1908:	f000 fcfc 	bl	2304 <__mriIssueGdbFileSeekRequest>
    190c:	e037      	b.n	197e <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    190e:	2b0e      	cmp	r3, #14
    1910:	d05c      	beq.n	19cc <__mriSemihost_HandleMbedSemihostRequest+0x10c>
    1912:	f240 1401 	movw	r4, #257	; 0x101
    1916:	42a3      	cmp	r3, r4
    1918:	d163      	bne.n	19e2 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    191a:	6845      	ldr	r5, [r0, #4]
    191c:	686c      	ldr	r4, [r5, #4]
    191e:	682d      	ldr	r5, [r5, #0]
    1920:	f7ff ff20 	bl	1764 <__mriMbed1768_GetMbedUid>
    1924:	2c24      	cmp	r4, #36	; 0x24
    1926:	bf34      	ite	cc
    1928:	4622      	movcc	r2, r4
    192a:	2224      	movcs	r2, #36	; 0x24
    192c:	4601      	mov	r1, r0
    192e:	4628      	mov	r0, r5
    1930:	f001 fd44 	bl	33bc <memcpy>
    1934:	e04e      	b.n	19d4 <__mriSemihost_HandleMbedSemihostRequest+0x114>
    1936:	6840      	ldr	r0, [r0, #4]
    1938:	6802      	ldr	r2, [r0, #0]
    193a:	6841      	ldr	r1, [r0, #4]
    193c:	9204      	str	r2, [sp, #16]
    193e:	074a      	lsls	r2, r1, #29
    1940:	d405      	bmi.n	194e <__mriSemihost_HandleMbedSemihostRequest+0x8e>
    1942:	f011 0408 	ands.w	r4, r1, #8
    1946:	d005      	beq.n	1954 <__mriSemihost_HandleMbedSemihostRequest+0x94>
    1948:	f44f 7402 	mov.w	r4, #520	; 0x208
    194c:	e003      	b.n	1956 <__mriSemihost_HandleMbedSemihostRequest+0x96>
    194e:	f44f 64c0 	mov.w	r4, #1536	; 0x600
    1952:	e000      	b.n	1956 <__mriSemihost_HandleMbedSemihostRequest+0x96>
    1954:	4623      	mov	r3, r4
    1956:	f011 0f02 	tst.w	r1, #2
    195a:	6880      	ldr	r0, [r0, #8]
    195c:	bf18      	it	ne
    195e:	2302      	movne	r3, #2
    1960:	ea43 0204 	orr.w	r2, r3, r4
    1964:	f44f 71db 	mov.w	r1, #438	; 0x1b6
    1968:	9005      	str	r0, [sp, #20]
    196a:	a804      	add	r0, sp, #16
    196c:	9206      	str	r2, [sp, #24]
    196e:	9107      	str	r1, [sp, #28]
    1970:	f000 fc3e 	bl	21f0 <__mriIssueGdbFileOpenRequest>
    1974:	e003      	b.n	197e <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    1976:	6844      	ldr	r4, [r0, #4]
    1978:	6820      	ldr	r0, [r4, #0]
    197a:	f000 fcaf 	bl	22dc <__mriIssueGdbFileCloseRequest>
    197e:	4604      	mov	r4, r0
    1980:	e030      	b.n	19e4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1982:	6845      	ldr	r5, [r0, #4]
    1984:	4628      	mov	r0, r5
    1986:	f000 fc61 	bl	224c <__mriIssueGdbFileWriteRequest>
    198a:	4604      	mov	r4, r0
    198c:	b350      	cbz	r0, 19e4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    198e:	68a8      	ldr	r0, [r5, #8]
    1990:	f7ff ff8a 	bl	18a8 <convertBytesTransferredToBytesNotTransferred>
    1994:	e026      	b.n	19e4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1996:	6843      	ldr	r3, [r0, #4]
    1998:	a908      	add	r1, sp, #32
    199a:	6818      	ldr	r0, [r3, #0]
    199c:	f000 fcd6 	bl	234c <__mriIssueGdbFileFStatRequest>
    19a0:	4604      	mov	r4, r0
    19a2:	b1f8      	cbz	r0, 19e4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19a4:	f7fe fd74 	bl	490 <__mriCore_GetSemihostReturnCode>
    19a8:	b9e0      	cbnz	r0, 19e4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19aa:	f89d 1041 	ldrb.w	r1, [sp, #65]	; 0x41
    19ae:	f89d 2042 	ldrb.w	r2, [sp, #66]	; 0x42
    19b2:	0408      	lsls	r0, r1, #16
    19b4:	ea40 2302 	orr.w	r3, r0, r2, lsl #8
    19b8:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
    19bc:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
    19c0:	4313      	orrs	r3, r2
    19c2:	ea43 6001 	orr.w	r0, r3, r1, lsl #24
    19c6:	f7ff fb39 	bl	103c <__mriPlatform_SetSemihostCallReturnValue>
    19ca:	e00b      	b.n	19e4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19cc:	6840      	ldr	r0, [r0, #4]
    19ce:	f000 fcdb 	bl	2388 <__mriIssueGdbFileUnlinkRequest>
    19d2:	e7d4      	b.n	197e <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    19d4:	f7ff fada 	bl	f8c <__mriPlatform_AdvanceProgramCounterToNextInstruction>
    19d8:	2000      	movs	r0, #0
    19da:	f7ff fb2f 	bl	103c <__mriPlatform_SetSemihostCallReturnValue>
    19de:	2401      	movs	r4, #1
    19e0:	e000      	b.n	19e4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19e2:	2400      	movs	r4, #0
    19e4:	4620      	mov	r0, r4
    19e6:	b019      	add	sp, #100	; 0x64
    19e8:	bd30      	pop	{r4, r5, pc}
	...

000019ec <__mriGetIPSR>:
    19ec:	f3ef 8005 	mrs	r0, IPSR
    19f0:	4770      	bx	lr

000019f2 <__mriSetBASEPRI>:
    19f2:	f380 8811 	msr	BASEPRI, r0
    19f6:	4770      	bx	lr

000019f8 <__mriGetBASEPRI>:
    19f8:	f3ef 8011 	mrs	r0, BASEPRI
    19fc:	4770      	bx	lr

000019fe <__mriDSB>:
    19fe:	f3bf 8f4f 	dsb	sy
    1a02:	4770      	bx	lr

00001a04 <__mriISB>:
    1a04:	f3bf 8f6f 	isb	sy
    1a08:	4770      	bx	lr

00001a0a <mriExceptionHandler>:
    1a0a:	4857      	ldr	r0, [pc, #348]	; (1b68 <UART3_IRQHandler+0x6>)
    1a0c:	f000 b803 	b.w	1a16 <mriGetSPAndCallHandler>

00001a10 <mriFaultHandler>:
    1a10:	4856      	ldr	r0, [pc, #344]	; (1b6c <UART3_IRQHandler+0xa>)
    1a12:	f000 b800 	b.w	1a16 <mriGetSPAndCallHandler>

00001a16 <mriGetSPAndCallHandler>:
    1a16:	f01e 0f04 	tst.w	lr, #4
    1a1a:	bf0c      	ite	eq
    1a1c:	f3ef 8108 	mrseq	r1, MSP
    1a20:	f3ef 8109 	mrsne	r1, PSP
    1a24:	4a52      	ldr	r2, [pc, #328]	; (1b70 <UART3_IRQHandler+0xe>)
    1a26:	6011      	str	r1, [r2, #0]
    1a28:	4687      	mov	pc, r0

00001a2a <checkForStackError>:
    1a2a:	4852      	ldr	r0, [pc, #328]	; (1b74 <UART3_IRQHandler+0x12>)
    1a2c:	4a52      	ldr	r2, [pc, #328]	; (1b78 <UART3_IRQHandler+0x16>)
    1a2e:	6800      	ldr	r0, [r0, #0]
    1a30:	4210      	tst	r0, r2
    1a32:	f000 8003 	beq.w	1a3c <mriSaveRestoreContext>
    1a36:	4951      	ldr	r1, [pc, #324]	; (1b7c <UART3_IRQHandler+0x1a>)
    1a38:	f000 b800 	b.w	1a3c <mriSaveRestoreContext>

00001a3c <mriSaveRestoreContext>:
    1a3c:	4850      	ldr	r0, [pc, #320]	; (1b80 <UART3_IRQHandler+0x1e>)
    1a3e:	6802      	ldr	r2, [r0, #0]
    1a40:	f012 0f01 	tst.w	r2, #1
    1a44:	bf1e      	ittt	ne
    1a46:	f042 0202 	orrne.w	r2, r2, #2
    1a4a:	6002      	strne	r2, [r0, #0]
    1a4c:	f000 b858 	bne.w	1b00 <mriAdvancePCAndReturn>
    1a50:	f042 0201 	orr.w	r2, r2, #1
    1a54:	6002      	str	r2, [r0, #0]
    1a56:	2040      	movs	r0, #64	; 0x40
    1a58:	f8df c124 	ldr.w	r12, [pc, #292]	; 1b80 <UART3_IRQHandler+0x1e>
    1a5c:	4a49      	ldr	r2, [pc, #292]	; (1b84 <UART3_IRQHandler+0x22>)
    1a5e:	4613      	mov	r3, r2
    1a60:	e96c 2302 	strd	r2, r3, [r12, #-8]!
    1a64:	3801      	subs	r0, #1
    1a66:	d1fb      	bne.n	1a60 <mriSaveRestoreContext+0x24>
    1a68:	f3ef 8208 	mrs	r2, MSP
    1a6c:	4846      	ldr	r0, [pc, #280]	; (1b88 <UART3_IRQHandler+0x26>)
    1a6e:	6002      	str	r2, [r0, #0]
    1a70:	4843      	ldr	r0, [pc, #268]	; (1b80 <UART3_IRQHandler+0x1e>)
    1a72:	f380 8808 	msr	MSP, r0
    1a76:	4845      	ldr	r0, [pc, #276]	; (1b8c <UART3_IRQHandler+0x2a>)
    1a78:	e92d 5000 	stmdb	sp!, {r12, lr}
    1a7c:	e8b1 500c 	ldmia.w	r1!, {r2, r3, r12, lr}
    1a80:	e8a0 500c 	stmia.w	r0!, {r2, r3, r12, lr}
    1a84:	e8a0 0ff0 	stmia.w	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    1a88:	c93c      	ldmia	r1!, {r2, r3, r4, r5}
    1a8a:	f840 2b08 	str.w	r2, [r0], #8
    1a8e:	c038      	stmia	r0!, {r3, r4, r5}
    1a90:	f415 7f00 	tst.w	r5, #512	; 0x200
    1a94:	bf18      	it	ne
    1a96:	3104      	addne	r1, #4
    1a98:	f840 1c10 	str.w	r1, [r0, #-16]
    1a9c:	f7fe fd56 	bl	54c <__mriDebugException>
    1aa0:	483b      	ldr	r0, [pc, #236]	; (1b90 <UART3_IRQHandler+0x2e>)
    1aa2:	f850 1c0c 	ldr.w	r1, [r0, #-12]
    1aa6:	6802      	ldr	r2, [r0, #0]
    1aa8:	f412 7f00 	tst.w	r2, #512	; 0x200
    1aac:	bf18      	it	ne
    1aae:	3904      	subne	r1, #4
    1ab0:	f841 2d04 	str.w	r2, [r1, #-4]!
    1ab4:	e930 000c 	ldmdb	r0!, {r2, r3}
    1ab8:	e921 000c 	stmdb	r1!, {r2, r3}
    1abc:	f850 cd08 	ldr.w	r12, [r0, #-8]!
    1ac0:	f841 cd04 	str.w	r12, [r1, #-4]!
    1ac4:	e930 0ff0 	ldmdb	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    1ac8:	e930 500c 	ldmdb	r0!, {r2, r3, r12, lr}
    1acc:	e921 500c 	stmdb	r1!, {r2, r3, r12, lr}
    1ad0:	e8bd 5000 	ldmia.w	sp!, {r12, lr}
    1ad4:	482c      	ldr	r0, [pc, #176]	; (1b88 <UART3_IRQHandler+0x26>)
    1ad6:	6802      	ldr	r2, [r0, #0]
    1ad8:	f382 8808 	msr	MSP, r2
    1adc:	f01e 0f04 	tst.w	lr, #4
    1ae0:	bf0c      	ite	eq
    1ae2:	f381 8808 	msreq	MSP, r1
    1ae6:	f381 8809 	msrne	PSP, r1
    1aea:	4825      	ldr	r0, [pc, #148]	; (1b80 <UART3_IRQHandler+0x1e>)
    1aec:	6801      	ldr	r1, [r0, #0]
    1aee:	f021 0101 	bic.w	r1, r1, #1
    1af2:	6001      	str	r1, [r0, #0]
    1af4:	f3bf 8f4f 	dsb	sy
    1af8:	f3bf 8f6f 	isb	sy
    1afc:	f000 b81b 	b.w	1b36 <mriClearFaultStatusBitsAndReturn>

00001b00 <mriAdvancePCAndReturn>:
    1b00:	481c      	ldr	r0, [pc, #112]	; (1b74 <UART3_IRQHandler+0x12>)
    1b02:	6800      	ldr	r0, [r0, #0]
    1b04:	f410 6f80 	tst.w	r0, #1024	; 0x400
    1b08:	f040 8015 	bne.w	1b36 <mriClearFaultStatusBitsAndReturn>
    1b0c:	6988      	ldr	r0, [r1, #24]
    1b0e:	8802      	ldrh	r2, [r0, #0]
    1b10:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
    1b14:	f5b2 4f68 	cmp.w	r2, #59392	; 0xe800
    1b18:	d008      	beq.n	1b2c <mriAdvancePCAndReturn+0x2c>
    1b1a:	f5b2 4f70 	cmp.w	r2, #61440	; 0xf000
    1b1e:	d005      	beq.n	1b2c <mriAdvancePCAndReturn+0x2c>
    1b20:	f5b2 4f78 	cmp.w	r2, #63488	; 0xf800
    1b24:	d002      	beq.n	1b2c <mriAdvancePCAndReturn+0x2c>
    1b26:	f100 0002 	add.w	r0, r0, #2
    1b2a:	e001      	b.n	1b30 <mriAdvancePCAndReturn+0x30>
    1b2c:	f100 0004 	add.w	r0, r0, #4
    1b30:	6188      	str	r0, [r1, #24]
    1b32:	f000 b800 	b.w	1b36 <mriClearFaultStatusBitsAndReturn>

00001b36 <mriClearFaultStatusBitsAndReturn>:
    1b36:	480f      	ldr	r0, [pc, #60]	; (1b74 <UART3_IRQHandler+0x12>)
    1b38:	6801      	ldr	r1, [r0, #0]
    1b3a:	6001      	str	r1, [r0, #0]
    1b3c:	6841      	ldr	r1, [r0, #4]
    1b3e:	6041      	str	r1, [r0, #4]
    1b40:	4770      	bx	lr

00001b42 <HardFault_Handler>:
    1b42:	f7ff bf65 	b.w	1a10 <mriFaultHandler>

00001b46 <MemManage_Handler>:
    1b46:	f7ff bf63 	b.w	1a10 <mriFaultHandler>

00001b4a <BusFault_Handler>:
    1b4a:	f7ff bf61 	b.w	1a10 <mriFaultHandler>

00001b4e <UsageFault_Handler>:
    1b4e:	f7ff bf5c 	b.w	1a0a <mriExceptionHandler>

00001b52 <DebugMon_Handler>:
    1b52:	f7ff bf5a 	b.w	1a0a <mriExceptionHandler>

00001b56 <UART0_IRQHandler>:
    1b56:	f7ff bf58 	b.w	1a0a <mriExceptionHandler>

00001b5a <UART1_IRQHandler>:
    1b5a:	f7ff bf56 	b.w	1a0a <mriExceptionHandler>

00001b5e <UART2_IRQHandler>:
    1b5e:	f7ff bf54 	b.w	1a0a <mriExceptionHandler>

00001b62 <UART3_IRQHandler>:
    1b62:	f7ff bf52 	b.w	1a0a <mriExceptionHandler>
    1b66:	0000      	.short	0x0000
    1b68:	00001a3d 	.word	0x00001a3d
    1b6c:	00001a2b 	.word	0x00001a2b
    1b70:	100003e8 	.word	0x100003e8
    1b74:	e000ed28 	.word	0xe000ed28
    1b78:	00001818 	.word	0x00001818
    1b7c:	000037e0 	.word	0x000037e0
    1b80:	100003e0 	.word	0x100003e0
    1b84:	deadbeef 	.word	0xdeadbeef
    1b88:	100003e4 	.word	0x100003e4
    1b8c:	100003ec 	.word	0x100003ec
    1b90:	1000042c 	.word	0x1000042c

00001b94 <__mriDisableMbed>:
    1b94:	b082      	sub	sp, #8
    1b96:	a901      	add	r1, sp, #4
    1b98:	f240 1005 	movw	r0, #261	; 0x105
    1b9c:	beab      	bkpt	0x00ab
    1b9e:	2800      	cmp	r0, #0
    1ba0:	bf0c      	ite	eq
    1ba2:	9801      	ldreq	r0, [sp, #4]
    1ba4:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    1ba8:	b002      	add	sp, #8
    1baa:	4770      	bx	lr

00001bac <__mriGetMbedUid>:
    1bac:	b082      	sub	sp, #8
    1bae:	9000      	str	r0, [sp, #0]
    1bb0:	2021      	movs	r0, #33	; 0x21
    1bb2:	9001      	str	r0, [sp, #4]
    1bb4:	4669      	mov	r1, sp
    1bb6:	f240 1001 	movw	r0, #257	; 0x101
    1bba:	beab      	bkpt	0x00ab
    1bbc:	b002      	add	sp, #8
    1bbe:	4770      	bx	lr

00001bc0 <__mriNewlib_SemihostWrite>:
    1bc0:	beff      	bkpt	0x00ff
    1bc2:	4770      	bx	lr

00001bc4 <__mriNewlib_SemihostRead>:
    1bc4:	beff      	bkpt	0x00ff
    1bc6:	4770      	bx	lr

00001bc8 <__mriNewLib_SemihostOpen>:
    1bc8:	beff      	bkpt	0x00ff
    1bca:	4770      	bx	lr

00001bcc <__mriNewLib_SemihostRename>:
    1bcc:	beff      	bkpt	0x00ff
    1bce:	4770      	bx	lr

00001bd0 <__mriNewLib_SemihostUnlink>:
    1bd0:	beff      	bkpt	0x00ff
    1bd2:	4770      	bx	lr

00001bd4 <__mriNewLib_SemihostStat>:
    1bd4:	beff      	bkpt	0x00ff
    1bd6:	4770      	bx	lr

00001bd8 <__mriNewlib_SemihostLSeek>:
    1bd8:	beff      	bkpt	0x00ff
    1bda:	4770      	bx	lr

00001bdc <__mriNewlib_SemihostClose>:
    1bdc:	beff      	bkpt	0x00ff
    1bde:	4770      	bx	lr

00001be0 <__mriNewlib_SemihostFStat>:
    1be0:	beff      	bkpt	0x00ff
    1be2:	4770      	bx	lr

00001be4 <HexCharToNibble>:
    1be4:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    1be8:	2b05      	cmp	r3, #5
    1bea:	d801      	bhi.n	1bf0 <HexCharToNibble+0xc>
    1bec:	3857      	subs	r0, #87	; 0x57
    1bee:	4770      	bx	lr
    1bf0:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
    1bf4:	2905      	cmp	r1, #5
    1bf6:	d801      	bhi.n	1bfc <HexCharToNibble+0x18>
    1bf8:	3837      	subs	r0, #55	; 0x37
    1bfa:	4770      	bx	lr
    1bfc:	3830      	subs	r0, #48	; 0x30
    1bfe:	b2c2      	uxtb	r2, r0
    1c00:	2a09      	cmp	r2, #9
    1c02:	d907      	bls.n	1c14 <HexCharToNibble+0x30>
    1c04:	4804      	ldr	r0, [pc, #16]	; (1c18 <HexCharToNibble+0x34>)
    1c06:	6803      	ldr	r3, [r0, #0]
    1c08:	2b02      	cmp	r3, #2
    1c0a:	bfb8      	it	lt
    1c0c:	2302      	movlt	r3, #2
    1c0e:	6003      	str	r3, [r0, #0]
    1c10:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1c14:	4770      	bx	lr
    1c16:	bf00      	nop
    1c18:	100001dc 	.word	0x100001dc

00001c1c <__mriBuffer_Init>:
    1c1c:	188a      	adds	r2, r1, r2
    1c1e:	6001      	str	r1, [r0, #0]
    1c20:	6042      	str	r2, [r0, #4]
    1c22:	6081      	str	r1, [r0, #8]
    1c24:	4770      	bx	lr

00001c26 <__mriBuffer_Reset>:
    1c26:	6803      	ldr	r3, [r0, #0]
    1c28:	6083      	str	r3, [r0, #8]
    1c2a:	4770      	bx	lr

00001c2c <__mriBuffer_SetEndOfBuffer>:
    1c2c:	6883      	ldr	r3, [r0, #8]
    1c2e:	6043      	str	r3, [r0, #4]
    1c30:	4770      	bx	lr

00001c32 <__mriBuffer_BytesLeft>:
    1c32:	6883      	ldr	r3, [r0, #8]
    1c34:	6840      	ldr	r0, [r0, #4]
    1c36:	4283      	cmp	r3, r0
    1c38:	bf94      	ite	ls
    1c3a:	ebc3 0000 	rsbls	r0, r3, r0
    1c3e:	2000      	movhi	r0, #0
    1c40:	4770      	bx	lr
	...

00001c44 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>:
    1c44:	b538      	push	{r3, r4, r5, lr}
    1c46:	460d      	mov	r5, r1
    1c48:	4604      	mov	r4, r0
    1c4a:	f7ff fff2 	bl	1c32 <__mriBuffer_BytesLeft>
    1c4e:	42a8      	cmp	r0, r5
    1c50:	d208      	bcs.n	1c64 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x20>
    1c52:	4905      	ldr	r1, [pc, #20]	; (1c68 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x24>)
    1c54:	6863      	ldr	r3, [r4, #4]
    1c56:	680a      	ldr	r2, [r1, #0]
    1c58:	1c58      	adds	r0, r3, #1
    1c5a:	2a01      	cmp	r2, #1
    1c5c:	bfb8      	it	lt
    1c5e:	2201      	movlt	r2, #1
    1c60:	60a0      	str	r0, [r4, #8]
    1c62:	600a      	str	r2, [r1, #0]
    1c64:	bd38      	pop	{r3, r4, r5, pc}
    1c66:	bf00      	nop
    1c68:	100001dc 	.word	0x100001dc

00001c6c <__mriBuffer_OverrunDetected>:
    1c6c:	6882      	ldr	r2, [r0, #8]
    1c6e:	6840      	ldr	r0, [r0, #4]
    1c70:	4282      	cmp	r2, r0
    1c72:	bf94      	ite	ls
    1c74:	2000      	movls	r0, #0
    1c76:	2001      	movhi	r0, #1
    1c78:	4770      	bx	lr
	...

00001c7c <__mriBuffer_WriteChar>:
    1c7c:	b570      	push	{r4, r5, r6, lr}
    1c7e:	4d07      	ldr	r5, [pc, #28]	; (1c9c <__mriBuffer_WriteChar+0x20>)
    1c80:	2300      	movs	r3, #0
    1c82:	460e      	mov	r6, r1
    1c84:	2101      	movs	r1, #1
    1c86:	4604      	mov	r4, r0
    1c88:	602b      	str	r3, [r5, #0]
    1c8a:	f7ff ffdb 	bl	1c44 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1c8e:	6828      	ldr	r0, [r5, #0]
    1c90:	b918      	cbnz	r0, 1c9a <__mriBuffer_WriteChar+0x1e>
    1c92:	68a1      	ldr	r1, [r4, #8]
    1c94:	f801 6b01 	strb.w	r6, [r1], #1
    1c98:	60a1      	str	r1, [r4, #8]
    1c9a:	bd70      	pop	{r4, r5, r6, pc}
    1c9c:	100001dc 	.word	0x100001dc

00001ca0 <__mriBuffer_ReadChar>:
    1ca0:	b570      	push	{r4, r5, r6, lr}
    1ca2:	4e08      	ldr	r6, [pc, #32]	; (1cc4 <__mriBuffer_ReadChar+0x24>)
    1ca4:	2400      	movs	r4, #0
    1ca6:	2101      	movs	r1, #1
    1ca8:	4605      	mov	r5, r0
    1caa:	6034      	str	r4, [r6, #0]
    1cac:	f7ff ffca 	bl	1c44 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1cb0:	6833      	ldr	r3, [r6, #0]
    1cb2:	b923      	cbnz	r3, 1cbe <__mriBuffer_ReadChar+0x1e>
    1cb4:	68a9      	ldr	r1, [r5, #8]
    1cb6:	f811 0b01 	ldrb.w	r0, [r1], #1
    1cba:	60a9      	str	r1, [r5, #8]
    1cbc:	bd70      	pop	{r4, r5, r6, pc}
    1cbe:	4620      	mov	r0, r4
    1cc0:	bd70      	pop	{r4, r5, r6, pc}
    1cc2:	bf00      	nop
    1cc4:	100001dc 	.word	0x100001dc

00001cc8 <__mriBuffer_WriteByteAsHex>:
    1cc8:	b570      	push	{r4, r5, r6, lr}
    1cca:	4e0b      	ldr	r6, [pc, #44]	; (1cf8 <__mriBuffer_WriteByteAsHex+0x30>)
    1ccc:	2300      	movs	r3, #0
    1cce:	460d      	mov	r5, r1
    1cd0:	2102      	movs	r1, #2
    1cd2:	4604      	mov	r4, r0
    1cd4:	6033      	str	r3, [r6, #0]
    1cd6:	f7ff ffb5 	bl	1c44 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1cda:	6830      	ldr	r0, [r6, #0]
    1cdc:	b950      	cbnz	r0, 1cf4 <__mriBuffer_WriteByteAsHex+0x2c>
    1cde:	4a07      	ldr	r2, [pc, #28]	; (1cfc <__mriBuffer_WriteByteAsHex+0x34>)
    1ce0:	0929      	lsrs	r1, r5, #4
    1ce2:	f005 050f 	and.w	r5, r5, #15
    1ce6:	68a3      	ldr	r3, [r4, #8]
    1ce8:	5c50      	ldrb	r0, [r2, r1]
    1cea:	5d52      	ldrb	r2, [r2, r5]
    1cec:	7018      	strb	r0, [r3, #0]
    1cee:	705a      	strb	r2, [r3, #1]
    1cf0:	3302      	adds	r3, #2
    1cf2:	60a3      	str	r3, [r4, #8]
    1cf4:	bd70      	pop	{r4, r5, r6, pc}
    1cf6:	bf00      	nop
    1cf8:	100001dc 	.word	0x100001dc
    1cfc:	0000408a 	.word	0x0000408a

00001d00 <__mriBuffer_ReadByteAsHex>:
    1d00:	b570      	push	{r4, r5, r6, lr}
    1d02:	4e11      	ldr	r6, [pc, #68]	; (1d48 <__mriBuffer_ReadByteAsHex+0x48>)
    1d04:	2300      	movs	r3, #0
    1d06:	2102      	movs	r1, #2
    1d08:	4604      	mov	r4, r0
    1d0a:	6033      	str	r3, [r6, #0]
    1d0c:	f7ff ff9a 	bl	1c44 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1d10:	6830      	ldr	r0, [r6, #0]
    1d12:	b108      	cbz	r0, 1d18 <__mriBuffer_ReadByteAsHex+0x18>
    1d14:	2500      	movs	r5, #0
    1d16:	e014      	b.n	1d42 <__mriBuffer_ReadByteAsHex+0x42>
    1d18:	68a1      	ldr	r1, [r4, #8]
    1d1a:	7808      	ldrb	r0, [r1, #0]
    1d1c:	f7ff ff62 	bl	1be4 <HexCharToNibble>
    1d20:	6833      	ldr	r3, [r6, #0]
    1d22:	0102      	lsls	r2, r0, #4
    1d24:	b2d5      	uxtb	r5, r2
    1d26:	b92b      	cbnz	r3, 1d34 <__mriBuffer_ReadByteAsHex+0x34>
    1d28:	68a0      	ldr	r0, [r4, #8]
    1d2a:	7840      	ldrb	r0, [r0, #1]
    1d2c:	f7ff ff5a 	bl	1be4 <HexCharToNibble>
    1d30:	4328      	orrs	r0, r5
    1d32:	b2c5      	uxtb	r5, r0
    1d34:	4904      	ldr	r1, [pc, #16]	; (1d48 <__mriBuffer_ReadByteAsHex+0x48>)
    1d36:	680a      	ldr	r2, [r1, #0]
    1d38:	2a00      	cmp	r2, #0
    1d3a:	d1eb      	bne.n	1d14 <__mriBuffer_ReadByteAsHex+0x14>
    1d3c:	68a3      	ldr	r3, [r4, #8]
    1d3e:	1c98      	adds	r0, r3, #2
    1d40:	60a0      	str	r0, [r4, #8]
    1d42:	4628      	mov	r0, r5
    1d44:	bd70      	pop	{r4, r5, r6, pc}
    1d46:	bf00      	nop
    1d48:	100001dc 	.word	0x100001dc

00001d4c <__mriBuffer_WriteSizedString>:
    1d4c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1d4e:	4f0b      	ldr	r7, [pc, #44]	; (1d7c <__mriBuffer_WriteSizedString+0x30>)
    1d50:	2300      	movs	r3, #0
    1d52:	460c      	mov	r4, r1
    1d54:	4611      	mov	r1, r2
    1d56:	4605      	mov	r5, r0
    1d58:	4616      	mov	r6, r2
    1d5a:	603b      	str	r3, [r7, #0]
    1d5c:	f7ff ff72 	bl	1c44 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1d60:	6838      	ldr	r0, [r7, #0]
    1d62:	b948      	cbnz	r0, 1d78 <__mriBuffer_WriteSizedString+0x2c>
    1d64:	19a6      	adds	r6, r4, r6
    1d66:	42b4      	cmp	r4, r6
    1d68:	d006      	beq.n	1d78 <__mriBuffer_WriteSizedString+0x2c>
    1d6a:	f814 2b01 	ldrb.w	r2, [r4], #1
    1d6e:	68a9      	ldr	r1, [r5, #8]
    1d70:	f801 2b01 	strb.w	r2, [r1], #1
    1d74:	60a9      	str	r1, [r5, #8]
    1d76:	e7f6      	b.n	1d66 <__mriBuffer_WriteSizedString+0x1a>
    1d78:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1d7a:	bf00      	nop
    1d7c:	100001dc 	.word	0x100001dc

00001d80 <__mriBuffer_WriteString>:
    1d80:	b538      	push	{r3, r4, r5, lr}
    1d82:	4605      	mov	r5, r0
    1d84:	4608      	mov	r0, r1
    1d86:	460c      	mov	r4, r1
    1d88:	f001 fb34 	bl	33f4 <strlen>
    1d8c:	4621      	mov	r1, r4
    1d8e:	4602      	mov	r2, r0
    1d90:	4628      	mov	r0, r5
    1d92:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1d96:	f7ff bfd9 	b.w	1d4c <__mriBuffer_WriteSizedString>
	...

00001d9c <__mriBuffer_ReadUIntegerAsHex>:
    1d9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1d9e:	2500      	movs	r5, #0
    1da0:	4604      	mov	r4, r0
    1da2:	462e      	mov	r6, r5
    1da4:	4f13      	ldr	r7, [pc, #76]	; (1df4 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1da6:	2300      	movs	r3, #0
    1da8:	4620      	mov	r0, r4
    1daa:	603b      	str	r3, [r7, #0]
    1dac:	f7ff ff78 	bl	1ca0 <__mriBuffer_ReadChar>
    1db0:	6839      	ldr	r1, [r7, #0]
    1db2:	b961      	cbnz	r1, 1dce <__mriBuffer_ReadUIntegerAsHex+0x32>
    1db4:	f7ff ff16 	bl	1be4 <HexCharToNibble>
    1db8:	683a      	ldr	r2, [r7, #0]
    1dba:	b132      	cbz	r2, 1dca <__mriBuffer_ReadUIntegerAsHex+0x2e>
    1dbc:	68a0      	ldr	r0, [r4, #8]
    1dbe:	6823      	ldr	r3, [r4, #0]
    1dc0:	4298      	cmp	r0, r3
    1dc2:	d904      	bls.n	1dce <__mriBuffer_ReadUIntegerAsHex+0x32>
    1dc4:	1e41      	subs	r1, r0, #1
    1dc6:	60a1      	str	r1, [r4, #8]
    1dc8:	e001      	b.n	1dce <__mriBuffer_ReadUIntegerAsHex+0x32>
    1dca:	eb00 1505 	add.w	r5, r0, r5, lsl #4
    1dce:	4809      	ldr	r0, [pc, #36]	; (1df4 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1dd0:	6802      	ldr	r2, [r0, #0]
    1dd2:	b90a      	cbnz	r2, 1dd8 <__mriBuffer_ReadUIntegerAsHex+0x3c>
    1dd4:	3601      	adds	r6, #1
    1dd6:	e7e5      	b.n	1da4 <__mriBuffer_ReadUIntegerAsHex+0x8>
    1dd8:	2300      	movs	r3, #0
    1dda:	6861      	ldr	r1, [r4, #4]
    1ddc:	6003      	str	r3, [r0, #0]
    1dde:	68a0      	ldr	r0, [r4, #8]
    1de0:	4288      	cmp	r0, r1
    1de2:	bf88      	it	hi
    1de4:	60a1      	strhi	r1, [r4, #8]
    1de6:	b91e      	cbnz	r6, 1df0 <__mriBuffer_ReadUIntegerAsHex+0x54>
    1de8:	4a02      	ldr	r2, [pc, #8]	; (1df4 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1dea:	2503      	movs	r5, #3
    1dec:	6015      	str	r5, [r2, #0]
    1dee:	4635      	mov	r5, r6
    1df0:	4628      	mov	r0, r5
    1df2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1df4:	100001dc 	.word	0x100001dc

00001df8 <__mriBuffer_WriteUIntegerAsHex>:
    1df8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1dfc:	4680      	mov	r8, r0
    1dfe:	460e      	mov	r6, r1
    1e00:	b919      	cbnz	r1, 1e0a <__mriBuffer_WriteUIntegerAsHex+0x12>
    1e02:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    1e06:	f7ff bf5f 	b.w	1cc8 <__mriBuffer_WriteByteAsHex>
    1e0a:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    1e0e:	2400      	movs	r4, #0
    1e10:	4233      	tst	r3, r6
    1e12:	d103      	bne.n	1e1c <__mriBuffer_WriteUIntegerAsHex+0x24>
    1e14:	3401      	adds	r4, #1
    1e16:	0a1b      	lsrs	r3, r3, #8
    1e18:	2c04      	cmp	r4, #4
    1e1a:	d1f9      	bne.n	1e10 <__mriBuffer_WriteUIntegerAsHex+0x18>
    1e1c:	f1c4 0403 	rsb	r4, r4, #3
    1e20:	00e5      	lsls	r5, r4, #3
    1e22:	1c63      	adds	r3, r4, #1
    1e24:	d00d      	beq.n	1e42 <__mriBuffer_WriteUIntegerAsHex+0x4a>
    1e26:	fa26 f105 	lsr.w	r1, r6, r5
    1e2a:	4f07      	ldr	r7, [pc, #28]	; (1e48 <__mriBuffer_WriteUIntegerAsHex+0x50>)
    1e2c:	2000      	movs	r0, #0
    1e2e:	6038      	str	r0, [r7, #0]
    1e30:	b2c9      	uxtb	r1, r1
    1e32:	4640      	mov	r0, r8
    1e34:	f7ff ff48 	bl	1cc8 <__mriBuffer_WriteByteAsHex>
    1e38:	683a      	ldr	r2, [r7, #0]
    1e3a:	3c01      	subs	r4, #1
    1e3c:	3d08      	subs	r5, #8
    1e3e:	2a00      	cmp	r2, #0
    1e40:	d0ef      	beq.n	1e22 <__mriBuffer_WriteUIntegerAsHex+0x2a>
    1e42:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1e46:	bf00      	nop
    1e48:	100001dc 	.word	0x100001dc

00001e4c <__mriBuffer_WriteIntegerAsHex>:
    1e4c:	4b0a      	ldr	r3, [pc, #40]	; (1e78 <__mriBuffer_WriteIntegerAsHex+0x2c>)
    1e4e:	b570      	push	{r4, r5, r6, lr}
    1e50:	2200      	movs	r2, #0
    1e52:	1e0c      	subs	r4, r1, #0
    1e54:	4606      	mov	r6, r0
    1e56:	601a      	str	r2, [r3, #0]
    1e58:	461d      	mov	r5, r3
    1e5a:	da03      	bge.n	1e64 <__mriBuffer_WriteIntegerAsHex+0x18>
    1e5c:	212d      	movs	r1, #45	; 0x2d
    1e5e:	4264      	negs	r4, r4
    1e60:	f7ff ff0c 	bl	1c7c <__mriBuffer_WriteChar>
    1e64:	6828      	ldr	r0, [r5, #0]
    1e66:	b928      	cbnz	r0, 1e74 <__mriBuffer_WriteIntegerAsHex+0x28>
    1e68:	4630      	mov	r0, r6
    1e6a:	4621      	mov	r1, r4
    1e6c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1e70:	f7ff bfc2 	b.w	1df8 <__mriBuffer_WriteUIntegerAsHex>
    1e74:	bd70      	pop	{r4, r5, r6, pc}
    1e76:	bf00      	nop
    1e78:	100001dc 	.word	0x100001dc

00001e7c <__mriBuffer_IsNextCharEqualTo>:
    1e7c:	b570      	push	{r4, r5, r6, lr}
    1e7e:	4d0b      	ldr	r5, [pc, #44]	; (1eac <__mriBuffer_IsNextCharEqualTo+0x30>)
    1e80:	2300      	movs	r3, #0
    1e82:	460e      	mov	r6, r1
    1e84:	4604      	mov	r4, r0
    1e86:	602b      	str	r3, [r5, #0]
    1e88:	f7ff fed3 	bl	1c32 <__mriBuffer_BytesLeft>
    1e8c:	4629      	mov	r1, r5
    1e8e:	b908      	cbnz	r0, 1e94 <__mriBuffer_IsNextCharEqualTo+0x18>
    1e90:	2201      	movs	r2, #1
    1e92:	602a      	str	r2, [r5, #0]
    1e94:	6808      	ldr	r0, [r1, #0]
    1e96:	b938      	cbnz	r0, 1ea8 <__mriBuffer_IsNextCharEqualTo+0x2c>
    1e98:	68a3      	ldr	r3, [r4, #8]
    1e9a:	7819      	ldrb	r1, [r3, #0]
    1e9c:	42b1      	cmp	r1, r6
    1e9e:	d104      	bne.n	1eaa <__mriBuffer_IsNextCharEqualTo+0x2e>
    1ea0:	1c58      	adds	r0, r3, #1
    1ea2:	60a0      	str	r0, [r4, #8]
    1ea4:	2001      	movs	r0, #1
    1ea6:	bd70      	pop	{r4, r5, r6, pc}
    1ea8:	2000      	movs	r0, #0
    1eaa:	bd70      	pop	{r4, r5, r6, pc}
    1eac:	100001dc 	.word	0x100001dc

00001eb0 <__mriBuffer_ReadIntegerAsHex>:
    1eb0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1eb2:	4c13      	ldr	r4, [pc, #76]	; (1f00 <__mriBuffer_ReadIntegerAsHex+0x50>)
    1eb4:	2500      	movs	r5, #0
    1eb6:	212d      	movs	r1, #45	; 0x2d
    1eb8:	4607      	mov	r7, r0
    1eba:	6025      	str	r5, [r4, #0]
    1ebc:	f7ff ffde 	bl	1e7c <__mriBuffer_IsNextCharEqualTo>
    1ec0:	6823      	ldr	r3, [r4, #0]
    1ec2:	4606      	mov	r6, r0
    1ec4:	b91b      	cbnz	r3, 1ece <__mriBuffer_ReadIntegerAsHex+0x1e>
    1ec6:	4638      	mov	r0, r7
    1ec8:	f7ff ff68 	bl	1d9c <__mriBuffer_ReadUIntegerAsHex>
    1ecc:	e000      	b.n	1ed0 <__mriBuffer_ReadIntegerAsHex+0x20>
    1ece:	4628      	mov	r0, r5
    1ed0:	6822      	ldr	r2, [r4, #0]
    1ed2:	490b      	ldr	r1, [pc, #44]	; (1f00 <__mriBuffer_ReadIntegerAsHex+0x50>)
    1ed4:	b98a      	cbnz	r2, 1efa <__mriBuffer_ReadIntegerAsHex+0x4a>
    1ed6:	b936      	cbnz	r6, 1ee6 <__mriBuffer_ReadIntegerAsHex+0x36>
    1ed8:	2800      	cmp	r0, #0
    1eda:	da0f      	bge.n	1efc <__mriBuffer_ReadIntegerAsHex+0x4c>
    1edc:	2303      	movs	r3, #3
    1ede:	600b      	str	r3, [r1, #0]
    1ee0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
    1ee4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1ee6:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
    1eea:	d904      	bls.n	1ef6 <__mriBuffer_ReadIntegerAsHex+0x46>
    1eec:	2003      	movs	r0, #3
    1eee:	6008      	str	r0, [r1, #0]
    1ef0:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
    1ef4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1ef6:	4240      	negs	r0, r0
    1ef8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1efa:	2000      	movs	r0, #0
    1efc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1efe:	bf00      	nop
    1f00:	100001dc 	.word	0x100001dc

00001f04 <__mriBuffer_MatchesString>:
    1f04:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1f08:	4e12      	ldr	r6, [pc, #72]	; (1f54 <__mriBuffer_MatchesString+0x50>)
    1f0a:	2300      	movs	r3, #0
    1f0c:	4614      	mov	r4, r2
    1f0e:	4605      	mov	r5, r0
    1f10:	4688      	mov	r8, r1
    1f12:	6033      	str	r3, [r6, #0]
    1f14:	f7ff fe8d 	bl	1c32 <__mriBuffer_BytesLeft>
    1f18:	42a0      	cmp	r0, r4
    1f1a:	d201      	bcs.n	1f20 <__mriBuffer_MatchesString+0x1c>
    1f1c:	2001      	movs	r0, #1
    1f1e:	6030      	str	r0, [r6, #0]
    1f20:	6837      	ldr	r7, [r6, #0]
    1f22:	b97f      	cbnz	r7, 1f44 <__mriBuffer_MatchesString+0x40>
    1f24:	68ae      	ldr	r6, [r5, #8]
    1f26:	4641      	mov	r1, r8
    1f28:	4630      	mov	r0, r6
    1f2a:	4622      	mov	r2, r4
    1f2c:	f001 fa6a 	bl	3404 <strncmp>
    1f30:	4680      	mov	r8, r0
    1f32:	b938      	cbnz	r0, 1f44 <__mriBuffer_MatchesString+0x40>
    1f34:	4628      	mov	r0, r5
    1f36:	f7ff fe7c 	bl	1c32 <__mriBuffer_BytesLeft>
    1f3a:	42a0      	cmp	r0, r4
    1f3c:	d005      	beq.n	1f4a <__mriBuffer_MatchesString+0x46>
    1f3e:	5d31      	ldrb	r1, [r6, r4]
    1f40:	293a      	cmp	r1, #58	; 0x3a
    1f42:	d002      	beq.n	1f4a <__mriBuffer_MatchesString+0x46>
    1f44:	2000      	movs	r0, #0
    1f46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1f4a:	1934      	adds	r4, r6, r4
    1f4c:	60ac      	str	r4, [r5, #8]
    1f4e:	2001      	movs	r0, #1
    1f50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1f54:	100001dc 	.word	0x100001dc

00001f58 <handleBreakpointWatchpointException>:
    1f58:	4b05      	ldr	r3, [pc, #20]	; (1f70 <handleBreakpointWatchpointException+0x18>)
    1f5a:	6818      	ldr	r0, [r3, #0]
    1f5c:	2804      	cmp	r0, #4
    1f5e:	d003      	beq.n	1f68 <handleBreakpointWatchpointException+0x10>
    1f60:	2808      	cmp	r0, #8
    1f62:	d104      	bne.n	1f6e <handleBreakpointWatchpointException+0x16>
    1f64:	4803      	ldr	r0, [pc, #12]	; (1f74 <handleBreakpointWatchpointException+0x1c>)
    1f66:	e000      	b.n	1f6a <handleBreakpointWatchpointException+0x12>
    1f68:	4803      	ldr	r0, [pc, #12]	; (1f78 <handleBreakpointWatchpointException+0x20>)
    1f6a:	f7fe ba2d 	b.w	3c8 <__mriCore_PrepareStringResponse>
    1f6e:	4770      	bx	lr
    1f70:	100001dc 	.word	0x100001dc
    1f74:	0000409e 	.word	0x0000409e
    1f78:	0000409a 	.word	0x0000409a

00001f7c <parseBreakpointWatchpointCommandArguments>:
    1f7c:	b570      	push	{r4, r5, r6, lr}
    1f7e:	4606      	mov	r6, r0
    1f80:	f7fe fa8c 	bl	49c <__mriCore_GetBuffer>
    1f84:	4c0f      	ldr	r4, [pc, #60]	; (1fc4 <parseBreakpointWatchpointCommandArguments+0x48>)
    1f86:	2300      	movs	r3, #0
    1f88:	4605      	mov	r5, r0
    1f8a:	6023      	str	r3, [r4, #0]
    1f8c:	f7ff fe88 	bl	1ca0 <__mriBuffer_ReadChar>
    1f90:	7230      	strb	r0, [r6, #8]
    1f92:	6820      	ldr	r0, [r4, #0]
    1f94:	b9a8      	cbnz	r0, 1fc2 <parseBreakpointWatchpointCommandArguments+0x46>
    1f96:	212c      	movs	r1, #44	; 0x2c
    1f98:	4628      	mov	r0, r5
    1f9a:	f000 f8bf 	bl	211c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    1f9e:	6821      	ldr	r1, [r4, #0]
    1fa0:	b979      	cbnz	r1, 1fc2 <parseBreakpointWatchpointCommandArguments+0x46>
    1fa2:	4628      	mov	r0, r5
    1fa4:	f000 f8ac 	bl	2100 <__mriCmd_ReadUIntegerArgument>
    1fa8:	6822      	ldr	r2, [r4, #0]
    1faa:	6030      	str	r0, [r6, #0]
    1fac:	b94a      	cbnz	r2, 1fc2 <parseBreakpointWatchpointCommandArguments+0x46>
    1fae:	4628      	mov	r0, r5
    1fb0:	212c      	movs	r1, #44	; 0x2c
    1fb2:	f000 f8b3 	bl	211c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    1fb6:	6823      	ldr	r3, [r4, #0]
    1fb8:	b91b      	cbnz	r3, 1fc2 <parseBreakpointWatchpointCommandArguments+0x46>
    1fba:	4628      	mov	r0, r5
    1fbc:	f000 f8a0 	bl	2100 <__mriCmd_ReadUIntegerArgument>
    1fc0:	6070      	str	r0, [r6, #4]
    1fc2:	bd70      	pop	{r4, r5, r6, pc}
    1fc4:	100001dc 	.word	0x100001dc

00001fc8 <handleWatchpointRemoveCommand>:
    1fc8:	b510      	push	{r4, lr}
    1fca:	4c09      	ldr	r4, [pc, #36]	; (1ff0 <handleWatchpointRemoveCommand+0x28>)
    1fcc:	4602      	mov	r2, r0
    1fce:	2300      	movs	r3, #0
    1fd0:	c903      	ldmia	r1, {r0, r1}
    1fd2:	6023      	str	r3, [r4, #0]
    1fd4:	f7ff f930 	bl	1238 <__mriPlatform_ClearHardwareWatchpoint>
    1fd8:	6820      	ldr	r0, [r4, #0]
    1fda:	b118      	cbz	r0, 1fe4 <handleWatchpointRemoveCommand+0x1c>
    1fdc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1fe0:	f7ff bfba 	b.w	1f58 <handleBreakpointWatchpointException>
    1fe4:	4803      	ldr	r0, [pc, #12]	; (1ff4 <handleWatchpointRemoveCommand+0x2c>)
    1fe6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1fea:	f7fe b9ed 	b.w	3c8 <__mriCore_PrepareStringResponse>
    1fee:	bf00      	nop
    1ff0:	100001dc 	.word	0x100001dc
    1ff4:	000040a2 	.word	0x000040a2

00001ff8 <handleWatchpointSetCommand>:
    1ff8:	b510      	push	{r4, lr}
    1ffa:	4c09      	ldr	r4, [pc, #36]	; (2020 <handleWatchpointSetCommand+0x28>)
    1ffc:	4602      	mov	r2, r0
    1ffe:	2300      	movs	r3, #0
    2000:	c903      	ldmia	r1, {r0, r1}
    2002:	6023      	str	r3, [r4, #0]
    2004:	f7ff f8d0 	bl	11a8 <__mriPlatform_SetHardwareWatchpoint>
    2008:	6820      	ldr	r0, [r4, #0]
    200a:	b118      	cbz	r0, 2014 <handleWatchpointSetCommand+0x1c>
    200c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2010:	f7ff bfa2 	b.w	1f58 <handleBreakpointWatchpointException>
    2014:	4803      	ldr	r0, [pc, #12]	; (2024 <handleWatchpointSetCommand+0x2c>)
    2016:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    201a:	f7fe b9d5 	b.w	3c8 <__mriCore_PrepareStringResponse>
    201e:	bf00      	nop
    2020:	100001dc 	.word	0x100001dc
    2024:	000040a2 	.word	0x000040a2

00002028 <__mriCmd_HandleBreakpointWatchpointSetCommand>:
    2028:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    202a:	4c16      	ldr	r4, [pc, #88]	; (2084 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x5c>)
    202c:	2300      	movs	r3, #0
    202e:	a801      	add	r0, sp, #4
    2030:	6023      	str	r3, [r4, #0]
    2032:	f7ff ffa3 	bl	1f7c <parseBreakpointWatchpointCommandArguments>
    2036:	6820      	ldr	r0, [r4, #0]
    2038:	b108      	cbz	r0, 203e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x16>
    203a:	4813      	ldr	r0, [pc, #76]	; (2088 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x60>)
    203c:	e01d      	b.n	207a <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    203e:	f89d 100c 	ldrb.w	r1, [sp, #12]
    2042:	3931      	subs	r1, #49	; 0x31
    2044:	2903      	cmp	r1, #3
    2046:	d817      	bhi.n	2078 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x50>
    2048:	e8df f001 	tbb	[pc, r1]
    204c:	110f0d02 	.word	0x110f0d02
    2050:	9801      	ldr	r0, [sp, #4]
    2052:	9902      	ldr	r1, [sp, #8]
    2054:	f7ff f854 	bl	1100 <__mriPlatform_SetHardwareBreakpoint>
    2058:	6822      	ldr	r2, [r4, #0]
    205a:	b112      	cbz	r2, 2062 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x3a>
    205c:	f7ff ff7c 	bl	1f58 <handleBreakpointWatchpointException>
    2060:	e00d      	b.n	207e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    2062:	480a      	ldr	r0, [pc, #40]	; (208c <__mriCmd_HandleBreakpointWatchpointSetCommand+0x64>)
    2064:	e009      	b.n	207a <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    2066:	2000      	movs	r0, #0
    2068:	e002      	b.n	2070 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    206a:	2001      	movs	r0, #1
    206c:	e000      	b.n	2070 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    206e:	2002      	movs	r0, #2
    2070:	a901      	add	r1, sp, #4
    2072:	f7ff ffc1 	bl	1ff8 <handleWatchpointSetCommand>
    2076:	e002      	b.n	207e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    2078:	4805      	ldr	r0, [pc, #20]	; (2090 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x68>)
    207a:	f7fe f9a5 	bl	3c8 <__mriCore_PrepareStringResponse>
    207e:	2000      	movs	r0, #0
    2080:	b004      	add	sp, #16
    2082:	bd10      	pop	{r4, pc}
    2084:	100001dc 	.word	0x100001dc
    2088:	0000409a 	.word	0x0000409a
    208c:	000040a2 	.word	0x000040a2
    2090:	00003502 	.word	0x00003502

00002094 <__mriCmd_HandleBreakpointWatchpointRemoveCommand>:
    2094:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2096:	4c16      	ldr	r4, [pc, #88]	; (20f0 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x5c>)
    2098:	2300      	movs	r3, #0
    209a:	a801      	add	r0, sp, #4
    209c:	6023      	str	r3, [r4, #0]
    209e:	f7ff ff6d 	bl	1f7c <parseBreakpointWatchpointCommandArguments>
    20a2:	6820      	ldr	r0, [r4, #0]
    20a4:	b108      	cbz	r0, 20aa <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x16>
    20a6:	4813      	ldr	r0, [pc, #76]	; (20f4 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x60>)
    20a8:	e01d      	b.n	20e6 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    20aa:	f89d 100c 	ldrb.w	r1, [sp, #12]
    20ae:	3931      	subs	r1, #49	; 0x31
    20b0:	2903      	cmp	r1, #3
    20b2:	d817      	bhi.n	20e4 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x50>
    20b4:	e8df f001 	tbb	[pc, r1]
    20b8:	110f0d02 	.word	0x110f0d02
    20bc:	9801      	ldr	r0, [sp, #4]
    20be:	9902      	ldr	r1, [sp, #8]
    20c0:	f7ff f856 	bl	1170 <__mriPlatform_ClearHardwareBreakpoint>
    20c4:	6822      	ldr	r2, [r4, #0]
    20c6:	b112      	cbz	r2, 20ce <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x3a>
    20c8:	f7ff ff46 	bl	1f58 <handleBreakpointWatchpointException>
    20cc:	e00d      	b.n	20ea <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    20ce:	480a      	ldr	r0, [pc, #40]	; (20f8 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x64>)
    20d0:	e009      	b.n	20e6 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    20d2:	2000      	movs	r0, #0
    20d4:	e002      	b.n	20dc <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    20d6:	2001      	movs	r0, #1
    20d8:	e000      	b.n	20dc <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    20da:	2002      	movs	r0, #2
    20dc:	a901      	add	r1, sp, #4
    20de:	f7ff ff73 	bl	1fc8 <handleWatchpointRemoveCommand>
    20e2:	e002      	b.n	20ea <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    20e4:	4805      	ldr	r0, [pc, #20]	; (20fc <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x68>)
    20e6:	f7fe f96f 	bl	3c8 <__mriCore_PrepareStringResponse>
    20ea:	2000      	movs	r0, #0
    20ec:	b004      	add	sp, #16
    20ee:	bd10      	pop	{r4, pc}
    20f0:	100001dc 	.word	0x100001dc
    20f4:	0000409a 	.word	0x0000409a
    20f8:	000040a2 	.word	0x000040a2
    20fc:	00003502 	.word	0x00003502

00002100 <__mriCmd_ReadUIntegerArgument>:
    2100:	b510      	push	{r4, lr}
    2102:	4c05      	ldr	r4, [pc, #20]	; (2118 <__mriCmd_ReadUIntegerArgument+0x18>)
    2104:	2300      	movs	r3, #0
    2106:	6023      	str	r3, [r4, #0]
    2108:	f7ff fe48 	bl	1d9c <__mriBuffer_ReadUIntegerAsHex>
    210c:	6821      	ldr	r1, [r4, #0]
    210e:	2900      	cmp	r1, #0
    2110:	bf18      	it	ne
    2112:	2000      	movne	r0, #0
    2114:	bd10      	pop	{r4, pc}
    2116:	bf00      	nop
    2118:	100001dc 	.word	0x100001dc

0000211c <__mriCmd_ThrowIfNextCharIsNotEqualTo>:
    211c:	b508      	push	{r3, lr}
    211e:	f7ff fead 	bl	1e7c <__mriBuffer_IsNextCharEqualTo>
    2122:	b928      	cbnz	r0, 2130 <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x14>
    2124:	4b03      	ldr	r3, [pc, #12]	; (2134 <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x18>)
    2126:	681a      	ldr	r2, [r3, #0]
    2128:	2a04      	cmp	r2, #4
    212a:	bfb8      	it	lt
    212c:	2204      	movlt	r2, #4
    212e:	601a      	str	r2, [r3, #0]
    2130:	bd08      	pop	{r3, pc}
    2132:	bf00      	nop
    2134:	100001dc 	.word	0x100001dc

00002138 <__mriCmd_ReadAddressAndLengthArguments>:
    2138:	b570      	push	{r4, r5, r6, lr}
    213a:	4c0a      	ldr	r4, [pc, #40]	; (2164 <__mriCmd_ReadAddressAndLengthArguments+0x2c>)
    213c:	2300      	movs	r3, #0
    213e:	460d      	mov	r5, r1
    2140:	4606      	mov	r6, r0
    2142:	6023      	str	r3, [r4, #0]
    2144:	f7ff ffdc 	bl	2100 <__mriCmd_ReadUIntegerArgument>
    2148:	6028      	str	r0, [r5, #0]
    214a:	6820      	ldr	r0, [r4, #0]
    214c:	b948      	cbnz	r0, 2162 <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    214e:	212c      	movs	r1, #44	; 0x2c
    2150:	4630      	mov	r0, r6
    2152:	f7ff ffe3 	bl	211c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2156:	6821      	ldr	r1, [r4, #0]
    2158:	b919      	cbnz	r1, 2162 <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    215a:	4630      	mov	r0, r6
    215c:	f7ff ffd0 	bl	2100 <__mriCmd_ReadUIntegerArgument>
    2160:	6068      	str	r0, [r5, #4]
    2162:	bd70      	pop	{r4, r5, r6, pc}
    2164:	100001dc 	.word	0x100001dc

00002168 <__mriCmd_ReadAddressAndLengthArgumentsWithColon>:
    2168:	b538      	push	{r3, r4, r5, lr}
    216a:	4c07      	ldr	r4, [pc, #28]	; (2188 <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x20>)
    216c:	2300      	movs	r3, #0
    216e:	4605      	mov	r5, r0
    2170:	6023      	str	r3, [r4, #0]
    2172:	f7ff ffe1 	bl	2138 <__mriCmd_ReadAddressAndLengthArguments>
    2176:	6820      	ldr	r0, [r4, #0]
    2178:	b928      	cbnz	r0, 2186 <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x1e>
    217a:	4628      	mov	r0, r5
    217c:	213a      	movs	r1, #58	; 0x3a
    217e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2182:	f7ff bfcb 	b.w	211c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2186:	bd38      	pop	{r3, r4, r5, pc}
    2188:	100001dc 	.word	0x100001dc

0000218c <__mriCmd_HandleContinueCommand>:
    218c:	b570      	push	{r4, r5, r6, lr}
    218e:	f7fe f985 	bl	49c <__mriCore_GetBuffer>
    2192:	4606      	mov	r6, r0
    2194:	f7fe ff20 	bl	fd8 <__mriPlatform_WasProgramCounterModifiedByUser>
    2198:	b910      	cbnz	r0, 21a0 <__mriCmd_HandleContinueCommand+0x14>
    219a:	f7fe ff11 	bl	fc0 <__mriPlatform_IsCurrentInstructionHardcodedBreakpoint>
    219e:	b968      	cbnz	r0, 21bc <__mriCmd_HandleContinueCommand+0x30>
    21a0:	2400      	movs	r4, #0
    21a2:	4d08      	ldr	r5, [pc, #32]	; (21c4 <__mriCmd_HandleContinueCommand+0x38>)
    21a4:	2300      	movs	r3, #0
    21a6:	4630      	mov	r0, r6
    21a8:	602b      	str	r3, [r5, #0]
    21aa:	f7ff ffa9 	bl	2100 <__mriCmd_ReadUIntegerArgument>
    21ae:	6829      	ldr	r1, [r5, #0]
    21b0:	b909      	cbnz	r1, 21b6 <__mriCmd_HandleContinueCommand+0x2a>
    21b2:	f7fe fee5 	bl	f80 <__mriPlatform_SetProgramCounter>
    21b6:	f044 0003 	orr.w	r0, r4, #3
    21ba:	bd70      	pop	{r4, r5, r6, pc}
    21bc:	f7fe fee6 	bl	f8c <__mriPlatform_AdvanceProgramCounterToNextInstruction>
    21c0:	2404      	movs	r4, #4
    21c2:	e7ee      	b.n	21a2 <__mriCmd_HandleContinueCommand+0x16>
    21c4:	100001dc 	.word	0x100001dc

000021c8 <processGdbFileResponseCommands>:
    21c8:	b508      	push	{r3, lr}
    21ca:	f7fe f98f 	bl	4ec <__mriCore_GdbCommandHandlingLoop>
    21ce:	f7fe f907 	bl	3e0 <__mriCore_WasControlCFlagSentFromGdb>
    21d2:	b148      	cbz	r0, 21e8 <processGdbFileResponseCommands+0x20>
    21d4:	f7fe f926 	bl	424 <__mriCore_WasSemihostCallCancelledByGdb>
    21d8:	b908      	cbnz	r0, 21de <processGdbFileResponseCommands+0x16>
    21da:	f7fe f92d 	bl	438 <__mriCore_FlagSemihostCallAsHandled>
    21de:	2002      	movs	r0, #2
    21e0:	f7fe f944 	bl	46c <__mriCore_SetSignalValue>
    21e4:	2000      	movs	r0, #0
    21e6:	bd08      	pop	{r3, pc}
    21e8:	f7fe f926 	bl	438 <__mriCore_FlagSemihostCallAsHandled>
    21ec:	2001      	movs	r0, #1
    21ee:	bd08      	pop	{r3, pc}

000021f0 <__mriIssueGdbFileOpenRequest>:
    21f0:	b538      	push	{r3, r4, r5, lr}
    21f2:	4605      	mov	r5, r0
    21f4:	f7fe f956 	bl	4a4 <__mriCore_GetInitializedBuffer>
    21f8:	4913      	ldr	r1, [pc, #76]	; (2248 <__mriIssueGdbFileOpenRequest+0x58>)
    21fa:	4604      	mov	r4, r0
    21fc:	f7ff fdc0 	bl	1d80 <__mriBuffer_WriteString>
    2200:	4620      	mov	r0, r4
    2202:	6829      	ldr	r1, [r5, #0]
    2204:	f7ff fdf8 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2208:	4620      	mov	r0, r4
    220a:	212f      	movs	r1, #47	; 0x2f
    220c:	f7ff fd36 	bl	1c7c <__mriBuffer_WriteChar>
    2210:	6869      	ldr	r1, [r5, #4]
    2212:	4620      	mov	r0, r4
    2214:	3101      	adds	r1, #1
    2216:	f7ff fdef 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    221a:	4620      	mov	r0, r4
    221c:	212c      	movs	r1, #44	; 0x2c
    221e:	f7ff fd2d 	bl	1c7c <__mriBuffer_WriteChar>
    2222:	4620      	mov	r0, r4
    2224:	68a9      	ldr	r1, [r5, #8]
    2226:	f7ff fde7 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    222a:	4620      	mov	r0, r4
    222c:	212c      	movs	r1, #44	; 0x2c
    222e:	f7ff fd25 	bl	1c7c <__mriBuffer_WriteChar>
    2232:	4620      	mov	r0, r4
    2234:	68e9      	ldr	r1, [r5, #12]
    2236:	f7ff fddf 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    223a:	f7fe f93b 	bl	4b4 <__mriCore_SendPacketToGdb>
    223e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2242:	f7ff bfc1 	b.w	21c8 <processGdbFileResponseCommands>
    2246:	bf00      	nop
    2248:	000040c8 	.word	0x000040c8

0000224c <__mriIssueGdbFileWriteRequest>:
    224c:	b538      	push	{r3, r4, r5, lr}
    224e:	4605      	mov	r5, r0
    2250:	f7fe f928 	bl	4a4 <__mriCore_GetInitializedBuffer>
    2254:	490e      	ldr	r1, [pc, #56]	; (2290 <__mriIssueGdbFileWriteRequest+0x44>)
    2256:	4604      	mov	r4, r0
    2258:	f7ff fd92 	bl	1d80 <__mriBuffer_WriteString>
    225c:	4620      	mov	r0, r4
    225e:	6829      	ldr	r1, [r5, #0]
    2260:	f7ff fdca 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2264:	4620      	mov	r0, r4
    2266:	212c      	movs	r1, #44	; 0x2c
    2268:	f7ff fd08 	bl	1c7c <__mriBuffer_WriteChar>
    226c:	4620      	mov	r0, r4
    226e:	6869      	ldr	r1, [r5, #4]
    2270:	f7ff fdc2 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2274:	4620      	mov	r0, r4
    2276:	212c      	movs	r1, #44	; 0x2c
    2278:	f7ff fd00 	bl	1c7c <__mriBuffer_WriteChar>
    227c:	4620      	mov	r0, r4
    227e:	68a9      	ldr	r1, [r5, #8]
    2280:	f7ff fdba 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2284:	f7fe f916 	bl	4b4 <__mriCore_SendPacketToGdb>
    2288:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    228c:	f7ff bf9c 	b.w	21c8 <processGdbFileResponseCommands>
    2290:	000040c0 	.word	0x000040c0

00002294 <__mriIssueGdbFileReadRequest>:
    2294:	b538      	push	{r3, r4, r5, lr}
    2296:	4605      	mov	r5, r0
    2298:	f7fe f904 	bl	4a4 <__mriCore_GetInitializedBuffer>
    229c:	490e      	ldr	r1, [pc, #56]	; (22d8 <__mriIssueGdbFileReadRequest+0x44>)
    229e:	4604      	mov	r4, r0
    22a0:	f7ff fd6e 	bl	1d80 <__mriBuffer_WriteString>
    22a4:	4620      	mov	r0, r4
    22a6:	6829      	ldr	r1, [r5, #0]
    22a8:	f7ff fda6 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    22ac:	4620      	mov	r0, r4
    22ae:	212c      	movs	r1, #44	; 0x2c
    22b0:	f7ff fce4 	bl	1c7c <__mriBuffer_WriteChar>
    22b4:	4620      	mov	r0, r4
    22b6:	6869      	ldr	r1, [r5, #4]
    22b8:	f7ff fd9e 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    22bc:	4620      	mov	r0, r4
    22be:	212c      	movs	r1, #44	; 0x2c
    22c0:	f7ff fcdc 	bl	1c7c <__mriBuffer_WriteChar>
    22c4:	4620      	mov	r0, r4
    22c6:	68a9      	ldr	r1, [r5, #8]
    22c8:	f7ff fd96 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    22cc:	f7fe f8f2 	bl	4b4 <__mriCore_SendPacketToGdb>
    22d0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    22d4:	f7ff bf78 	b.w	21c8 <processGdbFileResponseCommands>
    22d8:	000040d7 	.word	0x000040d7

000022dc <__mriIssueGdbFileCloseRequest>:
    22dc:	b538      	push	{r3, r4, r5, lr}
    22de:	4604      	mov	r4, r0
    22e0:	f7fe f8e0 	bl	4a4 <__mriCore_GetInitializedBuffer>
    22e4:	4906      	ldr	r1, [pc, #24]	; (2300 <__mriIssueGdbFileCloseRequest+0x24>)
    22e6:	4605      	mov	r5, r0
    22e8:	f7ff fd4a 	bl	1d80 <__mriBuffer_WriteString>
    22ec:	4628      	mov	r0, r5
    22ee:	4621      	mov	r1, r4
    22f0:	f7ff fd82 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    22f4:	f7fe f8de 	bl	4b4 <__mriCore_SendPacketToGdb>
    22f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    22fc:	f7ff bf64 	b.w	21c8 <processGdbFileResponseCommands>
    2300:	000040a5 	.word	0x000040a5

00002304 <__mriIssueGdbFileSeekRequest>:
    2304:	b538      	push	{r3, r4, r5, lr}
    2306:	4605      	mov	r5, r0
    2308:	f7fe f8cc 	bl	4a4 <__mriCore_GetInitializedBuffer>
    230c:	490e      	ldr	r1, [pc, #56]	; (2348 <__mriIssueGdbFileSeekRequest+0x44>)
    230e:	4604      	mov	r4, r0
    2310:	f7ff fd36 	bl	1d80 <__mriBuffer_WriteString>
    2314:	4620      	mov	r0, r4
    2316:	6829      	ldr	r1, [r5, #0]
    2318:	f7ff fd6e 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    231c:	4620      	mov	r0, r4
    231e:	212c      	movs	r1, #44	; 0x2c
    2320:	f7ff fcac 	bl	1c7c <__mriBuffer_WriteChar>
    2324:	4620      	mov	r0, r4
    2326:	6869      	ldr	r1, [r5, #4]
    2328:	f7ff fd90 	bl	1e4c <__mriBuffer_WriteIntegerAsHex>
    232c:	4620      	mov	r0, r4
    232e:	212c      	movs	r1, #44	; 0x2c
    2330:	f7ff fca4 	bl	1c7c <__mriBuffer_WriteChar>
    2334:	4620      	mov	r0, r4
    2336:	68a9      	ldr	r1, [r5, #8]
    2338:	f7ff fd88 	bl	1e4c <__mriBuffer_WriteIntegerAsHex>
    233c:	f7fe f8ba 	bl	4b4 <__mriCore_SendPacketToGdb>
    2340:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2344:	f7ff bf40 	b.w	21c8 <processGdbFileResponseCommands>
    2348:	000040de 	.word	0x000040de

0000234c <__mriIssueGdbFileFStatRequest>:
    234c:	b570      	push	{r4, r5, r6, lr}
    234e:	460d      	mov	r5, r1
    2350:	4606      	mov	r6, r0
    2352:	f7fe f8a7 	bl	4a4 <__mriCore_GetInitializedBuffer>
    2356:	490b      	ldr	r1, [pc, #44]	; (2384 <__mriIssueGdbFileFStatRequest+0x38>)
    2358:	4604      	mov	r4, r0
    235a:	f7ff fd11 	bl	1d80 <__mriBuffer_WriteString>
    235e:	4620      	mov	r0, r4
    2360:	4631      	mov	r1, r6
    2362:	f7ff fd49 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2366:	4620      	mov	r0, r4
    2368:	212c      	movs	r1, #44	; 0x2c
    236a:	f7ff fc87 	bl	1c7c <__mriBuffer_WriteChar>
    236e:	4620      	mov	r0, r4
    2370:	4629      	mov	r1, r5
    2372:	f7ff fd41 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2376:	f7fe f89d 	bl	4b4 <__mriCore_SendPacketToGdb>
    237a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    237e:	f7ff bf23 	b.w	21c8 <processGdbFileResponseCommands>
    2382:	bf00      	nop
    2384:	000040cf 	.word	0x000040cf

00002388 <__mriIssueGdbFileUnlinkRequest>:
    2388:	b538      	push	{r3, r4, r5, lr}
    238a:	4605      	mov	r5, r0
    238c:	f7fe f88a 	bl	4a4 <__mriCore_GetInitializedBuffer>
    2390:	490b      	ldr	r1, [pc, #44]	; (23c0 <__mriIssueGdbFileUnlinkRequest+0x38>)
    2392:	4604      	mov	r4, r0
    2394:	f7ff fcf4 	bl	1d80 <__mriBuffer_WriteString>
    2398:	4620      	mov	r0, r4
    239a:	6829      	ldr	r1, [r5, #0]
    239c:	f7ff fd2c 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    23a0:	4620      	mov	r0, r4
    23a2:	212f      	movs	r1, #47	; 0x2f
    23a4:	f7ff fc6a 	bl	1c7c <__mriBuffer_WriteChar>
    23a8:	6869      	ldr	r1, [r5, #4]
    23aa:	4620      	mov	r0, r4
    23ac:	3101      	adds	r1, #1
    23ae:	f7ff fd23 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    23b2:	f7fe f87f 	bl	4b4 <__mriCore_SendPacketToGdb>
    23b6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    23ba:	f7ff bf05 	b.w	21c8 <processGdbFileResponseCommands>
    23be:	bf00      	nop
    23c0:	000040e6 	.word	0x000040e6

000023c4 <__mriIssueGdbFileStatRequest>:
    23c4:	b570      	push	{r4, r5, r6, lr}
    23c6:	4605      	mov	r5, r0
    23c8:	460e      	mov	r6, r1
    23ca:	f7fe f86b 	bl	4a4 <__mriCore_GetInitializedBuffer>
    23ce:	4910      	ldr	r1, [pc, #64]	; (2410 <__mriIssueGdbFileStatRequest+0x4c>)
    23d0:	4604      	mov	r4, r0
    23d2:	f7ff fcd5 	bl	1d80 <__mriBuffer_WriteString>
    23d6:	4620      	mov	r0, r4
    23d8:	4629      	mov	r1, r5
    23da:	f7ff fd0d 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    23de:	212f      	movs	r1, #47	; 0x2f
    23e0:	4620      	mov	r0, r4
    23e2:	f7ff fc4b 	bl	1c7c <__mriBuffer_WriteChar>
    23e6:	4628      	mov	r0, r5
    23e8:	f001 f804 	bl	33f4 <strlen>
    23ec:	1c41      	adds	r1, r0, #1
    23ee:	4620      	mov	r0, r4
    23f0:	f7ff fd02 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    23f4:	4620      	mov	r0, r4
    23f6:	212c      	movs	r1, #44	; 0x2c
    23f8:	f7ff fc40 	bl	1c7c <__mriBuffer_WriteChar>
    23fc:	4620      	mov	r0, r4
    23fe:	4631      	mov	r1, r6
    2400:	f7ff fcfa 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2404:	f7fe f856 	bl	4b4 <__mriCore_SendPacketToGdb>
    2408:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    240c:	f7ff bedc 	b.w	21c8 <processGdbFileResponseCommands>
    2410:	000040ad 	.word	0x000040ad

00002414 <__mriIssueGdbFileRenameRequest>:
    2414:	b570      	push	{r4, r5, r6, lr}
    2416:	460d      	mov	r5, r1
    2418:	4606      	mov	r6, r0
    241a:	f7fe f843 	bl	4a4 <__mriCore_GetInitializedBuffer>
    241e:	4916      	ldr	r1, [pc, #88]	; (2478 <__mriIssueGdbFileRenameRequest+0x64>)
    2420:	4604      	mov	r4, r0
    2422:	f7ff fcad 	bl	1d80 <__mriBuffer_WriteString>
    2426:	4620      	mov	r0, r4
    2428:	4631      	mov	r1, r6
    242a:	f7ff fce5 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    242e:	212f      	movs	r1, #47	; 0x2f
    2430:	4620      	mov	r0, r4
    2432:	f7ff fc23 	bl	1c7c <__mriBuffer_WriteChar>
    2436:	4630      	mov	r0, r6
    2438:	f000 ffdc 	bl	33f4 <strlen>
    243c:	1c41      	adds	r1, r0, #1
    243e:	4620      	mov	r0, r4
    2440:	f7ff fcda 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2444:	4620      	mov	r0, r4
    2446:	212c      	movs	r1, #44	; 0x2c
    2448:	f7ff fc18 	bl	1c7c <__mriBuffer_WriteChar>
    244c:	4620      	mov	r0, r4
    244e:	4629      	mov	r1, r5
    2450:	f7ff fcd2 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2454:	212f      	movs	r1, #47	; 0x2f
    2456:	4620      	mov	r0, r4
    2458:	f7ff fc10 	bl	1c7c <__mriBuffer_WriteChar>
    245c:	4628      	mov	r0, r5
    245e:	f000 ffc9 	bl	33f4 <strlen>
    2462:	1c41      	adds	r1, r0, #1
    2464:	4620      	mov	r0, r4
    2466:	f7ff fcc7 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    246a:	f7fe f823 	bl	4b4 <__mriCore_SendPacketToGdb>
    246e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2472:	f7ff bea9 	b.w	21c8 <processGdbFileResponseCommands>
    2476:	bf00      	nop
    2478:	000040b7 	.word	0x000040b7

0000247c <__mriHandleFileIOCommand>:
    247c:	b570      	push	{r4, r5, r6, lr}
    247e:	f7fe f80d 	bl	49c <__mriCore_GetBuffer>
    2482:	4604      	mov	r4, r0
    2484:	f7ff fd14 	bl	1eb0 <__mriBuffer_ReadIntegerAsHex>
    2488:	212c      	movs	r1, #44	; 0x2c
    248a:	4606      	mov	r6, r0
    248c:	4620      	mov	r0, r4
    248e:	f7ff fcf5 	bl	1e7c <__mriBuffer_IsNextCharEqualTo>
    2492:	b150      	cbz	r0, 24aa <__mriHandleFileIOCommand+0x2e>
    2494:	4620      	mov	r0, r4
    2496:	f7ff fd0b 	bl	1eb0 <__mriBuffer_ReadIntegerAsHex>
    249a:	4909      	ldr	r1, [pc, #36]	; (24c0 <__mriHandleFileIOCommand+0x44>)
    249c:	4605      	mov	r5, r0
    249e:	2202      	movs	r2, #2
    24a0:	4620      	mov	r0, r4
    24a2:	f7ff fd2f 	bl	1f04 <__mriBuffer_MatchesString>
    24a6:	4604      	mov	r4, r0
    24a8:	e001      	b.n	24ae <__mriHandleFileIOCommand+0x32>
    24aa:	4604      	mov	r4, r0
    24ac:	4605      	mov	r5, r0
    24ae:	4630      	mov	r0, r6
    24b0:	4629      	mov	r1, r5
    24b2:	f7fd ffe7 	bl	484 <__mriCore_SetSemihostReturnValues>
    24b6:	4620      	mov	r0, r4
    24b8:	f7fd ffa8 	bl	40c <__mriCore_RecordControlCFlagSentFromGdb>
    24bc:	2003      	movs	r0, #3
    24be:	bd70      	pop	{r4, r5, r6, pc}
    24c0:	000040b4 	.word	0x000040b4

000024c4 <__mriCmd_HandleMemoryReadCommand>:
    24c4:	b537      	push	{r0, r1, r2, r4, r5, lr}
    24c6:	f7fd ffe9 	bl	49c <__mriCore_GetBuffer>
    24ca:	4c0b      	ldr	r4, [pc, #44]	; (24f8 <__mriCmd_HandleMemoryReadCommand+0x34>)
    24cc:	2300      	movs	r3, #0
    24ce:	4669      	mov	r1, sp
    24d0:	4605      	mov	r5, r0
    24d2:	6023      	str	r3, [r4, #0]
    24d4:	f7ff fe30 	bl	2138 <__mriCmd_ReadAddressAndLengthArguments>
    24d8:	6820      	ldr	r0, [r4, #0]
    24da:	b118      	cbz	r0, 24e4 <__mriCmd_HandleMemoryReadCommand+0x20>
    24dc:	4807      	ldr	r0, [pc, #28]	; (24fc <__mriCmd_HandleMemoryReadCommand+0x38>)
    24de:	f7fd ff73 	bl	3c8 <__mriCore_PrepareStringResponse>
    24e2:	e006      	b.n	24f2 <__mriCmd_HandleMemoryReadCommand+0x2e>
    24e4:	f7fd ff60 	bl	3a8 <__mriCore_InitBuffer>
    24e8:	e89d 0006 	ldmia.w	sp, {r1, r2}
    24ec:	4628      	mov	r0, r5
    24ee:	f000 fa48 	bl	2982 <__mriMem_ReadMemoryIntoHexBuffer>
    24f2:	2000      	movs	r0, #0
    24f4:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    24f6:	bf00      	nop
    24f8:	100001dc 	.word	0x100001dc
    24fc:	0000409a 	.word	0x0000409a

00002500 <__mriCmd_HandleMemoryWriteCommand>:
    2500:	b537      	push	{r0, r1, r2, r4, r5, lr}
    2502:	f7fd ffcb 	bl	49c <__mriCore_GetBuffer>
    2506:	4c0c      	ldr	r4, [pc, #48]	; (2538 <__mriCmd_HandleMemoryWriteCommand+0x38>)
    2508:	2300      	movs	r3, #0
    250a:	4669      	mov	r1, sp
    250c:	4605      	mov	r5, r0
    250e:	6023      	str	r3, [r4, #0]
    2510:	f7ff fe2a 	bl	2168 <__mriCmd_ReadAddressAndLengthArgumentsWithColon>
    2514:	6820      	ldr	r0, [r4, #0]
    2516:	b108      	cbz	r0, 251c <__mriCmd_HandleMemoryWriteCommand+0x1c>
    2518:	4808      	ldr	r0, [pc, #32]	; (253c <__mriCmd_HandleMemoryWriteCommand+0x3c>)
    251a:	e008      	b.n	252e <__mriCmd_HandleMemoryWriteCommand+0x2e>
    251c:	4628      	mov	r0, r5
    251e:	e89d 0006 	ldmia.w	sp, {r1, r2}
    2522:	f000 fa5b 	bl	29dc <__mriMem_WriteHexBufferToMemory>
    2526:	b108      	cbz	r0, 252c <__mriCmd_HandleMemoryWriteCommand+0x2c>
    2528:	4805      	ldr	r0, [pc, #20]	; (2540 <__mriCmd_HandleMemoryWriteCommand+0x40>)
    252a:	e000      	b.n	252e <__mriCmd_HandleMemoryWriteCommand+0x2e>
    252c:	4805      	ldr	r0, [pc, #20]	; (2544 <__mriCmd_HandleMemoryWriteCommand+0x44>)
    252e:	f7fd ff4b 	bl	3c8 <__mriCore_PrepareStringResponse>
    2532:	2000      	movs	r0, #0
    2534:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    2536:	bf00      	nop
    2538:	100001dc 	.word	0x100001dc
    253c:	0000409a 	.word	0x0000409a
    2540:	000040a2 	.word	0x000040a2
    2544:	000040ef 	.word	0x000040ef

00002548 <__mriCmd_HandleBinaryMemoryWriteCommand>:
    2548:	b537      	push	{r0, r1, r2, r4, r5, lr}
    254a:	f7fd ffa7 	bl	49c <__mriCore_GetBuffer>
    254e:	4d12      	ldr	r5, [pc, #72]	; (2598 <__mriCmd_HandleBinaryMemoryWriteCommand+0x50>)
    2550:	2300      	movs	r3, #0
    2552:	4669      	mov	r1, sp
    2554:	4604      	mov	r4, r0
    2556:	602b      	str	r3, [r5, #0]
    2558:	f7ff fdee 	bl	2138 <__mriCmd_ReadAddressAndLengthArguments>
    255c:	6828      	ldr	r0, [r5, #0]
    255e:	b918      	cbnz	r0, 2568 <__mriCmd_HandleBinaryMemoryWriteCommand+0x20>
    2560:	4620      	mov	r0, r4
    2562:	213a      	movs	r1, #58	; 0x3a
    2564:	f7ff fdda 	bl	211c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2568:	6829      	ldr	r1, [r5, #0]
    256a:	b109      	cbz	r1, 2570 <__mriCmd_HandleBinaryMemoryWriteCommand+0x28>
    256c:	480b      	ldr	r0, [pc, #44]	; (259c <__mriCmd_HandleBinaryMemoryWriteCommand+0x54>)
    256e:	e00e      	b.n	258e <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    2570:	4620      	mov	r0, r4
    2572:	e89d 0006 	ldmia.w	sp, {r1, r2}
    2576:	f000 fa59 	bl	2a2c <__mriMem_WriteBinaryBufferToMemory>
    257a:	b108      	cbz	r0, 2580 <__mriCmd_HandleBinaryMemoryWriteCommand+0x38>
    257c:	4808      	ldr	r0, [pc, #32]	; (25a0 <__mriCmd_HandleBinaryMemoryWriteCommand+0x58>)
    257e:	e006      	b.n	258e <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    2580:	4620      	mov	r0, r4
    2582:	f7ff fb73 	bl	1c6c <__mriBuffer_OverrunDetected>
    2586:	b108      	cbz	r0, 258c <__mriCmd_HandleBinaryMemoryWriteCommand+0x44>
    2588:	4806      	ldr	r0, [pc, #24]	; (25a4 <__mriCmd_HandleBinaryMemoryWriteCommand+0x5c>)
    258a:	e000      	b.n	258e <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    258c:	4806      	ldr	r0, [pc, #24]	; (25a8 <__mriCmd_HandleBinaryMemoryWriteCommand+0x60>)
    258e:	f7fd ff1b 	bl	3c8 <__mriCore_PrepareStringResponse>
    2592:	2000      	movs	r0, #0
    2594:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    2596:	bf00      	nop
    2598:	100001dc 	.word	0x100001dc
    259c:	0000409a 	.word	0x0000409a
    25a0:	000040a2 	.word	0x000040a2
    25a4:	0000348c 	.word	0x0000348c
    25a8:	000040ef 	.word	0x000040ef

000025ac <handleQueryTransferReadCommand>:
    25ac:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    25b0:	4604      	mov	r4, r0
    25b2:	f7fd ff73 	bl	49c <__mriCore_GetBuffer>
    25b6:	1d25      	adds	r5, r4, #4
    25b8:	e895 01a0 	ldmia.w	r5, {r5, r7, r8}
    25bc:	42af      	cmp	r7, r5
    25be:	4606      	mov	r6, r0
    25c0:	d203      	bcs.n	25ca <handleQueryTransferReadCommand+0x1e>
    25c2:	1bed      	subs	r5, r5, r7
    25c4:	f04f 096d 	mov.w	r9, #109	; 0x6d
    25c8:	e003      	b.n	25d2 <handleQueryTransferReadCommand+0x26>
    25ca:	2500      	movs	r5, #0
    25cc:	46a8      	mov	r8, r5
    25ce:	f04f 096c 	mov.w	r9, #108	; 0x6c
    25d2:	f7fd fee9 	bl	3a8 <__mriCore_InitBuffer>
    25d6:	4630      	mov	r0, r6
    25d8:	f7ff fb2b 	bl	1c32 <__mriBuffer_BytesLeft>
    25dc:	4540      	cmp	r0, r8
    25de:	bf38      	it	cc
    25e0:	4680      	movcc	r8, r0
    25e2:	45a8      	cmp	r8, r5
    25e4:	bf88      	it	hi
    25e6:	f04f 096c 	movhi.w	r9, #108	; 0x6c
    25ea:	4630      	mov	r0, r6
    25ec:	4649      	mov	r1, r9
    25ee:	bf88      	it	hi
    25f0:	46a8      	movhi	r8, r5
    25f2:	f7ff fb43 	bl	1c7c <__mriBuffer_WriteChar>
    25f6:	6821      	ldr	r1, [r4, #0]
    25f8:	4630      	mov	r0, r6
    25fa:	19c9      	adds	r1, r1, r7
    25fc:	4642      	mov	r2, r8
    25fe:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    2602:	f7ff bba3 	b.w	1d4c <__mriBuffer_WriteSizedString>
	...

00002608 <readQueryTransferReadArguments>:
    2608:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    260a:	4604      	mov	r4, r0
    260c:	460e      	mov	r6, r1
    260e:	4608      	mov	r0, r1
    2610:	2210      	movs	r2, #16
    2612:	2100      	movs	r1, #0
    2614:	f000 fedb 	bl	33ce <memset>
    2618:	4620      	mov	r0, r4
    261a:	213a      	movs	r1, #58	; 0x3a
    261c:	f7ff fc2e 	bl	1e7c <__mriBuffer_IsNextCharEqualTo>
    2620:	b930      	cbnz	r0, 2630 <readQueryTransferReadArguments+0x28>
    2622:	481f      	ldr	r0, [pc, #124]	; (26a0 <readQueryTransferReadArguments+0x98>)
    2624:	6802      	ldr	r2, [r0, #0]
    2626:	2a04      	cmp	r2, #4
    2628:	bfb8      	it	lt
    262a:	2204      	movlt	r2, #4
    262c:	6002      	str	r2, [r0, #0]
    262e:	e036      	b.n	269e <readQueryTransferReadArguments+0x96>
    2630:	4620      	mov	r0, r4
    2632:	491c      	ldr	r1, [pc, #112]	; (26a4 <readQueryTransferReadArguments+0x9c>)
    2634:	2204      	movs	r2, #4
    2636:	f7ff fc65 	bl	1f04 <__mriBuffer_MatchesString>
    263a:	2800      	cmp	r0, #0
    263c:	d0f1      	beq.n	2622 <readQueryTransferReadArguments+0x1a>
    263e:	4620      	mov	r0, r4
    2640:	213a      	movs	r1, #58	; 0x3a
    2642:	f7ff fc1b 	bl	1e7c <__mriBuffer_IsNextCharEqualTo>
    2646:	2800      	cmp	r0, #0
    2648:	d0eb      	beq.n	2622 <readQueryTransferReadArguments+0x1a>
    264a:	4d15      	ldr	r5, [pc, #84]	; (26a0 <readQueryTransferReadArguments+0x98>)
    264c:	2300      	movs	r3, #0
    264e:	4620      	mov	r0, r4
    2650:	4915      	ldr	r1, [pc, #84]	; (26a8 <readQueryTransferReadArguments+0xa0>)
    2652:	220a      	movs	r2, #10
    2654:	602b      	str	r3, [r5, #0]
    2656:	f7ff fc55 	bl	1f04 <__mriBuffer_MatchesString>
    265a:	4607      	mov	r7, r0
    265c:	b190      	cbz	r0, 2684 <readQueryTransferReadArguments+0x7c>
    265e:	4620      	mov	r0, r4
    2660:	213a      	movs	r1, #58	; 0x3a
    2662:	f7ff fc0b 	bl	1e7c <__mriBuffer_IsNextCharEqualTo>
    2666:	b1a0      	cbz	r0, 2692 <readQueryTransferReadArguments+0x8a>
    2668:	480f      	ldr	r0, [pc, #60]	; (26a8 <readQueryTransferReadArguments+0xa0>)
    266a:	6030      	str	r0, [r6, #0]
    266c:	480c      	ldr	r0, [pc, #48]	; (26a0 <readQueryTransferReadArguments+0x98>)
    266e:	6802      	ldr	r2, [r0, #0]
    2670:	b9aa      	cbnz	r2, 269e <readQueryTransferReadArguments+0x96>
    2672:	4669      	mov	r1, sp
    2674:	4620      	mov	r0, r4
    2676:	f7ff fd5f 	bl	2138 <__mriCmd_ReadAddressAndLengthArguments>
    267a:	9b00      	ldr	r3, [sp, #0]
    267c:	9901      	ldr	r1, [sp, #4]
    267e:	60b3      	str	r3, [r6, #8]
    2680:	60f1      	str	r1, [r6, #12]
    2682:	e00c      	b.n	269e <readQueryTransferReadArguments+0x96>
    2684:	4620      	mov	r0, r4
    2686:	213a      	movs	r1, #58	; 0x3a
    2688:	f7ff fbf8 	bl	1e7c <__mriBuffer_IsNextCharEqualTo>
    268c:	b108      	cbz	r0, 2692 <readQueryTransferReadArguments+0x8a>
    268e:	4638      	mov	r0, r7
    2690:	e7eb      	b.n	266a <readQueryTransferReadArguments+0x62>
    2692:	6829      	ldr	r1, [r5, #0]
    2694:	2904      	cmp	r1, #4
    2696:	bfb8      	it	lt
    2698:	2104      	movlt	r1, #4
    269a:	6029      	str	r1, [r5, #0]
    269c:	e7e5      	b.n	266a <readQueryTransferReadArguments+0x62>
    269e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    26a0:	100001dc 	.word	0x100001dc
    26a4:	000040f3 	.word	0x000040f3
    26a8:	00004107 	.word	0x00004107

000026ac <__mriCmd_HandleQueryCommand>:
    26ac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    26ae:	f7fd fef5 	bl	49c <__mriCore_GetBuffer>
    26b2:	4935      	ldr	r1, [pc, #212]	; (2788 <__mriCmd_HandleQueryCommand+0xdc>)
    26b4:	2209      	movs	r2, #9
    26b6:	4604      	mov	r4, r0
    26b8:	f7ff fc24 	bl	1f04 <__mriBuffer_MatchesString>
    26bc:	4606      	mov	r6, r0
    26be:	b168      	cbz	r0, 26dc <__mriCmd_HandleQueryCommand+0x30>
    26c0:	f7fe fb0e 	bl	ce0 <__mriPlatform_GetPacketBufferSize>
    26c4:	4604      	mov	r4, r0
    26c6:	f7fd feed 	bl	4a4 <__mriCore_GetInitializedBuffer>
    26ca:	4930      	ldr	r1, [pc, #192]	; (278c <__mriCmd_HandleQueryCommand+0xe0>)
    26cc:	4605      	mov	r5, r0
    26ce:	f7ff fb57 	bl	1d80 <__mriBuffer_WriteString>
    26d2:	4628      	mov	r0, r5
    26d4:	4621      	mov	r1, r4
    26d6:	f7ff fb8f 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    26da:	e051      	b.n	2780 <__mriCmd_HandleQueryCommand+0xd4>
    26dc:	4620      	mov	r0, r4
    26de:	492c      	ldr	r1, [pc, #176]	; (2790 <__mriCmd_HandleQueryCommand+0xe4>)
    26e0:	2204      	movs	r2, #4
    26e2:	f7ff fc0f 	bl	1f04 <__mriBuffer_MatchesString>
    26e6:	2800      	cmp	r0, #0
    26e8:	d047      	beq.n	277a <__mriCmd_HandleQueryCommand+0xce>
    26ea:	f7fd fed7 	bl	49c <__mriCore_GetBuffer>
    26ee:	213a      	movs	r1, #58	; 0x3a
    26f0:	4604      	mov	r4, r0
    26f2:	f7ff fbc3 	bl	1e7c <__mriBuffer_IsNextCharEqualTo>
    26f6:	2800      	cmp	r0, #0
    26f8:	d033      	beq.n	2762 <__mriCmd_HandleQueryCommand+0xb6>
    26fa:	4620      	mov	r0, r4
    26fc:	4925      	ldr	r1, [pc, #148]	; (2794 <__mriCmd_HandleQueryCommand+0xe8>)
    26fe:	220a      	movs	r2, #10
    2700:	f7ff fc00 	bl	1f04 <__mriBuffer_MatchesString>
    2704:	4605      	mov	r5, r0
    2706:	b1a0      	cbz	r0, 2732 <__mriCmd_HandleQueryCommand+0x86>
    2708:	4c23      	ldr	r4, [pc, #140]	; (2798 <__mriCmd_HandleQueryCommand+0xec>)
    270a:	f7fd fec7 	bl	49c <__mriCore_GetBuffer>
    270e:	4669      	mov	r1, sp
    2710:	6026      	str	r6, [r4, #0]
    2712:	f7ff ff79 	bl	2608 <readQueryTransferReadArguments>
    2716:	6822      	ldr	r2, [r4, #0]
    2718:	b91a      	cbnz	r2, 2722 <__mriCmd_HandleQueryCommand+0x76>
    271a:	9b00      	ldr	r3, [sp, #0]
    271c:	b10b      	cbz	r3, 2722 <__mriCmd_HandleQueryCommand+0x76>
    271e:	2004      	movs	r0, #4
    2720:	6020      	str	r0, [r4, #0]
    2722:	6821      	ldr	r1, [r4, #0]
    2724:	b9e9      	cbnz	r1, 2762 <__mriCmd_HandleQueryCommand+0xb6>
    2726:	f7fe ffcf 	bl	16c8 <__mriPlatform_GetDeviceMemoryMapXml>
    272a:	9000      	str	r0, [sp, #0]
    272c:	f7fe ffc8 	bl	16c0 <__mriPlatform_GetDeviceMemoryMapXmlSize>
    2730:	e01e      	b.n	2770 <__mriCmd_HandleQueryCommand+0xc4>
    2732:	4620      	mov	r0, r4
    2734:	4919      	ldr	r1, [pc, #100]	; (279c <__mriCmd_HandleQueryCommand+0xf0>)
    2736:	2208      	movs	r2, #8
    2738:	f7ff fbe4 	bl	1f04 <__mriBuffer_MatchesString>
    273c:	b1e8      	cbz	r0, 277a <__mriCmd_HandleQueryCommand+0xce>
    273e:	4c16      	ldr	r4, [pc, #88]	; (2798 <__mriCmd_HandleQueryCommand+0xec>)
    2740:	f7fd feac 	bl	49c <__mriCore_GetBuffer>
    2744:	4669      	mov	r1, sp
    2746:	6025      	str	r5, [r4, #0]
    2748:	f7ff ff5e 	bl	2608 <readQueryTransferReadArguments>
    274c:	6823      	ldr	r3, [r4, #0]
    274e:	b933      	cbnz	r3, 275e <__mriCmd_HandleQueryCommand+0xb2>
    2750:	9800      	ldr	r0, [sp, #0]
    2752:	4913      	ldr	r1, [pc, #76]	; (27a0 <__mriCmd_HandleQueryCommand+0xf4>)
    2754:	f000 fe43 	bl	33de <strcmp>
    2758:	b108      	cbz	r0, 275e <__mriCmd_HandleQueryCommand+0xb2>
    275a:	2004      	movs	r0, #4
    275c:	6020      	str	r0, [r4, #0]
    275e:	6821      	ldr	r1, [r4, #0]
    2760:	b109      	cbz	r1, 2766 <__mriCmd_HandleQueryCommand+0xba>
    2762:	4810      	ldr	r0, [pc, #64]	; (27a4 <__mriCmd_HandleQueryCommand+0xf8>)
    2764:	e00a      	b.n	277c <__mriCmd_HandleQueryCommand+0xd0>
    2766:	f7fe fd95 	bl	1294 <__mriPlatform_GetTargetXml>
    276a:	9000      	str	r0, [sp, #0]
    276c:	f7fe fd8e 	bl	128c <__mriPlatform_GetTargetXmlSize>
    2770:	9001      	str	r0, [sp, #4]
    2772:	4668      	mov	r0, sp
    2774:	f7ff ff1a 	bl	25ac <handleQueryTransferReadCommand>
    2778:	e002      	b.n	2780 <__mriCmd_HandleQueryCommand+0xd4>
    277a:	480b      	ldr	r0, [pc, #44]	; (27a8 <__mriCmd_HandleQueryCommand+0xfc>)
    277c:	f7fd fe24 	bl	3c8 <__mriCore_PrepareStringResponse>
    2780:	2000      	movs	r0, #0
    2782:	b004      	add	sp, #16
    2784:	bd70      	pop	{r4, r5, r6, pc}
    2786:	bf00      	nop
    2788:	000040fd 	.word	0x000040fd
    278c:	0000411d 	.word	0x0000411d
    2790:	000040f8 	.word	0x000040f8
    2794:	0000415e 	.word	0x0000415e
    2798:	100001dc 	.word	0x100001dc
    279c:	00004155 	.word	0x00004155
    27a0:	00004112 	.word	0x00004112
    27a4:	0000409a 	.word	0x0000409a
    27a8:	00003502 	.word	0x00003502

000027ac <__mriCmd_Send_T_StopResponse>:
    27ac:	b510      	push	{r4, lr}
    27ae:	f7fd fe79 	bl	4a4 <__mriCore_GetInitializedBuffer>
    27b2:	2154      	movs	r1, #84	; 0x54
    27b4:	4604      	mov	r4, r0
    27b6:	f7ff fa61 	bl	1c7c <__mriBuffer_WriteChar>
    27ba:	f7fd fe5d 	bl	478 <__mriCore_GetSignalValue>
    27be:	4601      	mov	r1, r0
    27c0:	4620      	mov	r0, r4
    27c2:	f7ff fa81 	bl	1cc8 <__mriBuffer_WriteByteAsHex>
    27c6:	4620      	mov	r0, r4
    27c8:	f7fe fc50 	bl	106c <__mriPlatform_WriteTResponseRegistersToBuffer>
    27cc:	f7fd fe72 	bl	4b4 <__mriCore_SendPacketToGdb>
    27d0:	2002      	movs	r0, #2
    27d2:	bd10      	pop	{r4, pc}

000027d4 <__mriCmd_HandleRegisterReadCommand>:
    27d4:	b508      	push	{r3, lr}
    27d6:	f7fd fe65 	bl	4a4 <__mriCore_GetInitializedBuffer>
    27da:	f7fe fc65 	bl	10a8 <__mriPlatform_CopyContextToBuffer>
    27de:	2000      	movs	r0, #0
    27e0:	bd08      	pop	{r3, pc}
	...

000027e4 <__mriCmd_HandleRegisterWriteCommand>:
    27e4:	b510      	push	{r4, lr}
    27e6:	f7fd fe59 	bl	49c <__mriCore_GetBuffer>
    27ea:	4604      	mov	r4, r0
    27ec:	f7fe fc6c 	bl	10c8 <__mriPlatform_CopyContextFromBuffer>
    27f0:	4620      	mov	r0, r4
    27f2:	f7ff fa3b 	bl	1c6c <__mriBuffer_OverrunDetected>
    27f6:	b108      	cbz	r0, 27fc <__mriCmd_HandleRegisterWriteCommand+0x18>
    27f8:	4803      	ldr	r0, [pc, #12]	; (2808 <__mriCmd_HandleRegisterWriteCommand+0x24>)
    27fa:	e000      	b.n	27fe <__mriCmd_HandleRegisterWriteCommand+0x1a>
    27fc:	4803      	ldr	r0, [pc, #12]	; (280c <__mriCmd_HandleRegisterWriteCommand+0x28>)
    27fe:	f7fd fde3 	bl	3c8 <__mriCore_PrepareStringResponse>
    2802:	2000      	movs	r0, #0
    2804:	bd10      	pop	{r4, pc}
    2806:	bf00      	nop
    2808:	0000348c 	.word	0x0000348c
    280c:	000040a2 	.word	0x000040a2

00002810 <__mriCmd_HandleSingleStepCommand>:
    2810:	b508      	push	{r3, lr}
    2812:	f7ff fcbb 	bl	218c <__mriCmd_HandleContinueCommand>
    2816:	0743      	lsls	r3, r0, #29
    2818:	d503      	bpl.n	2822 <__mriCmd_HandleSingleStepCommand+0x12>
    281a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    281e:	f7ff bfc5 	b.w	27ac <__mriCmd_Send_T_StopResponse>
    2822:	f7fe fa1d 	bl	c60 <__mriPlatform_EnableSingleStep>
    2826:	2003      	movs	r0, #3
    2828:	bd08      	pop	{r3, pc}

0000282a <__mriGdbConsole_WriteString>:
    282a:	b538      	push	{r3, r4, r5, lr}
    282c:	4604      	mov	r4, r0
    282e:	f7fe fd7b 	bl	1328 <__mriPlatform_CommSharingWithApplication>
    2832:	b150      	cbz	r0, 284a <__mriGdbConsole_WriteString+0x20>
    2834:	f7fd fe12 	bl	45c <__mriCore_IsFirstException>
    2838:	b138      	cbz	r0, 284a <__mriGdbConsole_WriteString+0x20>
    283a:	3c01      	subs	r4, #1
    283c:	f814 0f01 	ldrb.w	r0, [r4, #1]!
    2840:	b110      	cbz	r0, 2848 <__mriGdbConsole_WriteString+0x1e>
    2842:	f7fe fd4f 	bl	12e4 <__mriPlatform_CommSendChar>
    2846:	e7f9      	b.n	283c <__mriGdbConsole_WriteString+0x12>
    2848:	bd38      	pop	{r3, r4, r5, pc}
    284a:	f7fd fe2b 	bl	4a4 <__mriCore_GetInitializedBuffer>
    284e:	214f      	movs	r1, #79	; 0x4f
    2850:	4605      	mov	r5, r0
    2852:	f7ff fa13 	bl	1c7c <__mriBuffer_WriteChar>
    2856:	4620      	mov	r0, r4
    2858:	f000 fdcc 	bl	33f4 <strlen>
    285c:	4621      	mov	r1, r4
    285e:	4602      	mov	r2, r0
    2860:	4628      	mov	r0, r5
    2862:	f000 f88e 	bl	2982 <__mriMem_ReadMemoryIntoHexBuffer>
    2866:	4628      	mov	r0, r5
    2868:	f7ff fa00 	bl	1c6c <__mriBuffer_OverrunDetected>
    286c:	b918      	cbnz	r0, 2876 <__mriGdbConsole_WriteString+0x4c>
    286e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2872:	f7fd be1f 	b.w	4b4 <__mriCore_SendPacketToGdb>
    2876:	bd38      	pop	{r3, r4, r5, pc}

00002878 <__mriGdbConsole_WriteHexValue>:
    2878:	b510      	push	{r4, lr}
    287a:	b086      	sub	sp, #24
    287c:	220b      	movs	r2, #11
    287e:	4604      	mov	r4, r0
    2880:	4669      	mov	r1, sp
    2882:	a803      	add	r0, sp, #12
    2884:	f7ff f9ca 	bl	1c1c <__mriBuffer_Init>
    2888:	a803      	add	r0, sp, #12
    288a:	4908      	ldr	r1, [pc, #32]	; (28ac <__mriGdbConsole_WriteHexValue+0x34>)
    288c:	f7ff fa78 	bl	1d80 <__mriBuffer_WriteString>
    2890:	a803      	add	r0, sp, #12
    2892:	4621      	mov	r1, r4
    2894:	f7ff fab0 	bl	1df8 <__mriBuffer_WriteUIntegerAsHex>
    2898:	a803      	add	r0, sp, #12
    289a:	2100      	movs	r1, #0
    289c:	f7ff f9ee 	bl	1c7c <__mriBuffer_WriteChar>
    28a0:	4668      	mov	r0, sp
    28a2:	f7ff ffc2 	bl	282a <__mriGdbConsole_WriteString>
    28a6:	b006      	add	sp, #24
    28a8:	bd10      	pop	{r4, pc}
    28aa:	bf00      	nop
    28ac:	00004169 	.word	0x00004169

000028b0 <writeBinaryBufferToByteMemory>:
    28b0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    28b4:	4606      	mov	r6, r0
    28b6:	eb01 0802 	add.w	r8, r1, r2
    28ba:	460c      	mov	r4, r1
    28bc:	4544      	cmp	r4, r8
    28be:	d024      	beq.n	290a <writeBinaryBufferToByteMemory+0x5a>
    28c0:	4d13      	ldr	r5, [pc, #76]	; (2910 <writeBinaryBufferToByteMemory+0x60>)
    28c2:	2300      	movs	r3, #0
    28c4:	4630      	mov	r0, r6
    28c6:	602b      	str	r3, [r5, #0]
    28c8:	f7ff f9ea 	bl	1ca0 <__mriBuffer_ReadChar>
    28cc:	682f      	ldr	r7, [r5, #0]
    28ce:	4601      	mov	r1, r0
    28d0:	b95f      	cbnz	r7, 28ea <writeBinaryBufferToByteMemory+0x3a>
    28d2:	287d      	cmp	r0, #125	; 0x7d
    28d4:	d109      	bne.n	28ea <writeBinaryBufferToByteMemory+0x3a>
    28d6:	4630      	mov	r0, r6
    28d8:	f7ff f9e2 	bl	1ca0 <__mriBuffer_ReadChar>
    28dc:	6829      	ldr	r1, [r5, #0]
    28de:	b919      	cbnz	r1, 28e8 <writeBinaryBufferToByteMemory+0x38>
    28e0:	f080 0020 	eor.w	r0, r0, #32
    28e4:	b2c1      	uxtb	r1, r0
    28e6:	e000      	b.n	28ea <writeBinaryBufferToByteMemory+0x3a>
    28e8:	4639      	mov	r1, r7
    28ea:	4a09      	ldr	r2, [pc, #36]	; (2910 <writeBinaryBufferToByteMemory+0x60>)
    28ec:	6813      	ldr	r3, [r2, #0]
    28ee:	b113      	cbz	r3, 28f6 <writeBinaryBufferToByteMemory+0x46>
    28f0:	2000      	movs	r0, #0
    28f2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    28f6:	4620      	mov	r0, r4
    28f8:	1c65      	adds	r5, r4, #1
    28fa:	f000 f8ca 	bl	2a92 <__mriPlatform_MemWrite8>
    28fe:	f7fe fba3 	bl	1048 <__mriPlatform_WasMemoryFaultEncountered>
    2902:	2800      	cmp	r0, #0
    2904:	d1f4      	bne.n	28f0 <writeBinaryBufferToByteMemory+0x40>
    2906:	462c      	mov	r4, r5
    2908:	e7d8      	b.n	28bc <writeBinaryBufferToByteMemory+0xc>
    290a:	2001      	movs	r0, #1
    290c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2910:	100001dc 	.word	0x100001dc

00002914 <writeHexBufferToByteMemory>:
    2914:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2916:	4607      	mov	r7, r0
    2918:	188e      	adds	r6, r1, r2
    291a:	460c      	mov	r4, r1
    291c:	42b4      	cmp	r4, r6
    291e:	d014      	beq.n	294a <writeHexBufferToByteMemory+0x36>
    2920:	4d0b      	ldr	r5, [pc, #44]	; (2950 <writeHexBufferToByteMemory+0x3c>)
    2922:	2300      	movs	r3, #0
    2924:	4638      	mov	r0, r7
    2926:	602b      	str	r3, [r5, #0]
    2928:	f7ff f9ea 	bl	1d00 <__mriBuffer_ReadByteAsHex>
    292c:	4601      	mov	r1, r0
    292e:	6828      	ldr	r0, [r5, #0]
    2930:	b108      	cbz	r0, 2936 <writeHexBufferToByteMemory+0x22>
    2932:	2000      	movs	r0, #0
    2934:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2936:	4620      	mov	r0, r4
    2938:	1c65      	adds	r5, r4, #1
    293a:	f000 f8aa 	bl	2a92 <__mriPlatform_MemWrite8>
    293e:	f7fe fb83 	bl	1048 <__mriPlatform_WasMemoryFaultEncountered>
    2942:	2800      	cmp	r0, #0
    2944:	d1f5      	bne.n	2932 <writeHexBufferToByteMemory+0x1e>
    2946:	462c      	mov	r4, r5
    2948:	e7e8      	b.n	291c <writeHexBufferToByteMemory+0x8>
    294a:	2001      	movs	r0, #1
    294c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    294e:	bf00      	nop
    2950:	100001dc 	.word	0x100001dc

00002954 <readMemoryBytesIntoHexBuffer>:
    2954:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2956:	4605      	mov	r5, r0
    2958:	188c      	adds	r4, r1, r2
    295a:	4608      	mov	r0, r1
    295c:	42a0      	cmp	r0, r4
    295e:	d00c      	beq.n	297a <readMemoryBytesIntoHexBuffer+0x26>
    2960:	1c46      	adds	r6, r0, #1
    2962:	f000 f890 	bl	2a86 <__mriPlatform_MemRead8>
    2966:	4607      	mov	r7, r0
    2968:	f7fe fb6e 	bl	1048 <__mriPlatform_WasMemoryFaultEncountered>
    296c:	b938      	cbnz	r0, 297e <readMemoryBytesIntoHexBuffer+0x2a>
    296e:	4628      	mov	r0, r5
    2970:	4639      	mov	r1, r7
    2972:	f7ff f9a9 	bl	1cc8 <__mriBuffer_WriteByteAsHex>
    2976:	4630      	mov	r0, r6
    2978:	e7f0      	b.n	295c <readMemoryBytesIntoHexBuffer+0x8>
    297a:	2001      	movs	r0, #1
    297c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    297e:	2000      	movs	r0, #0
    2980:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002982 <__mriMem_ReadMemoryIntoHexBuffer>:
    2982:	2a02      	cmp	r2, #2
    2984:	b573      	push	{r0, r1, r4, r5, r6, lr}
    2986:	4605      	mov	r5, r0
    2988:	4614      	mov	r4, r2
    298a:	d002      	beq.n	2992 <__mriMem_ReadMemoryIntoHexBuffer+0x10>
    298c:	2a04      	cmp	r2, #4
    298e:	d122      	bne.n	29d6 <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    2990:	e00e      	b.n	29b0 <__mriMem_ReadMemoryIntoHexBuffer+0x2e>
    2992:	f011 0601 	ands.w	r6, r1, #1
    2996:	d11e      	bne.n	29d6 <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    2998:	4608      	mov	r0, r1
    299a:	f000 f871 	bl	2a80 <__mriPlatform_MemRead16>
    299e:	f8ad 0002 	strh.w	r0, [sp, #2]
    29a2:	f7fe fb51 	bl	1048 <__mriPlatform_WasMemoryFaultEncountered>
    29a6:	b9a0      	cbnz	r0, 29d2 <__mriMem_ReadMemoryIntoHexBuffer+0x50>
    29a8:	4628      	mov	r0, r5
    29aa:	f10d 0102 	add.w	r1, sp, #2
    29ae:	e00b      	b.n	29c8 <__mriMem_ReadMemoryIntoHexBuffer+0x46>
    29b0:	f011 0603 	ands.w	r6, r1, #3
    29b4:	d10f      	bne.n	29d6 <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    29b6:	4608      	mov	r0, r1
    29b8:	f000 f860 	bl	2a7c <__mriPlatform_MemRead32>
    29bc:	9001      	str	r0, [sp, #4]
    29be:	f7fe fb43 	bl	1048 <__mriPlatform_WasMemoryFaultEncountered>
    29c2:	b930      	cbnz	r0, 29d2 <__mriMem_ReadMemoryIntoHexBuffer+0x50>
    29c4:	4628      	mov	r0, r5
    29c6:	a901      	add	r1, sp, #4
    29c8:	4622      	mov	r2, r4
    29ca:	f7ff ffc3 	bl	2954 <readMemoryBytesIntoHexBuffer>
    29ce:	2001      	movs	r0, #1
    29d0:	e003      	b.n	29da <__mriMem_ReadMemoryIntoHexBuffer+0x58>
    29d2:	4630      	mov	r0, r6
    29d4:	e001      	b.n	29da <__mriMem_ReadMemoryIntoHexBuffer+0x58>
    29d6:	f7ff ffbd 	bl	2954 <readMemoryBytesIntoHexBuffer>
    29da:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

000029dc <__mriMem_WriteHexBufferToMemory>:
    29dc:	2a02      	cmp	r2, #2
    29de:	b513      	push	{r0, r1, r4, lr}
    29e0:	460c      	mov	r4, r1
    29e2:	d002      	beq.n	29ea <__mriMem_WriteHexBufferToMemory+0xe>
    29e4:	2a04      	cmp	r2, #4
    29e6:	d11e      	bne.n	2a26 <__mriMem_WriteHexBufferToMemory+0x4a>
    29e8:	e00c      	b.n	2a04 <__mriMem_WriteHexBufferToMemory+0x28>
    29ea:	07cb      	lsls	r3, r1, #31
    29ec:	d41b      	bmi.n	2a26 <__mriMem_WriteHexBufferToMemory+0x4a>
    29ee:	f10d 0102 	add.w	r1, sp, #2
    29f2:	f7ff ff8f 	bl	2914 <writeHexBufferToByteMemory>
    29f6:	b1c0      	cbz	r0, 2a2a <__mriMem_WriteHexBufferToMemory+0x4e>
    29f8:	4620      	mov	r0, r4
    29fa:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    29fe:	f000 f846 	bl	2a8e <__mriPlatform_MemWrite16>
    2a02:	e009      	b.n	2a18 <__mriMem_WriteHexBufferToMemory+0x3c>
    2a04:	078b      	lsls	r3, r1, #30
    2a06:	d10e      	bne.n	2a26 <__mriMem_WriteHexBufferToMemory+0x4a>
    2a08:	a901      	add	r1, sp, #4
    2a0a:	f7ff ff83 	bl	2914 <writeHexBufferToByteMemory>
    2a0e:	b160      	cbz	r0, 2a2a <__mriMem_WriteHexBufferToMemory+0x4e>
    2a10:	4620      	mov	r0, r4
    2a12:	9901      	ldr	r1, [sp, #4]
    2a14:	f000 f839 	bl	2a8a <__mriPlatform_MemWrite32>
    2a18:	f7fe fb16 	bl	1048 <__mriPlatform_WasMemoryFaultEncountered>
    2a1c:	f1d0 0001 	rsbs	r0, r0, #1
    2a20:	bf38      	it	cc
    2a22:	2000      	movcc	r0, #0
    2a24:	e001      	b.n	2a2a <__mriMem_WriteHexBufferToMemory+0x4e>
    2a26:	f7ff ff75 	bl	2914 <writeHexBufferToByteMemory>
    2a2a:	bd1c      	pop	{r2, r3, r4, pc}

00002a2c <__mriMem_WriteBinaryBufferToMemory>:
    2a2c:	2a02      	cmp	r2, #2
    2a2e:	b513      	push	{r0, r1, r4, lr}
    2a30:	460c      	mov	r4, r1
    2a32:	d002      	beq.n	2a3a <__mriMem_WriteBinaryBufferToMemory+0xe>
    2a34:	2a04      	cmp	r2, #4
    2a36:	d11e      	bne.n	2a76 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2a38:	e00c      	b.n	2a54 <__mriMem_WriteBinaryBufferToMemory+0x28>
    2a3a:	07cb      	lsls	r3, r1, #31
    2a3c:	d41b      	bmi.n	2a76 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2a3e:	f10d 0102 	add.w	r1, sp, #2
    2a42:	f7ff ff35 	bl	28b0 <writeBinaryBufferToByteMemory>
    2a46:	b1c0      	cbz	r0, 2a7a <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2a48:	4620      	mov	r0, r4
    2a4a:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    2a4e:	f000 f81e 	bl	2a8e <__mriPlatform_MemWrite16>
    2a52:	e009      	b.n	2a68 <__mriMem_WriteBinaryBufferToMemory+0x3c>
    2a54:	078b      	lsls	r3, r1, #30
    2a56:	d10e      	bne.n	2a76 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2a58:	a901      	add	r1, sp, #4
    2a5a:	f7ff ff29 	bl	28b0 <writeBinaryBufferToByteMemory>
    2a5e:	b160      	cbz	r0, 2a7a <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2a60:	4620      	mov	r0, r4
    2a62:	9901      	ldr	r1, [sp, #4]
    2a64:	f000 f811 	bl	2a8a <__mriPlatform_MemWrite32>
    2a68:	f7fe faee 	bl	1048 <__mriPlatform_WasMemoryFaultEncountered>
    2a6c:	f1d0 0001 	rsbs	r0, r0, #1
    2a70:	bf38      	it	cc
    2a72:	2000      	movcc	r0, #0
    2a74:	e001      	b.n	2a7a <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2a76:	f7ff ff1b 	bl	28b0 <writeBinaryBufferToByteMemory>
    2a7a:	bd1c      	pop	{r2, r3, r4, pc}

00002a7c <__mriPlatform_MemRead32>:
    2a7c:	6800      	ldr	r0, [r0, #0]
    2a7e:	4770      	bx	lr

00002a80 <__mriPlatform_MemRead16>:
    2a80:	8800      	ldrh	r0, [r0, #0]
    2a82:	b280      	uxth	r0, r0
    2a84:	4770      	bx	lr

00002a86 <__mriPlatform_MemRead8>:
    2a86:	7800      	ldrb	r0, [r0, #0]
    2a88:	4770      	bx	lr

00002a8a <__mriPlatform_MemWrite32>:
    2a8a:	6001      	str	r1, [r0, #0]
    2a8c:	4770      	bx	lr

00002a8e <__mriPlatform_MemWrite16>:
    2a8e:	8001      	strh	r1, [r0, #0]
    2a90:	4770      	bx	lr

00002a92 <__mriPlatform_MemWrite8>:
    2a92:	7001      	strb	r1, [r0, #0]
    2a94:	4770      	bx	lr
	...

00002a98 <NVIC_SetVector>:
    2a98:	b086      	sub	sp, #24
    2a9a:	4603      	mov	r3, r0
    2a9c:	9100      	str	r1, [sp, #0]
    2a9e:	f88d 3007 	strb.w	r3, [sp, #7]
    2aa2:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2aa6:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2aaa:	689b      	ldr	r3, [r3, #8]
    2aac:	9305      	str	r3, [sp, #20]
    2aae:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2ab2:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2ab6:	689b      	ldr	r3, [r3, #8]
    2ab8:	2b00      	cmp	r3, #0
    2aba:	d122      	bne.n	2b02 <NVIC_SetVector+0x6a>
    2abc:	9b05      	ldr	r3, [sp, #20]
    2abe:	9303      	str	r3, [sp, #12]
    2ac0:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    2ac4:	9305      	str	r3, [sp, #20]
    2ac6:	f04f 0300 	mov.w	r3, #0
    2aca:	9304      	str	r3, [sp, #16]
    2acc:	e00f      	b.n	2aee <NVIC_SetVector+0x56>
    2ace:	9b04      	ldr	r3, [sp, #16]
    2ad0:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2ad4:	9a05      	ldr	r2, [sp, #20]
    2ad6:	18d3      	adds	r3, r2, r3
    2ad8:	9a04      	ldr	r2, [sp, #16]
    2ada:	ea4f 0282 	mov.w	r2, r2, lsl #2
    2ade:	9903      	ldr	r1, [sp, #12]
    2ae0:	188a      	adds	r2, r1, r2
    2ae2:	6812      	ldr	r2, [r2, #0]
    2ae4:	601a      	str	r2, [r3, #0]
    2ae6:	9b04      	ldr	r3, [sp, #16]
    2ae8:	f103 0301 	add.w	r3, r3, #1
    2aec:	9304      	str	r3, [sp, #16]
    2aee:	9b04      	ldr	r3, [sp, #16]
    2af0:	2b30      	cmp	r3, #48	; 0x30
    2af2:	d9ec      	bls.n	2ace <NVIC_SetVector+0x36>
    2af4:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2af8:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2afc:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2b00:	609a      	str	r2, [r3, #8]
    2b02:	f99d 3007 	ldrsb.w	r3, [sp, #7]
    2b06:	f103 0310 	add.w	r3, r3, #16
    2b0a:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2b0e:	9a05      	ldr	r2, [sp, #20]
    2b10:	18d3      	adds	r3, r2, r3
    2b12:	9a00      	ldr	r2, [sp, #0]
    2b14:	601a      	str	r2, [r3, #0]
    2b16:	b006      	add	sp, #24
    2b18:	4770      	bx	lr
    2b1a:	bf00      	nop

00002b1c <SystemInit>:
    2b1c:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b20:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b24:	f04f 0220 	mov.w	r2, #32
    2b28:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
    2b2c:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b30:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b34:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2b38:	f003 0320 	and.w	r3, r3, #32
    2b3c:	2b00      	cmp	r3, #0
    2b3e:	d00a      	beq.n	2b56 <SystemInit+0x3a>
    2b40:	bf00      	nop
    2b42:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b46:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b4a:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2b4e:	f003 0340 	and.w	r3, r3, #64	; 0x40
    2b52:	2b00      	cmp	r3, #0
    2b54:	d0f5      	beq.n	2b42 <SystemInit+0x26>
    2b56:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b5a:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b5e:	f04f 0202 	mov.w	r2, #2
    2b62:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
    2b66:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b6a:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b6e:	f04f 0200 	mov.w	r2, #0
    2b72:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    2b76:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b7a:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b7e:	f04f 0200 	mov.w	r2, #0
    2b82:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    2b86:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b8a:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b8e:	f04f 0201 	mov.w	r2, #1
    2b92:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
    2b96:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b9a:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b9e:	f04f 020b 	mov.w	r2, #11
    2ba2:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    2ba6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2baa:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bae:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2bb2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2bb6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bba:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bbe:	f04f 0255 	mov.w	r2, #85	; 0x55
    2bc2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2bc6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bca:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bce:	f04f 0201 	mov.w	r2, #1
    2bd2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2bd6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bda:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bde:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2be2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2be6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bea:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bee:	f04f 0255 	mov.w	r2, #85	; 0x55
    2bf2:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2bf6:	bf00      	nop
    2bf8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bfc:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c00:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2c04:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
    2c08:	2b00      	cmp	r3, #0
    2c0a:	d0f5      	beq.n	2bf8 <SystemInit+0xdc>
    2c0c:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c10:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c14:	f04f 0203 	mov.w	r2, #3
    2c18:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2c1c:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c20:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c24:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2c28:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c2c:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c30:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c34:	f04f 0255 	mov.w	r2, #85	; 0x55
    2c38:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c3c:	bf00      	nop
    2c3e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c42:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c46:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2c4a:	f003 7340 	and.w	r3, r3, #50331648	; 0x3000000
    2c4e:	2b00      	cmp	r3, #0
    2c50:	d0f5      	beq.n	2c3e <SystemInit+0x122>
    2c52:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c56:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c5a:	f04f 0205 	mov.w	r2, #5
    2c5e:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
    2c62:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c66:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c6a:	f248 72de 	movw	r2, #34782	; 0x87de
    2c6e:	f2c0 4228 	movt	r2, #1064	; 0x428
    2c72:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    2c76:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c7a:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c7e:	f04f 0200 	mov.w	r2, #0
    2c82:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
    2c86:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c8a:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c8e:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2c92:	f2c4 020f 	movt	r2, #16399	; 0x400f
    2c96:	6812      	ldr	r2, [r2, #0]
    2c98:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
    2c9c:	f022 023a 	bic.w	r2, r2, #58	; 0x3a
    2ca0:	f442 5240 	orr.w	r2, r2, #12288	; 0x3000
    2ca4:	f042 023a 	orr.w	r2, r2, #58	; 0x3a
    2ca8:	601a      	str	r2, [r3, #0]
    2caa:	4770      	bx	lr

00002cac <exit>:
    2cac:	b500      	push	{lr}
    2cae:	b083      	sub	sp, #12
    2cb0:	9001      	str	r0, [sp, #4]
    2cb2:	f000 f80b 	bl	2ccc <mbed_interface_connected>
    2cb6:	4603      	mov	r3, r0
    2cb8:	2b00      	cmp	r3, #0
    2cba:	d001      	beq.n	2cc0 <exit+0x14>
    2cbc:	f000 f81c 	bl	2cf8 <semihost_exit>
    2cc0:	9b01      	ldr	r3, [sp, #4]
    2cc2:	2b00      	cmp	r3, #0
    2cc4:	d001      	beq.n	2cca <exit+0x1e>
    2cc6:	f000 f955 	bl	2f74 <mbed_die>
    2cca:	e7fe      	b.n	2cca <exit+0x1e>

00002ccc <mbed_interface_connected>:
    2ccc:	b508      	push	{r3, lr}
    2cce:	f7fd fb3f 	bl	350 <__wrap_semihost_connected>
    2cd2:	4603      	mov	r3, r0
    2cd4:	4618      	mov	r0, r3
    2cd6:	bd08      	pop	{r3, pc}

00002cd8 <__semihost>:
    2cd8:	b530      	push	{r4, r5, lr}
    2cda:	b085      	sub	sp, #20
    2cdc:	9001      	str	r0, [sp, #4]
    2cde:	9100      	str	r1, [sp, #0]
    2ce0:	9c01      	ldr	r4, [sp, #4]
    2ce2:	9d00      	ldr	r5, [sp, #0]
    2ce4:	4620      	mov	r0, r4
    2ce6:	4629      	mov	r1, r5
    2ce8:	beab      	bkpt	0x00ab
    2cea:	4604      	mov	r4, r0
    2cec:	9403      	str	r4, [sp, #12]
    2cee:	9b03      	ldr	r3, [sp, #12]
    2cf0:	4618      	mov	r0, r3
    2cf2:	b005      	add	sp, #20
    2cf4:	bd30      	pop	{r4, r5, pc}
    2cf6:	bf00      	nop

00002cf8 <semihost_exit>:
    2cf8:	b500      	push	{lr}
    2cfa:	b085      	sub	sp, #20
    2cfc:	466b      	mov	r3, sp
    2cfe:	f04f 0018 	mov.w	r0, #24
    2d02:	4619      	mov	r1, r3
    2d04:	f7ff ffe8 	bl	2cd8 <__semihost>
    2d08:	4603      	mov	r3, r0
    2d0a:	4618      	mov	r0, r3
    2d0c:	b005      	add	sp, #20
    2d0e:	bd00      	pop	{pc}

00002d10 <Reset_Handler>:
    2d10:	4907      	ldr	r1, [pc, #28]	; (2d30 <.flash_to_ram_loop+0x1a>)
    2d12:	4a08      	ldr	r2, [pc, #32]	; (2d34 <.flash_to_ram_loop+0x1e>)
    2d14:	4b08      	ldr	r3, [pc, #32]	; (2d38 <.flash_to_ram_loop+0x22>)

00002d16 <.flash_to_ram_loop>:
    2d16:	429a      	cmp	r2, r3
    2d18:	bfbe      	ittt	lt
    2d1a:	f851 0b04 	ldrlt.w	r0, [r1], #4
    2d1e:	f842 0b04 	strlt.w	r0, [r2], #4
    2d22:	f7ff bff8 	blt.w	2d16 <.flash_to_ram_loop>
    2d26:	4805      	ldr	r0, [pc, #20]	; (2d3c <.flash_to_ram_loop+0x26>)
    2d28:	4780      	blx	r0
    2d2a:	4805      	ldr	r0, [pc, #20]	; (2d40 <.flash_to_ram_loop+0x2a>)
    2d2c:	4700      	bx	r0
    2d2e:	0000      	.short	0x0000
    2d30:	00004170 	.word	0x00004170
    2d34:	100000c8 	.word	0x100000c8
    2d38:	10000164 	.word	0x10000164
    2d3c:	00002b1d 	.word	0x00002b1d
    2d40:	00000305 	.word	0x00000305

00002d44 <NMI_Handler>:
    2d44:	e7fe      	b.n	2d44 <NMI_Handler>
    2d46:	e7fe      	b.n	2d46 <NMI_Handler+0x2>
    2d48:	e7fe      	b.n	2d48 <NMI_Handler+0x4>
    2d4a:	e7fe      	b.n	2d4a <NMI_Handler+0x6>
    2d4c:	e7fe      	b.n	2d4c <NMI_Handler+0x8>

00002d4e <SVC_Handler>:
    2d4e:	e7fe      	b.n	2d4e <SVC_Handler>
    2d50:	e7fe      	b.n	2d50 <SVC_Handler+0x2>

00002d52 <PendSV_Handler>:
    2d52:	e7fe      	b.n	2d52 <PendSV_Handler>

00002d54 <SysTick_Handler>:
    2d54:	e7fe      	b.n	2d54 <SysTick_Handler>

00002d56 <DEF_IRQHandler>:
    2d56:	e7fe      	b.n	2d56 <DEF_IRQHandler>

00002d58 <WDT_IRQHandler>:
    2d58:	e7fe      	b.n	2d58 <WDT_IRQHandler>

00002d5a <TIMER0_IRQHandler>:
    2d5a:	e7fe      	b.n	2d5a <TIMER0_IRQHandler>

00002d5c <TIMER1_IRQHandler>:
    2d5c:	e7fe      	b.n	2d5c <TIMER1_IRQHandler>

00002d5e <TIMER2_IRQHandler>:
    2d5e:	e7fe      	b.n	2d5e <TIMER2_IRQHandler>

00002d60 <TIMER3_IRQHandler>:
    2d60:	e7fe      	b.n	2d60 <TIMER3_IRQHandler>
    2d62:	e7fe      	b.n	2d62 <TIMER3_IRQHandler+0x2>
    2d64:	e7fe      	b.n	2d64 <TIMER3_IRQHandler+0x4>
    2d66:	e7fe      	b.n	2d66 <TIMER3_IRQHandler+0x6>
    2d68:	e7fe      	b.n	2d68 <TIMER3_IRQHandler+0x8>

00002d6a <PWM1_IRQHandler>:
    2d6a:	e7fe      	b.n	2d6a <PWM1_IRQHandler>

00002d6c <I2C0_IRQHandler>:
    2d6c:	e7fe      	b.n	2d6c <I2C0_IRQHandler>

00002d6e <I2C1_IRQHandler>:
    2d6e:	e7fe      	b.n	2d6e <I2C1_IRQHandler>

00002d70 <I2C2_IRQHandler>:
    2d70:	e7fe      	b.n	2d70 <I2C2_IRQHandler>

00002d72 <SPI_IRQHandler>:
    2d72:	e7fe      	b.n	2d72 <SPI_IRQHandler>

00002d74 <SSP0_IRQHandler>:
    2d74:	e7fe      	b.n	2d74 <SSP0_IRQHandler>

00002d76 <SSP1_IRQHandler>:
    2d76:	e7fe      	b.n	2d76 <SSP1_IRQHandler>

00002d78 <PLL0_IRQHandler>:
    2d78:	e7fe      	b.n	2d78 <PLL0_IRQHandler>

00002d7a <RTC_IRQHandler>:
    2d7a:	e7fe      	b.n	2d7a <RTC_IRQHandler>

00002d7c <EINT0_IRQHandler>:
    2d7c:	e7fe      	b.n	2d7c <EINT0_IRQHandler>

00002d7e <EINT1_IRQHandler>:
    2d7e:	e7fe      	b.n	2d7e <EINT1_IRQHandler>

00002d80 <EINT2_IRQHandler>:
    2d80:	e7fe      	b.n	2d80 <EINT2_IRQHandler>

00002d82 <EINT3_IRQHandler>:
    2d82:	e7fe      	b.n	2d82 <EINT3_IRQHandler>

00002d84 <ADC_IRQHandler>:
    2d84:	e7fe      	b.n	2d84 <ADC_IRQHandler>

00002d86 <BOD_IRQHandler>:
    2d86:	e7fe      	b.n	2d86 <BOD_IRQHandler>

00002d88 <USB_IRQHandler>:
    2d88:	e7fe      	b.n	2d88 <USB_IRQHandler>

00002d8a <CAN_IRQHandler>:
    2d8a:	e7fe      	b.n	2d8a <CAN_IRQHandler>

00002d8c <DMA_IRQHandler>:
    2d8c:	e7fe      	b.n	2d8c <DMA_IRQHandler>

00002d8e <I2S_IRQHandler>:
    2d8e:	e7fe      	b.n	2d8e <I2S_IRQHandler>

00002d90 <ENET_IRQHandler>:
    2d90:	e7fe      	b.n	2d90 <ENET_IRQHandler>

00002d92 <RIT_IRQHandler>:
    2d92:	e7fe      	b.n	2d92 <RIT_IRQHandler>

00002d94 <MCPWM_IRQHandler>:
    2d94:	e7fe      	b.n	2d94 <MCPWM_IRQHandler>

00002d96 <QEI_IRQHandler>:
    2d96:	e7fe      	b.n	2d96 <QEI_IRQHandler>

00002d98 <PLL1_IRQHandler>:
    2d98:	e7fe      	b.n	2d98 <PLL1_IRQHandler>

00002d9a <USBActivity_IRQHandler>:
    2d9a:	e7fe      	b.n	2d9a <USBActivity_IRQHandler>

00002d9c <CANActivity_IRQHandler>:
    2d9c:	e7fe      	b.n	2d9c <CANActivity_IRQHandler>
    2d9e:	bf00      	nop

00002da0 <pin_function>:
    2da0:	b086      	sub	sp, #24
    2da2:	9001      	str	r0, [sp, #4]
    2da4:	9100      	str	r1, [sp, #0]
    2da6:	9b01      	ldr	r3, [sp, #4]
    2da8:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2dac:	d039      	beq.n	2e22 <pin_function+0x82>
    2dae:	9b01      	ldr	r3, [sp, #4]
    2db0:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2db4:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    2db8:	9305      	str	r3, [sp, #20]
    2dba:	9b05      	ldr	r3, [sp, #20]
    2dbc:	ea4f 1313 	mov.w	r3, r3, lsr #4
    2dc0:	9304      	str	r3, [sp, #16]
    2dc2:	9b05      	ldr	r3, [sp, #20]
    2dc4:	f003 030f 	and.w	r3, r3, #15
    2dc8:	ea4f 0343 	mov.w	r3, r3, lsl #1
    2dcc:	9303      	str	r3, [sp, #12]
    2dce:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2dd2:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2dd6:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2dda:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2dde:	9904      	ldr	r1, [sp, #16]
    2de0:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2de4:	f04f 0003 	mov.w	r0, #3
    2de8:	9a03      	ldr	r2, [sp, #12]
    2dea:	fa00 f202 	lsl.w	r2, r0, r2
    2dee:	ea6f 0202 	mvn.w	r2, r2
    2df2:	4011      	ands	r1, r2
    2df4:	9a04      	ldr	r2, [sp, #16]
    2df6:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2dfa:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2dfe:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2e02:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2e06:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2e0a:	9904      	ldr	r1, [sp, #16]
    2e0c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2e10:	9800      	ldr	r0, [sp, #0]
    2e12:	9a03      	ldr	r2, [sp, #12]
    2e14:	fa00 f202 	lsl.w	r2, r0, r2
    2e18:	4311      	orrs	r1, r2
    2e1a:	9a04      	ldr	r2, [sp, #16]
    2e1c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2e20:	e000      	b.n	2e24 <pin_function+0x84>
    2e22:	bf00      	nop
    2e24:	b006      	add	sp, #24
    2e26:	4770      	bx	lr

00002e28 <pin_mode>:
    2e28:	b086      	sub	sp, #24
    2e2a:	9001      	str	r0, [sp, #4]
    2e2c:	460b      	mov	r3, r1
    2e2e:	f88d 3003 	strb.w	r3, [sp, #3]
    2e32:	9b01      	ldr	r3, [sp, #4]
    2e34:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2e38:	f000 8085 	beq.w	2f46 <pin_mode+0x11e>
    2e3c:	9b01      	ldr	r3, [sp, #4]
    2e3e:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2e42:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    2e46:	9305      	str	r3, [sp, #20]
    2e48:	9b05      	ldr	r3, [sp, #20]
    2e4a:	ea4f 1353 	mov.w	r3, r3, lsr #5
    2e4e:	9304      	str	r3, [sp, #16]
    2e50:	9b05      	ldr	r3, [sp, #20]
    2e52:	f003 031f 	and.w	r3, r3, #31
    2e56:	9303      	str	r3, [sp, #12]
    2e58:	f89d 3003 	ldrb.w	r3, [sp, #3]
    2e5c:	f003 0304 	and.w	r3, r3, #4
    2e60:	ea4f 0393 	mov.w	r3, r3, lsr #2
    2e64:	9302      	str	r3, [sp, #8]
    2e66:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e6a:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2e6e:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2e72:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2e76:	9904      	ldr	r1, [sp, #16]
    2e78:	f101 011a 	add.w	r1, r1, #26
    2e7c:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2e80:	9802      	ldr	r0, [sp, #8]
    2e82:	9a03      	ldr	r2, [sp, #12]
    2e84:	fa00 f202 	lsl.w	r2, r0, r2
    2e88:	ea6f 0202 	mvn.w	r2, r2
    2e8c:	4011      	ands	r1, r2
    2e8e:	9a04      	ldr	r2, [sp, #16]
    2e90:	f102 021a 	add.w	r2, r2, #26
    2e94:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2e98:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e9c:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2ea0:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2ea4:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2ea8:	9904      	ldr	r1, [sp, #16]
    2eaa:	f101 011a 	add.w	r1, r1, #26
    2eae:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2eb2:	9802      	ldr	r0, [sp, #8]
    2eb4:	9a03      	ldr	r2, [sp, #12]
    2eb6:	fa00 f202 	lsl.w	r2, r0, r2
    2eba:	4311      	orrs	r1, r2
    2ebc:	9a04      	ldr	r2, [sp, #16]
    2ebe:	f102 021a 	add.w	r2, r2, #26
    2ec2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2ec6:	9b02      	ldr	r3, [sp, #8]
    2ec8:	2b00      	cmp	r3, #0
    2eca:	d13d      	bne.n	2f48 <pin_mode+0x120>
    2ecc:	9b05      	ldr	r3, [sp, #20]
    2ece:	ea4f 1313 	mov.w	r3, r3, lsr #4
    2ed2:	9304      	str	r3, [sp, #16]
    2ed4:	9b05      	ldr	r3, [sp, #20]
    2ed6:	f003 030f 	and.w	r3, r3, #15
    2eda:	ea4f 0343 	mov.w	r3, r3, lsl #1
    2ede:	9303      	str	r3, [sp, #12]
    2ee0:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ee4:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2ee8:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2eec:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2ef0:	9904      	ldr	r1, [sp, #16]
    2ef2:	f101 0110 	add.w	r1, r1, #16
    2ef6:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2efa:	f04f 0003 	mov.w	r0, #3
    2efe:	9a03      	ldr	r2, [sp, #12]
    2f00:	fa00 f202 	lsl.w	r2, r0, r2
    2f04:	ea6f 0202 	mvn.w	r2, r2
    2f08:	4011      	ands	r1, r2
    2f0a:	9a04      	ldr	r2, [sp, #16]
    2f0c:	f102 0210 	add.w	r2, r2, #16
    2f10:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2f14:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2f18:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2f1c:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2f20:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2f24:	9904      	ldr	r1, [sp, #16]
    2f26:	f101 0110 	add.w	r1, r1, #16
    2f2a:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2f2e:	f89d 0003 	ldrb.w	r0, [sp, #3]
    2f32:	9a03      	ldr	r2, [sp, #12]
    2f34:	fa00 f202 	lsl.w	r2, r0, r2
    2f38:	4311      	orrs	r1, r2
    2f3a:	9a04      	ldr	r2, [sp, #16]
    2f3c:	f102 0210 	add.w	r2, r2, #16
    2f40:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2f44:	e000      	b.n	2f48 <pin_mode+0x120>
    2f46:	bf00      	nop
    2f48:	b006      	add	sp, #24
    2f4a:	4770      	bx	lr

00002f4c <gpio_write>:
    2f4c:	b082      	sub	sp, #8
    2f4e:	9001      	str	r0, [sp, #4]
    2f50:	9100      	str	r1, [sp, #0]
    2f52:	9b00      	ldr	r3, [sp, #0]
    2f54:	2b00      	cmp	r3, #0
    2f56:	d005      	beq.n	2f64 <gpio_write+0x18>
    2f58:	9b01      	ldr	r3, [sp, #4]
    2f5a:	68db      	ldr	r3, [r3, #12]
    2f5c:	9a01      	ldr	r2, [sp, #4]
    2f5e:	6852      	ldr	r2, [r2, #4]
    2f60:	601a      	str	r2, [r3, #0]
    2f62:	e004      	b.n	2f6e <gpio_write+0x22>
    2f64:	9b01      	ldr	r3, [sp, #4]
    2f66:	691b      	ldr	r3, [r3, #16]
    2f68:	9a01      	ldr	r2, [sp, #4]
    2f6a:	6852      	ldr	r2, [r2, #4]
    2f6c:	601a      	str	r2, [r3, #0]
    2f6e:	b002      	add	sp, #8
    2f70:	4770      	bx	lr
    2f72:	bf00      	nop

00002f74 <mbed_die>:
    2f74:	b500      	push	{lr}
    2f76:	b099      	sub	sp, #100	; 0x64
    2f78:	ab12      	add	r3, sp, #72	; 0x48
    2f7a:	4618      	mov	r0, r3
    2f7c:	f24c 0132 	movw	r1, #49202	; 0xc032
    2f80:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2f84:	f04f 0201 	mov.w	r2, #1
    2f88:	f000 f88a 	bl	30a0 <gpio_init>
    2f8c:	ab0c      	add	r3, sp, #48	; 0x30
    2f8e:	4618      	mov	r0, r3
    2f90:	f24c 0134 	movw	r1, #49204	; 0xc034
    2f94:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2f98:	f04f 0201 	mov.w	r2, #1
    2f9c:	f000 f880 	bl	30a0 <gpio_init>
    2fa0:	ab06      	add	r3, sp, #24
    2fa2:	4618      	mov	r0, r3
    2fa4:	f24c 0135 	movw	r1, #49205	; 0xc035
    2fa8:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2fac:	f04f 0201 	mov.w	r2, #1
    2fb0:	f000 f876 	bl	30a0 <gpio_init>
    2fb4:	466b      	mov	r3, sp
    2fb6:	4618      	mov	r0, r3
    2fb8:	f24c 0137 	movw	r1, #49207	; 0xc037
    2fbc:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2fc0:	f04f 0201 	mov.w	r2, #1
    2fc4:	f000 f86c 	bl	30a0 <gpio_init>
    2fc8:	ab12      	add	r3, sp, #72	; 0x48
    2fca:	4618      	mov	r0, r3
    2fcc:	f04f 0101 	mov.w	r1, #1
    2fd0:	f7ff ffbc 	bl	2f4c <gpio_write>
    2fd4:	ab0c      	add	r3, sp, #48	; 0x30
    2fd6:	4618      	mov	r0, r3
    2fd8:	f04f 0100 	mov.w	r1, #0
    2fdc:	f7ff ffb6 	bl	2f4c <gpio_write>
    2fe0:	ab06      	add	r3, sp, #24
    2fe2:	4618      	mov	r0, r3
    2fe4:	f04f 0100 	mov.w	r1, #0
    2fe8:	f7ff ffb0 	bl	2f4c <gpio_write>
    2fec:	466b      	mov	r3, sp
    2fee:	4618      	mov	r0, r3
    2ff0:	f04f 0101 	mov.w	r1, #1
    2ff4:	f7ff ffaa 	bl	2f4c <gpio_write>
    2ff8:	f04f 0096 	mov.w	r0, #150	; 0x96
    2ffc:	f000 f81e 	bl	303c <wait_ms>
    3000:	ab12      	add	r3, sp, #72	; 0x48
    3002:	4618      	mov	r0, r3
    3004:	f04f 0100 	mov.w	r1, #0
    3008:	f7ff ffa0 	bl	2f4c <gpio_write>
    300c:	ab0c      	add	r3, sp, #48	; 0x30
    300e:	4618      	mov	r0, r3
    3010:	f04f 0101 	mov.w	r1, #1
    3014:	f7ff ff9a 	bl	2f4c <gpio_write>
    3018:	ab06      	add	r3, sp, #24
    301a:	4618      	mov	r0, r3
    301c:	f04f 0101 	mov.w	r1, #1
    3020:	f7ff ff94 	bl	2f4c <gpio_write>
    3024:	466b      	mov	r3, sp
    3026:	4618      	mov	r0, r3
    3028:	f04f 0100 	mov.w	r1, #0
    302c:	f7ff ff8e 	bl	2f4c <gpio_write>
    3030:	f04f 0096 	mov.w	r0, #150	; 0x96
    3034:	f000 f802 	bl	303c <wait_ms>
    3038:	e7c6      	b.n	2fc8 <mbed_die+0x54>
    303a:	bf00      	nop

0000303c <wait_ms>:
    303c:	b500      	push	{lr}
    303e:	b083      	sub	sp, #12
    3040:	9001      	str	r0, [sp, #4]
    3042:	9b01      	ldr	r3, [sp, #4]
    3044:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    3048:	fb02 f303 	mul.w	r3, r2, r3
    304c:	4618      	mov	r0, r3
    304e:	f000 f803 	bl	3058 <wait_us>
    3052:	b003      	add	sp, #12
    3054:	bd00      	pop	{pc}
    3056:	bf00      	nop

00003058 <wait_us>:
    3058:	b500      	push	{lr}
    305a:	b085      	sub	sp, #20
    305c:	9001      	str	r0, [sp, #4]
    305e:	f000 f8ff 	bl	3260 <us_ticker_read>
    3062:	9003      	str	r0, [sp, #12]
    3064:	bf00      	nop
    3066:	f000 f8fb 	bl	3260 <us_ticker_read>
    306a:	4602      	mov	r2, r0
    306c:	9b03      	ldr	r3, [sp, #12]
    306e:	1ad2      	subs	r2, r2, r3
    3070:	9b01      	ldr	r3, [sp, #4]
    3072:	429a      	cmp	r2, r3
    3074:	d3f7      	bcc.n	3066 <wait_us+0xe>
    3076:	b005      	add	sp, #20
    3078:	bd00      	pop	{pc}
    307a:	bf00      	nop

0000307c <gpio_set>:
    307c:	b500      	push	{lr}
    307e:	b083      	sub	sp, #12
    3080:	9001      	str	r0, [sp, #4]
    3082:	9801      	ldr	r0, [sp, #4]
    3084:	f04f 0100 	mov.w	r1, #0
    3088:	f7ff fe8a 	bl	2da0 <pin_function>
    308c:	9b01      	ldr	r3, [sp, #4]
    308e:	f003 031f 	and.w	r3, r3, #31
    3092:	f04f 0201 	mov.w	r2, #1
    3096:	fa02 f303 	lsl.w	r3, r2, r3
    309a:	4618      	mov	r0, r3
    309c:	b003      	add	sp, #12
    309e:	bd00      	pop	{pc}

000030a0 <gpio_init>:
    30a0:	b500      	push	{lr}
    30a2:	b087      	sub	sp, #28
    30a4:	9003      	str	r0, [sp, #12]
    30a6:	9102      	str	r1, [sp, #8]
    30a8:	4613      	mov	r3, r2
    30aa:	f88d 3007 	strb.w	r3, [sp, #7]
    30ae:	9b02      	ldr	r3, [sp, #8]
    30b0:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    30b4:	d037      	beq.n	3126 <gpio_init+0x86>
    30b6:	9b03      	ldr	r3, [sp, #12]
    30b8:	9a02      	ldr	r2, [sp, #8]
    30ba:	601a      	str	r2, [r3, #0]
    30bc:	9802      	ldr	r0, [sp, #8]
    30be:	f7ff ffdd 	bl	307c <gpio_set>
    30c2:	4602      	mov	r2, r0
    30c4:	9b03      	ldr	r3, [sp, #12]
    30c6:	605a      	str	r2, [r3, #4]
    30c8:	9b02      	ldr	r3, [sp, #8]
    30ca:	f023 031f 	bic.w	r3, r3, #31
    30ce:	9305      	str	r3, [sp, #20]
    30d0:	9b05      	ldr	r3, [sp, #20]
    30d2:	f103 0218 	add.w	r2, r3, #24
    30d6:	9b03      	ldr	r3, [sp, #12]
    30d8:	60da      	str	r2, [r3, #12]
    30da:	9b05      	ldr	r3, [sp, #20]
    30dc:	f103 021c 	add.w	r2, r3, #28
    30e0:	9b03      	ldr	r3, [sp, #12]
    30e2:	611a      	str	r2, [r3, #16]
    30e4:	9b05      	ldr	r3, [sp, #20]
    30e6:	f103 0214 	add.w	r2, r3, #20
    30ea:	9b03      	ldr	r3, [sp, #12]
    30ec:	615a      	str	r2, [r3, #20]
    30ee:	9a05      	ldr	r2, [sp, #20]
    30f0:	9b03      	ldr	r3, [sp, #12]
    30f2:	609a      	str	r2, [r3, #8]
    30f4:	f89d 3007 	ldrb.w	r3, [sp, #7]
    30f8:	9803      	ldr	r0, [sp, #12]
    30fa:	4619      	mov	r1, r3
    30fc:	f000 f816 	bl	312c <gpio_dir>
    3100:	f89d 3007 	ldrb.w	r3, [sp, #7]
    3104:	2b00      	cmp	r3, #0
    3106:	d007      	beq.n	3118 <gpio_init+0x78>
    3108:	2b01      	cmp	r3, #1
    310a:	d10d      	bne.n	3128 <gpio_init+0x88>
    310c:	9802      	ldr	r0, [sp, #8]
    310e:	f04f 0102 	mov.w	r1, #2
    3112:	f7ff fe89 	bl	2e28 <pin_mode>
    3116:	e007      	b.n	3128 <gpio_init+0x88>
    3118:	9802      	ldr	r0, [sp, #8]
    311a:	f04f 0103 	mov.w	r1, #3
    311e:	f7ff fe83 	bl	2e28 <pin_mode>
    3122:	bf00      	nop
    3124:	e000      	b.n	3128 <gpio_init+0x88>
    3126:	bf00      	nop
    3128:	b007      	add	sp, #28
    312a:	bd00      	pop	{pc}

0000312c <gpio_dir>:
    312c:	b082      	sub	sp, #8
    312e:	9001      	str	r0, [sp, #4]
    3130:	460b      	mov	r3, r1
    3132:	f88d 3003 	strb.w	r3, [sp, #3]
    3136:	f89d 3003 	ldrb.w	r3, [sp, #3]
    313a:	2b00      	cmp	r3, #0
    313c:	d002      	beq.n	3144 <gpio_dir+0x18>
    313e:	2b01      	cmp	r3, #1
    3140:	d00c      	beq.n	315c <gpio_dir+0x30>
    3142:	e015      	b.n	3170 <gpio_dir+0x44>
    3144:	9b01      	ldr	r3, [sp, #4]
    3146:	689b      	ldr	r3, [r3, #8]
    3148:	9a01      	ldr	r2, [sp, #4]
    314a:	6892      	ldr	r2, [r2, #8]
    314c:	6811      	ldr	r1, [r2, #0]
    314e:	9a01      	ldr	r2, [sp, #4]
    3150:	6852      	ldr	r2, [r2, #4]
    3152:	ea6f 0202 	mvn.w	r2, r2
    3156:	400a      	ands	r2, r1
    3158:	601a      	str	r2, [r3, #0]
    315a:	e009      	b.n	3170 <gpio_dir+0x44>
    315c:	9b01      	ldr	r3, [sp, #4]
    315e:	689b      	ldr	r3, [r3, #8]
    3160:	9a01      	ldr	r2, [sp, #4]
    3162:	6892      	ldr	r2, [r2, #8]
    3164:	6811      	ldr	r1, [r2, #0]
    3166:	9a01      	ldr	r2, [sp, #4]
    3168:	6852      	ldr	r2, [r2, #4]
    316a:	430a      	orrs	r2, r1
    316c:	601a      	str	r2, [r3, #0]
    316e:	bf00      	nop
    3170:	b002      	add	sp, #8
    3172:	4770      	bx	lr

00003174 <NVIC_EnableIRQ>:
    3174:	b082      	sub	sp, #8
    3176:	4603      	mov	r3, r0
    3178:	f88d 3007 	strb.w	r3, [sp, #7]
    317c:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    3180:	f2ce 0300 	movt	r3, #57344	; 0xe000
    3184:	f99d 2007 	ldrsb.w	r2, [sp, #7]
    3188:	ea4f 1252 	mov.w	r2, r2, lsr #5
    318c:	f89d 1007 	ldrb.w	r1, [sp, #7]
    3190:	f001 011f 	and.w	r1, r1, #31
    3194:	f04f 0001 	mov.w	r0, #1
    3198:	fa00 f101 	lsl.w	r1, r0, r1
    319c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    31a0:	b002      	add	sp, #8
    31a2:	4770      	bx	lr

000031a4 <us_ticker_init>:
    31a4:	b500      	push	{lr}
    31a6:	b083      	sub	sp, #12
    31a8:	f240 13d0 	movw	r3, #464	; 0x1d0
    31ac:	f2c1 0300 	movt	r3, #4096	; 0x1000
    31b0:	681b      	ldr	r3, [r3, #0]
    31b2:	2b00      	cmp	r3, #0
    31b4:	d151      	bne.n	325a <us_ticker_init+0xb6>
    31b6:	f240 13d0 	movw	r3, #464	; 0x1d0
    31ba:	f2c1 0300 	movt	r3, #4096	; 0x1000
    31be:	f04f 0201 	mov.w	r2, #1
    31c2:	601a      	str	r2, [r3, #0]
    31c4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    31c8:	f2c4 030f 	movt	r3, #16399	; 0x400f
    31cc:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    31d0:	f2c4 020f 	movt	r2, #16399	; 0x400f
    31d4:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    31d8:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
    31dc:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    31e0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    31e4:	f2c4 0309 	movt	r3, #16393	; 0x4009
    31e8:	f04f 0200 	mov.w	r2, #0
    31ec:	671a      	str	r2, [r3, #112]	; 0x70
    31ee:	f240 1358 	movw	r3, #344	; 0x158
    31f2:	f2c1 0300 	movt	r3, #4096	; 0x1000
    31f6:	681b      	ldr	r3, [r3, #0]
    31f8:	ea4f 0393 	mov.w	r3, r3, lsr #2
    31fc:	9301      	str	r3, [sp, #4]
    31fe:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3202:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3206:	f04f 0202 	mov.w	r2, #2
    320a:	605a      	str	r2, [r3, #4]
    320c:	9a01      	ldr	r2, [sp, #4]
    320e:	f64d 6383 	movw	r3, #56963	; 0xde83
    3212:	f2c4 331b 	movt	r3, #17179	; 0x431b
    3216:	fba3 1302 	umull	r1, r3, r3, r2
    321a:	ea4f 4393 	mov.w	r3, r3, lsr #18
    321e:	9300      	str	r3, [sp, #0]
    3220:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3224:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3228:	9a00      	ldr	r2, [sp, #0]
    322a:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
    322e:	60da      	str	r2, [r3, #12]
    3230:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3234:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3238:	f04f 0201 	mov.w	r2, #1
    323c:	605a      	str	r2, [r3, #4]
    323e:	f243 23dd 	movw	r3, #13021	; 0x32dd
    3242:	f2c0 0300 	movt	r3, #0
    3246:	f04f 0004 	mov.w	r0, #4
    324a:	4619      	mov	r1, r3
    324c:	f7ff fc24 	bl	2a98 <NVIC_SetVector>
    3250:	f04f 0004 	mov.w	r0, #4
    3254:	f7ff ff8e 	bl	3174 <NVIC_EnableIRQ>
    3258:	e000      	b.n	325c <us_ticker_init+0xb8>
    325a:	bf00      	nop
    325c:	b003      	add	sp, #12
    325e:	bd00      	pop	{pc}

00003260 <us_ticker_read>:
    3260:	b508      	push	{r3, lr}
    3262:	f240 13d0 	movw	r3, #464	; 0x1d0
    3266:	f2c1 0300 	movt	r3, #4096	; 0x1000
    326a:	681b      	ldr	r3, [r3, #0]
    326c:	2b00      	cmp	r3, #0
    326e:	d101      	bne.n	3274 <us_ticker_read+0x14>
    3270:	f7ff ff98 	bl	31a4 <us_ticker_init>
    3274:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3278:	f2c4 0309 	movt	r3, #16393	; 0x4009
    327c:	689b      	ldr	r3, [r3, #8]
    327e:	4618      	mov	r0, r3
    3280:	bd08      	pop	{r3, pc}
    3282:	bf00      	nop

00003284 <us_ticker_set_interrupt>:
    3284:	b082      	sub	sp, #8
    3286:	9001      	str	r0, [sp, #4]
    3288:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    328c:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3290:	9a01      	ldr	r2, [sp, #4]
    3292:	619a      	str	r2, [r3, #24]
    3294:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3298:	f2c4 0309 	movt	r3, #16393	; 0x4009
    329c:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    32a0:	f2c4 0209 	movt	r2, #16393	; 0x4009
    32a4:	6952      	ldr	r2, [r2, #20]
    32a6:	f042 0201 	orr.w	r2, r2, #1
    32aa:	615a      	str	r2, [r3, #20]
    32ac:	b002      	add	sp, #8
    32ae:	4770      	bx	lr

000032b0 <us_ticker_disable_interrupt>:
    32b0:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32b4:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32b8:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    32bc:	f2c4 0209 	movt	r2, #16393	; 0x4009
    32c0:	6952      	ldr	r2, [r2, #20]
    32c2:	f022 0201 	bic.w	r2, r2, #1
    32c6:	615a      	str	r2, [r3, #20]
    32c8:	4770      	bx	lr
    32ca:	bf00      	nop

000032cc <us_ticker_clear_interrupt>:
    32cc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32d0:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32d4:	f04f 0201 	mov.w	r2, #1
    32d8:	601a      	str	r2, [r3, #0]
    32da:	4770      	bx	lr

000032dc <us_ticker_irq_handler>:
    32dc:	b510      	push	{r4, lr}
    32de:	b082      	sub	sp, #8
    32e0:	f7ff fff4 	bl	32cc <us_ticker_clear_interrupt>
    32e4:	e000      	b.n	32e8 <us_ticker_irq_handler+0xc>
    32e6:	bf00      	nop
    32e8:	f240 13d8 	movw	r3, #472	; 0x1d8
    32ec:	f2c1 0300 	movt	r3, #4096	; 0x1000
    32f0:	681b      	ldr	r3, [r3, #0]
    32f2:	2b00      	cmp	r3, #0
    32f4:	d102      	bne.n	32fc <us_ticker_irq_handler+0x20>
    32f6:	f7ff ffdb 	bl	32b0 <us_ticker_disable_interrupt>
    32fa:	e037      	b.n	336c <us_ticker_irq_handler+0x90>
    32fc:	f240 13d8 	movw	r3, #472	; 0x1d8
    3300:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3304:	681b      	ldr	r3, [r3, #0]
    3306:	681c      	ldr	r4, [r3, #0]
    3308:	f7ff ffaa 	bl	3260 <us_ticker_read>
    330c:	4603      	mov	r3, r0
    330e:	1ae3      	subs	r3, r4, r3
    3310:	2b00      	cmp	r3, #0
    3312:	dc21      	bgt.n	3358 <us_ticker_irq_handler+0x7c>
    3314:	f240 13d8 	movw	r3, #472	; 0x1d8
    3318:	f2c1 0300 	movt	r3, #4096	; 0x1000
    331c:	681b      	ldr	r3, [r3, #0]
    331e:	9301      	str	r3, [sp, #4]
    3320:	f240 13d8 	movw	r3, #472	; 0x1d8
    3324:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3328:	681b      	ldr	r3, [r3, #0]
    332a:	689a      	ldr	r2, [r3, #8]
    332c:	f240 13d8 	movw	r3, #472	; 0x1d8
    3330:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3334:	601a      	str	r2, [r3, #0]
    3336:	f240 13d4 	movw	r3, #468	; 0x1d4
    333a:	f2c1 0300 	movt	r3, #4096	; 0x1000
    333e:	681b      	ldr	r3, [r3, #0]
    3340:	2b00      	cmp	r3, #0
    3342:	d0d0      	beq.n	32e6 <us_ticker_irq_handler+0xa>
    3344:	f240 13d4 	movw	r3, #468	; 0x1d4
    3348:	f2c1 0300 	movt	r3, #4096	; 0x1000
    334c:	681b      	ldr	r3, [r3, #0]
    334e:	9a01      	ldr	r2, [sp, #4]
    3350:	6852      	ldr	r2, [r2, #4]
    3352:	4610      	mov	r0, r2
    3354:	4798      	blx	r3
    3356:	e7c6      	b.n	32e6 <us_ticker_irq_handler+0xa>
    3358:	f240 13d8 	movw	r3, #472	; 0x1d8
    335c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3360:	681b      	ldr	r3, [r3, #0]
    3362:	681b      	ldr	r3, [r3, #0]
    3364:	4618      	mov	r0, r3
    3366:	f7ff ff8d 	bl	3284 <us_ticker_set_interrupt>
    336a:	bf00      	nop
    336c:	b002      	add	sp, #8
    336e:	bd10      	pop	{r4, pc}

00003370 <__libc_init_array>:
    3370:	b538      	push	{r3, r4, r5, lr}
    3372:	4d0e      	ldr	r5, [pc, #56]	; (33ac <__libc_init_array+0x3c>)
    3374:	4b0e      	ldr	r3, [pc, #56]	; (33b0 <__libc_init_array+0x40>)
    3376:	2400      	movs	r4, #0
    3378:	1ae8      	subs	r0, r5, r3
    337a:	1085      	asrs	r5, r0, #2
    337c:	42ac      	cmp	r4, r5
    337e:	d005      	beq.n	338c <__libc_init_array+0x1c>
    3380:	490b      	ldr	r1, [pc, #44]	; (33b0 <__libc_init_array+0x40>)
    3382:	f851 2024 	ldr.w	r2, [r1, r4, lsl #2]
    3386:	4790      	blx	r2
    3388:	3401      	adds	r4, #1
    338a:	e7f7      	b.n	337c <__libc_init_array+0xc>
    338c:	f000 f868 	bl	3460 <_init>
    3390:	4908      	ldr	r1, [pc, #32]	; (33b4 <__libc_init_array+0x44>)
    3392:	4a09      	ldr	r2, [pc, #36]	; (33b8 <__libc_init_array+0x48>)
    3394:	1a54      	subs	r4, r2, r1
    3396:	10a5      	asrs	r5, r4, #2
    3398:	2400      	movs	r4, #0
    339a:	42ac      	cmp	r4, r5
    339c:	d005      	beq.n	33aa <__libc_init_array+0x3a>
    339e:	4b05      	ldr	r3, [pc, #20]	; (33b4 <__libc_init_array+0x44>)
    33a0:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    33a4:	4780      	blx	r0
    33a6:	3401      	adds	r4, #1
    33a8:	e7f7      	b.n	339a <__libc_init_array+0x2a>
    33aa:	bd38      	pop	{r3, r4, r5, pc}
    33ac:	1000015c 	.word	0x1000015c
    33b0:	1000015c 	.word	0x1000015c
    33b4:	1000015c 	.word	0x1000015c
    33b8:	10000160 	.word	0x10000160

000033bc <memcpy>:
    33bc:	b510      	push	{r4, lr}
    33be:	2300      	movs	r3, #0
    33c0:	4293      	cmp	r3, r2
    33c2:	d003      	beq.n	33cc <memcpy+0x10>
    33c4:	5ccc      	ldrb	r4, [r1, r3]
    33c6:	54c4      	strb	r4, [r0, r3]
    33c8:	3301      	adds	r3, #1
    33ca:	e7f9      	b.n	33c0 <memcpy+0x4>
    33cc:	bd10      	pop	{r4, pc}

000033ce <memset>:
    33ce:	1882      	adds	r2, r0, r2
    33d0:	4603      	mov	r3, r0
    33d2:	4293      	cmp	r3, r2
    33d4:	d002      	beq.n	33dc <memset+0xe>
    33d6:	f803 1b01 	strb.w	r1, [r3], #1
    33da:	e7fa      	b.n	33d2 <memset+0x4>
    33dc:	4770      	bx	lr

000033de <strcmp>:
    33de:	f810 2b01 	ldrb.w	r2, [r0], #1
    33e2:	f811 3b01 	ldrb.w	r3, [r1], #1
    33e6:	2a01      	cmp	r2, #1
    33e8:	bf28      	it	cs
    33ea:	429a      	cmpcs	r2, r3
    33ec:	d0f7      	beq.n	33de <strcmp>
    33ee:	eba2 0003 	sub.w	r0, r2, r3
    33f2:	4770      	bx	lr

000033f4 <strlen>:
    33f4:	4603      	mov	r3, r0
    33f6:	f813 2b01 	ldrb.w	r2, [r3], #1
    33fa:	2a00      	cmp	r2, #0
    33fc:	d1fb      	bne.n	33f6 <strlen+0x2>
    33fe:	1a18      	subs	r0, r3, r0
    3400:	3801      	subs	r0, #1
    3402:	4770      	bx	lr

00003404 <strncmp>:
    3404:	b570      	push	{r4, r5, r6, lr}
    3406:	b192      	cbz	r2, 342e <strncmp+0x2a>
    3408:	460b      	mov	r3, r1
    340a:	4605      	mov	r5, r0
    340c:	b91a      	cbnz	r2, 3416 <strncmp+0x12>
    340e:	7828      	ldrb	r0, [r5, #0]
    3410:	7819      	ldrb	r1, [r3, #0]
    3412:	1a40      	subs	r0, r0, r1
    3414:	bd70      	pop	{r4, r5, r6, pc}
    3416:	f810 6b01 	ldrb.w	r6, [r0], #1
    341a:	781c      	ldrb	r4, [r3, #0]
    341c:	3101      	adds	r1, #1
    341e:	42b4      	cmp	r4, r6
    3420:	d1f5      	bne.n	340e <strncmp+0xa>
    3422:	2a01      	cmp	r2, #1
    3424:	d0f3      	beq.n	340e <strncmp+0xa>
    3426:	3a01      	subs	r2, #1
    3428:	2c00      	cmp	r4, #0
    342a:	d1ed      	bne.n	3408 <strncmp+0x4>
    342c:	e7ef      	b.n	340e <strncmp+0xa>
    342e:	4610      	mov	r0, r2
    3430:	bd70      	pop	{r4, r5, r6, pc}

00003432 <strstr>:
    3432:	b530      	push	{r4, r5, lr}
    3434:	7803      	ldrb	r3, [r0, #0]
    3436:	b10b      	cbz	r3, 343c <strstr+0xa>
    3438:	4602      	mov	r2, r0
    343a:	e003      	b.n	3444 <strstr+0x12>
    343c:	7809      	ldrb	r1, [r1, #0]
    343e:	b171      	cbz	r1, 345e <strstr+0x2c>
    3440:	2000      	movs	r0, #0
    3442:	bd30      	pop	{r4, r5, pc}
    3444:	4610      	mov	r0, r2
    3446:	7803      	ldrb	r3, [r0, #0]
    3448:	3201      	adds	r2, #1
    344a:	2b00      	cmp	r3, #0
    344c:	d0f8      	beq.n	3440 <strstr+0xe>
    344e:	2300      	movs	r3, #0
    3450:	5ccc      	ldrb	r4, [r1, r3]
    3452:	b124      	cbz	r4, 345e <strstr+0x2c>
    3454:	5cc5      	ldrb	r5, [r0, r3]
    3456:	42a5      	cmp	r5, r4
    3458:	d1f4      	bne.n	3444 <strstr+0x12>
    345a:	3301      	adds	r3, #1
    345c:	e7f8      	b.n	3450 <strstr+0x1e>
    345e:	bd30      	pop	{r4, r5, pc}

00003460 <_init>:
    3460:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3462:	bf00      	nop
    3464:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3466:	bc08      	pop	{r3}
    3468:	469e      	mov	lr, r3
    346a:	4770      	bx	lr

0000346c <_fini>:
    346c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    346e:	bf00      	nop
    3470:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3472:	bc08      	pop	{r3}
    3474:	469e      	mov	lr, r3
    3476:	4770      	bx	lr
    3478:	5f49524d 	.word	0x5f49524d
    347c:	54524155 	.word	0x54524155
    3480:	45424d5f 	.word	0x45424d5f
    3484:	53555f44 	.word	0x53555f44
    3488:	00000042 	.word	0x00000042
    348c:	00343045 	.word	0x00343045

00003490 <commandTable.5674>:
    3490:	000027ad 0000003f 0000218d 00000063     .'..?....!..c...
    34a0:	0000247d 00000046 000027d5 00000067     }$..F....'..g...
    34b0:	000027e5 00000047 000024c5 0000006d     .'..G....$..m...
    34c0:	00002501 0000004d 000026ad 00000071     .%..M....&..q...
    34d0:	00002811 00000073 00002549 00000058     .(..s...I%..X...
    34e0:	00002095 0000007a 00002029 0000005a     . ..z...) ..Z...

000034f0 <NibbleToHexChar>:
    34f0:	33323130 37363534 62613938 66656463     0123456789abcdef
    3500:	3c000920                                          ..

00003503 <g_targetXml>:
    3503:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    3513:	3f22302e 213c0a3e 54434f44 20455059     .0"?>.<!DOCTYPE 
    3523:	74616566 20657275 54535953 22204d45     feature SYSTEM "
    3533:	2d626467 67726174 642e7465 3e226474     gdb-target.dtd">
    3543:	61743c0a 74656772 663c0a3e 75746165     .<target>.<featu
    3553:	6e206572 3d656d61 67726f22 756e672e     re name="org.gnu
    3563:	6264672e 6d72612e 702d6d2e 69666f72     .gdb.arm.m-profi
    3573:	3e22656c 65723c0a 616e2067 223d656d     le">.<reg name="
    3583:	20223072 73746962 3d657a69 22323322     r0" bitsize="32"
    3593:	3c0a3e2f 20676572 656d616e 3172223d     />.<reg name="r1
    35a3:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    35b3:	65723c0a 616e2067 223d656d 20223272     .<reg name="r2" 
    35c3:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    35d3:	20676572 656d616e 3372223d 69622022     reg name="r3" bi
    35e3:	7a697374 33223d65 3e2f2232 65723c0a     tsize="32"/>.<re
    35f3:	616e2067 223d656d 20223472 73746962     g name="r4" bits
    3603:	3d657a69 22323322 3c0a3e2f 20676572     ize="32"/>.<reg 
    3613:	656d616e 3572223d 69622022 7a697374     name="r5" bitsiz
    3623:	33223d65 3e2f2232 65723c0a 616e2067     e="32"/>.<reg na
    3633:	223d656d 20223672 73746962 3d657a69     me="r6" bitsize=
    3643:	22323322 3c0a3e2f 20676572 656d616e     "32"/>.<reg name
    3653:	3772223d 69622022 7a697374 33223d65     ="r7" bitsize="3
    3663:	3e2f2232 65723c0a 616e2067 223d656d     2"/>.<reg name="
    3673:	20223872 73746962 3d657a69 22323322     r8" bitsize="32"
    3683:	3c0a3e2f 20676572 656d616e 3972223d     />.<reg name="r9
    3693:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    36a3:	65723c0a 616e2067 223d656d 22303172     .<reg name="r10"
    36b3:	74696220 657a6973 3233223d 0a3e2f22      bitsize="32"/>.
    36c3:	6765723c 6d616e20 72223d65 20223131     <reg name="r11" 
    36d3:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    36e3:	20676572 656d616e 3172223d 62202232     reg name="r12" b
    36f3:	69737469 223d657a 2f223233 723c0a3e     itsize="32"/>.<r
    3703:	6e206765 3d656d61 22707322 74696220     eg name="sp" bit
    3713:	657a6973 3233223d 79742022 223d6570     size="32" type="
    3723:	61746164 7274705f 0a3e2f22 6765723c     data_ptr"/>.<reg
    3733:	6d616e20 6c223d65 62202272 69737469      name="lr" bitsi
    3743:	223d657a 2f223233 723c0a3e 6e206765     ze="32"/>.<reg n
    3753:	3d656d61 22637022 74696220 657a6973     ame="pc" bitsize
    3763:	3233223d 79742022 223d6570 65646f63     ="32" type="code
    3773:	7274705f 0a3e2f22 6765723c 6d616e20     _ptr"/>.<reg nam
    3783:	78223d65 22727370 74696220 657a6973     e="xpsr" bitsize
    3793:	3233223d 65722022 6d756e67 3532223d     ="32" regnum="25
    37a3:	0a3e2f22 65662f3c 72757461 3c0a3e65     "/>.</feature>.<
    37b3:	7261742f 3e746567 0000000a 00001000              /target>.....

000037c0 <debugEventToSignalMap.6975>:
    37c0:	00000010 00000011 00000004 00000005     ................
    37d0:	00000002 00000005 00000001 00000005     ................

000037e0 <__mriCortexMFakeStack>:
    37e0:	deaddead deaddead deaddead deaddead     ................
    37f0:	deaddead deaddead deaddead deaddead     ................

00003800 <CSWTCH.106>:
    3800:	0a070506 504d2a2a 61462055 2a746c75     ....**MPU Fault*
    3810:	200a002a 61745320 20737574 69676552     *..  Status Regi
    3820:	72657473 0a00203a 20202020 6c756146     ster: ..    Faul
    3830:	64412074 73657264 00203a73 2020200a     t Address: ..   
    3840:	20504620 797a614c 65725020 76726573      FP Lazy Preserv
    3850:	6f697461 200a006e 53202020 6b636174     ation..    Stack
    3860:	20676e69 6f727245 2f772072 20505320     ing Error w/ SP 
    3870:	0a00203d 20202020 74736e55 696b6361     = ..    Unstacki
    3880:	4520676e 726f7272 202f7720 3d205053     ng Error w/ SP =
    3890:	200a0020 44202020 20617461 65636341      ..    Data Acce
    38a0:	0a007373 20202020 74736e49 74637572     ss..    Instruct
    38b0:	206e6f69 63746546 2a0a0068 7375422a     ion Fetch..**Bus
    38c0:	75614620 2a2a746c 20200a00 6d492020      Fault**..    Im
    38d0:	63657270 20657369 61746144 63634120     precise Data Acc
    38e0:	00737365 2020200a 65725020 65736963     ess..    Precise
    38f0:	74614420 63412061 73736563 20200a00      Data Access..  
    3900:	6e492020 75727473 6f697463 7250206e       Instruction Pr
    3910:	74656665 0a006863 73552a2a 20656761     efetch..**Usage 
    3920:	6c756146 002a2a74 2020200a 76694420     Fault**..    Div
    3930:	20656469 5a207962 006f7265 2020200a     ide by Zero..   
    3940:	616e5520 6e67696c 41206465 73656363      Unaligned Acces
    3950:	200a0073 43202020 6f72706f 73736563     s..    Coprocess
    3960:	4120726f 73656363 200a0073 49202020     or Access..    I
    3970:	6c61766e 45206469 70656378 6e6f6974     nvalid Exception
    3980:	74655220 206e7275 74617453 200a0065      Return State.. 
    3990:	49202020 6c61766e 53206469 65746174        Invalid State
    39a0:	20200a00 6e552020 69666564 2064656e     ..    Undefined 
    39b0:	74736e49 74637572 006e6f69 482a2a0a     Instruction..**H
    39c0:	20647261 6c756146 002a2a74 2020200a     ard Fault**..   
    39d0:	62654420 45206775 746e6576 20200a00      Debug Event..  
    39e0:	65562020 726f7463 62615420 5220656c       Vector Table R
    39f0:	00646165 2020200a 726f4620 00646563     ead..    Forced.
    3a00:	524d000a                                         ..

00003a02 <baudRatePrefix.7339>:
    3a02:	5f49524d 54524155 5541425f 4d003d44     MRI_UART_BAUD=.M
    3a12:	555f4952 5f545241 4445424d 4253555f     RI_UART_MBED_USB
    3a22:	49524d00 5241555f 424d5f54 505f4445     .MRI_UART_MBED_P
    3a32:	31505f39 524d0030 41555f49 4d5f5452     9_P10.MRI_UART_M
    3a42:	5f444542 5f333150 00343150 5f49524d     BED_P13_P14.MRI_
    3a52:	54524155 45424d5f 32505f44 32505f38     UART_MBED_P28_P2
    3a62:	524d0037 41555f49 305f5452 49524d00     7.MRI_UART_0.MRI
    3a72:	5241555f 00315f54 5f49524d 54524155     _UART_1.MRI_UART
    3a82:	4d00325f 555f4952 5f545241 524d0033     _2.MRI_UART_3.MR
    3a92:	41555f49 535f5452 45524148 783f3c00              I_UART_SHARE.

00003a9f <g_memoryMapXml>:
    3a9f:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    3aaf:	3f22302e 44213c3e 5954434f 6d204550     .0"?><!DOCTYPE m
    3abf:	726f6d65 616d2d79 55502070 43494c42     emory-map PUBLIC
    3acf:	2f2b2220 4e44492f 756e6720 67726f2e      "+//IDN gnu.org
    3adf:	54442f2f 44472044 654d2042 79726f6d     //DTD GDB Memory
    3aef:	70614d20 2e315620 452f2f30 2220224e      Map V1.0//EN" "
    3aff:	70747468 732f2f3a 6372756f 72617765     http://sourcewar
    3b0f:	726f2e65 64672f67 64672f62 656d2d62     e.org/gdb/gdb-me
    3b1f:	79726f6d 70616d2d 6474642e 6d3c3e22     mory-map.dtd"><m
    3b2f:	726f6d65 616d2d79 6d3c3e70 726f6d65     emory-map><memor
    3b3f:	79742079 223d6570 73616c66 73202268     y type="flash" s
    3b4f:	74726174 7830223d 6c202230 74676e65     tart="0x0" lengt
    3b5f:	30223d68 30303178 3e223030 72703c20     h="0x10000"> <pr
    3b6f:	7265706f 6e207974 3d656d61 6f6c6222     operty name="blo
    3b7f:	69736b63 3e22657a 30317830 2f3c3030     cksize">0x1000</
    3b8f:	706f7270 79747265 6d2f3c3e 726f6d65     property></memor
    3b9f:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    3baf:	73616c66 73202268 74726174 7830223d     flash" start="0x
    3bbf:	30303031 6c202230 74676e65 30223d68     10000" length="0
    3bcf:	30303778 3e223030 72703c20 7265706f     x70000"> <proper
    3bdf:	6e207974 3d656d61 6f6c6222 69736b63     ty name="blocksi
    3bef:	3e22657a 30387830 2f3c3030 706f7270     ze">0x8000</prop
    3bff:	79747265 6d2f3c3e 726f6d65 6d3c3e79     erty></memory><m
    3c0f:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3c1f:	61747320 223d7472 30317830 30303030      start="0x100000
    3c2f:	20223030 676e656c 223d6874 30387830     00" length="0x80
    3c3f:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3c4f:	726f6d65 79742079 223d6570 226d6f72     emory type="rom"
    3c5f:	61747320 223d7472 46317830 30304646      start="0x1FFF00
    3c6f:	20223030 676e656c 223d6874 30327830     00" length="0x20
    3c7f:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3c8f:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3c9f:	61747320 223d7472 30327830 30433730      start="0x2007C0
    3caf:	20223030 676e656c 223d6874 30387830     00" length="0x80
    3cbf:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3ccf:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3cdf:	61747320 223d7472 30327830 30433930      start="0x2009C0
    3cef:	20223030 676e656c 223d6874 30347830     00" length="0x40
    3cff:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3d0f:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3d1f:	61747320 223d7472 32327830 30303030      start="0x220000
    3d2f:	20223030 676e656c 223d6874 30327830     00" length="0x20
    3d3f:	30303030 203e2230 656d2f3c 79726f6d     00000"> </memory
    3d4f:	656d3c3e 79726f6d 70797420 72223d65     ><memory type="r
    3d5f:	20226d61 72617473 30223d74 30303478     am" start="0x400
    3d6f:	30303030 6c202230 74676e65 30223d68     00000" length="0
    3d7f:	30343178 3e223030 6d2f3c20 726f6d65     x14000"> </memor
    3d8f:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    3d9f:	226d6172 61747320 223d7472 30347830     ram" start="0x40
    3daf:	30383130 20223030 676e656c 223d6874     018000" length="
    3dbf:	34337830 22303030 2f3c203e 6f6d656d     0x34000"> </memo
    3dcf:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    3ddf:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    3def:	43353030 22303030 6e656c20 3d687467     005C000" length=
    3dff:	34783022 22303030 2f3c203e 6f6d656d     "0x4000"> </memo
    3e0f:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    3e1f:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    3e2f:	38383030 22303030 6e656c20 3d687467     0088000" length=
    3e3f:	31783022 30303043 3c203e22 6d656d2f     "0x1C000"> </mem
    3e4f:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3e5f:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3e6f:	41303034 30303038 656c2022 6874676e     400A8000" length
    3e7f:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3e8f:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3e9f:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3eaf:	42303034 30303030 656c2022 6874676e     400B0000" length
    3ebf:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3ecf:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3edf:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3eef:	42303034 30303038 656c2022 6874676e     400B8000" length
    3eff:	7830223d 30303038 3c203e22 6d656d2f     ="0x8000"> </mem
    3f0f:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3f1f:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3f2f:	46303034 30303043 656c2022 6874676e     400FC000" length
    3f3f:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3f4f:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3f5f:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3f6f:	30303234 30303030 656c2022 6874676e     42000000" length
    3f7f:	7830223d 30303032 22303030 2f3c203e     ="0x2000000"> </
    3f8f:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    3f9f:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    3faf:	35783022 30303030 22303030 6e656c20     "0x50000000" len
    3fbf:	3d687467 38783022 22303030 2f3c203e     gth="0x8000"> </
    3fcf:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    3fdf:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    3fef:	35783022 43303030 22303030 6e656c20     "0x5000C000" len
    3fff:	3d687467 34783022 22303030 2f3c203e     gth="0x4000"> </
    400f:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    401f:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    402f:	45783022 30303030 22303030 6e656c20     "0xE0000000" len
    403f:	3d687467 31783022 30303030 203e2230     gth="0x100000"> 
    404f:	656d2f3c 79726f6d 6d2f3c3e 726f6d65     </memory></memor
    405f:	616d2d79 31003e70 30303130 30303030     y-map>.101000000
    406f:	30303030 30303030 30303030 46323030     000000000000002F
    407f:	30304637 00303030 30000000                       7F00000....

0000408a <NibbleToHexChar>:
    408a:	33323130 37363534 62613938 66656463     0123456789abcdef
    409a:	00313045 00353045 46004b4f                       E01.E05.OK.

000040a5 <gdbCloseCommand.4654>:
    40a5:	6f6c6346 002c6573                       Fclose,.

000040ad <gdbStatCommand.4676>:
    40ad:	61747346 2c002c74                                Fstat,.

000040b4 <controlCFlag.4687>:
    40b4:	4600432c                                         ,C.

000040b7 <gdbCommand.4682>:
    40b7:	6e657246 2c656d61 72774600                       Frename,.

000040c0 <gdbWriteCommand.4644>:
    40c0:	69727746 002c6574                       Fwrite,.

000040c8 <gdbOpenCommand.4639>:
    40c8:	65706f46 46002c6e                                Fopen,.

000040cf <gdbStatCommand.4665>:
    40cf:	74736646 002c7461                       Ffstat,.

000040d7 <gdbReadCommand.4649>:
    40d7:	61657246 46002c64                                Fread,.

000040de <gdbSeekCommand.4659>:
    40de:	65736c46 002c6b65                       Flseek,.

000040e6 <gdbUnlinkCommand.4670>:
    40e6:	6c6e7546 2c6b6e69 33304500 61657200              Funlink,.E03.

000040f3 <readCommand.4768>:
    40f3:	64616572 65665800                                read.

000040f8 <qXferCommand.4745>:
    40f8:	72656658 70755300                                Xfer.

000040fd <qSupportedCommand.4744>:
    40fd:	70707553 6574726f 61740064                       Supported.

00004107 <targetXmlAnnex.4773>:
    4107:	67726174 782e7465 74006c6d 65677261     target.xml.targe
    4117:	6d782e74 5871006c                                t.xml.

0000411d <querySupportResponse.4749>:
    411d:	65665871 656d3a72 79726f6d 70616d2d     qXfer:memory-map
    412d:	6165723a 713b2b64 72656658 6165663a     :read+;qXfer:fea
    413d:	65727574 65723a73 3b2b6461 6b636150     tures:read+;Pack
    414d:	69537465 003d657a                       etSize=.

00004155 <featureObject.4757>:
    4155:	74616566 73657275 6d656d00                       features.

0000415e <memoryMapObject.4756>:
    415e:	6f6d656d 6d2d7972 30007061 00000078              memory-map.0x.

0000416c <__EH_FRAME_BEGIN__>:
    416c:	00000000                                ....
