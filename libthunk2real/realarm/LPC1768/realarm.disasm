
LPC1768/realarm.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00002cfd


Disassembly of section .text:

00000000 <__isr_vector>:
       0:	10008000 	.word	0x10008000
       4:	00002cfd 	.word	0x00002cfd
       8:	00002d31 	.word	0x00002d31
       c:	00001b2f 	.word	0x00001b2f
      10:	00001b33 	.word	0x00001b33
      14:	00001b37 	.word	0x00001b37
      18:	00001b3b 	.word	0x00001b3b
	...
      2c:	00002d3b 	.word	0x00002d3b
      30:	00001b3f 	.word	0x00001b3f
      34:	00000000 	.word	0x00000000
      38:	00002d3f 	.word	0x00002d3f
      3c:	00002d41 	.word	0x00002d41
      40:	00002d45 	.word	0x00002d45
      44:	00002d47 	.word	0x00002d47
      48:	00002d49 	.word	0x00002d49
      4c:	00002d4b 	.word	0x00002d4b
      50:	00002d4d 	.word	0x00002d4d
      54:	00001b43 	.word	0x00001b43
      58:	00001b47 	.word	0x00001b47
      5c:	00001b4b 	.word	0x00001b4b
      60:	00001b4f 	.word	0x00001b4f
      64:	00002d57 	.word	0x00002d57
      68:	00002d59 	.word	0x00002d59
      6c:	00002d5b 	.word	0x00002d5b
      70:	00002d5d 	.word	0x00002d5d
      74:	00002d5f 	.word	0x00002d5f
      78:	00002d61 	.word	0x00002d61
      7c:	00002d63 	.word	0x00002d63
      80:	00002d65 	.word	0x00002d65
      84:	00002d67 	.word	0x00002d67
      88:	00002d69 	.word	0x00002d69
      8c:	00002d6b 	.word	0x00002d6b
      90:	00002d6d 	.word	0x00002d6d
      94:	00002d6f 	.word	0x00002d6f
      98:	00002d71 	.word	0x00002d71
      9c:	00002d73 	.word	0x00002d73
      a0:	00002d75 	.word	0x00002d75
      a4:	00002d77 	.word	0x00002d77
      a8:	00002d79 	.word	0x00002d79
      ac:	00002d7b 	.word	0x00002d7b
      b0:	00002d7d 	.word	0x00002d7d
      b4:	00002d7f 	.word	0x00002d7f
      b8:	00002d81 	.word	0x00002d81
      bc:	00002d83 	.word	0x00002d83
      c0:	00002d85 	.word	0x00002d85
      c4:	00002d87 	.word	0x00002d87
      c8:	00002d89 	.word	0x00002d89

000000cc <__do_global_dtors_aux>:
      cc:	b510      	push	{r4, lr}
      ce:	4c05      	ldr	r4, [pc, #20]	; (e4 <__do_global_dtors_aux+0x18>)
      d0:	7823      	ldrb	r3, [r4, #0]
      d2:	b933      	cbnz	r3, e2 <__do_global_dtors_aux+0x16>
      d4:	4804      	ldr	r0, [pc, #16]	; (e8 <__do_global_dtors_aux+0x1c>)
      d6:	b110      	cbz	r0, de <__do_global_dtors_aux+0x12>
      d8:	4804      	ldr	r0, [pc, #16]	; (ec <__do_global_dtors_aux+0x20>)
      da:	f3af 8000 	nop.w
      de:	2101      	movs	r1, #1
      e0:	7021      	strb	r1, [r4, #0]
      e2:	bd10      	pop	{r4, pc}
      e4:	10000168 	.word	0x10000168
      e8:	00000000 	.word	0x00000000
      ec:	00004158 	.word	0x00004158

000000f0 <frame_dummy>:
      f0:	b508      	push	{r3, lr}
      f2:	4b06      	ldr	r3, [pc, #24]	; (10c <frame_dummy+0x1c>)
      f4:	b11b      	cbz	r3, fe <frame_dummy+0xe>
      f6:	4806      	ldr	r0, [pc, #24]	; (110 <frame_dummy+0x20>)
      f8:	4906      	ldr	r1, [pc, #24]	; (114 <frame_dummy+0x24>)
      fa:	f3af 8000 	nop.w
      fe:	4806      	ldr	r0, [pc, #24]	; (118 <frame_dummy+0x28>)
     100:	6801      	ldr	r1, [r0, #0]
     102:	b111      	cbz	r1, 10a <frame_dummy+0x1a>
     104:	4a05      	ldr	r2, [pc, #20]	; (11c <frame_dummy+0x2c>)
     106:	b102      	cbz	r2, 10a <frame_dummy+0x1a>
     108:	4790      	blx	r2
     10a:	bd08      	pop	{r3, pc}
     10c:	00000000 	.word	0x00000000
     110:	00004158 	.word	0x00004158
     114:	1000016c 	.word	0x1000016c
     118:	10000164 	.word	0x10000164
     11c:	00000000 	.word	0x00000000

00000120 <getMPUDataRegionCount()>:
     120:	f64e 5390 	movw	r3, #60816	; 0xed90
     124:	f2ce 0300 	movt	r3, #57344	; 0xe000
     128:	681b      	ldr	r3, [r3, #0]
     12a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
     12e:	ea4f 2313 	mov.w	r3, r3, lsr #8
     132:	4618      	mov	r0, r3
     134:	4770      	bx	lr
     136:	bf00      	nop

00000138 <getHighestMPUDataRegionIndex()>:
     138:	b508      	push	{r3, lr}
     13a:	f7ff fff1 	bl	120 <getMPUDataRegionCount()>
     13e:	4603      	mov	r3, r0
     140:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
     144:	4618      	mov	r0, r3
     146:	bd08      	pop	{r3, pc}

00000148 <isMPURegionNumberValid(unsigned long)>:
     148:	b500      	push	{lr}
     14a:	b083      	sub	sp, #12
     14c:	9001      	str	r0, [sp, #4]
     14e:	f7ff ffe7 	bl	120 <getMPUDataRegionCount()>
     152:	4602      	mov	r2, r0
     154:	9b01      	ldr	r3, [sp, #4]
     156:	429a      	cmp	r2, r3
     158:	bf94      	ite	ls
     15a:	2300      	movls	r3, #0
     15c:	2301      	movhi	r3, #1
     15e:	b2db      	uxtb	r3, r3
     160:	4618      	mov	r0, r3
     162:	b003      	add	sp, #12
     164:	bd00      	pop	{pc}
     166:	bf00      	nop

00000168 <isMPUNotPresent()>:
     168:	b508      	push	{r3, lr}
     16a:	f7ff ffd9 	bl	120 <getMPUDataRegionCount()>
     16e:	4603      	mov	r3, r0
     170:	2b00      	cmp	r3, #0
     172:	bf14      	ite	ne
     174:	2300      	movne	r3, #0
     176:	2301      	moveq	r3, #1
     178:	b2db      	uxtb	r3, r3
     17a:	4618      	mov	r0, r3
     17c:	bd08      	pop	{r3, pc}
     17e:	bf00      	nop

00000180 <disableMPU()>:
     180:	b508      	push	{r3, lr}
     182:	f7ff fff1 	bl	168 <isMPUNotPresent()>
     186:	4603      	mov	r3, r0
     188:	2b00      	cmp	r3, #0
     18a:	bf0c      	ite	eq
     18c:	2300      	moveq	r3, #0
     18e:	2301      	movne	r3, #1
     190:	b2db      	uxtb	r3, r3
     192:	2b00      	cmp	r3, #0
     194:	d110      	bne.n	1b8 <disableMPU()+0x38>
     196:	f64e 5390 	movw	r3, #60816	; 0xed90
     19a:	f2ce 0300 	movt	r3, #57344	; 0xe000
     19e:	f64e 5290 	movw	r2, #60816	; 0xed90
     1a2:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1a6:	6852      	ldr	r2, [r2, #4]
     1a8:	f022 0201 	bic.w	r2, r2, #1
     1ac:	605a      	str	r2, [r3, #4]
     1ae:	f3bf 8f4f 	dsb	sy
     1b2:	f3bf 8f6f 	isb	sy
     1b6:	e000      	b.n	1ba <disableMPU()+0x3a>
     1b8:	bf00      	nop
     1ba:	bd08      	pop	{r3, pc}

000001bc <enableMPUWithHardAndNMIFaults()>:
     1bc:	b508      	push	{r3, lr}
     1be:	f7ff ffd3 	bl	168 <isMPUNotPresent()>
     1c2:	4603      	mov	r3, r0
     1c4:	2b00      	cmp	r3, #0
     1c6:	bf0c      	ite	eq
     1c8:	2300      	moveq	r3, #0
     1ca:	2301      	movne	r3, #1
     1cc:	b2db      	uxtb	r3, r3
     1ce:	2b00      	cmp	r3, #0
     1d0:	d110      	bne.n	1f4 <enableMPUWithHardAndNMIFaults()+0x38>
     1d2:	f64e 5390 	movw	r3, #60816	; 0xed90
     1d6:	f2ce 0300 	movt	r3, #57344	; 0xe000
     1da:	f64e 5290 	movw	r2, #60816	; 0xed90
     1de:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1e2:	6852      	ldr	r2, [r2, #4]
     1e4:	f042 0203 	orr.w	r2, r2, #3
     1e8:	605a      	str	r2, [r3, #4]
     1ea:	f3bf 8f4f 	dsb	sy
     1ee:	f3bf 8f6f 	isb	sy
     1f2:	e000      	b.n	1f6 <enableMPUWithHardAndNMIFaults()+0x3a>
     1f4:	bf00      	nop
     1f6:	bd08      	pop	{r3, pc}

000001f8 <prepareToAccessMPURegion(unsigned long)>:
     1f8:	b500      	push	{lr}
     1fa:	b083      	sub	sp, #12
     1fc:	9001      	str	r0, [sp, #4]
     1fe:	9801      	ldr	r0, [sp, #4]
     200:	f7ff ffa2 	bl	148 <isMPURegionNumberValid(unsigned long)>
     204:	4603      	mov	r3, r0
     206:	2b00      	cmp	r3, #0
     208:	bf14      	ite	ne
     20a:	2300      	movne	r3, #0
     20c:	2301      	moveq	r3, #1
     20e:	b2db      	uxtb	r3, r3
     210:	2b00      	cmp	r3, #0
     212:	d002      	beq.n	21a <PSR_STACK_ALIGN+0x1a>
     214:	f04f 0300 	mov.w	r3, #0
     218:	e007      	b.n	22a <PSR_STACK_ALIGN+0x2a>
     21a:	f64e 5390 	movw	r3, #60816	; 0xed90
     21e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     222:	9a01      	ldr	r2, [sp, #4]
     224:	609a      	str	r2, [r3, #8]
     226:	f04f 0301 	mov.w	r3, #1
     22a:	4618      	mov	r0, r3
     22c:	b003      	add	sp, #12
     22e:	bd00      	pop	{pc}

00000230 <setMPURegionAddress(unsigned long)>:
     230:	b500      	push	{lr}
     232:	b083      	sub	sp, #12
     234:	9001      	str	r0, [sp, #4]
     236:	f7ff ff97 	bl	168 <isMPUNotPresent()>
     23a:	4603      	mov	r3, r0
     23c:	2b00      	cmp	r3, #0
     23e:	bf0c      	ite	eq
     240:	2300      	moveq	r3, #0
     242:	2301      	movne	r3, #1
     244:	b2db      	uxtb	r3, r3
     246:	2b00      	cmp	r3, #0
     248:	d108      	bne.n	25c <setMPURegionAddress(unsigned long)+0x2c>
     24a:	f64e 5390 	movw	r3, #60816	; 0xed90
     24e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     252:	9a01      	ldr	r2, [sp, #4]
     254:	ea4f 1242 	mov.w	r2, r2, lsl #5
     258:	60da      	str	r2, [r3, #12]
     25a:	e000      	b.n	25e <setMPURegionAddress(unsigned long)+0x2e>
     25c:	bf00      	nop
     25e:	b003      	add	sp, #12
     260:	bd00      	pop	{pc}
     262:	bf00      	nop

00000264 <setMPURegionAttributeAndSize(unsigned long)>:
     264:	b500      	push	{lr}
     266:	b083      	sub	sp, #12
     268:	9001      	str	r0, [sp, #4]
     26a:	f7ff ff7d 	bl	168 <isMPUNotPresent()>
     26e:	4603      	mov	r3, r0
     270:	2b00      	cmp	r3, #0
     272:	bf0c      	ite	eq
     274:	2300      	moveq	r3, #0
     276:	2301      	movne	r3, #1
     278:	b2db      	uxtb	r3, r3
     27a:	2b00      	cmp	r3, #0
     27c:	d106      	bne.n	28c <setMPURegionAttributeAndSize(unsigned long)+0x28>
     27e:	f64e 5390 	movw	r3, #60816	; 0xed90
     282:	f2ce 0300 	movt	r3, #57344	; 0xe000
     286:	9a01      	ldr	r2, [sp, #4]
     288:	611a      	str	r2, [r3, #16]
     28a:	e000      	b.n	28e <setMPURegionAttributeAndSize(unsigned long)+0x2a>
     28c:	bf00      	nop
     28e:	b003      	add	sp, #12
     290:	bd00      	pop	{pc}
     292:	bf00      	nop

00000294 <attemptUnalignedAccess()>:
     294:	4770      	bx	lr
     296:	bf00      	nop

00000298 <attemptMemoryWriteFault()>:
     298:	4770      	bx	lr
     29a:	bf00      	nop

0000029c <disallowUnalignedAccesses()>:
     29c:	f44f 436d 	mov.w	r3, #60672	; 0xed00
     2a0:	f2ce 0300 	movt	r3, #57344	; 0xe000
     2a4:	f44f 426d 	mov.w	r2, #60672	; 0xed00
     2a8:	f2ce 0200 	movt	r2, #57344	; 0xe000
     2ac:	6952      	ldr	r2, [r2, #20]
     2ae:	f042 0208 	orr.w	r2, r2, #8
     2b2:	615a      	str	r2, [r3, #20]
     2b4:	4770      	bx	lr
     2b6:	bf00      	nop

000002b8 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>:
     2b8:	b508      	push	{r3, lr}
     2ba:	f7ff ff3d 	bl	138 <getHighestMPUDataRegionIndex()>
     2be:	4603      	mov	r3, r0
     2c0:	4618      	mov	r0, r3
     2c2:	f7ff ff99 	bl	1f8 <prepareToAccessMPURegion(unsigned long)>
     2c6:	f04f 0000 	mov.w	r0, #0
     2ca:	f7ff ffb1 	bl	230 <setMPURegionAddress(unsigned long)>
     2ce:	f04f 003f 	mov.w	r0, #63	; 0x3f
     2d2:	f2c0 1000 	movt	r0, #256	; 0x100
     2d6:	f7ff ffc5 	bl	264 <setMPURegionAttributeAndSize(unsigned long)>
     2da:	bd08      	pop	{r3, pc}

000002dc <disableWriteCaching()>:
     2dc:	b508      	push	{r3, lr}
     2de:	f7ff ff4f 	bl	180 <disableMPU()>
     2e2:	f7ff ffe9 	bl	2b8 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>
     2e6:	f7ff ff69 	bl	1bc <enableMPUWithHardAndNMIFaults()>
     2ea:	bd08      	pop	{r3, pc}

000002ec <main>:
     2ec:	b508      	push	{r3, lr}
     2ee:	f7ff ffd5 	bl	29c <disallowUnalignedAccesses()>
     2f2:	f7ff fff3 	bl	2dc <disableWriteCaching()>
     2f6:	f7ff ffcd 	bl	294 <attemptUnalignedAccess()>
     2fa:	f7ff ffcd 	bl	298 <attemptMemoryWriteFault()>
     2fe:	be00      	bkpt	0x0000
     300:	e7fd      	b.n	2fe <main+0x12>
     302:	bf00      	nop

00000304 <_start>:
     304:	b500      	push	{lr}
     306:	b083      	sub	sp, #12
     308:	f240 42e4 	movw	r2, #1252	; 0x4e4
     30c:	f2c1 0200 	movt	r2, #4096	; 0x1000
     310:	f240 1368 	movw	r3, #360	; 0x168
     314:	f2c1 0300 	movt	r3, #4096	; 0x1000
     318:	1ad3      	subs	r3, r2, r3
     31a:	9301      	str	r3, [sp, #4]
     31c:	9b01      	ldr	r3, [sp, #4]
     31e:	f240 1068 	movw	r0, #360	; 0x168
     322:	f2c1 0000 	movt	r0, #4096	; 0x1000
     326:	f04f 0100 	mov.w	r1, #0
     32a:	461a      	mov	r2, r3
     32c:	f003 f845 	bl	33ba <memset>
     330:	f243 4064 	movw	r0, #13412	; 0x3464
     334:	f2c0 0000 	movt	r0, #0
     338:	f000 f80e 	bl	358 <__mriInit>
     33c:	f3af 8000 	nop.w
     340:	f003 f80c 	bl	335c <__libc_init_array>
     344:	f7ff ffd2 	bl	2ec <main>
     348:	9000      	str	r0, [sp, #0]
     34a:	9800      	ldr	r0, [sp, #0]
     34c:	f002 fca4 	bl	2c98 <exit>

00000350 <__wrap_semihost_connected>:
     350:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     354:	4618      	mov	r0, r3
     356:	4770      	bx	lr

00000358 <__mriInit>:
     358:	b570      	push	{r4, r5, r6, lr}
     35a:	2100      	movs	r1, #0
     35c:	b09e      	sub	sp, #120	; 0x78
     35e:	2224      	movs	r2, #36	; 0x24
     360:	4c0e      	ldr	r4, [pc, #56]	; (39c <__mriInit+0x44>)
     362:	4606      	mov	r6, r0
     364:	480e      	ldr	r0, [pc, #56]	; (3a0 <__mriInit+0x48>)
     366:	f003 f828 	bl	33ba <memset>
     36a:	2500      	movs	r5, #0
     36c:	a801      	add	r0, sp, #4
     36e:	6025      	str	r5, [r4, #0]
     370:	f000 f9f2 	bl	758 <__mriToken_Init>
     374:	a801      	add	r0, sp, #4
     376:	4631      	mov	r1, r6
     378:	6025      	str	r5, [r4, #0]
     37a:	f000 f9f7 	bl	76c <__mriToken_SplitString>
     37e:	6823      	ldr	r3, [r4, #0]
     380:	b913      	cbnz	r3, 388 <__mriInit+0x30>
     382:	a801      	add	r0, sp, #4
     384:	f001 f99c 	bl	16c0 <__mriPlatform_Init>
     388:	6820      	ldr	r0, [r4, #0]
     38a:	b920      	cbnz	r0, 396 <__mriInit+0x3e>
     38c:	4904      	ldr	r1, [pc, #16]	; (3a0 <__mriInit+0x48>)
     38e:	694a      	ldr	r2, [r1, #20]
     390:	f042 0303 	orr.w	r3, r2, #3
     394:	614b      	str	r3, [r1, #20]
     396:	b01e      	add	sp, #120	; 0x78
     398:	bd70      	pop	{r4, r5, r6, pc}
     39a:	bf00      	nop
     39c:	100001dc 	.word	0x100001dc
     3a0:	10000184 	.word	0x10000184

000003a4 <__mriCore_InitBuffer>:
     3a4:	b510      	push	{r4, lr}
     3a6:	f000 fc9b 	bl	ce0 <__mriPlatform_GetPacketBuffer>
     3aa:	4604      	mov	r4, r0
     3ac:	f000 fc9c 	bl	ce8 <__mriPlatform_GetPacketBufferSize>
     3b0:	4602      	mov	r2, r0
     3b2:	4803      	ldr	r0, [pc, #12]	; (3c0 <__mriCore_InitBuffer+0x1c>)
     3b4:	4621      	mov	r1, r4
     3b6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3ba:	f001 bc25 	b.w	1c08 <__mriBuffer_Init>
     3be:	bf00      	nop
     3c0:	1000018c 	.word	0x1000018c

000003c4 <__mriCore_PrepareStringResponse>:
     3c4:	b510      	push	{r4, lr}
     3c6:	4604      	mov	r4, r0
     3c8:	f7ff ffec 	bl	3a4 <__mriCore_InitBuffer>
     3cc:	4802      	ldr	r0, [pc, #8]	; (3d8 <__mriCore_PrepareStringResponse+0x14>)
     3ce:	4621      	mov	r1, r4
     3d0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3d4:	f001 bcca 	b.w	1d6c <__mriBuffer_WriteString>
     3d8:	1000018c 	.word	0x1000018c

000003dc <__mriCore_WasControlCFlagSentFromGdb>:
     3dc:	4b02      	ldr	r3, [pc, #8]	; (3e8 <__mriCore_WasControlCFlagSentFromGdb+0xc>)
     3de:	6958      	ldr	r0, [r3, #20]
     3e0:	f000 0004 	and.w	r0, r0, #4
     3e4:	4770      	bx	lr
     3e6:	bf00      	nop
     3e8:	10000184 	.word	0x10000184

000003ec <__mriCore_IsWaitingForGdbToConnect>:
     3ec:	b508      	push	{r3, lr}
     3ee:	4b05      	ldr	r3, [pc, #20]	; (404 <CFSR_BUS_IMPRECISE_BIT+0x4>)
     3f0:	6958      	ldr	r0, [r3, #20]
     3f2:	f010 0002 	ands.w	r0, r0, #2
     3f6:	d004      	beq.n	402 <CFSR_BUS_IMPRECISE_BIT+0x2>
     3f8:	f000 ff96 	bl	1328 <__mriPlatform_CommShouldWaitForGdbConnect>
     3fc:	3000      	adds	r0, #0
     3fe:	bf18      	it	ne
     400:	2001      	movne	r0, #1
     402:	bd08      	pop	{r3, pc}
     404:	10000184 	.word	0x10000184

00000408 <__mriCore_RecordControlCFlagSentFromGdb>:
     408:	4b04      	ldr	r3, [pc, #16]	; (41c <__mriCore_RecordControlCFlagSentFromGdb+0x14>)
     40a:	695a      	ldr	r2, [r3, #20]
     40c:	b110      	cbz	r0, 414 <__mriCore_RecordControlCFlagSentFromGdb+0xc>
     40e:	f042 0004 	orr.w	r0, r2, #4
     412:	e001      	b.n	418 <__mriCore_RecordControlCFlagSentFromGdb+0x10>
     414:	f022 0004 	bic.w	r0, r2, #4
     418:	6158      	str	r0, [r3, #20]
     41a:	4770      	bx	lr
     41c:	10000184 	.word	0x10000184

00000420 <__mriCore_WasSemihostCallCancelledByGdb>:
     420:	4b03      	ldr	r3, [pc, #12]	; (430 <__mriCore_WasSemihostCallCancelledByGdb+0x10>)
     422:	69d8      	ldr	r0, [r3, #28]
     424:	1f01      	subs	r1, r0, #4
     426:	424a      	negs	r2, r1
     428:	eb52 0001 	adcs.w	r0, r2, r1
     42c:	4770      	bx	lr
     42e:	bf00      	nop
     430:	10000184 	.word	0x10000184

00000434 <__mriCore_FlagSemihostCallAsHandled>:
     434:	b510      	push	{r4, lr}
     436:	4c06      	ldr	r4, [pc, #24]	; (450 <__mriCore_FlagSemihostCallAsHandled+0x1c>)
     438:	f000 fdac 	bl	f94 <__mriPlatform_AdvanceProgramCounterToNextInstruction>
     43c:	69a0      	ldr	r0, [r4, #24]
     43e:	f000 fe01 	bl	1044 <__mriPlatform_SetSemihostCallReturnValue>
     442:	69a3      	ldr	r3, [r4, #24]
     444:	b113      	cbz	r3, 44c <__mriCore_FlagSemihostCallAsHandled+0x18>
     446:	69e2      	ldr	r2, [r4, #28]
     448:	4802      	ldr	r0, [pc, #8]	; (454 <__mriCore_FlagSemihostCallAsHandled+0x20>)
     44a:	6002      	str	r2, [r0, #0]
     44c:	bd10      	pop	{r4, pc}
     44e:	bf00      	nop
     450:	10000184 	.word	0x10000184
     454:	100004e0 	.word	0x100004e0

00000458 <__mriCore_IsFirstException>:
     458:	4b02      	ldr	r3, [pc, #8]	; (464 <__mriCore_IsFirstException+0xc>)
     45a:	6958      	ldr	r0, [r3, #20]
     45c:	f000 0002 	and.w	r0, r0, #2
     460:	4770      	bx	lr
     462:	bf00      	nop
     464:	10000184 	.word	0x10000184

00000468 <__mriCore_SetSignalValue>:
     468:	4b01      	ldr	r3, [pc, #4]	; (470 <__mriCore_SetSignalValue+0x8>)
     46a:	f883 0020 	strb.w	r0, [r3, #32]
     46e:	4770      	bx	lr
     470:	10000184 	.word	0x10000184

00000474 <__mriCore_GetSignalValue>:
     474:	4b01      	ldr	r3, [pc, #4]	; (47c <__mriCore_GetSignalValue+0x8>)
     476:	f893 0020 	ldrb.w	r0, [r3, #32]
     47a:	4770      	bx	lr
     47c:	10000184 	.word	0x10000184

00000480 <__mriCore_SetSemihostReturnValues>:
     480:	4b01      	ldr	r3, [pc, #4]	; (488 <__mriCore_SetSemihostReturnValues+0x8>)
     482:	6198      	str	r0, [r3, #24]
     484:	61d9      	str	r1, [r3, #28]
     486:	4770      	bx	lr
     488:	10000184 	.word	0x10000184

0000048c <__mriCore_GetSemihostReturnCode>:
     48c:	4b01      	ldr	r3, [pc, #4]	; (494 <__mriCore_GetSemihostReturnCode+0x8>)
     48e:	6998      	ldr	r0, [r3, #24]
     490:	4770      	bx	lr
     492:	bf00      	nop
     494:	10000184 	.word	0x10000184

00000498 <__mriCore_GetBuffer>:
     498:	4800      	ldr	r0, [pc, #0]	; (49c <__mriCore_GetBuffer+0x4>)
     49a:	4770      	bx	lr
     49c:	1000018c 	.word	0x1000018c

000004a0 <__mriCore_GetInitializedBuffer>:
     4a0:	b508      	push	{r3, lr}
     4a2:	f7ff ff7f 	bl	3a4 <__mriCore_InitBuffer>
     4a6:	4801      	ldr	r0, [pc, #4]	; (4ac <__mriCore_GetInitializedBuffer+0xc>)
     4a8:	bd08      	pop	{r3, pc}
     4aa:	bf00      	nop
     4ac:	1000018c 	.word	0x1000018c

000004b0 <__mriCore_SendPacketToGdb>:
     4b0:	b508      	push	{r3, lr}
     4b2:	480a      	ldr	r0, [pc, #40]	; (4dc <__mriCore_SendPacketToGdb+0x2c>)
     4b4:	f001 fbd0 	bl	1c58 <__mriBuffer_OverrunDetected>
     4b8:	b128      	cbz	r0, 4c6 <__mriCore_SendPacketToGdb+0x16>
     4ba:	f7ff ff73 	bl	3a4 <__mriCore_InitBuffer>
     4be:	4807      	ldr	r0, [pc, #28]	; (4dc <__mriCore_SendPacketToGdb+0x2c>)
     4c0:	4907      	ldr	r1, [pc, #28]	; (4e0 <__mriCore_SendPacketToGdb+0x30>)
     4c2:	f001 fc53 	bl	1d6c <__mriBuffer_WriteString>
     4c6:	4805      	ldr	r0, [pc, #20]	; (4dc <__mriCore_SendPacketToGdb+0x2c>)
     4c8:	f001 fba6 	bl	1c18 <__mriBuffer_SetEndOfBuffer>
     4cc:	4805      	ldr	r0, [pc, #20]	; (4e4 <__mriCore_SendPacketToGdb+0x34>)
     4ce:	f100 0108 	add.w	r1, r0, #8
     4d2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
     4d6:	f000 b8f9 	b.w	6cc <__mriPacket_SendToGDB>
     4da:	bf00      	nop
     4dc:	1000018c 	.word	0x1000018c
     4e0:	00003478 	.word	0x00003478
     4e4:	10000184 	.word	0x10000184

000004e8 <__mriCore_GdbCommandHandlingLoop>:
     4e8:	b510      	push	{r4, lr}
     4ea:	f7ff ff5b 	bl	3a4 <__mriCore_InitBuffer>
     4ee:	4812      	ldr	r0, [pc, #72]	; (538 <__mriCore_GdbCommandHandlingLoop+0x50>)
     4f0:	f100 0108 	add.w	r1, r0, #8
     4f4:	f000 f894 	bl	620 <__mriPacket_GetFromGDB>
     4f8:	4810      	ldr	r0, [pc, #64]	; (53c <__mriCore_GdbCommandHandlingLoop+0x54>)
     4fa:	f001 fbc7 	bl	1c8c <__mriBuffer_ReadChar>
     4fe:	2300      	movs	r3, #0
     500:	4a0f      	ldr	r2, [pc, #60]	; (540 <__mriCore_GdbCommandHandlingLoop+0x58>)
     502:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
     506:	790c      	ldrb	r4, [r1, #4]
     508:	4284      	cmp	r4, r0
     50a:	d106      	bne.n	51a <__mriCore_GdbCommandHandlingLoop+0x32>
     50c:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
     510:	4780      	blx	r0
     512:	0782      	lsls	r2, r0, #30
     514:	4604      	mov	r4, r0
     516:	d507      	bpl.n	528 <__mriCore_GdbCommandHandlingLoop+0x40>
     518:	e008      	b.n	52c <__mriCore_GdbCommandHandlingLoop+0x44>
     51a:	3301      	adds	r3, #1
     51c:	2b0c      	cmp	r3, #12
     51e:	d1ef      	bne.n	500 <__mriCore_GdbCommandHandlingLoop+0x18>
     520:	4808      	ldr	r0, [pc, #32]	; (544 <__mriCore_GdbCommandHandlingLoop+0x5c>)
     522:	f7ff ff4f 	bl	3c4 <__mriCore_PrepareStringResponse>
     526:	2400      	movs	r4, #0
     528:	f7ff ffc2 	bl	4b0 <__mriCore_SendPacketToGdb>
     52c:	f004 0401 	and.w	r4, r4, #1
     530:	2c00      	cmp	r4, #0
     532:	d0da      	beq.n	4ea <__mriCore_GdbCommandHandlingLoop+0x2>
     534:	bd10      	pop	{r4, pc}
     536:	bf00      	nop
     538:	10000184 	.word	0x10000184
     53c:	1000018c 	.word	0x1000018c
     540:	0000347c 	.word	0x0000347c
     544:	000034ee 	.word	0x000034ee

00000548 <__mriDebugException>:
     548:	b570      	push	{r4, r5, r6, lr}
     54a:	f7ff ff4f 	bl	3ec <__mriCore_IsWaitingForGdbToConnect>
     54e:	4605      	mov	r5, r0
     550:	f000 fbbe 	bl	cd0 <__mriPlatform_IsSingleStepping>
     554:	4606      	mov	r6, r0
     556:	f000 fecb 	bl	12f0 <__mriPlatform_CommCausedInterrupt>
     55a:	b130      	cbz	r0, 56a <__mriDebugException+0x22>
     55c:	f000 fea4 	bl	12a8 <__mriPlatform_CommHasReceiveData>
     560:	b918      	cbnz	r0, 56a <__mriDebugException+0x22>
     562:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     566:	f000 becf 	b.w	1308 <__mriPlatform_CommClearInterrupt>
     56a:	f3af 8000 	nop.w
     56e:	f7ff ff3d 	bl	3ec <__mriCore_IsWaitingForGdbToConnect>
     572:	b160      	cbz	r0, 58e <__mriDebugException+0x46>
     574:	f000 fee6 	bl	1344 <__mriPlatform_CommIsWaitingForGdbToConnect>
     578:	2800      	cmp	r0, #0
     57a:	d1fb      	bne.n	574 <__mriDebugException+0x2c>
     57c:	f000 fe9e 	bl	12bc <__mriPlatform_CommReceiveChar>
     580:	282b      	cmp	r0, #43	; 0x2b
     582:	d004      	beq.n	58e <__mriDebugException+0x46>
     584:	f001 f84e 	bl	1624 <__mriPlatform_CommWaitForReceiveDataToStop>
     588:	f000 feea 	bl	1360 <__mriPlatform_CommPrepareToWaitForGdbConnection>
     58c:	e7f2      	b.n	574 <__mriDebugException+0x2c>
     58e:	f000 fc27 	bl	de0 <__mriPlatform_EnteringDebugger>
     592:	f000 fbab 	bl	cec <__mriPlatform_DetermineCauseOfException>
     596:	4c13      	ldr	r4, [pc, #76]	; (5e4 <__mriDebugException+0x9c>)
     598:	2805      	cmp	r0, #5
     59a:	f884 0020 	strb.w	r0, [r4, #32]
     59e:	d10f      	bne.n	5c0 <__mriDebugException+0x78>
     5a0:	f001 f8dc 	bl	175c <__mriSemihost_IsDebuggeeMakingSemihostCall>
     5a4:	b160      	cbz	r0, 5c0 <__mriDebugException+0x78>
     5a6:	f001 f8e3 	bl	1770 <__mriSemihost_HandleSemihostRequest>
     5aa:	b148      	cbz	r0, 5c0 <__mriDebugException+0x78>
     5ac:	b946      	cbnz	r6, 5c0 <__mriDebugException+0x78>
     5ae:	f000 fc8f 	bl	ed0 <__mriPlatform_LeavingDebugger>
     5b2:	f3af 8000 	nop.w
     5b6:	6961      	ldr	r1, [r4, #20]
     5b8:	f021 0302 	bic.w	r3, r1, #2
     5bc:	6163      	str	r3, [r4, #20]
     5be:	bd70      	pop	{r4, r5, r6, pc}
     5c0:	b91d      	cbnz	r5, 5ca <__mriDebugException+0x82>
     5c2:	f000 fbc7 	bl	d54 <__mriPlatform_DisplayFaultCauseToGdbConsole>
     5c6:	f002 f8e7 	bl	2798 <__mriCmd_Send_T_StopResponse>
     5ca:	f7ff ff8d 	bl	4e8 <__mriCore_GdbCommandHandlingLoop>
     5ce:	f000 fc7f 	bl	ed0 <__mriPlatform_LeavingDebugger>
     5d2:	f3af 8000 	nop.w
     5d6:	4b03      	ldr	r3, [pc, #12]	; (5e4 <__mriDebugException+0x9c>)
     5d8:	695a      	ldr	r2, [r3, #20]
     5da:	f022 0002 	bic.w	r0, r2, #2
     5de:	6158      	str	r0, [r3, #20]
     5e0:	bd70      	pop	{r4, r5, r6, pc}
     5e2:	bf00      	nop
     5e4:	10000184 	.word	0x10000184

000005e8 <HexCharToNibble>:
     5e8:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
     5ec:	2b05      	cmp	r3, #5
     5ee:	d801      	bhi.n	5f4 <HexCharToNibble+0xc>
     5f0:	3857      	subs	r0, #87	; 0x57
     5f2:	4770      	bx	lr
     5f4:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
     5f8:	2905      	cmp	r1, #5
     5fa:	d801      	bhi.n	600 <HexCharToNibble+0x18>
     5fc:	3837      	subs	r0, #55	; 0x37
     5fe:	4770      	bx	lr
     600:	3830      	subs	r0, #48	; 0x30
     602:	b2c2      	uxtb	r2, r0
     604:	2a09      	cmp	r2, #9
     606:	d907      	bls.n	618 <HexCharToNibble+0x30>
     608:	4804      	ldr	r0, [pc, #16]	; (61c <HexCharToNibble+0x34>)
     60a:	6803      	ldr	r3, [r0, #0]
     60c:	2b02      	cmp	r3, #2
     60e:	bfb8      	it	lt
     610:	2302      	movlt	r3, #2
     612:	6003      	str	r3, [r0, #0]
     614:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     618:	4770      	bx	lr
     61a:	bf00      	nop
     61c:	100001dc 	.word	0x100001dc

00000620 <__mriPacket_GetFromGDB>:
     620:	b538      	push	{r3, r4, r5, lr}
     622:	2208      	movs	r2, #8
     624:	4604      	mov	r4, r0
     626:	460d      	mov	r5, r1
     628:	2100      	movs	r1, #0
     62a:	f002 fec6 	bl	33ba <memset>
     62e:	6025      	str	r5, [r4, #0]
     630:	7925      	ldrb	r5, [r4, #4]
     632:	2d24      	cmp	r5, #36	; 0x24
     634:	d004      	beq.n	640 <__mriPacket_GetFromGDB+0x20>
     636:	f000 fe41 	bl	12bc <__mriPlatform_CommReceiveChar>
     63a:	b2c5      	uxtb	r5, r0
     63c:	7125      	strb	r5, [r4, #4]
     63e:	e7f8      	b.n	632 <__mriPacket_GetFromGDB+0x12>
     640:	6820      	ldr	r0, [r4, #0]
     642:	f001 fae6 	bl	1c12 <__mriBuffer_Reset>
     646:	2300      	movs	r3, #0
     648:	7163      	strb	r3, [r4, #5]
     64a:	f000 fe37 	bl	12bc <__mriPlatform_CommReceiveChar>
     64e:	b2c5      	uxtb	r5, r0
     650:	7125      	strb	r5, [r4, #4]
     652:	6820      	ldr	r0, [r4, #0]
     654:	f001 fae3 	bl	1c1e <__mriBuffer_BytesLeft>
     658:	b158      	cbz	r0, 672 <__mriPacket_GetFromGDB+0x52>
     65a:	2d24      	cmp	r5, #36	; 0x24
     65c:	d0e8      	beq.n	630 <__mriPacket_GetFromGDB+0x10>
     65e:	2d23      	cmp	r5, #35	; 0x23
     660:	d009      	beq.n	676 <__mriPacket_GetFromGDB+0x56>
     662:	7962      	ldrb	r2, [r4, #5]
     664:	6820      	ldr	r0, [r4, #0]
     666:	18a9      	adds	r1, r5, r2
     668:	7161      	strb	r1, [r4, #5]
     66a:	4629      	mov	r1, r5
     66c:	f001 fafc 	bl	1c68 <__mriBuffer_WriteChar>
     670:	e7eb      	b.n	64a <__mriPacket_GetFromGDB+0x2a>
     672:	2d23      	cmp	r5, #35	; 0x23
     674:	d1dc      	bne.n	630 <__mriPacket_GetFromGDB+0x10>
     676:	f000 fe21 	bl	12bc <__mriPlatform_CommReceiveChar>
     67a:	b2c0      	uxtb	r0, r0
     67c:	7120      	strb	r0, [r4, #4]
     67e:	f7ff ffb3 	bl	5e8 <HexCharToNibble>
     682:	4605      	mov	r5, r0
     684:	f000 fe1a 	bl	12bc <__mriPlatform_CommReceiveChar>
     688:	b2c0      	uxtb	r0, r0
     68a:	7120      	strb	r0, [r4, #4]
     68c:	f7ff ffac 	bl	5e8 <HexCharToNibble>
     690:	b2ed      	uxtb	r5, r5
     692:	ea40 1005 	orr.w	r0, r0, r5, lsl #4
     696:	71a0      	strb	r0, [r4, #6]
     698:	f000 fe06 	bl	12a8 <__mriPlatform_CommHasReceiveData>
     69c:	2800      	cmp	r0, #0
     69e:	d1c7      	bne.n	630 <__mriPacket_GetFromGDB+0x10>
     6a0:	79a2      	ldrb	r2, [r4, #6]
     6a2:	7961      	ldrb	r1, [r4, #5]
     6a4:	428a      	cmp	r2, r1
     6a6:	d001      	beq.n	6ac <__mriPacket_GetFromGDB+0x8c>
     6a8:	202d      	movs	r0, #45	; 0x2d
     6aa:	e000      	b.n	6ae <__mriPacket_GetFromGDB+0x8e>
     6ac:	202b      	movs	r0, #43	; 0x2b
     6ae:	f000 fe11 	bl	12d4 <__mriPlatform_CommSendChar>
     6b2:	79a0      	ldrb	r0, [r4, #6]
     6b4:	7963      	ldrb	r3, [r4, #5]
     6b6:	4298      	cmp	r0, r3
     6b8:	d1ba      	bne.n	630 <__mriPacket_GetFromGDB+0x10>
     6ba:	6820      	ldr	r0, [r4, #0]
     6bc:	f001 faac 	bl	1c18 <__mriBuffer_SetEndOfBuffer>
     6c0:	6820      	ldr	r0, [r4, #0]
     6c2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
     6c6:	f001 baa4 	b.w	1c12 <__mriBuffer_Reset>
	...

000006cc <__mriPacket_SendToGDB>:
     6cc:	b570      	push	{r4, r5, r6, lr}
     6ce:	2208      	movs	r2, #8
     6d0:	4604      	mov	r4, r0
     6d2:	460d      	mov	r5, r1
     6d4:	2100      	movs	r1, #0
     6d6:	f002 fe70 	bl	33ba <memset>
     6da:	6025      	str	r5, [r4, #0]
     6dc:	6820      	ldr	r0, [r4, #0]
     6de:	f001 fa98 	bl	1c12 <__mriBuffer_Reset>
     6e2:	2300      	movs	r3, #0
     6e4:	7163      	strb	r3, [r4, #5]
     6e6:	2024      	movs	r0, #36	; 0x24
     6e8:	f000 fdf4 	bl	12d4 <__mriPlatform_CommSendChar>
     6ec:	6820      	ldr	r0, [r4, #0]
     6ee:	f001 fa96 	bl	1c1e <__mriBuffer_BytesLeft>
     6f2:	b148      	cbz	r0, 708 <__mriPacket_SendToGDB+0x3c>
     6f4:	6820      	ldr	r0, [r4, #0]
     6f6:	f001 fac9 	bl	1c8c <__mriBuffer_ReadChar>
     6fa:	4605      	mov	r5, r0
     6fc:	f000 fdea 	bl	12d4 <__mriPlatform_CommSendChar>
     700:	7963      	ldrb	r3, [r4, #5]
     702:	18ee      	adds	r6, r5, r3
     704:	7166      	strb	r6, [r4, #5]
     706:	e7f1      	b.n	6ec <__mriPacket_SendToGDB+0x20>
     708:	2023      	movs	r0, #35	; 0x23
     70a:	f000 fde3 	bl	12d4 <__mriPlatform_CommSendChar>
     70e:	7966      	ldrb	r6, [r4, #5]
     710:	4d0a      	ldr	r5, [pc, #40]	; (73c <__mriPacket_SendToGDB+0x70>)
     712:	0930      	lsrs	r0, r6, #4
     714:	5c28      	ldrb	r0, [r5, r0]
     716:	f006 060f 	and.w	r6, r6, #15
     71a:	f000 fddb 	bl	12d4 <__mriPlatform_CommSendChar>
     71e:	5da8      	ldrb	r0, [r5, r6]
     720:	f000 fdd8 	bl	12d4 <__mriPlatform_CommSendChar>
     724:	f000 fdca 	bl	12bc <__mriPlatform_CommReceiveChar>
     728:	b2c1      	uxtb	r1, r0
     72a:	2903      	cmp	r1, #3
     72c:	7120      	strb	r0, [r4, #4]
     72e:	d0f9      	beq.n	724 <__mriPacket_SendToGDB+0x58>
     730:	b2ca      	uxtb	r2, r1
     732:	2a2b      	cmp	r2, #43	; 0x2b
     734:	d001      	beq.n	73a <__mriPacket_SendToGDB+0x6e>
     736:	2a24      	cmp	r2, #36	; 0x24
     738:	d1d0      	bne.n	6dc <__mriPacket_SendToGDB+0x10>
     73a:	bd70      	pop	{r4, r5, r6, pc}
     73c:	000034dc 	.word	0x000034dc

00000740 <clearTokenObject>:
     740:	b510      	push	{r4, lr}
     742:	2100      	movs	r1, #0
     744:	2228      	movs	r2, #40	; 0x28
     746:	4604      	mov	r4, r0
     748:	f002 fe37 	bl	33ba <memset>
     74c:	2300      	movs	r3, #0
     74e:	62e3      	str	r3, [r4, #44]	; 0x2c
     750:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
     754:	bd10      	pop	{r4, pc}
	...

00000758 <__mriToken_Init>:
     758:	b510      	push	{r4, lr}
     75a:	4604      	mov	r4, r0
     75c:	f7ff fff0 	bl	740 <clearTokenObject>
     760:	4b01      	ldr	r3, [pc, #4]	; (768 <__mriToken_Init+0x10>)
     762:	62a3      	str	r3, [r4, #40]	; 0x28
     764:	bd10      	pop	{r4, pc}
     766:	bf00      	nop
     768:	000034ec 	.word	0x000034ec

0000076c <__mriToken_SplitString>:
     76c:	4b2b      	ldr	r3, [pc, #172]	; (81c <Heap_Size+0x1c>)
     76e:	b570      	push	{r4, r5, r6, lr}
     770:	2200      	movs	r2, #0
     772:	4604      	mov	r4, r0
     774:	460d      	mov	r5, r1
     776:	601a      	str	r2, [r3, #0]
     778:	f7ff ffe2 	bl	740 <clearTokenObject>
     77c:	f104 0330 	add.w	r3, r4, #48	; 0x30
     780:	4629      	mov	r1, r5
     782:	461a      	mov	r2, r3
     784:	f105 0640 	add.w	r6, r5, #64	; 0x40
     788:	4608      	mov	r0, r1
     78a:	f811 5b01 	ldrb.w	r5, [r1], #1
     78e:	b125      	cbz	r5, 79a <__mriToken_SplitString+0x2e>
     790:	42b1      	cmp	r1, r6
     792:	f802 5b01 	strb.w	r5, [r2], #1
     796:	4608      	mov	r0, r1
     798:	d1f6      	bne.n	788 <__mriToken_SplitString+0x1c>
     79a:	2100      	movs	r1, #0
     79c:	7011      	strb	r1, [r2, #0]
     79e:	7800      	ldrb	r0, [r0, #0]
     7a0:	4a1e      	ldr	r2, [pc, #120]	; (81c <Heap_Size+0x1c>)
     7a2:	b120      	cbz	r0, 7ae <__mriToken_SplitString+0x42>
     7a4:	6811      	ldr	r1, [r2, #0]
     7a6:	2901      	cmp	r1, #1
     7a8:	bfb8      	it	lt
     7aa:	2101      	movlt	r1, #1
     7ac:	6011      	str	r1, [r2, #0]
     7ae:	6810      	ldr	r0, [r2, #0]
     7b0:	2800      	cmp	r0, #0
     7b2:	d132      	bne.n	81a <Heap_Size+0x1a>
     7b4:	781a      	ldrb	r2, [r3, #0]
     7b6:	2a00      	cmp	r2, #0
     7b8:	d02f      	beq.n	81a <Heap_Size+0x1a>
     7ba:	461a      	mov	r2, r3
     7bc:	f813 5b01 	ldrb.w	r5, [r3], #1
     7c0:	b92d      	cbnz	r5, 7ce <__mriToken_SplitString+0x62>
     7c2:	4b16      	ldr	r3, [pc, #88]	; (81c <Heap_Size+0x1c>)
     7c4:	2000      	movs	r0, #0
     7c6:	6018      	str	r0, [r3, #0]
     7c8:	7811      	ldrb	r1, [r2, #0]
     7ca:	b949      	cbnz	r1, 7e0 <__mriToken_SplitString+0x74>
     7cc:	e012      	b.n	7f4 <__mriToken_SplitString+0x88>
     7ce:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     7d0:	1e48      	subs	r0, r1, #1
     7d2:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     7d6:	2900      	cmp	r1, #0
     7d8:	d0f3      	beq.n	7c2 <__mriToken_SplitString+0x56>
     7da:	428d      	cmp	r5, r1
     7dc:	d1f9      	bne.n	7d2 <__mriToken_SplitString+0x66>
     7de:	e7ec      	b.n	7ba <__mriToken_SplitString+0x4e>
     7e0:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
     7e2:	2809      	cmp	r0, #9
     7e4:	d902      	bls.n	7ec <__mriToken_SplitString+0x80>
     7e6:	2001      	movs	r0, #1
     7e8:	6018      	str	r0, [r3, #0]
     7ea:	e003      	b.n	7f4 <__mriToken_SplitString+0x88>
     7ec:	1c41      	adds	r1, r0, #1
     7ee:	f844 2020 	str.w	r2, [r4, r0, lsl #2]
     7f2:	62e1      	str	r1, [r4, #44]	; 0x2c
     7f4:	681b      	ldr	r3, [r3, #0]
     7f6:	b983      	cbnz	r3, 81a <Heap_Size+0x1a>
     7f8:	4613      	mov	r3, r2
     7fa:	f812 5b01 	ldrb.w	r5, [r2], #1
     7fe:	2d00      	cmp	r5, #0
     800:	d0d8      	beq.n	7b4 <__mriToken_SplitString+0x48>
     802:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     804:	1e48      	subs	r0, r1, #1
     806:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     80a:	2900      	cmp	r1, #0
     80c:	d0f4      	beq.n	7f8 <__mriToken_SplitString+0x8c>
     80e:	428d      	cmp	r5, r1
     810:	d1f9      	bne.n	806 <Heap_Size+0x6>
     812:	2100      	movs	r1, #0
     814:	f803 1b01 	strb.w	r1, [r3], #1
     818:	e7cc      	b.n	7b4 <__mriToken_SplitString+0x48>
     81a:	bd70      	pop	{r4, r5, r6, pc}
     81c:	100001dc 	.word	0x100001dc

00000820 <__mriToken_MatchingString>:
     820:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     824:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     826:	4606      	mov	r6, r0
     828:	4688      	mov	r8, r1
     82a:	2400      	movs	r4, #0
     82c:	42bc      	cmp	r4, r7
     82e:	d008      	beq.n	842 <__mriToken_MatchingString+0x22>
     830:	f856 5024 	ldr.w	r5, [r6, r4, lsl #2]
     834:	4641      	mov	r1, r8
     836:	4628      	mov	r0, r5
     838:	f002 fdc7 	bl	33ca <strcmp>
     83c:	b110      	cbz	r0, 844 <__mriToken_MatchingString+0x24>
     83e:	3401      	adds	r4, #1
     840:	e7f4      	b.n	82c <__mriToken_MatchingString+0xc>
     842:	2500      	movs	r5, #0
     844:	4628      	mov	r0, r5
     846:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000084a <__mriToken_MatchingStringPrefix>:
     84a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     84e:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     850:	4606      	mov	r6, r0
     852:	4688      	mov	r8, r1
     854:	2500      	movs	r5, #0
     856:	42bd      	cmp	r5, r7
     858:	d009      	beq.n	86e <__mriToken_MatchingStringPrefix+0x24>
     85a:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
     85e:	4641      	mov	r1, r8
     860:	4620      	mov	r0, r4
     862:	f002 fddc 	bl	341e <strstr>
     866:	4284      	cmp	r4, r0
     868:	d002      	beq.n	870 <__mriToken_MatchingStringPrefix+0x26>
     86a:	3501      	adds	r5, #1
     86c:	e7f3      	b.n	856 <__mriToken_MatchingStringPrefix+0xc>
     86e:	2400      	movs	r4, #0
     870:	4620      	mov	r0, r4
     872:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

00000878 <findDWTComparator>:
     878:	4b12      	ldr	r3, [pc, #72]	; (8c4 <findDWTComparator+0x4c>)
     87a:	b5f0      	push	{r4, r5, r6, r7, lr}
     87c:	681f      	ldr	r7, [r3, #0]
     87e:	4606      	mov	r6, r0
     880:	0f3f      	lsrs	r7, r7, #28
     882:	2300      	movs	r3, #0
     884:	f103 6060 	add.w	r0, r3, #234881024	; 0xe000000
     888:	f500 7081 	add.w	r0, r0, #258	; 0x102
     88c:	0100      	lsls	r0, r0, #4
     88e:	42bb      	cmp	r3, r7
     890:	d013      	beq.n	8ba <findDWTComparator+0x42>
     892:	6885      	ldr	r5, [r0, #8]
     894:	4c0c      	ldr	r4, [pc, #48]	; (8c8 <findDWTComparator+0x50>)
     896:	402c      	ands	r4, r5
     898:	4294      	cmp	r4, r2
     89a:	d110      	bne.n	8be <findDWTComparator+0x46>
     89c:	6804      	ldr	r4, [r0, #0]
     89e:	42b4      	cmp	r4, r6
     8a0:	d10d      	bne.n	8be <findDWTComparator+0x46>
     8a2:	f8d0 c004 	ldr.w	r12, [r0, #4]
     8a6:	460d      	mov	r5, r1
     8a8:	2400      	movs	r4, #0
     8aa:	2d01      	cmp	r5, #1
     8ac:	d902      	bls.n	8b4 <findDWTComparator+0x3c>
     8ae:	086d      	lsrs	r5, r5, #1
     8b0:	3401      	adds	r4, #1
     8b2:	e7fa      	b.n	8aa <findDWTComparator+0x32>
     8b4:	45a4      	cmp	r12, r4
     8b6:	d102      	bne.n	8be <findDWTComparator+0x46>
     8b8:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8ba:	2000      	movs	r0, #0
     8bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8be:	3301      	adds	r3, #1
     8c0:	e7e0      	b.n	884 <findDWTComparator+0xc>
     8c2:	bf00      	nop
     8c4:	e0001000 	.word	0xe0001000
     8c8:	000ffdaf 	.word	0x000ffdaf

000008cc <getFPBCodeComparatorCount>:
     8cc:	4b04      	ldr	r3, [pc, #16]	; (8e0 <getFPBCodeComparatorCount+0x14>)
     8ce:	6819      	ldr	r1, [r3, #0]
     8d0:	f3c1 1003 	ubfx	r0, r1, #4, #4
     8d4:	f401 42e0 	and.w	r2, r1, #28672	; 0x7000
     8d8:	ea40 2012 	orr.w	r0, r0, r2, lsr #8
     8dc:	4770      	bx	lr
     8de:	bf00      	nop
     8e0:	e0002000 	.word	0xe0002000

000008e4 <prepareToAccessMPURegion>:
     8e4:	4b05      	ldr	r3, [pc, #20]	; (8fc <prepareToAccessMPURegion+0x18>)
     8e6:	681a      	ldr	r2, [r3, #0]
     8e8:	f3c2 2107 	ubfx	r1, r2, #8, #8
     8ec:	4288      	cmp	r0, r1
     8ee:	d202      	bcs.n	8f6 <prepareToAccessMPURegion+0x12>
     8f0:	6098      	str	r0, [r3, #8]
     8f2:	2001      	movs	r0, #1
     8f4:	4770      	bx	lr
     8f6:	2000      	movs	r0, #0
     8f8:	4770      	bx	lr
     8fa:	bf00      	nop
     8fc:	e000ed90 	.word	0xe000ed90

00000900 <displayMemFaultCauseToGdbConsole>:
     900:	b570      	push	{r4, r5, r6, lr}
     902:	4d1e      	ldr	r5, [pc, #120]	; (97c <displayMemFaultCauseToGdbConsole+0x7c>)
     904:	6aac      	ldr	r4, [r5, #40]	; 0x28
     906:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     90a:	d035      	beq.n	978 <displayMemFaultCauseToGdbConsole+0x78>
     90c:	481c      	ldr	r0, [pc, #112]	; (980 <displayMemFaultCauseToGdbConsole+0x80>)
     90e:	f001 ff82 	bl	2816 <__mriGdbConsole_WriteString>
     912:	481c      	ldr	r0, [pc, #112]	; (984 <displayMemFaultCauseToGdbConsole+0x84>)
     914:	f001 ff7f 	bl	2816 <__mriGdbConsole_WriteString>
     918:	4630      	mov	r0, r6
     91a:	f001 ffa3 	bl	2864 <__mriGdbConsole_WriteHexValue>
     91e:	0622      	lsls	r2, r4, #24
     920:	d505      	bpl.n	92e <displayMemFaultCauseToGdbConsole+0x2e>
     922:	4819      	ldr	r0, [pc, #100]	; (988 <displayMemFaultCauseToGdbConsole+0x88>)
     924:	f001 ff77 	bl	2816 <__mriGdbConsole_WriteString>
     928:	6b68      	ldr	r0, [r5, #52]	; 0x34
     92a:	f001 ff9b 	bl	2864 <__mriGdbConsole_WriteHexValue>
     92e:	06a3      	lsls	r3, r4, #26
     930:	d502      	bpl.n	938 <displayMemFaultCauseToGdbConsole+0x38>
     932:	4816      	ldr	r0, [pc, #88]	; (98c <displayMemFaultCauseToGdbConsole+0x8c>)
     934:	f001 ff6f 	bl	2816 <__mriGdbConsole_WriteString>
     938:	06e0      	lsls	r0, r4, #27
     93a:	d507      	bpl.n	94c <displayMemFaultCauseToGdbConsole+0x4c>
     93c:	4814      	ldr	r0, [pc, #80]	; (990 <displayMemFaultCauseToGdbConsole+0x90>)
     93e:	f001 ff6a 	bl	2816 <__mriGdbConsole_WriteString>
     942:	4b14      	ldr	r3, [pc, #80]	; (994 <displayMemFaultCauseToGdbConsole+0x94>)
     944:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     948:	f001 ff8c 	bl	2864 <__mriGdbConsole_WriteHexValue>
     94c:	0721      	lsls	r1, r4, #28
     94e:	d507      	bpl.n	960 <displayMemFaultCauseToGdbConsole+0x60>
     950:	4811      	ldr	r0, [pc, #68]	; (998 <displayMemFaultCauseToGdbConsole+0x98>)
     952:	f001 ff60 	bl	2816 <__mriGdbConsole_WriteString>
     956:	480f      	ldr	r0, [pc, #60]	; (994 <displayMemFaultCauseToGdbConsole+0x94>)
     958:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     95c:	f001 ff82 	bl	2864 <__mriGdbConsole_WriteHexValue>
     960:	07a2      	lsls	r2, r4, #30
     962:	d502      	bpl.n	96a <displayMemFaultCauseToGdbConsole+0x6a>
     964:	480d      	ldr	r0, [pc, #52]	; (99c <displayMemFaultCauseToGdbConsole+0x9c>)
     966:	f001 ff56 	bl	2816 <__mriGdbConsole_WriteString>
     96a:	07e3      	lsls	r3, r4, #31
     96c:	d504      	bpl.n	978 <displayMemFaultCauseToGdbConsole+0x78>
     96e:	480c      	ldr	r0, [pc, #48]	; (9a0 <displayMemFaultCauseToGdbConsole+0xa0>)
     970:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     974:	f001 bf4f 	b.w	2816 <__mriGdbConsole_WriteString>
     978:	bd70      	pop	{r4, r5, r6, pc}
     97a:	bf00      	nop
     97c:	e000ed00 	.word	0xe000ed00
     980:	000037ef 	.word	0x000037ef
     984:	000037fe 	.word	0x000037fe
     988:	00003813 	.word	0x00003813
     98c:	00003828 	.word	0x00003828
     990:	00003842 	.word	0x00003842
     994:	100001e0 	.word	0x100001e0
     998:	0000385f 	.word	0x0000385f
     99c:	0000387e 	.word	0x0000387e
     9a0:	0000388f 	.word	0x0000388f

000009a4 <displayBusFaultCauseToGdbConsole>:
     9a4:	b570      	push	{r4, r5, r6, lr}
     9a6:	4d21      	ldr	r5, [pc, #132]	; (a2c <displayBusFaultCauseToGdbConsole+0x88>)
     9a8:	6aac      	ldr	r4, [r5, #40]	; 0x28
     9aa:	0a24      	lsrs	r4, r4, #8
     9ac:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     9b0:	d03a      	beq.n	a28 <displayBusFaultCauseToGdbConsole+0x84>
     9b2:	481f      	ldr	r0, [pc, #124]	; (a30 <displayBusFaultCauseToGdbConsole+0x8c>)
     9b4:	f001 ff2f 	bl	2816 <__mriGdbConsole_WriteString>
     9b8:	481e      	ldr	r0, [pc, #120]	; (a34 <displayBusFaultCauseToGdbConsole+0x90>)
     9ba:	f001 ff2c 	bl	2816 <__mriGdbConsole_WriteString>
     9be:	4630      	mov	r0, r6
     9c0:	f001 ff50 	bl	2864 <__mriGdbConsole_WriteHexValue>
     9c4:	0623      	lsls	r3, r4, #24
     9c6:	d505      	bpl.n	9d4 <displayBusFaultCauseToGdbConsole+0x30>
     9c8:	481b      	ldr	r0, [pc, #108]	; (a38 <displayBusFaultCauseToGdbConsole+0x94>)
     9ca:	f001 ff24 	bl	2816 <__mriGdbConsole_WriteString>
     9ce:	6ba8      	ldr	r0, [r5, #56]	; 0x38
     9d0:	f001 ff48 	bl	2864 <__mriGdbConsole_WriteHexValue>
     9d4:	06a0      	lsls	r0, r4, #26
     9d6:	d502      	bpl.n	9de <displayBusFaultCauseToGdbConsole+0x3a>
     9d8:	4818      	ldr	r0, [pc, #96]	; (a3c <displayBusFaultCauseToGdbConsole+0x98>)
     9da:	f001 ff1c 	bl	2816 <__mriGdbConsole_WriteString>
     9de:	06e1      	lsls	r1, r4, #27
     9e0:	d507      	bpl.n	9f2 <displayBusFaultCauseToGdbConsole+0x4e>
     9e2:	4817      	ldr	r0, [pc, #92]	; (a40 <displayBusFaultCauseToGdbConsole+0x9c>)
     9e4:	f001 ff17 	bl	2816 <__mriGdbConsole_WriteString>
     9e8:	4b16      	ldr	r3, [pc, #88]	; (a44 <displayBusFaultCauseToGdbConsole+0xa0>)
     9ea:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     9ee:	f001 ff39 	bl	2864 <__mriGdbConsole_WriteHexValue>
     9f2:	0722      	lsls	r2, r4, #28
     9f4:	d507      	bpl.n	a06 <displayBusFaultCauseToGdbConsole+0x62>
     9f6:	4814      	ldr	r0, [pc, #80]	; (a48 <displayBusFaultCauseToGdbConsole+0xa4>)
     9f8:	f001 ff0d 	bl	2816 <__mriGdbConsole_WriteString>
     9fc:	4811      	ldr	r0, [pc, #68]	; (a44 <displayBusFaultCauseToGdbConsole+0xa0>)
     9fe:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     a02:	f001 ff2f 	bl	2864 <__mriGdbConsole_WriteHexValue>
     a06:	0763      	lsls	r3, r4, #29
     a08:	d502      	bpl.n	a10 <displayBusFaultCauseToGdbConsole+0x6c>
     a0a:	4810      	ldr	r0, [pc, #64]	; (a4c <displayBusFaultCauseToGdbConsole+0xa8>)
     a0c:	f001 ff03 	bl	2816 <__mriGdbConsole_WriteString>
     a10:	07a0      	lsls	r0, r4, #30
     a12:	d502      	bpl.n	a1a <displayBusFaultCauseToGdbConsole+0x76>
     a14:	480e      	ldr	r0, [pc, #56]	; (a50 <displayBusFaultCauseToGdbConsole+0xac>)
     a16:	f001 fefe 	bl	2816 <__mriGdbConsole_WriteString>
     a1a:	07e1      	lsls	r1, r4, #31
     a1c:	d504      	bpl.n	a28 <displayBusFaultCauseToGdbConsole+0x84>
     a1e:	480d      	ldr	r0, [pc, #52]	; (a54 <displayBusFaultCauseToGdbConsole+0xb0>)
     a20:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     a24:	f001 bef7 	b.w	2816 <__mriGdbConsole_WriteString>
     a28:	bd70      	pop	{r4, r5, r6, pc}
     a2a:	bf00      	nop
     a2c:	e000ed00 	.word	0xe000ed00
     a30:	000038a6 	.word	0x000038a6
     a34:	000037fe 	.word	0x000037fe
     a38:	00003813 	.word	0x00003813
     a3c:	00003828 	.word	0x00003828
     a40:	00003842 	.word	0x00003842
     a44:	100001e0 	.word	0x100001e0
     a48:	0000385f 	.word	0x0000385f
     a4c:	000038b5 	.word	0x000038b5
     a50:	000038d0 	.word	0x000038d0
     a54:	000038e9 	.word	0x000038e9

00000a58 <displayUsageFaultCauseToGdbConsole>:
     a58:	4b17      	ldr	r3, [pc, #92]	; (ab8 <displayUsageFaultCauseToGdbConsole+0x60>)
     a5a:	b510      	push	{r4, lr}
     a5c:	6a9c      	ldr	r4, [r3, #40]	; 0x28
     a5e:	0c24      	lsrs	r4, r4, #16
     a60:	d028      	beq.n	ab4 <displayUsageFaultCauseToGdbConsole+0x5c>
     a62:	4816      	ldr	r0, [pc, #88]	; (abc <displayUsageFaultCauseToGdbConsole+0x64>)
     a64:	f001 fed7 	bl	2816 <__mriGdbConsole_WriteString>
     a68:	4815      	ldr	r0, [pc, #84]	; (ac0 <displayUsageFaultCauseToGdbConsole+0x68>)
     a6a:	f001 fed4 	bl	2816 <__mriGdbConsole_WriteString>
     a6e:	4620      	mov	r0, r4
     a70:	f001 fef8 	bl	2864 <__mriGdbConsole_WriteHexValue>
     a74:	05a1      	lsls	r1, r4, #22
     a76:	d502      	bpl.n	a7e <displayUsageFaultCauseToGdbConsole+0x26>
     a78:	4812      	ldr	r0, [pc, #72]	; (ac4 <displayUsageFaultCauseToGdbConsole+0x6c>)
     a7a:	f001 fecc 	bl	2816 <__mriGdbConsole_WriteString>
     a7e:	05e2      	lsls	r2, r4, #23
     a80:	d502      	bpl.n	a88 <displayUsageFaultCauseToGdbConsole+0x30>
     a82:	4811      	ldr	r0, [pc, #68]	; (ac8 <displayUsageFaultCauseToGdbConsole+0x70>)
     a84:	f001 fec7 	bl	2816 <__mriGdbConsole_WriteString>
     a88:	0723      	lsls	r3, r4, #28
     a8a:	d502      	bpl.n	a92 <displayUsageFaultCauseToGdbConsole+0x3a>
     a8c:	480f      	ldr	r0, [pc, #60]	; (acc <displayUsageFaultCauseToGdbConsole+0x74>)
     a8e:	f001 fec2 	bl	2816 <__mriGdbConsole_WriteString>
     a92:	0760      	lsls	r0, r4, #29
     a94:	d502      	bpl.n	a9c <displayUsageFaultCauseToGdbConsole+0x44>
     a96:	480e      	ldr	r0, [pc, #56]	; (ad0 <displayUsageFaultCauseToGdbConsole+0x78>)
     a98:	f001 febd 	bl	2816 <__mriGdbConsole_WriteString>
     a9c:	07a1      	lsls	r1, r4, #30
     a9e:	d502      	bpl.n	aa6 <displayUsageFaultCauseToGdbConsole+0x4e>
     aa0:	480c      	ldr	r0, [pc, #48]	; (ad4 <displayUsageFaultCauseToGdbConsole+0x7c>)
     aa2:	f001 feb8 	bl	2816 <__mriGdbConsole_WriteString>
     aa6:	07e2      	lsls	r2, r4, #31
     aa8:	d504      	bpl.n	ab4 <displayUsageFaultCauseToGdbConsole+0x5c>
     aaa:	480b      	ldr	r0, [pc, #44]	; (ad8 <displayUsageFaultCauseToGdbConsole+0x80>)
     aac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     ab0:	f001 beb1 	b.w	2816 <__mriGdbConsole_WriteString>
     ab4:	bd10      	pop	{r4, pc}
     ab6:	bf00      	nop
     ab8:	e000ed00 	.word	0xe000ed00
     abc:	00003903 	.word	0x00003903
     ac0:	000037fe 	.word	0x000037fe
     ac4:	00003914 	.word	0x00003914
     ac8:	00003928 	.word	0x00003928
     acc:	0000393e 	.word	0x0000393e
     ad0:	00003956 	.word	0x00003956
     ad4:	0000397a 	.word	0x0000397a
     ad8:	0000398d 	.word	0x0000398d

00000adc <calculateFPBComparatorValue>:
     adc:	4b0c      	ldr	r3, [pc, #48]	; (b10 <calculateFPBComparatorValue+0x34>)
     ade:	4003      	ands	r3, r0
     ae0:	b113      	cbz	r3, ae8 <calculateFPBComparatorValue+0xc>
     ae2:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     ae6:	4770      	bx	lr
     ae8:	f020 4260 	bic.w	r2, r0, #3758096384	; 0xe0000000
     aec:	f022 0303 	bic.w	r3, r2, #3
     af0:	f043 0201 	orr.w	r2, r3, #1
     af4:	b939      	cbnz	r1, b06 <calculateFPBComparatorValue+0x2a>
     af6:	f010 0f02 	tst.w	r0, #2
     afa:	bf0c      	ite	eq
     afc:	f04f 4080 	moveq.w	r0, #1073741824	; 0x40000000
     b00:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
     b04:	e001      	b.n	b0a <calculateFPBComparatorValue+0x2e>
     b06:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
     b0a:	4310      	orrs	r0, r2
     b0c:	4770      	bx	lr
     b0e:	bf00      	nop
     b10:	e0000001 	.word	0xe0000001

00000b14 <findFPBBreakpointComparator>:
     b14:	b538      	push	{r3, r4, r5, lr}
     b16:	f7ff ffe1 	bl	adc <calculateFPBComparatorValue>
     b1a:	4604      	mov	r4, r0
     b1c:	f7ff fed6 	bl	8cc <getFPBCodeComparatorCount>
     b20:	4a08      	ldr	r2, [pc, #32]	; (b44 <findFPBBreakpointComparator+0x30>)
     b22:	2300      	movs	r3, #0
     b24:	4283      	cmp	r3, r0
     b26:	4611      	mov	r1, r2
     b28:	d009      	beq.n	b3e <findFPBBreakpointComparator+0x2a>
     b2a:	f852 5b04 	ldr.w	r5, [r2], #4
     b2e:	f025 5500 	bic.w	r5, r5, #536870912	; 0x20000000
     b32:	f025 0502 	bic.w	r5, r5, #2
     b36:	42ac      	cmp	r4, r5
     b38:	d002      	beq.n	b40 <findFPBBreakpointComparator+0x2c>
     b3a:	3301      	adds	r3, #1
     b3c:	e7f2      	b.n	b24 <findFPBBreakpointComparator+0x10>
     b3e:	2100      	movs	r1, #0
     b40:	4608      	mov	r0, r1
     b42:	bd38      	pop	{r3, r4, r5, pc}
     b44:	e0002008 	.word	0xe0002008

00000b48 <isMPUNotPresent>:
     b48:	4b04      	ldr	r3, [pc, #16]	; (b5c <isMPUNotPresent+0x14>)
     b4a:	6818      	ldr	r0, [r3, #0]
     b4c:	f3c0 2107 	ubfx	r1, r0, #8, #8
     b50:	f1d1 0001 	rsbs	r0, r1, #1
     b54:	bf38      	it	cc
     b56:	2000      	movcc	r0, #0
     b58:	4770      	bx	lr
     b5a:	bf00      	nop
     b5c:	e000ed90 	.word	0xe000ed90

00000b60 <sendRegisterForTResponse>:
     b60:	b573      	push	{r0, r1, r4, r5, r6, lr}
     b62:	4604      	mov	r4, r0
     b64:	ad02      	add	r5, sp, #8
     b66:	f845 2d04 	str.w	r2, [r5, #-4]!
     b6a:	f001 f8a3 	bl	1cb4 <__mriBuffer_WriteByteAsHex>
     b6e:	4620      	mov	r0, r4
     b70:	213a      	movs	r1, #58	; 0x3a
     b72:	f001 f879 	bl	1c68 <__mriBuffer_WriteChar>
     b76:	3d01      	subs	r5, #1
     b78:	f10d 0607 	add.w	r6, sp, #7
     b7c:	f815 1f01 	ldrb.w	r1, [r5, #1]!
     b80:	4620      	mov	r0, r4
     b82:	f001 f897 	bl	1cb4 <__mriBuffer_WriteByteAsHex>
     b86:	42b5      	cmp	r5, r6
     b88:	d1f8      	bne.n	b7c <sendRegisterForTResponse+0x1c>
     b8a:	4620      	mov	r0, r4
     b8c:	213b      	movs	r1, #59	; 0x3b
     b8e:	f001 f86b 	bl	1c68 <__mriBuffer_WriteChar>
     b92:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

00000b94 <__mriPlatform_DisableSingleStep>:
     b94:	4b06      	ldr	r3, [pc, #24]	; (bb0 <__mriPlatform_DisableSingleStep+0x1c>)
     b96:	4907      	ldr	r1, [pc, #28]	; (bb4 <__mriPlatform_DisableSingleStep+0x20>)
     b98:	68da      	ldr	r2, [r3, #12]
     b9a:	f422 2080 	bic.w	r0, r2, #262144	; 0x40000
     b9e:	60d8      	str	r0, [r3, #12]
     ba0:	f8d1 3200 	ldr.w	r3, [r1, #512]	; 0x200
     ba4:	f023 0204 	bic.w	r2, r3, #4
     ba8:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
     bac:	4770      	bx	lr
     bae:	bf00      	nop
     bb0:	e000edf0 	.word	0xe000edf0
     bb4:	100001e0 	.word	0x100001e0

00000bb8 <__mriCortexMInit>:
     bb8:	b510      	push	{r4, lr}
     bba:	2100      	movs	r1, #0
     bbc:	f44f 723e 	mov.w	r2, #760	; 0x2f8
     bc0:	4823      	ldr	r0, [pc, #140]	; (c50 <Stack_Size+0x50>)
     bc2:	f002 fbfa 	bl	33ba <memset>
     bc6:	4b23      	ldr	r3, [pc, #140]	; (c54 <Stack_Size+0x54>)
     bc8:	4923      	ldr	r1, [pc, #140]	; (c58 <Stack_Size+0x58>)
     bca:	68da      	ldr	r2, [r3, #12]
     bcc:	f042 7080 	orr.w	r0, r2, #16777216	; 0x1000000
     bd0:	60d8      	str	r0, [r3, #12]
     bd2:	680c      	ldr	r4, [r1, #0]
     bd4:	2300      	movs	r3, #0
     bd6:	0f20      	lsrs	r0, r4, #28
     bd8:	f103 6260 	add.w	r2, r3, #234881024	; 0xe000000
     bdc:	f502 7181 	add.w	r1, r2, #258	; 0x102
     be0:	010c      	lsls	r4, r1, #4
     be2:	4283      	cmp	r3, r0
     be4:	d00a      	beq.n	bfc <__mriCortexMInit+0x44>
     be6:	2100      	movs	r1, #0
     be8:	6021      	str	r1, [r4, #0]
     bea:	6061      	str	r1, [r4, #4]
     bec:	68a2      	ldr	r2, [r4, #8]
     bee:	3301      	adds	r3, #1
     bf0:	f422 71d7 	bic.w	r1, r2, #430	; 0x1ae
     bf4:	f021 0201 	bic.w	r2, r1, #1
     bf8:	60a2      	str	r2, [r4, #8]
     bfa:	e7ed      	b.n	bd8 <__mriCortexMInit+0x20>
     bfc:	f7ff fe66 	bl	8cc <getFPBCodeComparatorCount>
     c00:	4a16      	ldr	r2, [pc, #88]	; (c5c <Stack_Size+0x5c>)
     c02:	6813      	ldr	r3, [r2, #0]
     c04:	f3c3 2103 	ubfx	r1, r3, #8, #4
     c08:	1840      	adds	r0, r0, r1
     c0a:	4915      	ldr	r1, [pc, #84]	; (c60 <Stack_Size+0x60>)
     c0c:	2300      	movs	r3, #0
     c0e:	4283      	cmp	r3, r0
     c10:	d004      	beq.n	c1c <Stack_Size+0x1c>
     c12:	2400      	movs	r4, #0
     c14:	f841 4b04 	str.w	r4, [r1], #4
     c18:	3301      	adds	r3, #1
     c1a:	e7f8      	b.n	c0e <Stack_Size+0xe>
     c1c:	6810      	ldr	r0, [r2, #0]
     c1e:	f040 0403 	orr.w	r4, r0, #3
     c22:	6014      	str	r4, [r2, #0]
     c24:	4c0f      	ldr	r4, [pc, #60]	; (c64 <Stack_Size+0x64>)
     c26:	2208      	movs	r2, #8
     c28:	77e2      	strb	r2, [r4, #31]
     c2a:	f884 2022 	strb.w	r2, [r4, #34]	; 0x22
     c2e:	f884 2023 	strb.w	r2, [r4, #35]	; 0x23
     c32:	f7ff ffaf 	bl	b94 <__mriPlatform_DisableSingleStep>
     c36:	4b07      	ldr	r3, [pc, #28]	; (c54 <Stack_Size+0x54>)
     c38:	2200      	movs	r2, #0
     c3a:	68d9      	ldr	r1, [r3, #12]
     c3c:	f421 3000 	bic.w	r0, r1, #131072	; 0x20000
     c40:	60d8      	str	r0, [r3, #12]
     c42:	f884 2020 	strb.w	r2, [r4, #32]
     c46:	68d9      	ldr	r1, [r3, #12]
     c48:	f441 3080 	orr.w	r0, r1, #65536	; 0x10000
     c4c:	60d8      	str	r0, [r3, #12]
     c4e:	bd10      	pop	{r4, pc}
     c50:	100001e0 	.word	0x100001e0
     c54:	e000edf0 	.word	0xe000edf0
     c58:	e0001000 	.word	0xe0001000
     c5c:	e0002000 	.word	0xe0002000
     c60:	e0002008 	.word	0xe0002008
     c64:	e000ed00 	.word	0xe000ed00

00000c68 <__mriPlatform_EnableSingleStep>:
     c68:	b508      	push	{r3, lr}
     c6a:	4b17      	ldr	r3, [pc, #92]	; (cc8 <__mriPlatform_EnableSingleStep+0x60>)
     c6c:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
     c70:	f042 0004 	orr.w	r0, r2, #4
     c74:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
     c78:	f8d3 3248 	ldr.w	r3, [r3, #584]	; 0x248
     c7c:	8819      	ldrh	r1, [r3, #0]
     c7e:	f021 020f 	bic.w	r2, r1, #15
     c82:	b290      	uxth	r0, r2
     c84:	f24f 3180 	movw	r1, #62336	; 0xf380
     c88:	4288      	cmp	r0, r1
     c8a:	d110      	bne.n	cae <__mriPlatform_EnableSingleStep+0x46>
     c8c:	885b      	ldrh	r3, [r3, #2]
     c8e:	f648 0211 	movw	r2, #34833	; 0x8811
     c92:	4293      	cmp	r3, r2
     c94:	d002      	beq.n	c9c <__mriPlatform_EnableSingleStep+0x34>
     c96:	1c50      	adds	r0, r2, #1
     c98:	4283      	cmp	r3, r0
     c9a:	d108      	bne.n	cae <__mriPlatform_EnableSingleStep+0x46>
     c9c:	2008      	movs	r0, #8
     c9e:	f000 fea0 	bl	19e2 <__mriSetBASEPRI>
     ca2:	480a      	ldr	r0, [pc, #40]	; (ccc <__mriPlatform_EnableSingleStep+0x64>)
     ca4:	68c1      	ldr	r1, [r0, #12]
     ca6:	f441 2380 	orr.w	r3, r1, #262144	; 0x40000
     caa:	60c3      	str	r3, [r0, #12]
     cac:	bd08      	pop	{r3, pc}
     cae:	f000 fe9b 	bl	19e8 <__mriGetBASEPRI>
     cb2:	4905      	ldr	r1, [pc, #20]	; (cc8 <__mriPlatform_EnableSingleStep+0x60>)
     cb4:	f8d1 3200 	ldr.w	r3, [r1, #512]	; 0x200
     cb8:	f8c1 0264 	str.w	r0, [r1, #612]	; 0x264
     cbc:	f043 0208 	orr.w	r2, r3, #8
     cc0:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
     cc4:	e7ea      	b.n	c9c <__mriPlatform_EnableSingleStep+0x34>
     cc6:	bf00      	nop
     cc8:	100001e0 	.word	0x100001e0
     ccc:	e000edf0 	.word	0xe000edf0

00000cd0 <__mriPlatform_IsSingleStepping>:
     cd0:	4b02      	ldr	r3, [pc, #8]	; (cdc <__mriPlatform_IsSingleStepping+0xc>)
     cd2:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
     cd6:	f000 0004 	and.w	r0, r0, #4
     cda:	4770      	bx	lr
     cdc:	100001e0 	.word	0x100001e0

00000ce0 <__mriPlatform_GetPacketBuffer>:
     ce0:	4800      	ldr	r0, [pc, #0]	; (ce4 <__mriPlatform_GetPacketBuffer+0x4>)
     ce2:	4770      	bx	lr
     ce4:	1000044c 	.word	0x1000044c

00000ce8 <__mriPlatform_GetPacketBufferSize>:
     ce8:	2089      	movs	r0, #137	; 0x89
     cea:	4770      	bx	lr

00000cec <__mriPlatform_DetermineCauseOfException>:
     cec:	b510      	push	{r4, lr}
     cee:	f000 fe75 	bl	19dc <__mriGetIPSR>
     cf2:	b2c0      	uxtb	r0, r0
     cf4:	1e81      	subs	r1, r0, #2
     cf6:	2916      	cmp	r1, #22
     cf8:	d824      	bhi.n	d44 <__mriPlatform_DetermineCauseOfException+0x58>
     cfa:	e8df f001 	tbb	[pc, r1]
     cfe:	250c      	.short	0x250c
     d00:	23100e25 	.word	0x23100e25
     d04:	23232323 	.word	0x23232323
     d08:	23232312 	.word	0x23232312
     d0c:	23232323 	.word	0x23232323
     d10:	0c0c0c23 	.word	0x0c0c0c23
     d14:	0c          	.byte	0x0c
     d15:	00          	.byte	0x00
     d16:	2002      	movs	r0, #2
     d18:	bd10      	pop	{r4, pc}
     d1a:	200a      	movs	r0, #10
     d1c:	bd10      	pop	{r4, pc}
     d1e:	2004      	movs	r0, #4
     d20:	bd10      	pop	{r4, pc}
     d22:	4b0a      	ldr	r3, [pc, #40]	; (d4c <__mriPlatform_DetermineCauseOfException+0x60>)
     d24:	6b18      	ldr	r0, [r3, #48]	; 0x30
     d26:	2300      	movs	r3, #0
     d28:	4a09      	ldr	r2, [pc, #36]	; (d50 <__mriPlatform_DetermineCauseOfException+0x64>)
     d2a:	00dc      	lsls	r4, r3, #3
     d2c:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
     d30:	4201      	tst	r1, r0
     d32:	d004      	beq.n	d3e <__mriPlatform_DetermineCauseOfException+0x52>
     d34:	4805      	ldr	r0, [pc, #20]	; (d4c <__mriPlatform_DetermineCauseOfException+0x60>)
     d36:	1912      	adds	r2, r2, r4
     d38:	6301      	str	r1, [r0, #48]	; 0x30
     d3a:	7910      	ldrb	r0, [r2, #4]
     d3c:	bd10      	pop	{r4, pc}
     d3e:	3301      	adds	r3, #1
     d40:	2b04      	cmp	r3, #4
     d42:	d1f1      	bne.n	d28 <__mriPlatform_DetermineCauseOfException+0x3c>
     d44:	2011      	movs	r0, #17
     d46:	bd10      	pop	{r4, pc}
     d48:	200b      	movs	r0, #11
     d4a:	bd10      	pop	{r4, pc}
     d4c:	e000ed00 	.word	0xe000ed00
     d50:	000037ac 	.word	0x000037ac

00000d54 <__mriPlatform_DisplayFaultCauseToGdbConsole>:
     d54:	b510      	push	{r4, lr}
     d56:	f000 fe41 	bl	19dc <__mriGetIPSR>
     d5a:	b2c0      	uxtb	r0, r0
     d5c:	1ec1      	subs	r1, r0, #3
     d5e:	2903      	cmp	r1, #3
     d60:	d82f      	bhi.n	dc2 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x6e>
     d62:	e8df f001 	tbb	[pc, r1]
     d66:	2102      	.short	0x2102
     d68:	2724      	.short	0x2724
     d6a:	4b16      	ldr	r3, [pc, #88]	; (dc4 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x70>)
     d6c:	4816      	ldr	r0, [pc, #88]	; (dc8 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x74>)
     d6e:	6adc      	ldr	r4, [r3, #44]	; 0x2c
     d70:	f001 fd51 	bl	2816 <__mriGdbConsole_WriteString>
     d74:	4815      	ldr	r0, [pc, #84]	; (dcc <__mriPlatform_DisplayFaultCauseToGdbConsole+0x78>)
     d76:	f001 fd4e 	bl	2816 <__mriGdbConsole_WriteString>
     d7a:	4620      	mov	r0, r4
     d7c:	f001 fd72 	bl	2864 <__mriGdbConsole_WriteHexValue>
     d80:	2c00      	cmp	r4, #0
     d82:	da02      	bge.n	d8a <__mriPlatform_DisplayFaultCauseToGdbConsole+0x36>
     d84:	4812      	ldr	r0, [pc, #72]	; (dd0 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x7c>)
     d86:	f001 fd46 	bl	2816 <__mriGdbConsole_WriteString>
     d8a:	07a3      	lsls	r3, r4, #30
     d8c:	d502      	bpl.n	d94 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x40>
     d8e:	4811      	ldr	r0, [pc, #68]	; (dd4 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x80>)
     d90:	f001 fd41 	bl	2816 <__mriGdbConsole_WriteString>
     d94:	0060      	lsls	r0, r4, #1
     d96:	d50f      	bpl.n	db8 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     d98:	480f      	ldr	r0, [pc, #60]	; (dd8 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x84>)
     d9a:	f001 fd3c 	bl	2816 <__mriGdbConsole_WriteString>
     d9e:	f7ff fdaf 	bl	900 <displayMemFaultCauseToGdbConsole>
     da2:	f7ff fdff 	bl	9a4 <displayBusFaultCauseToGdbConsole>
     da6:	e005      	b.n	db4 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x60>
     da8:	f7ff fdaa 	bl	900 <displayMemFaultCauseToGdbConsole>
     dac:	e004      	b.n	db8 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     dae:	f7ff fdf9 	bl	9a4 <displayBusFaultCauseToGdbConsole>
     db2:	e001      	b.n	db8 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     db4:	f7ff fe50 	bl	a58 <displayUsageFaultCauseToGdbConsole>
     db8:	4808      	ldr	r0, [pc, #32]	; (ddc <__mriPlatform_DisplayFaultCauseToGdbConsole+0x88>)
     dba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     dbe:	f001 bd2a 	b.w	2816 <__mriGdbConsole_WriteString>
     dc2:	bd10      	pop	{r4, pc}
     dc4:	e000ed00 	.word	0xe000ed00
     dc8:	000039a8 	.word	0x000039a8
     dcc:	000037fe 	.word	0x000037fe
     dd0:	000039b8 	.word	0x000039b8
     dd4:	000039c9 	.word	0x000039c9
     dd8:	000039e0 	.word	0x000039e0
     ddc:	000039ec 	.word	0x000039ec

00000de0 <__mriPlatform_EnteringDebugger>:
     de0:	b510      	push	{r4, lr}
     de2:	4c38      	ldr	r4, [pc, #224]	; (ec4 <__mriPlatform_EnteringDebugger+0xe4>)
     de4:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
     de8:	f8d4 1248 	ldr.w	r1, [r4, #584]	; 0x248
     dec:	f023 0002 	bic.w	r0, r3, #2
     df0:	f8c4 0200 	str.w	r0, [r4, #512]	; 0x200
     df4:	f8c4 1250 	str.w	r1, [r4, #592]	; 0x250
     df8:	f7ff fea6 	bl	b48 <isMPUNotPresent>
     dfc:	4b32      	ldr	r3, [pc, #200]	; (ec8 <__mriPlatform_EnteringDebugger+0xe8>)
     dfe:	b908      	cbnz	r0, e04 <__mriPlatform_EnteringDebugger+0x24>
     e00:	685a      	ldr	r2, [r3, #4]
     e02:	e001      	b.n	e08 <__mriPlatform_EnteringDebugger+0x28>
     e04:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
     e08:	f8c4 2254 	str.w	r2, [r4, #596]	; 0x254
     e0c:	6898      	ldr	r0, [r3, #8]
     e0e:	f8c4 0258 	str.w	r0, [r4, #600]	; 0x258
     e12:	681c      	ldr	r4, [r3, #0]
     e14:	f3c4 2107 	ubfx	r1, r4, #8, #8
     e18:	1e48      	subs	r0, r1, #1
     e1a:	f7ff fd63 	bl	8e4 <prepareToAccessMPURegion>
     e1e:	f7ff fe93 	bl	b48 <isMPUNotPresent>
     e22:	b918      	cbnz	r0, e2c <__mriPlatform_EnteringDebugger+0x4c>
     e24:	4b28      	ldr	r3, [pc, #160]	; (ec8 <__mriPlatform_EnteringDebugger+0xe8>)
     e26:	68da      	ldr	r2, [r3, #12]
     e28:	0950      	lsrs	r0, r2, #5
     e2a:	e000      	b.n	e2e <__mriPlatform_EnteringDebugger+0x4e>
     e2c:	2000      	movs	r0, #0
     e2e:	4c25      	ldr	r4, [pc, #148]	; (ec4 <__mriPlatform_EnteringDebugger+0xe4>)
     e30:	f8c4 025c 	str.w	r0, [r4, #604]	; 0x25c
     e34:	f7ff fe88 	bl	b48 <isMPUNotPresent>
     e38:	b910      	cbnz	r0, e40 <__mriPlatform_EnteringDebugger+0x60>
     e3a:	4923      	ldr	r1, [pc, #140]	; (ec8 <__mriPlatform_EnteringDebugger+0xe8>)
     e3c:	690b      	ldr	r3, [r1, #16]
     e3e:	e000      	b.n	e42 <__mriPlatform_EnteringDebugger+0x62>
     e40:	2300      	movs	r3, #0
     e42:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
     e46:	f7ff fe7f 	bl	b48 <isMPUNotPresent>
     e4a:	4c1f      	ldr	r4, [pc, #124]	; (ec8 <__mriPlatform_EnteringDebugger+0xe8>)
     e4c:	b938      	cbnz	r0, e5e <__mriPlatform_EnteringDebugger+0x7e>
     e4e:	6862      	ldr	r2, [r4, #4]
     e50:	f022 0001 	bic.w	r0, r2, #1
     e54:	6060      	str	r0, [r4, #4]
     e56:	f000 fdca 	bl	19ee <__mriDSB>
     e5a:	f000 fdcb 	bl	19f4 <__mriISB>
     e5e:	6821      	ldr	r1, [r4, #0]
     e60:	f3c1 2307 	ubfx	r3, r1, #8, #8
     e64:	1e58      	subs	r0, r3, #1
     e66:	f7ff fd3d 	bl	8e4 <prepareToAccessMPURegion>
     e6a:	f7ff fe6d 	bl	b48 <isMPUNotPresent>
     e6e:	b908      	cbnz	r0, e74 <__mriPlatform_EnteringDebugger+0x94>
     e70:	4c15      	ldr	r4, [pc, #84]	; (ec8 <__mriPlatform_EnteringDebugger+0xe8>)
     e72:	60e0      	str	r0, [r4, #12]
     e74:	f7ff fe68 	bl	b48 <isMPUNotPresent>
     e78:	b910      	cbnz	r0, e80 <__mriPlatform_EnteringDebugger+0xa0>
     e7a:	4a14      	ldr	r2, [pc, #80]	; (ecc <__mriPlatform_EnteringDebugger+0xec>)
     e7c:	4812      	ldr	r0, [pc, #72]	; (ec8 <__mriPlatform_EnteringDebugger+0xe8>)
     e7e:	6102      	str	r2, [r0, #16]
     e80:	f7ff fe62 	bl	b48 <isMPUNotPresent>
     e84:	b940      	cbnz	r0, e98 <__mriPlatform_EnteringDebugger+0xb8>
     e86:	4910      	ldr	r1, [pc, #64]	; (ec8 <__mriPlatform_EnteringDebugger+0xe8>)
     e88:	684b      	ldr	r3, [r1, #4]
     e8a:	f043 0403 	orr.w	r4, r3, #3
     e8e:	604c      	str	r4, [r1, #4]
     e90:	f000 fdad 	bl	19ee <__mriDSB>
     e94:	f000 fdae 	bl	19f4 <__mriISB>
     e98:	4c0a      	ldr	r4, [pc, #40]	; (ec4 <__mriPlatform_EnteringDebugger+0xe4>)
     e9a:	f8d4 2200 	ldr.w	r2, [r4, #512]	; 0x200
     e9e:	0712      	lsls	r2, r2, #28
     ea0:	d50c      	bpl.n	ebc <__mriPlatform_EnteringDebugger+0xdc>
     ea2:	f8d4 0200 	ldr.w	r0, [r4, #512]	; 0x200
     ea6:	f020 0108 	bic.w	r1, r0, #8
     eaa:	f8d4 0264 	ldr.w	r0, [r4, #612]	; 0x264
     eae:	f8c4 1200 	str.w	r1, [r4, #512]	; 0x200
     eb2:	f000 fd96 	bl	19e2 <__mriSetBASEPRI>
     eb6:	2300      	movs	r3, #0
     eb8:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
     ebc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     ec0:	f7ff be68 	b.w	b94 <__mriPlatform_DisableSingleStep>
     ec4:	100001e0 	.word	0x100001e0
     ec8:	e000ed90 	.word	0xe000ed90
     ecc:	0100003f 	.word	0x0100003f

00000ed0 <__mriPlatform_LeavingDebugger>:
     ed0:	b538      	push	{r3, r4, r5, lr}
     ed2:	f7ff fe39 	bl	b48 <isMPUNotPresent>
     ed6:	4c24      	ldr	r4, [pc, #144]	; (f68 <__mriPlatform_LeavingDebugger+0x98>)
     ed8:	b938      	cbnz	r0, eea <__mriPlatform_LeavingDebugger+0x1a>
     eda:	6863      	ldr	r3, [r4, #4]
     edc:	f023 0001 	bic.w	r0, r3, #1
     ee0:	6060      	str	r0, [r4, #4]
     ee2:	f000 fd84 	bl	19ee <__mriDSB>
     ee6:	f000 fd85 	bl	19f4 <__mriISB>
     eea:	6821      	ldr	r1, [r4, #0]
     eec:	4c1f      	ldr	r4, [pc, #124]	; (f6c <__mriPlatform_LeavingDebugger+0x9c>)
     eee:	f3c1 2207 	ubfx	r2, r1, #8, #8
     ef2:	1e50      	subs	r0, r2, #1
     ef4:	f7ff fcf6 	bl	8e4 <prepareToAccessMPURegion>
     ef8:	f8d4 525c 	ldr.w	r5, [r4, #604]	; 0x25c
     efc:	f7ff fe24 	bl	b48 <isMPUNotPresent>
     f00:	b910      	cbnz	r0, f08 <__mriPlatform_LeavingDebugger+0x38>
     f02:	4b19      	ldr	r3, [pc, #100]	; (f68 <__mriPlatform_LeavingDebugger+0x98>)
     f04:	016d      	lsls	r5, r5, #5
     f06:	60dd      	str	r5, [r3, #12]
     f08:	f8d4 4260 	ldr.w	r4, [r4, #608]	; 0x260
     f0c:	f7ff fe1c 	bl	b48 <isMPUNotPresent>
     f10:	b908      	cbnz	r0, f16 <__mriPlatform_LeavingDebugger+0x46>
     f12:	4815      	ldr	r0, [pc, #84]	; (f68 <__mriPlatform_LeavingDebugger+0x98>)
     f14:	6104      	str	r4, [r0, #16]
     f16:	4c15      	ldr	r4, [pc, #84]	; (f6c <__mriPlatform_LeavingDebugger+0x9c>)
     f18:	f8d4 0258 	ldr.w	r0, [r4, #600]	; 0x258
     f1c:	f7ff fce2 	bl	8e4 <prepareToAccessMPURegion>
     f20:	f8d4 4254 	ldr.w	r4, [r4, #596]	; 0x254
     f24:	f7ff fe10 	bl	b48 <isMPUNotPresent>
     f28:	b928      	cbnz	r0, f36 <__mriPlatform_LeavingDebugger+0x66>
     f2a:	490f      	ldr	r1, [pc, #60]	; (f68 <__mriPlatform_LeavingDebugger+0x98>)
     f2c:	604c      	str	r4, [r1, #4]
     f2e:	f000 fd5e 	bl	19ee <__mriDSB>
     f32:	f000 fd5f 	bl	19f4 <__mriISB>
     f36:	4b0d      	ldr	r3, [pc, #52]	; (f6c <__mriPlatform_LeavingDebugger+0x9c>)
     f38:	461a      	mov	r2, r3
     f3a:	6811      	ldr	r1, [r2, #0]
     f3c:	480c      	ldr	r0, [pc, #48]	; (f70 <__mriPlatform_LeavingDebugger+0xa0>)
     f3e:	3304      	adds	r3, #4
     f40:	4281      	cmp	r1, r0
     f42:	490c      	ldr	r1, [pc, #48]	; (f74 <__mriPlatform_LeavingDebugger+0xa4>)
     f44:	d102      	bne.n	f4c <__mriPlatform_LeavingDebugger+0x7c>
     f46:	428b      	cmp	r3, r1
     f48:	461a      	mov	r2, r3
     f4a:	d3f5      	bcc.n	f38 <__mriPlatform_LeavingDebugger+0x68>
     f4c:	4b07      	ldr	r3, [pc, #28]	; (f6c <__mriPlatform_LeavingDebugger+0x9c>)
     f4e:	1a8a      	subs	r2, r1, r2
     f50:	f8d3 0268 	ldr.w	r0, [r3, #616]	; 0x268
     f54:	4908      	ldr	r1, [pc, #32]	; (f78 <__mriPlatform_LeavingDebugger+0xa8>)
     f56:	4282      	cmp	r2, r0
     f58:	bfc8      	it	gt
     f5a:	f8c3 2268 	strgt.w	r2, [r3, #616]	; 0x268
     f5e:	68ca      	ldr	r2, [r1, #12]
     f60:	f422 3300 	bic.w	r3, r2, #131072	; 0x20000
     f64:	60cb      	str	r3, [r1, #12]
     f66:	bd38      	pop	{r3, r4, r5, pc}
     f68:	e000ed90 	.word	0xe000ed90
     f6c:	100001e0 	.word	0x100001e0
     f70:	deadbeef 	.word	0xdeadbeef
     f74:	100003e0 	.word	0x100003e0
     f78:	e000edf0 	.word	0xe000edf0

00000f7c <__mriPlatform_GetProgramCounter>:
     f7c:	4b01      	ldr	r3, [pc, #4]	; (f84 <__mriPlatform_GetProgramCounter+0x8>)
     f7e:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     f82:	4770      	bx	lr
     f84:	100001e0 	.word	0x100001e0

00000f88 <__mriPlatform_SetProgramCounter>:
     f88:	4b01      	ldr	r3, [pc, #4]	; (f90 <__mriPlatform_SetProgramCounter+0x8>)
     f8a:	f8c3 0248 	str.w	r0, [r3, #584]	; 0x248
     f8e:	4770      	bx	lr
     f90:	100001e0 	.word	0x100001e0

00000f94 <__mriPlatform_AdvanceProgramCounterToNextInstruction>:
     f94:	4b0b      	ldr	r3, [pc, #44]	; (fc4 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x30>)
     f96:	f8d3 2248 	ldr.w	r2, [r3, #584]	; 0x248
     f9a:	4618      	mov	r0, r3
     f9c:	8811      	ldrh	r1, [r2, #0]
     f9e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
     fa2:	f5b1 4f68 	cmp.w	r1, #59392	; 0xe800
     fa6:	d005      	beq.n	fb4 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x20>
     fa8:	f5b1 4f70 	cmp.w	r1, #61440	; 0xf000
     fac:	d002      	beq.n	fb4 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x20>
     fae:	f5b1 4f78 	cmp.w	r1, #63488	; 0xf800
     fb2:	d103      	bne.n	fbc <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x28>
     fb4:	1d13      	adds	r3, r2, #4
     fb6:	f8c0 3248 	str.w	r3, [r0, #584]	; 0x248
     fba:	4770      	bx	lr
     fbc:	3202      	adds	r2, #2
     fbe:	f8c3 2248 	str.w	r2, [r3, #584]	; 0x248
     fc2:	4770      	bx	lr
     fc4:	100001e0 	.word	0x100001e0

00000fc8 <__mriPlatform_IsCurrentInstructionHardcodedBreakpoint>:
     fc8:	4b04      	ldr	r3, [pc, #16]	; (fdc <__mriPlatform_IsCurrentInstructionHardcodedBreakpoint+0x14>)
     fca:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     fce:	8801      	ldrh	r1, [r0, #0]
     fd0:	f5b1 423e 	subs.w	r2, r1, #48640	; 0xbe00
     fd4:	4253      	negs	r3, r2
     fd6:	eb53 0002 	adcs.w	r0, r3, r2
     fda:	4770      	bx	lr
     fdc:	100001e0 	.word	0x100001e0

00000fe0 <__mriPlatform_WasProgramCounterModifiedByUser>:
     fe0:	4b04      	ldr	r3, [pc, #16]	; (ff4 <__mriPlatform_WasProgramCounterModifiedByUser+0x14>)
     fe2:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     fe6:	f8d3 1250 	ldr.w	r1, [r3, #592]	; 0x250
     fea:	1a40      	subs	r0, r0, r1
     fec:	bf18      	it	ne
     fee:	2001      	movne	r0, #1
     ff0:	4770      	bx	lr
     ff2:	bf00      	nop
     ff4:	100001e0 	.word	0x100001e0

00000ff8 <__mriPlatform_TypeOfCurrentInstruction>:
     ff8:	4b08      	ldr	r3, [pc, #32]	; (101c <__mriPlatform_TypeOfCurrentInstruction+0x24>)
     ffa:	f64b 62ab 	movw	r2, #48811	; 0xbeab
     ffe:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
    1002:	8801      	ldrh	r1, [r0, #0]
    1004:	4291      	cmp	r1, r2
    1006:	d006      	beq.n	1016 <__mriPlatform_TypeOfCurrentInstruction+0x1e>
    1008:	f64b 63ff 	movw	r3, #48895	; 0xbeff
    100c:	4299      	cmp	r1, r3
    100e:	bf0c      	ite	eq
    1010:	2002      	moveq	r0, #2
    1012:	2000      	movne	r0, #0
    1014:	4770      	bx	lr
    1016:	2001      	movs	r0, #1
    1018:	4770      	bx	lr
    101a:	bf00      	nop
    101c:	100001e0 	.word	0x100001e0

00001020 <__mriPlatform_GetSemihostCallParameters>:
    1020:	4a07      	ldr	r2, [pc, #28]	; (1040 <__mriPlatform_GetSemihostCallParameters+0x20>)
    1022:	b530      	push	{r4, r5, lr}
    1024:	f8d2 1218 	ldr.w	r1, [r2, #536]	; 0x218
    1028:	f8d2 5210 	ldr.w	r5, [r2, #528]	; 0x210
    102c:	f8d2 4214 	ldr.w	r4, [r2, #532]	; 0x214
    1030:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
    1034:	6084      	str	r4, [r0, #8]
    1036:	e880 0024 	stmia.w	r0, {r2, r5}
    103a:	60c1      	str	r1, [r0, #12]
    103c:	bd30      	pop	{r4, r5, pc}
    103e:	bf00      	nop
    1040:	100001e0 	.word	0x100001e0

00001044 <__mriPlatform_SetSemihostCallReturnValue>:
    1044:	4b01      	ldr	r3, [pc, #4]	; (104c <__mriPlatform_SetSemihostCallReturnValue+0x8>)
    1046:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
    104a:	4770      	bx	lr
    104c:	100001e0 	.word	0x100001e0

00001050 <__mriPlatform_WasMemoryFaultEncountered>:
    1050:	b508      	push	{r3, lr}
    1052:	f000 fccc 	bl	19ee <__mriDSB>
    1056:	4b06      	ldr	r3, [pc, #24]	; (1070 <__mriPlatform_WasMemoryFaultEncountered+0x20>)
    1058:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
    105c:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
    1060:	f000 0002 	and.w	r0, r0, #2
    1064:	f022 0102 	bic.w	r1, r2, #2
    1068:	f8c3 1200 	str.w	r1, [r3, #512]	; 0x200
    106c:	bd08      	pop	{r3, pc}
    106e:	bf00      	nop
    1070:	100001e0 	.word	0x100001e0

00001074 <__mriPlatform_WriteTResponseRegistersToBuffer>:
    1074:	b538      	push	{r3, r4, r5, lr}
    1076:	4c0d      	ldr	r4, [pc, #52]	; (10ac <__mriPlatform_WriteTResponseRegistersToBuffer+0x38>)
    1078:	4605      	mov	r5, r0
    107a:	210c      	movs	r1, #12
    107c:	f8d4 223c 	ldr.w	r2, [r4, #572]	; 0x23c
    1080:	f7ff fd6e 	bl	b60 <sendRegisterForTResponse>
    1084:	4628      	mov	r0, r5
    1086:	210d      	movs	r1, #13
    1088:	f8d4 2240 	ldr.w	r2, [r4, #576]	; 0x240
    108c:	f7ff fd68 	bl	b60 <sendRegisterForTResponse>
    1090:	4628      	mov	r0, r5
    1092:	210e      	movs	r1, #14
    1094:	f8d4 2244 	ldr.w	r2, [r4, #580]	; 0x244
    1098:	f7ff fd62 	bl	b60 <sendRegisterForTResponse>
    109c:	f8d4 2248 	ldr.w	r2, [r4, #584]	; 0x248
    10a0:	4628      	mov	r0, r5
    10a2:	210f      	movs	r1, #15
    10a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    10a8:	f7ff bd5a 	b.w	b60 <sendRegisterForTResponse>
    10ac:	100001e0 	.word	0x100001e0

000010b0 <__mriPlatform_CopyContextToBuffer>:
    10b0:	b570      	push	{r4, r5, r6, lr}
    10b2:	4c06      	ldr	r4, [pc, #24]	; (10cc <__mriPlatform_CopyContextToBuffer+0x1c>)
    10b4:	4606      	mov	r6, r0
    10b6:	f104 0544 	add.w	r5, r4, #68	; 0x44
    10ba:	f814 1f01 	ldrb.w	r1, [r4, #1]!
    10be:	4630      	mov	r0, r6
    10c0:	f000 fdf8 	bl	1cb4 <__mriBuffer_WriteByteAsHex>
    10c4:	42ac      	cmp	r4, r5
    10c6:	d1f8      	bne.n	10ba <__mriPlatform_CopyContextToBuffer+0xa>
    10c8:	bd70      	pop	{r4, r5, r6, pc}
    10ca:	bf00      	nop
    10cc:	100003eb 	.word	0x100003eb

000010d0 <__mriPlatform_CopyContextFromBuffer>:
    10d0:	b570      	push	{r4, r5, r6, lr}
    10d2:	4c06      	ldr	r4, [pc, #24]	; (10ec <__mriPlatform_CopyContextFromBuffer+0x1c>)
    10d4:	4606      	mov	r6, r0
    10d6:	f104 0544 	add.w	r5, r4, #68	; 0x44
    10da:	4630      	mov	r0, r6
    10dc:	f000 fe06 	bl	1cec <__mriBuffer_ReadByteAsHex>
    10e0:	f804 0f01 	strb.w	r0, [r4, #1]!
    10e4:	42ac      	cmp	r4, r5
    10e6:	d1f8      	bne.n	10da <__mriPlatform_CopyContextFromBuffer+0xa>
    10e8:	bd70      	pop	{r4, r5, r6, pc}
    10ea:	bf00      	nop
    10ec:	100003eb 	.word	0x100003eb

000010f0 <__mriPlatform_SetHardwareBreakpoint>:
    10f0:	4b19      	ldr	r3, [pc, #100]	; (1158 <__mriPlatform_SetHardwareBreakpoint+0x68>)
    10f2:	b570      	push	{r4, r5, r6, lr}
    10f4:	2400      	movs	r4, #0
    10f6:	2902      	cmp	r1, #2
    10f8:	4605      	mov	r5, r0
    10fa:	601c      	str	r4, [r3, #0]
    10fc:	d008      	beq.n	1110 <__mriPlatform_SetHardwareBreakpoint+0x20>
    10fe:	d301      	bcc.n	1104 <__mriPlatform_SetHardwareBreakpoint+0x14>
    1100:	2904      	cmp	r1, #4
    1102:	d904      	bls.n	110e <__mriPlatform_SetHardwareBreakpoint+0x1e>
    1104:	2204      	movs	r2, #4
    1106:	601a      	str	r2, [r3, #0]
    1108:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
    110c:	e000      	b.n	1110 <__mriPlatform_SetHardwareBreakpoint+0x20>
    110e:	2401      	movs	r4, #1
    1110:	6818      	ldr	r0, [r3, #0]
    1112:	b9f8      	cbnz	r0, 1154 <__mriPlatform_SetHardwareBreakpoint+0x64>
    1114:	4628      	mov	r0, r5
    1116:	4621      	mov	r1, r4
    1118:	f7ff fcfc 	bl	b14 <findFPBBreakpointComparator>
    111c:	4606      	mov	r6, r0
    111e:	b9c8      	cbnz	r0, 1154 <__mriPlatform_SetHardwareBreakpoint+0x64>
    1120:	f7ff fbd4 	bl	8cc <getFPBCodeComparatorCount>
    1124:	4a0d      	ldr	r2, [pc, #52]	; (115c <__mriPlatform_SetHardwareBreakpoint+0x6c>)
    1126:	4633      	mov	r3, r6
    1128:	4283      	cmp	r3, r0
    112a:	4616      	mov	r6, r2
    112c:	d00c      	beq.n	1148 <__mriPlatform_SetHardwareBreakpoint+0x58>
    112e:	f852 1b04 	ldr.w	r1, [r2], #4
    1132:	07c9      	lsls	r1, r1, #31
    1134:	d501      	bpl.n	113a <__mriPlatform_SetHardwareBreakpoint+0x4a>
    1136:	3301      	adds	r3, #1
    1138:	e7f6      	b.n	1128 <__mriPlatform_SetHardwareBreakpoint+0x38>
    113a:	b12e      	cbz	r6, 1148 <__mriPlatform_SetHardwareBreakpoint+0x58>
    113c:	4628      	mov	r0, r5
    113e:	4621      	mov	r1, r4
    1140:	f7ff fccc 	bl	adc <calculateFPBComparatorValue>
    1144:	6030      	str	r0, [r6, #0]
    1146:	bd70      	pop	{r4, r5, r6, pc}
    1148:	4803      	ldr	r0, [pc, #12]	; (1158 <__mriPlatform_SetHardwareBreakpoint+0x68>)
    114a:	6802      	ldr	r2, [r0, #0]
    114c:	2a08      	cmp	r2, #8
    114e:	bfb8      	it	lt
    1150:	2208      	movlt	r2, #8
    1152:	6002      	str	r2, [r0, #0]
    1154:	bd70      	pop	{r4, r5, r6, pc}
    1156:	bf00      	nop
    1158:	100001dc 	.word	0x100001dc
    115c:	e0002008 	.word	0xe0002008

00001160 <__mriPlatform_ClearHardwareBreakpoint>:
    1160:	4b0c      	ldr	r3, [pc, #48]	; (1194 <__mriPlatform_ClearHardwareBreakpoint+0x34>)
    1162:	2200      	movs	r2, #0
    1164:	2902      	cmp	r1, #2
    1166:	b510      	push	{r4, lr}
    1168:	601a      	str	r2, [r3, #0]
    116a:	d003      	beq.n	1174 <__mriPlatform_ClearHardwareBreakpoint+0x14>
    116c:	d304      	bcc.n	1178 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    116e:	2904      	cmp	r1, #4
    1170:	d802      	bhi.n	1178 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    1172:	e006      	b.n	1182 <__mriPlatform_ClearHardwareBreakpoint+0x22>
    1174:	4611      	mov	r1, r2
    1176:	e005      	b.n	1184 <__mriPlatform_ClearHardwareBreakpoint+0x24>
    1178:	2104      	movs	r1, #4
    117a:	6019      	str	r1, [r3, #0]
    117c:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    1180:	e000      	b.n	1184 <__mriPlatform_ClearHardwareBreakpoint+0x24>
    1182:	2101      	movs	r1, #1
    1184:	681c      	ldr	r4, [r3, #0]
    1186:	b91c      	cbnz	r4, 1190 <__mriPlatform_ClearHardwareBreakpoint+0x30>
    1188:	f7ff fcc4 	bl	b14 <findFPBBreakpointComparator>
    118c:	b100      	cbz	r0, 1190 <__mriPlatform_ClearHardwareBreakpoint+0x30>
    118e:	6004      	str	r4, [r0, #0]
    1190:	bd10      	pop	{r4, pc}
    1192:	bf00      	nop
    1194:	100001dc 	.word	0x100001dc

00001198 <__mriPlatform_SetHardwareWatchpoint>:
    1198:	2a02      	cmp	r2, #2
    119a:	bf98      	it	ls
    119c:	4b1f      	ldrls	r3, [pc, #124]	; (121c <__mriPlatform_SetHardwareWatchpoint+0x84>)
    119e:	b570      	push	{r4, r5, r6, lr}
    11a0:	bf94      	ite	ls
    11a2:	5c9d      	ldrbls	r5, [r3, r2]
    11a4:	2500      	movhi	r5, #0
    11a6:	1e4b      	subs	r3, r1, #1
    11a8:	420b      	tst	r3, r1
    11aa:	4606      	mov	r6, r0
    11ac:	460c      	mov	r4, r1
    11ae:	d106      	bne.n	11be <__mriPlatform_SetHardwareWatchpoint+0x26>
    11b0:	4248      	negs	r0, r1
    11b2:	4030      	ands	r0, r6
    11b4:	4286      	cmp	r6, r0
    11b6:	d102      	bne.n	11be <__mriPlatform_SetHardwareWatchpoint+0x26>
    11b8:	1f69      	subs	r1, r5, #5
    11ba:	2902      	cmp	r1, #2
    11bc:	d905      	bls.n	11ca <__mriPlatform_SetHardwareWatchpoint+0x32>
    11be:	4b18      	ldr	r3, [pc, #96]	; (1220 <__mriPlatform_SetHardwareWatchpoint+0x88>)
    11c0:	6819      	ldr	r1, [r3, #0]
    11c2:	2904      	cmp	r1, #4
    11c4:	bfb8      	it	lt
    11c6:	2104      	movlt	r1, #4
    11c8:	e026      	b.n	1218 <__mriPlatform_SetHardwareWatchpoint+0x80>
    11ca:	4630      	mov	r0, r6
    11cc:	4621      	mov	r1, r4
    11ce:	462a      	mov	r2, r5
    11d0:	f7ff fb52 	bl	878 <findDWTComparator>
    11d4:	bb08      	cbnz	r0, 121a <__mriPlatform_SetHardwareWatchpoint+0x82>
    11d6:	4a13      	ldr	r2, [pc, #76]	; (1224 <__mriPlatform_SetHardwareWatchpoint+0x8c>)
    11d8:	6813      	ldr	r3, [r2, #0]
    11da:	0f19      	lsrs	r1, r3, #28
    11dc:	f100 6260 	add.w	r2, r0, #234881024	; 0xe000000
    11e0:	f502 7381 	add.w	r3, r2, #258	; 0x102
    11e4:	011b      	lsls	r3, r3, #4
    11e6:	4288      	cmp	r0, r1
    11e8:	d011      	beq.n	120e <__mriPlatform_SetHardwareWatchpoint+0x76>
    11ea:	689a      	ldr	r2, [r3, #8]
    11ec:	f012 020f 	ands.w	r2, r2, #15
    11f0:	d001      	beq.n	11f6 <__mriPlatform_SetHardwareWatchpoint+0x5e>
    11f2:	3001      	adds	r0, #1
    11f4:	e7f2      	b.n	11dc <__mriPlatform_SetHardwareWatchpoint+0x44>
    11f6:	2c01      	cmp	r4, #1
    11f8:	d902      	bls.n	1200 <__mriPlatform_SetHardwareWatchpoint+0x68>
    11fa:	0864      	lsrs	r4, r4, #1
    11fc:	3201      	adds	r2, #1
    11fe:	e7fa      	b.n	11f6 <__mriPlatform_SetHardwareWatchpoint+0x5e>
    1200:	605a      	str	r2, [r3, #4]
    1202:	6858      	ldr	r0, [r3, #4]
    1204:	4290      	cmp	r0, r2
    1206:	d102      	bne.n	120e <__mriPlatform_SetHardwareWatchpoint+0x76>
    1208:	601e      	str	r6, [r3, #0]
    120a:	609d      	str	r5, [r3, #8]
    120c:	bd70      	pop	{r4, r5, r6, pc}
    120e:	4b04      	ldr	r3, [pc, #16]	; (1220 <__mriPlatform_SetHardwareWatchpoint+0x88>)
    1210:	6819      	ldr	r1, [r3, #0]
    1212:	2908      	cmp	r1, #8
    1214:	bfb8      	it	lt
    1216:	2108      	movlt	r1, #8
    1218:	6019      	str	r1, [r3, #0]
    121a:	bd70      	pop	{r4, r5, r6, pc}
    121c:	000037ec 	.word	0x000037ec
    1220:	100001dc 	.word	0x100001dc
    1224:	e0001000 	.word	0xe0001000

00001228 <__mriPlatform_ClearHardwareWatchpoint>:
    1228:	2a02      	cmp	r2, #2
    122a:	bf98      	it	ls
    122c:	4b11      	ldrls	r3, [pc, #68]	; (1274 <__mriPlatform_ClearHardwareWatchpoint+0x4c>)
    122e:	b510      	push	{r4, lr}
    1230:	bf94      	ite	ls
    1232:	5c9a      	ldrbls	r2, [r3, r2]
    1234:	2200      	movhi	r2, #0
    1236:	1e4c      	subs	r4, r1, #1
    1238:	400c      	ands	r4, r1
    123a:	d106      	bne.n	124a <__mriPlatform_ClearHardwareWatchpoint+0x22>
    123c:	424b      	negs	r3, r1
    123e:	4003      	ands	r3, r0
    1240:	4298      	cmp	r0, r3
    1242:	d102      	bne.n	124a <__mriPlatform_ClearHardwareWatchpoint+0x22>
    1244:	1f53      	subs	r3, r2, #5
    1246:	2b02      	cmp	r3, #2
    1248:	d906      	bls.n	1258 <__mriPlatform_ClearHardwareWatchpoint+0x30>
    124a:	480b      	ldr	r0, [pc, #44]	; (1278 <__mriPlatform_ClearHardwareWatchpoint+0x50>)
    124c:	6802      	ldr	r2, [r0, #0]
    124e:	2a04      	cmp	r2, #4
    1250:	bfb8      	it	lt
    1252:	2204      	movlt	r2, #4
    1254:	6002      	str	r2, [r0, #0]
    1256:	bd10      	pop	{r4, pc}
    1258:	f7ff fb0e 	bl	878 <findDWTComparator>
    125c:	b140      	cbz	r0, 1270 <__mriPlatform_ClearHardwareWatchpoint+0x48>
    125e:	6004      	str	r4, [r0, #0]
    1260:	6044      	str	r4, [r0, #4]
    1262:	6881      	ldr	r1, [r0, #8]
    1264:	f421 73d7 	bic.w	r3, r1, #430	; 0x1ae
    1268:	f023 0201 	bic.w	r2, r3, #1
    126c:	6082      	str	r2, [r0, #8]
    126e:	bd10      	pop	{r4, pc}
    1270:	bd10      	pop	{r4, pc}
    1272:	bf00      	nop
    1274:	000037ec 	.word	0x000037ec
    1278:	100001dc 	.word	0x100001dc

0000127c <__mriPlatform_GetTargetXmlSize>:
    127c:	f240 20b9 	movw	r0, #697	; 0x2b9
    1280:	4770      	bx	lr
	...

00001284 <__mriPlatform_GetTargetXml>:
    1284:	4800      	ldr	r0, [pc, #0]	; (1288 <__mriPlatform_GetTargetXml+0x4>)
    1286:	4770      	bx	lr
    1288:	000034ef 	.word	0x000034ef

0000128c <__mriPlatform_CommUartIndex>:
    128c:	4b03      	ldr	r3, [pc, #12]	; (129c <__mriPlatform_CommUartIndex+0x10>)
    128e:	4804      	ldr	r0, [pc, #16]	; (12a0 <__mriPlatform_CommUartIndex+0x14>)
    1290:	681a      	ldr	r2, [r3, #0]
    1292:	1a11      	subs	r1, r2, r0
    1294:	4803      	ldr	r0, [pc, #12]	; (12a4 <__mriPlatform_CommUartIndex+0x18>)
    1296:	108b      	asrs	r3, r1, #2
    1298:	4358      	muls	r0, r3
    129a:	4770      	bx	lr
    129c:	100004d8 	.word	0x100004d8
    12a0:	100000c8 	.word	0x100000c8
    12a4:	38e38e39 	.word	0x38e38e39

000012a8 <__mriPlatform_CommHasReceiveData>:
    12a8:	4b03      	ldr	r3, [pc, #12]	; (12b8 <__mriPlatform_CommHasReceiveData+0x10>)
    12aa:	6818      	ldr	r0, [r3, #0]
    12ac:	68c1      	ldr	r1, [r0, #12]
    12ae:	7d0a      	ldrb	r2, [r1, #20]
    12b0:	f002 0001 	and.w	r0, r2, #1
    12b4:	4770      	bx	lr
    12b6:	bf00      	nop
    12b8:	100004d8 	.word	0x100004d8

000012bc <__mriPlatform_CommReceiveChar>:
    12bc:	b508      	push	{r3, lr}
    12be:	f7ff fff3 	bl	12a8 <__mriPlatform_CommHasReceiveData>
    12c2:	2800      	cmp	r0, #0
    12c4:	d0fb      	beq.n	12be <__mriPlatform_CommReceiveChar+0x2>
    12c6:	4b02      	ldr	r3, [pc, #8]	; (12d0 <__mriPlatform_CommReceiveChar+0x14>)
    12c8:	6818      	ldr	r0, [r3, #0]
    12ca:	68c1      	ldr	r1, [r0, #12]
    12cc:	7808      	ldrb	r0, [r1, #0]
    12ce:	bd08      	pop	{r3, pc}
    12d0:	100004d8 	.word	0x100004d8

000012d4 <__mriPlatform_CommSendChar>:
    12d4:	4b05      	ldr	r3, [pc, #20]	; (12ec <__mriPlatform_CommSendChar+0x18>)
    12d6:	6819      	ldr	r1, [r3, #0]
    12d8:	68cb      	ldr	r3, [r1, #12]
    12da:	7d1a      	ldrb	r2, [r3, #20]
    12dc:	f002 0120 	and.w	r1, r2, #32
    12e0:	b2ca      	uxtb	r2, r1
    12e2:	2a00      	cmp	r2, #0
    12e4:	d0f9      	beq.n	12da <__mriPlatform_CommSendChar+0x6>
    12e6:	b2c0      	uxtb	r0, r0
    12e8:	7018      	strb	r0, [r3, #0]
    12ea:	4770      	bx	lr
    12ec:	100004d8 	.word	0x100004d8

000012f0 <__mriPlatform_CommCausedInterrupt>:
    12f0:	b510      	push	{r4, lr}
    12f2:	f000 fb73 	bl	19dc <__mriGetIPSR>
    12f6:	4604      	mov	r4, r0
    12f8:	f7ff ffc8 	bl	128c <__mriPlatform_CommUartIndex>
    12fc:	b2e3      	uxtb	r3, r4
    12fe:	3015      	adds	r0, #21
    1300:	1a19      	subs	r1, r3, r0
    1302:	4248      	negs	r0, r1
    1304:	4148      	adcs	r0, r1
    1306:	bd10      	pop	{r4, pc}

00001308 <__mriPlatform_CommClearInterrupt>:
    1308:	4b02      	ldr	r3, [pc, #8]	; (1314 <__mriPlatform_CommClearInterrupt+0xc>)
    130a:	6818      	ldr	r0, [r3, #0]
    130c:	68c1      	ldr	r1, [r0, #12]
    130e:	688b      	ldr	r3, [r1, #8]
    1310:	4770      	bx	lr
    1312:	bf00      	nop
    1314:	100004d8 	.word	0x100004d8

00001318 <__mriPlatform_CommSharingWithApplication>:
    1318:	4b02      	ldr	r3, [pc, #8]	; (1324 <__mriPlatform_CommSharingWithApplication+0xc>)
    131a:	6858      	ldr	r0, [r3, #4]
    131c:	f000 0001 	and.w	r0, r0, #1
    1320:	4770      	bx	lr
    1322:	bf00      	nop
    1324:	100004d8 	.word	0x100004d8

00001328 <__mriPlatform_CommShouldWaitForGdbConnect>:
    1328:	4b05      	ldr	r3, [pc, #20]	; (1340 <__mriPlatform_CommShouldWaitForGdbConnect+0x18>)
    132a:	6858      	ldr	r0, [r3, #4]
    132c:	0782      	lsls	r2, r0, #30
    132e:	d404      	bmi.n	133a <__mriPlatform_CommShouldWaitForGdbConnect+0x12>
    1330:	f000 0101 	and.w	r1, r0, #1
    1334:	f081 0001 	eor.w	r0, r1, #1
    1338:	4770      	bx	lr
    133a:	2000      	movs	r0, #0
    133c:	4770      	bx	lr
    133e:	bf00      	nop
    1340:	100004d8 	.word	0x100004d8

00001344 <__mriPlatform_CommIsWaitingForGdbToConnect>:
    1344:	b508      	push	{r3, lr}
    1346:	f7ff ffef 	bl	1328 <__mriPlatform_CommShouldWaitForGdbConnect>
    134a:	b128      	cbz	r0, 1358 <__mriPlatform_CommIsWaitingForGdbToConnect+0x14>
    134c:	4b03      	ldr	r3, [pc, #12]	; (135c <__mriPlatform_CommIsWaitingForGdbToConnect+0x18>)
    134e:	6818      	ldr	r0, [r3, #0]
    1350:	68c1      	ldr	r1, [r0, #12]
    1352:	6a0a      	ldr	r2, [r1, #32]
    1354:	f002 0001 	and.w	r0, r2, #1
    1358:	bd08      	pop	{r3, pc}
    135a:	bf00      	nop
    135c:	100004d8 	.word	0x100004d8

00001360 <__mriPlatform_CommPrepareToWaitForGdbConnection>:
    1360:	b508      	push	{r3, lr}
    1362:	f7ff ffe1 	bl	1328 <__mriPlatform_CommShouldWaitForGdbConnect>
    1366:	b120      	cbz	r0, 1372 <__mriPlatform_CommPrepareToWaitForGdbConnection+0x12>
    1368:	4b02      	ldr	r3, [pc, #8]	; (1374 <__mriPlatform_CommPrepareToWaitForGdbConnection+0x14>)
    136a:	2207      	movs	r2, #7
    136c:	6818      	ldr	r0, [r3, #0]
    136e:	68c1      	ldr	r1, [r0, #12]
    1370:	620a      	str	r2, [r1, #32]
    1372:	bd08      	pop	{r3, pc}
    1374:	100004d8 	.word	0x100004d8

00001378 <__mriLpc176xUart_Init>:
    1378:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    137c:	b087      	sub	sp, #28
    137e:	4604      	mov	r4, r0
    1380:	2100      	movs	r1, #0
    1382:	220c      	movs	r2, #12
    1384:	a803      	add	r0, sp, #12
    1386:	f002 f818 	bl	33ba <memset>
    138a:	4995      	ldr	r1, [pc, #596]	; (15e0 <__mriLpc176xUart_Init+0x268>)
    138c:	4620      	mov	r0, r4
    138e:	f7ff fa47 	bl	820 <__mriToken_MatchingString>
    1392:	4620      	mov	r0, r4
    1394:	4993      	ldr	r1, [pc, #588]	; (15e4 <__mriLpc176xUart_Init+0x26c>)
    1396:	f7ff fa43 	bl	820 <__mriToken_MatchingString>
    139a:	b108      	cbz	r0, 13a0 <__mriLpc176xUart_Init+0x28>
    139c:	2303      	movs	r3, #3
    139e:	9304      	str	r3, [sp, #16]
    13a0:	4620      	mov	r0, r4
    13a2:	4991      	ldr	r1, [pc, #580]	; (15e8 <__mriLpc176xUart_Init+0x270>)
    13a4:	f7ff fa3c 	bl	820 <__mriToken_MatchingString>
    13a8:	b108      	cbz	r0, 13ae <__mriLpc176xUart_Init+0x36>
    13aa:	2001      	movs	r0, #1
    13ac:	9004      	str	r0, [sp, #16]
    13ae:	4620      	mov	r0, r4
    13b0:	498e      	ldr	r1, [pc, #568]	; (15ec <__mriLpc176xUart_Init+0x274>)
    13b2:	f7ff fa35 	bl	820 <__mriToken_MatchingString>
    13b6:	b108      	cbz	r0, 13bc <__mriLpc176xUart_Init+0x44>
    13b8:	2102      	movs	r1, #2
    13ba:	9104      	str	r1, [sp, #16]
    13bc:	4620      	mov	r0, r4
    13be:	498c      	ldr	r1, [pc, #560]	; (15f0 <__mriLpc176xUart_Init+0x278>)
    13c0:	f7ff fa2e 	bl	820 <__mriToken_MatchingString>
    13c4:	b108      	cbz	r0, 13ca <__mriLpc176xUart_Init+0x52>
    13c6:	2200      	movs	r2, #0
    13c8:	9204      	str	r2, [sp, #16]
    13ca:	4620      	mov	r0, r4
    13cc:	4989      	ldr	r1, [pc, #548]	; (15f4 <__mriLpc176xUart_Init+0x27c>)
    13ce:	f7ff fa27 	bl	820 <__mriToken_MatchingString>
    13d2:	b108      	cbz	r0, 13d8 <__mriLpc176xUart_Init+0x60>
    13d4:	2701      	movs	r7, #1
    13d6:	9704      	str	r7, [sp, #16]
    13d8:	4620      	mov	r0, r4
    13da:	4987      	ldr	r1, [pc, #540]	; (15f8 <__mriLpc176xUart_Init+0x280>)
    13dc:	f7ff fa20 	bl	820 <__mriToken_MatchingString>
    13e0:	b108      	cbz	r0, 13e6 <__mriLpc176xUart_Init+0x6e>
    13e2:	2302      	movs	r3, #2
    13e4:	9304      	str	r3, [sp, #16]
    13e6:	4620      	mov	r0, r4
    13e8:	4984      	ldr	r1, [pc, #528]	; (15fc <__mriLpc176xUart_Init+0x284>)
    13ea:	f7ff fa19 	bl	820 <__mriToken_MatchingString>
    13ee:	b108      	cbz	r0, 13f4 <__mriLpc176xUart_Init+0x7c>
    13f0:	2003      	movs	r0, #3
    13f2:	9004      	str	r0, [sp, #16]
    13f4:	4620      	mov	r0, r4
    13f6:	4982      	ldr	r1, [pc, #520]	; (1600 <__mriLpc176xUart_Init+0x288>)
    13f8:	f7ff fa27 	bl	84a <__mriToken_MatchingStringPrefix>
    13fc:	b1d8      	cbz	r0, 1436 <__mriLpc176xUart_Init+0xbe>
    13fe:	300e      	adds	r0, #14
    1400:	2300      	movs	r3, #0
    1402:	f810 1b01 	ldrb.w	r1, [r0], #1
    1406:	b1a9      	cbz	r1, 1434 <__mriLpc176xUart_Init+0xbc>
    1408:	4a7e      	ldr	r2, [pc, #504]	; (1604 <__mriLpc176xUart_Init+0x28c>)
    140a:	2500      	movs	r5, #0
    140c:	6015      	str	r5, [r2, #0]
    140e:	f810 1c01 	ldrb.w	r1, [r0, #-1]
    1412:	3930      	subs	r1, #48	; 0x30
    1414:	b2ce      	uxtb	r6, r1
    1416:	2e09      	cmp	r6, #9
    1418:	d902      	bls.n	1420 <__mriLpc176xUart_Init+0xa8>
    141a:	2709      	movs	r7, #9
    141c:	6017      	str	r7, [r2, #0]
    141e:	4629      	mov	r1, r5
    1420:	6812      	ldr	r2, [r2, #0]
    1422:	b11a      	cbz	r2, 142c <__mriLpc176xUart_Init+0xb4>
    1424:	4977      	ldr	r1, [pc, #476]	; (1604 <__mriLpc176xUart_Init+0x28c>)
    1426:	2000      	movs	r0, #0
    1428:	6008      	str	r0, [r1, #0]
    142a:	e003      	b.n	1434 <__mriLpc176xUart_Init+0xbc>
    142c:	270a      	movs	r7, #10
    142e:	fb07 1303 	mla	r3, r7, r3, r1
    1432:	e7e6      	b.n	1402 <__mriLpc176xUart_Init+0x8a>
    1434:	9305      	str	r3, [sp, #20]
    1436:	4620      	mov	r0, r4
    1438:	4973      	ldr	r1, [pc, #460]	; (1608 <__mriLpc176xUart_Init+0x290>)
    143a:	f7ff f9f1 	bl	820 <__mriToken_MatchingString>
    143e:	b108      	cbz	r0, 1444 <__mriLpc176xUart_Init+0xcc>
    1440:	2201      	movs	r2, #1
    1442:	9203      	str	r2, [sp, #12]
    1444:	9f04      	ldr	r7, [sp, #16]
    1446:	2124      	movs	r1, #36	; 0x24
    1448:	4379      	muls	r1, r7
    144a:	4870      	ldr	r0, [pc, #448]	; (160c <__mriLpc176xUart_Init+0x294>)
    144c:	4a70      	ldr	r2, [pc, #448]	; (1610 <__mriLpc176xUart_Init+0x298>)
    144e:	9f03      	ldr	r7, [sp, #12]
    1450:	1843      	adds	r3, r0, r1
    1452:	6013      	str	r3, [r2, #0]
    1454:	b127      	cbz	r7, 1460 <__mriLpc176xUart_Init+0xe8>
    1456:	6851      	ldr	r1, [r2, #4]
    1458:	f041 0301 	orr.w	r3, r1, #1
    145c:	6053      	str	r3, [r2, #4]
    145e:	e0bb      	b.n	15d8 <__mriLpc176xUart_Init+0x260>
    1460:	4a6c      	ldr	r2, [pc, #432]	; (1614 <__mriLpc176xUart_Init+0x29c>)
    1462:	691c      	ldr	r4, [r3, #16]
    1464:	f8d2 50c4 	ldr.w	r5, [r2, #196]	; 0xc4
    1468:	4325      	orrs	r5, r4
    146a:	f8c2 50c4 	str.w	r5, [r2, #196]	; 0xc4
    146e:	5842      	ldr	r2, [r0, r1]
    1470:	6959      	ldr	r1, [r3, #20]
    1472:	6810      	ldr	r0, [r2, #0]
    1474:	ea20 0401 	bic.w	r4, r0, r1
    1478:	6014      	str	r4, [r2, #0]
    147a:	6958      	ldr	r0, [r3, #20]
    147c:	6815      	ldr	r5, [r2, #0]
    147e:	f000 3155 	and.w	r1, r0, #1431655765	; 0x55555555
    1482:	4329      	orrs	r1, r5
    1484:	6011      	str	r1, [r2, #0]
    1486:	68da      	ldr	r2, [r3, #12]
    1488:	2510      	movs	r5, #16
    148a:	f882 5028 	strb.w	r5, [r2, #40]	; 0x28
    148e:	68dc      	ldr	r4, [r3, #12]
    1490:	2101      	movs	r1, #1
    1492:	7221      	strb	r1, [r4, #8]
    1494:	68da      	ldr	r2, [r3, #12]
    1496:	2003      	movs	r0, #3
    1498:	7310      	strb	r0, [r2, #12]
    149a:	9a05      	ldr	r2, [sp, #20]
    149c:	2a00      	cmp	r2, #0
    149e:	d05b      	beq.n	1558 <__mriLpc176xUart_Init+0x1e0>
    14a0:	4c5d      	ldr	r4, [pc, #372]	; (1618 <__mriLpc176xUart_Init+0x2a0>)
    14a2:	6820      	ldr	r0, [r4, #0]
    14a4:	ea4f 1c10 	mov.w	r12, r0, lsr #4
    14a8:	fbbc f4f2 	udiv	r4, r12, r2
    14ac:	fb02 f004 	mul.w	r0, r2, r4
    14b0:	4560      	cmp	r0, r12
    14b2:	d03a      	beq.n	152a <__mriLpc176xUart_Init+0x1b2>
    14b4:	0116      	lsls	r6, r2, #4
    14b6:	ea4f 2c0c 	mov.w	r12, r12, lsl #8
    14ba:	9601      	str	r6, [sp, #4]
    14bc:	460d      	mov	r5, r1
    14be:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
    14c2:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    14c6:	4616      	mov	r6, r2
    14c8:	2001      	movs	r0, #1
    14ca:	4288      	cmp	r0, r1
    14cc:	d228      	bcs.n	1520 <__mriLpc176xUart_Init+0x1a8>
    14ce:	ea4f 1906 	mov.w	r9, r6, lsl #4
    14d2:	fbb9 fafe 	udiv	r10, r9, lr
    14d6:	eb0a 0b02 	add.w	r11, r10, r2
    14da:	fbbc f9fb 	udiv	r9, r12, r11
    14de:	f109 0a80 	add.w	r10, r9, #128	; 0x80
    14e2:	ea4f 291a 	mov.w	r9, r10, lsr #8
    14e6:	ea4f 1a09 	mov.w	r10, r9, lsl #4
    14ea:	fb00 fb0a 	mul.w	r11, r0, r10
    14ee:	ea4f 1b0b 	mov.w	r11, r11, lsl #4
    14f2:	fbbb fbfe 	udiv	r11, r11, lr
    14f6:	44da      	add	r10, r11
    14f8:	f8dd b004 	ldr.w	r11, [sp, #4]
    14fc:	fbbc fafa 	udiv	r10, r12, r10
    1500:	ebcb 0a0a 	rsb	r10, r11, r10
    1504:	f1ba 0f00 	cmp.w	r10, #0
    1508:	bfb8      	it	lt
    150a:	f1ca 0a00 	rsblt	r10, r10, #0
    150e:	45c2      	cmp	r10, r8
    1510:	d203      	bcs.n	151a <__mriLpc176xUart_Init+0x1a2>
    1512:	4607      	mov	r7, r0
    1514:	460d      	mov	r5, r1
    1516:	464c      	mov	r4, r9
    1518:	46d0      	mov	r8, r10
    151a:	3001      	adds	r0, #1
    151c:	18b6      	adds	r6, r6, r2
    151e:	e7d4      	b.n	14ca <__mriLpc176xUart_Init+0x152>
    1520:	3101      	adds	r1, #1
    1522:	2910      	cmp	r1, #16
    1524:	d1cd      	bne.n	14c2 <__mriLpc176xUart_Init+0x14a>
    1526:	ea47 1505 	orr.w	r5, r7, r5, lsl #4
    152a:	68d8      	ldr	r0, [r3, #12]
    152c:	b2ed      	uxtb	r5, r5
    152e:	7b01      	ldrb	r1, [r0, #12]
    1530:	f041 0280 	orr.w	r2, r1, #128	; 0x80
    1534:	b2e1      	uxtb	r1, r4
    1536:	f3c4 2407 	ubfx	r4, r4, #8, #8
    153a:	7302      	strb	r2, [r0, #12]
    153c:	7001      	strb	r1, [r0, #0]
    153e:	7104      	strb	r4, [r0, #4]
    1540:	f880 5028 	strb.w	r5, [r0, #40]	; 0x28
    1544:	68d8      	ldr	r0, [r3, #12]
    1546:	4c32      	ldr	r4, [pc, #200]	; (1610 <__mriLpc176xUart_Init+0x298>)
    1548:	7b02      	ldrb	r2, [r0, #12]
    154a:	f002 017f 	and.w	r1, r2, #127	; 0x7f
    154e:	7301      	strb	r1, [r0, #12]
    1550:	6860      	ldr	r0, [r4, #4]
    1552:	f040 0202 	orr.w	r2, r0, #2
    1556:	6062      	str	r2, [r4, #4]
    1558:	685a      	ldr	r2, [r3, #4]
    155a:	6999      	ldr	r1, [r3, #24]
    155c:	6814      	ldr	r4, [r2, #0]
    155e:	6a18      	ldr	r0, [r3, #32]
    1560:	ea24 0401 	bic.w	r4, r4, r1
    1564:	4008      	ands	r0, r1
    1566:	4304      	orrs	r4, r0
    1568:	6014      	str	r4, [r2, #0]
    156a:	689a      	ldr	r2, [r3, #8]
    156c:	69d9      	ldr	r1, [r3, #28]
    156e:	6814      	ldr	r4, [r2, #0]
    1570:	6a18      	ldr	r0, [r3, #32]
    1572:	ea24 0401 	bic.w	r4, r4, r1
    1576:	4008      	ands	r0, r1
    1578:	ea44 0100 	orr.w	r1, r4, r0
    157c:	6011      	str	r1, [r2, #0]
    157e:	68da      	ldr	r2, [r3, #12]
    1580:	7b11      	ldrb	r1, [r2, #12]
    1582:	7b10      	ldrb	r0, [r2, #12]
    1584:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    1588:	7310      	strb	r0, [r2, #12]
    158a:	68da      	ldr	r2, [r3, #12]
    158c:	2001      	movs	r0, #1
    158e:	6050      	str	r0, [r2, #4]
    1590:	68db      	ldr	r3, [r3, #12]
    1592:	7319      	strb	r1, [r3, #12]
    1594:	f7ff fee4 	bl	1360 <__mriPlatform_CommPrepareToWaitForGdbConnection>
    1598:	f7ff fe78 	bl	128c <__mriPlatform_CommUartIndex>
    159c:	1d41      	adds	r1, r0, #5
    159e:	b2c8      	uxtb	r0, r1
    15a0:	b2c2      	uxtb	r2, r0
    15a2:	b253      	sxtb	r3, r2
    15a4:	2b00      	cmp	r3, #0
    15a6:	da06      	bge.n	15b6 <__mriLpc176xUart_Init+0x23e>
    15a8:	4b1c      	ldr	r3, [pc, #112]	; (161c <__mriLpc176xUart_Init+0x2a4>)
    15aa:	f000 010f 	and.w	r1, r0, #15
    15ae:	18cb      	adds	r3, r1, r3
    15b0:	2100      	movs	r1, #0
    15b2:	7619      	strb	r1, [r3, #24]
    15b4:	e006      	b.n	15c4 <__mriLpc176xUart_Init+0x24c>
    15b6:	f103 4160 	add.w	r1, r3, #3758096384	; 0xe0000000
    15ba:	f501 4361 	add.w	r3, r1, #57600	; 0xe100
    15be:	2100      	movs	r1, #0
    15c0:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
    15c4:	b252      	sxtb	r2, r2
    15c6:	f000 001f 	and.w	r0, r0, #31
    15ca:	2301      	movs	r3, #1
    15cc:	0951      	lsrs	r1, r2, #5
    15ce:	fa03 f200 	lsl.w	r2, r3, r0
    15d2:	4813      	ldr	r0, [pc, #76]	; (1620 <__mriLpc176xUart_Init+0x2a8>)
    15d4:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
    15d8:	b007      	add	sp, #28
    15da:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    15de:	bf00      	nop
    15e0:	000039fd 	.word	0x000039fd
    15e4:	00003a0f 	.word	0x00003a0f
    15e8:	00003a24 	.word	0x00003a24
    15ec:	00003a3a 	.word	0x00003a3a
    15f0:	00003a50 	.word	0x00003a50
    15f4:	00003a5b 	.word	0x00003a5b
    15f8:	00003a66 	.word	0x00003a66
    15fc:	00003a71 	.word	0x00003a71
    1600:	000039ee 	.word	0x000039ee
    1604:	100001dc 	.word	0x100001dc
    1608:	00003a7c 	.word	0x00003a7c
    160c:	100000c8 	.word	0x100000c8
    1610:	100004d8 	.word	0x100004d8
    1614:	400fc000 	.word	0x400fc000
    1618:	10000158 	.word	0x10000158
    161c:	e000ecfc 	.word	0xe000ecfc
    1620:	e000e100 	.word	0xe000e100

00001624 <__mriPlatform_CommWaitForReceiveDataToStop>:
    1624:	b538      	push	{r3, r4, r5, lr}
    1626:	4b13      	ldr	r3, [pc, #76]	; (1674 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    1628:	681c      	ldr	r4, [r3, #0]
    162a:	685d      	ldr	r5, [r3, #4]
    162c:	68da      	ldr	r2, [r3, #12]
    162e:	f022 407f 	bic.w	r0, r2, #4278190080	; 0xff000000
    1632:	b140      	cbz	r0, 1646 <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    1634:	2200      	movs	r2, #0
    1636:	601a      	str	r2, [r3, #0]
    1638:	68d9      	ldr	r1, [r3, #12]
    163a:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    163e:	6058      	str	r0, [r3, #4]
    1640:	609a      	str	r2, [r3, #8]
    1642:	2205      	movs	r2, #5
    1644:	601a      	str	r2, [r3, #0]
    1646:	f7ff fe2f 	bl	12a8 <__mriPlatform_CommHasReceiveData>
    164a:	4b0a      	ldr	r3, [pc, #40]	; (1674 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    164c:	b930      	cbnz	r0, 165c <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    164e:	68d9      	ldr	r1, [r3, #12]
    1650:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    1654:	b110      	cbz	r0, 165c <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    1656:	681a      	ldr	r2, [r3, #0]
    1658:	03d1      	lsls	r1, r2, #15
    165a:	d5f4      	bpl.n	1646 <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    165c:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
    1660:	605d      	str	r5, [r3, #4]
    1662:	601c      	str	r4, [r3, #0]
    1664:	f7ff fe20 	bl	12a8 <__mriPlatform_CommHasReceiveData>
    1668:	b110      	cbz	r0, 1670 <__mriPlatform_CommWaitForReceiveDataToStop+0x4c>
    166a:	f7ff fe27 	bl	12bc <__mriPlatform_CommReceiveChar>
    166e:	e7da      	b.n	1626 <__mriPlatform_CommWaitForReceiveDataToStop+0x2>
    1670:	bd38      	pop	{r3, r4, r5, pc}
    1672:	bf00      	nop
    1674:	e000e010 	.word	0xe000e010

00001678 <__mriLpc176x_Init>:
    1678:	b538      	push	{r3, r4, r5, lr}
    167a:	4c0c      	ldr	r4, [pc, #48]	; (16ac <__mriLpc176x_Init+0x34>)
    167c:	2300      	movs	r3, #0
    167e:	6023      	str	r3, [r4, #0]
    1680:	4605      	mov	r5, r0
    1682:	f7ff fa99 	bl	bb8 <__mriCortexMInit>
    1686:	6823      	ldr	r3, [r4, #0]
    1688:	b973      	cbnz	r3, 16a8 <__mriLpc176x_Init+0x30>
    168a:	f103 4260 	add.w	r2, r3, #3758096384	; 0xe0000000
    168e:	3301      	adds	r3, #1
    1690:	2108      	movs	r1, #8
    1692:	f502 4061 	add.w	r0, r2, #57600	; 0xe100
    1696:	2b23      	cmp	r3, #35	; 0x23
    1698:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
    169c:	d1f5      	bne.n	168a <__mriLpc176x_Init+0x12>
    169e:	4628      	mov	r0, r5
    16a0:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    16a4:	f7ff be68 	b.w	1378 <__mriLpc176xUart_Init>
    16a8:	bd38      	pop	{r3, r4, r5, pc}
    16aa:	bf00      	nop
    16ac:	100001dc 	.word	0x100001dc

000016b0 <__mriPlatform_GetDeviceMemoryMapXmlSize>:
    16b0:	f240 50c6 	movw	r0, #1478	; 0x5c6
    16b4:	4770      	bx	lr
	...

000016b8 <__mriPlatform_GetDeviceMemoryMapXml>:
    16b8:	4800      	ldr	r0, [pc, #0]	; (16bc <__mriPlatform_GetDeviceMemoryMapXml+0x4>)
    16ba:	4770      	bx	lr
    16bc:	00003a8b 	.word	0x00003a8b

000016c0 <__mriPlatform_Init>:
    16c0:	4a1f      	ldr	r2, [pc, #124]	; (1740 <__mriPlatform_Init+0x80>)
    16c2:	2300      	movs	r3, #0
    16c4:	b570      	push	{r4, r5, r6, lr}
    16c6:	f842 3b04 	str.w	r3, [r2], #4
    16ca:	4b1e      	ldr	r3, [pc, #120]	; (1744 <__mriPlatform_Init+0x84>)
    16cc:	4606      	mov	r6, r0
    16ce:	f103 0520 	add.w	r5, r3, #32
    16d2:	6818      	ldr	r0, [r3, #0]
    16d4:	6859      	ldr	r1, [r3, #4]
    16d6:	4614      	mov	r4, r2
    16d8:	c403      	stmia	r4!, {r0, r1}
    16da:	3308      	adds	r3, #8
    16dc:	42ab      	cmp	r3, r5
    16de:	4622      	mov	r2, r4
    16e0:	d1f7      	bne.n	16d2 <__mriPlatform_Init+0x12>
    16e2:	6818      	ldr	r0, [r3, #0]
    16e4:	4918      	ldr	r1, [pc, #96]	; (1748 <__mriPlatform_Init+0x88>)
    16e6:	6020      	str	r0, [r4, #0]
    16e8:	680b      	ldr	r3, [r1, #0]
    16ea:	4c18      	ldr	r4, [pc, #96]	; (174c <__mriPlatform_Init+0x8c>)
    16ec:	2500      	movs	r5, #0
    16ee:	07d8      	lsls	r0, r3, #31
    16f0:	6025      	str	r5, [r4, #0]
    16f2:	d51b      	bpl.n	172c <__mriPlatform_Init+0x6c>
    16f4:	4816      	ldr	r0, [pc, #88]	; (1750 <__mriPlatform_Init+0x90>)
    16f6:	f000 fa4f 	bl	1b98 <__mriGetMbedUid>
    16fa:	f000 fa41 	bl	1b80 <__mriDisableMbed>
    16fe:	6025      	str	r5, [r4, #0]
    1700:	f241 3089 	movw	r0, #5001	; 0x1389
    1704:	3801      	subs	r0, #1
    1706:	4a10      	ldr	r2, [pc, #64]	; (1748 <__mriPlatform_Init+0x88>)
    1708:	d002      	beq.n	1710 <__mriPlatform_Init+0x50>
    170a:	6811      	ldr	r1, [r2, #0]
    170c:	07c9      	lsls	r1, r1, #31
    170e:	d4f9      	bmi.n	1704 <__mriPlatform_Init+0x44>
    1710:	6813      	ldr	r3, [r2, #0]
    1712:	480e      	ldr	r0, [pc, #56]	; (174c <__mriPlatform_Init+0x8c>)
    1714:	f013 0f01 	tst.w	r3, #1
    1718:	d001      	beq.n	171e <__mriPlatform_Init+0x5e>
    171a:	2205      	movs	r2, #5
    171c:	6002      	str	r2, [r0, #0]
    171e:	6801      	ldr	r1, [r0, #0]
    1720:	b921      	cbnz	r1, 172c <__mriPlatform_Init+0x6c>
    1722:	4b07      	ldr	r3, [pc, #28]	; (1740 <__mriPlatform_Init+0x80>)
    1724:	6818      	ldr	r0, [r3, #0]
    1726:	f040 0201 	orr.w	r2, r0, #1
    172a:	601a      	str	r2, [r3, #0]
    172c:	4907      	ldr	r1, [pc, #28]	; (174c <__mriPlatform_Init+0x8c>)
    172e:	680b      	ldr	r3, [r1, #0]
    1730:	b923      	cbnz	r3, 173c <__mriPlatform_Init+0x7c>
    1732:	4630      	mov	r0, r6
    1734:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1738:	f7ff bf9e 	b.w	1678 <__mriLpc176x_Init>
    173c:	bd70      	pop	{r4, r5, r6, pc}
    173e:	bf00      	nop
    1740:	100001a8 	.word	0x100001a8
    1744:	00004052 	.word	0x00004052
    1748:	e000edf0 	.word	0xe000edf0
    174c:	100001dc 	.word	0x100001dc
    1750:	100001ac 	.word	0x100001ac

00001754 <__mriMbed1768_GetMbedUid>:
    1754:	4800      	ldr	r0, [pc, #0]	; (1758 <__mriMbed1768_GetMbedUid+0x4>)
    1756:	4770      	bx	lr
    1758:	100001ac 	.word	0x100001ac

0000175c <__mriSemihost_IsDebuggeeMakingSemihostCall>:
    175c:	b508      	push	{r3, lr}
    175e:	f7ff fc4b 	bl	ff8 <__mriPlatform_TypeOfCurrentInstruction>
    1762:	3801      	subs	r0, #1
    1764:	b2c0      	uxtb	r0, r0
    1766:	2801      	cmp	r0, #1
    1768:	bf8c      	ite	hi
    176a:	2000      	movhi	r0, #0
    176c:	2001      	movls	r0, #1
    176e:	bd08      	pop	{r3, pc}

00001770 <__mriSemihost_HandleSemihostRequest>:
    1770:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    1772:	f7ff fc41 	bl	ff8 <__mriPlatform_TypeOfCurrentInstruction>
    1776:	4604      	mov	r4, r0
    1778:	4668      	mov	r0, sp
    177a:	f7ff fc51 	bl	1020 <__mriPlatform_GetSemihostCallParameters>
    177e:	2c01      	cmp	r4, #1
    1780:	d103      	bne.n	178a <__mriSemihost_HandleSemihostRequest+0x1a>
    1782:	4668      	mov	r0, sp
    1784:	f000 f894 	bl	18b0 <__mriSemihost_HandleMbedSemihostRequest>
    1788:	e006      	b.n	1798 <__mriSemihost_HandleSemihostRequest+0x28>
    178a:	2c02      	cmp	r4, #2
    178c:	d103      	bne.n	1796 <__mriSemihost_HandleSemihostRequest+0x26>
    178e:	4668      	mov	r0, sp
    1790:	f000 f804 	bl	179c <__mriSemihost_HandleNewlibSemihostRequest>
    1794:	e000      	b.n	1798 <__mriSemihost_HandleSemihostRequest+0x28>
    1796:	2000      	movs	r0, #0
    1798:	b004      	add	sp, #16
    179a:	bd10      	pop	{r4, pc}

0000179c <__mriSemihost_HandleNewlibSemihostRequest>:
    179c:	b510      	push	{r4, lr}
    179e:	b08c      	sub	sp, #48	; 0x30
    17a0:	4604      	mov	r4, r0
    17a2:	f7ff fbeb 	bl	f7c <__mriPlatform_GetProgramCounter>
    17a6:	4b33      	ldr	r3, [pc, #204]	; (1874 <CFSR_STACK_ERROR_BITS+0x5c>)
    17a8:	f040 0001 	orr.w	r0, r0, #1
    17ac:	4298      	cmp	r0, r3
    17ae:	d109      	bne.n	17c4 <__mriSemihost_HandleNewlibSemihostRequest+0x28>
    17b0:	6820      	ldr	r0, [r4, #0]
    17b2:	6863      	ldr	r3, [r4, #4]
    17b4:	68a1      	ldr	r1, [r4, #8]
    17b6:	9002      	str	r0, [sp, #8]
    17b8:	a802      	add	r0, sp, #8
    17ba:	9303      	str	r3, [sp, #12]
    17bc:	9104      	str	r1, [sp, #16]
    17be:	f000 fd3b 	bl	2238 <__mriIssueGdbFileWriteRequest>
    17c2:	e055      	b.n	1870 <CFSR_STACK_ERROR_BITS+0x58>
    17c4:	492c      	ldr	r1, [pc, #176]	; (1878 <CFSR_STACK_ERROR_BITS+0x60>)
    17c6:	4288      	cmp	r0, r1
    17c8:	d109      	bne.n	17de <__mriSemihost_HandleNewlibSemihostRequest+0x42>
    17ca:	6823      	ldr	r3, [r4, #0]
    17cc:	6861      	ldr	r1, [r4, #4]
    17ce:	68a2      	ldr	r2, [r4, #8]
    17d0:	a802      	add	r0, sp, #8
    17d2:	9302      	str	r3, [sp, #8]
    17d4:	9103      	str	r1, [sp, #12]
    17d6:	9204      	str	r2, [sp, #16]
    17d8:	f000 fd52 	bl	2280 <__mriIssueGdbFileReadRequest>
    17dc:	e048      	b.n	1870 <CFSR_STACK_ERROR_BITS+0x58>
    17de:	4a27      	ldr	r2, [pc, #156]	; (187c <CFSR_STACK_ERROR_BITS+0x64>)
    17e0:	4290      	cmp	r0, r2
    17e2:	d10c      	bne.n	17fe <__mriSemihost_HandleNewlibSemihostRequest+0x62>
    17e4:	6820      	ldr	r0, [r4, #0]
    17e6:	9008      	str	r0, [sp, #32]
    17e8:	f001 fdfa 	bl	33e0 <strlen>
    17ec:	9009      	str	r0, [sp, #36]	; 0x24
    17ee:	68a0      	ldr	r0, [r4, #8]
    17f0:	6862      	ldr	r2, [r4, #4]
    17f2:	900b      	str	r0, [sp, #44]	; 0x2c
    17f4:	a808      	add	r0, sp, #32
    17f6:	920a      	str	r2, [sp, #40]	; 0x28
    17f8:	f000 fcf0 	bl	21dc <__mriIssueGdbFileOpenRequest>
    17fc:	e038      	b.n	1870 <CFSR_STACK_ERROR_BITS+0x58>
    17fe:	4b20      	ldr	r3, [pc, #128]	; (1880 <CFSR_STACK_ERROR_BITS+0x68>)
    1800:	4298      	cmp	r0, r3
    1802:	d108      	bne.n	1816 <__mriSemihost_HandleNewlibSemihostRequest+0x7a>
    1804:	6820      	ldr	r0, [r4, #0]
    1806:	9000      	str	r0, [sp, #0]
    1808:	f001 fdea 	bl	33e0 <strlen>
    180c:	9001      	str	r0, [sp, #4]
    180e:	4668      	mov	r0, sp
    1810:	f000 fdb0 	bl	2374 <__mriIssueGdbFileUnlinkRequest>
    1814:	e02c      	b.n	1870 <CFSR_STACK_ERROR_BITS+0x58>
    1816:	491b      	ldr	r1, [pc, #108]	; (1884 <CFSR_STACK_ERROR_BITS+0x6c>)
    1818:	4288      	cmp	r0, r1
    181a:	d109      	bne.n	1830 <CFSR_STACK_ERROR_BITS+0x18>
    181c:	6820      	ldr	r0, [r4, #0]
    181e:	6863      	ldr	r3, [r4, #4]
    1820:	68a1      	ldr	r1, [r4, #8]
    1822:	9005      	str	r0, [sp, #20]
    1824:	a805      	add	r0, sp, #20
    1826:	9306      	str	r3, [sp, #24]
    1828:	9107      	str	r1, [sp, #28]
    182a:	f000 fd61 	bl	22f0 <__mriIssueGdbFileSeekRequest>
    182e:	e01f      	b.n	1870 <CFSR_STACK_ERROR_BITS+0x58>
    1830:	4a15      	ldr	r2, [pc, #84]	; (1888 <CFSR_STACK_ERROR_BITS+0x70>)
    1832:	4290      	cmp	r0, r2
    1834:	d103      	bne.n	183e <CFSR_STACK_ERROR_BITS+0x26>
    1836:	6820      	ldr	r0, [r4, #0]
    1838:	f000 fd46 	bl	22c8 <__mriIssueGdbFileCloseRequest>
    183c:	e018      	b.n	1870 <CFSR_STACK_ERROR_BITS+0x58>
    183e:	4b13      	ldr	r3, [pc, #76]	; (188c <CFSR_STACK_ERROR_BITS+0x74>)
    1840:	4298      	cmp	r0, r3
    1842:	d104      	bne.n	184e <CFSR_STACK_ERROR_BITS+0x36>
    1844:	e894 0003 	ldmia.w	r4, {r0, r1}
    1848:	f000 fd76 	bl	2338 <__mriIssueGdbFileFStatRequest>
    184c:	e010      	b.n	1870 <CFSR_STACK_ERROR_BITS+0x58>
    184e:	4910      	ldr	r1, [pc, #64]	; (1890 <CFSR_STACK_ERROR_BITS+0x78>)
    1850:	4288      	cmp	r0, r1
    1852:	d104      	bne.n	185e <CFSR_STACK_ERROR_BITS+0x46>
    1854:	e894 0003 	ldmia.w	r4, {r0, r1}
    1858:	f000 fdaa 	bl	23b0 <__mriIssueGdbFileStatRequest>
    185c:	e008      	b.n	1870 <CFSR_STACK_ERROR_BITS+0x58>
    185e:	4a0d      	ldr	r2, [pc, #52]	; (1894 <CFSR_STACK_ERROR_BITS+0x7c>)
    1860:	4290      	cmp	r0, r2
    1862:	d104      	bne.n	186e <CFSR_STACK_ERROR_BITS+0x56>
    1864:	e894 0003 	ldmia.w	r4, {r0, r1}
    1868:	f000 fdca 	bl	2400 <__mriIssueGdbFileRenameRequest>
    186c:	e000      	b.n	1870 <CFSR_STACK_ERROR_BITS+0x58>
    186e:	2000      	movs	r0, #0
    1870:	b00c      	add	sp, #48	; 0x30
    1872:	bd10      	pop	{r4, pc}
    1874:	00001bad 	.word	0x00001bad
    1878:	00001bb1 	.word	0x00001bb1
    187c:	00001bb5 	.word	0x00001bb5
    1880:	00001bbd 	.word	0x00001bbd
    1884:	00001bc5 	.word	0x00001bc5
    1888:	00001bc9 	.word	0x00001bc9
    188c:	00001bcd 	.word	0x00001bcd
    1890:	00001bc1 	.word	0x00001bc1
    1894:	00001bb9 	.word	0x00001bb9

00001898 <convertBytesTransferredToBytesNotTransferred>:
    1898:	b510      	push	{r4, lr}
    189a:	4604      	mov	r4, r0
    189c:	f7fe fdf6 	bl	48c <__mriCore_GetSemihostReturnCode>
    18a0:	1e03      	subs	r3, r0, #0
    18a2:	bfa8      	it	ge
    18a4:	ebc3 0004 	rsbge	r0, r3, r4
    18a8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    18ac:	f7ff bbca 	b.w	1044 <__mriPlatform_SetSemihostCallReturnValue>

000018b0 <__mriSemihost_HandleMbedSemihostRequest>:
    18b0:	b530      	push	{r4, r5, lr}
    18b2:	6803      	ldr	r3, [r0, #0]
    18b4:	b099      	sub	sp, #100	; 0x64
    18b6:	2b09      	cmp	r3, #9
    18b8:	f000 8084 	beq.w	19c4 <__mriSemihost_HandleMbedSemihostRequest+0x114>
    18bc:	d80f      	bhi.n	18de <__mriSemihost_HandleMbedSemihostRequest+0x2e>
    18be:	2b02      	cmp	r3, #2
    18c0:	d051      	beq.n	1966 <__mriSemihost_HandleMbedSemihostRequest+0xb6>
    18c2:	d803      	bhi.n	18cc <__mriSemihost_HandleMbedSemihostRequest+0x1c>
    18c4:	2b01      	cmp	r3, #1
    18c6:	f040 8084 	bne.w	19d2 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    18ca:	e02c      	b.n	1926 <__mriSemihost_HandleMbedSemihostRequest+0x76>
    18cc:	2b05      	cmp	r3, #5
    18ce:	d050      	beq.n	1972 <__mriSemihost_HandleMbedSemihostRequest+0xc2>
    18d0:	2b06      	cmp	r3, #6
    18d2:	d17e      	bne.n	19d2 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    18d4:	6845      	ldr	r5, [r0, #4]
    18d6:	4628      	mov	r0, r5
    18d8:	f000 fcd2 	bl	2280 <__mriIssueGdbFileReadRequest>
    18dc:	e04d      	b.n	197a <__mriSemihost_HandleMbedSemihostRequest+0xca>
    18de:	2b0c      	cmp	r3, #12
    18e0:	d051      	beq.n	1986 <__mriSemihost_HandleMbedSemihostRequest+0xd6>
    18e2:	d80c      	bhi.n	18fe <__mriSemihost_HandleMbedSemihostRequest+0x4e>
    18e4:	2b0a      	cmp	r3, #10
    18e6:	d174      	bne.n	19d2 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    18e8:	6843      	ldr	r3, [r0, #4]
    18ea:	2000      	movs	r0, #0
    18ec:	681a      	ldr	r2, [r3, #0]
    18ee:	6859      	ldr	r1, [r3, #4]
    18f0:	9003      	str	r0, [sp, #12]
    18f2:	a801      	add	r0, sp, #4
    18f4:	9201      	str	r2, [sp, #4]
    18f6:	9102      	str	r1, [sp, #8]
    18f8:	f000 fcfa 	bl	22f0 <__mriIssueGdbFileSeekRequest>
    18fc:	e037      	b.n	196e <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    18fe:	2b0e      	cmp	r3, #14
    1900:	d05c      	beq.n	19bc <__mriSemihost_HandleMbedSemihostRequest+0x10c>
    1902:	f240 1401 	movw	r4, #257	; 0x101
    1906:	42a3      	cmp	r3, r4
    1908:	d163      	bne.n	19d2 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    190a:	6845      	ldr	r5, [r0, #4]
    190c:	686c      	ldr	r4, [r5, #4]
    190e:	682d      	ldr	r5, [r5, #0]
    1910:	f7ff ff20 	bl	1754 <__mriMbed1768_GetMbedUid>
    1914:	2c24      	cmp	r4, #36	; 0x24
    1916:	bf34      	ite	cc
    1918:	4622      	movcc	r2, r4
    191a:	2224      	movcs	r2, #36	; 0x24
    191c:	4601      	mov	r1, r0
    191e:	4628      	mov	r0, r5
    1920:	f001 fd42 	bl	33a8 <memcpy>
    1924:	e04e      	b.n	19c4 <__mriSemihost_HandleMbedSemihostRequest+0x114>
    1926:	6840      	ldr	r0, [r0, #4]
    1928:	6802      	ldr	r2, [r0, #0]
    192a:	6841      	ldr	r1, [r0, #4]
    192c:	9204      	str	r2, [sp, #16]
    192e:	074a      	lsls	r2, r1, #29
    1930:	d405      	bmi.n	193e <__mriSemihost_HandleMbedSemihostRequest+0x8e>
    1932:	f011 0408 	ands.w	r4, r1, #8
    1936:	d005      	beq.n	1944 <__mriSemihost_HandleMbedSemihostRequest+0x94>
    1938:	f44f 7402 	mov.w	r4, #520	; 0x208
    193c:	e003      	b.n	1946 <__mriSemihost_HandleMbedSemihostRequest+0x96>
    193e:	f44f 64c0 	mov.w	r4, #1536	; 0x600
    1942:	e000      	b.n	1946 <__mriSemihost_HandleMbedSemihostRequest+0x96>
    1944:	4623      	mov	r3, r4
    1946:	f011 0f02 	tst.w	r1, #2
    194a:	6880      	ldr	r0, [r0, #8]
    194c:	bf18      	it	ne
    194e:	2302      	movne	r3, #2
    1950:	ea43 0204 	orr.w	r2, r3, r4
    1954:	f44f 71db 	mov.w	r1, #438	; 0x1b6
    1958:	9005      	str	r0, [sp, #20]
    195a:	a804      	add	r0, sp, #16
    195c:	9206      	str	r2, [sp, #24]
    195e:	9107      	str	r1, [sp, #28]
    1960:	f000 fc3c 	bl	21dc <__mriIssueGdbFileOpenRequest>
    1964:	e003      	b.n	196e <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    1966:	6844      	ldr	r4, [r0, #4]
    1968:	6820      	ldr	r0, [r4, #0]
    196a:	f000 fcad 	bl	22c8 <__mriIssueGdbFileCloseRequest>
    196e:	4604      	mov	r4, r0
    1970:	e030      	b.n	19d4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1972:	6845      	ldr	r5, [r0, #4]
    1974:	4628      	mov	r0, r5
    1976:	f000 fc5f 	bl	2238 <__mriIssueGdbFileWriteRequest>
    197a:	4604      	mov	r4, r0
    197c:	b350      	cbz	r0, 19d4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    197e:	68a8      	ldr	r0, [r5, #8]
    1980:	f7ff ff8a 	bl	1898 <convertBytesTransferredToBytesNotTransferred>
    1984:	e026      	b.n	19d4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1986:	6843      	ldr	r3, [r0, #4]
    1988:	a908      	add	r1, sp, #32
    198a:	6818      	ldr	r0, [r3, #0]
    198c:	f000 fcd4 	bl	2338 <__mriIssueGdbFileFStatRequest>
    1990:	4604      	mov	r4, r0
    1992:	b1f8      	cbz	r0, 19d4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1994:	f7fe fd7a 	bl	48c <__mriCore_GetSemihostReturnCode>
    1998:	b9e0      	cbnz	r0, 19d4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    199a:	f89d 1041 	ldrb.w	r1, [sp, #65]	; 0x41
    199e:	f89d 2042 	ldrb.w	r2, [sp, #66]	; 0x42
    19a2:	0408      	lsls	r0, r1, #16
    19a4:	ea40 2302 	orr.w	r3, r0, r2, lsl #8
    19a8:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
    19ac:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
    19b0:	4313      	orrs	r3, r2
    19b2:	ea43 6001 	orr.w	r0, r3, r1, lsl #24
    19b6:	f7ff fb45 	bl	1044 <__mriPlatform_SetSemihostCallReturnValue>
    19ba:	e00b      	b.n	19d4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19bc:	6840      	ldr	r0, [r0, #4]
    19be:	f000 fcd9 	bl	2374 <__mriIssueGdbFileUnlinkRequest>
    19c2:	e7d4      	b.n	196e <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    19c4:	f7ff fae6 	bl	f94 <__mriPlatform_AdvanceProgramCounterToNextInstruction>
    19c8:	2000      	movs	r0, #0
    19ca:	f7ff fb3b 	bl	1044 <__mriPlatform_SetSemihostCallReturnValue>
    19ce:	2401      	movs	r4, #1
    19d0:	e000      	b.n	19d4 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    19d2:	2400      	movs	r4, #0
    19d4:	4620      	mov	r0, r4
    19d6:	b019      	add	sp, #100	; 0x64
    19d8:	bd30      	pop	{r4, r5, pc}
	...

000019dc <__mriGetIPSR>:
    19dc:	f3ef 8005 	mrs	r0, IPSR
    19e0:	4770      	bx	lr

000019e2 <__mriSetBASEPRI>:
    19e2:	f380 8811 	msr	BASEPRI, r0
    19e6:	4770      	bx	lr

000019e8 <__mriGetBASEPRI>:
    19e8:	f3ef 8011 	mrs	r0, BASEPRI
    19ec:	4770      	bx	lr

000019ee <__mriDSB>:
    19ee:	f3bf 8f4f 	dsb	sy
    19f2:	4770      	bx	lr

000019f4 <__mriISB>:
    19f4:	f3bf 8f6f 	isb	sy
    19f8:	4770      	bx	lr

000019fa <mriExceptionHandler>:
    19fa:	4856      	ldr	r0, [pc, #344]	; (1b54 <UART3_IRQHandler+0x6>)
    19fc:	f000 b803 	b.w	1a06 <mriGetSPAndCallHandler>

00001a00 <mriFaultHandler>:
    1a00:	4855      	ldr	r0, [pc, #340]	; (1b58 <UART3_IRQHandler+0xa>)
    1a02:	f000 b800 	b.w	1a06 <mriGetSPAndCallHandler>

00001a06 <mriGetSPAndCallHandler>:
    1a06:	f01e 0f04 	tst.w	lr, #4
    1a0a:	bf0c      	ite	eq
    1a0c:	f3ef 8108 	mrseq	r1, MSP
    1a10:	f3ef 8109 	mrsne	r1, PSP
    1a14:	4a51      	ldr	r2, [pc, #324]	; (1b5c <UART3_IRQHandler+0xe>)
    1a16:	6011      	str	r1, [r2, #0]
    1a18:	4687      	mov	pc, r0

00001a1a <checkForStackError>:
    1a1a:	4851      	ldr	r0, [pc, #324]	; (1b60 <UART3_IRQHandler+0x12>)
    1a1c:	4a51      	ldr	r2, [pc, #324]	; (1b64 <UART3_IRQHandler+0x16>)
    1a1e:	6800      	ldr	r0, [r0, #0]
    1a20:	4210      	tst	r0, r2
    1a22:	f000 8003 	beq.w	1a2c <mriSaveRestoreContext>
    1a26:	4950      	ldr	r1, [pc, #320]	; (1b68 <UART3_IRQHandler+0x1a>)
    1a28:	f000 b800 	b.w	1a2c <mriSaveRestoreContext>

00001a2c <mriSaveRestoreContext>:
    1a2c:	484f      	ldr	r0, [pc, #316]	; (1b6c <UART3_IRQHandler+0x1e>)
    1a2e:	6802      	ldr	r2, [r0, #0]
    1a30:	f012 0f01 	tst.w	r2, #1
    1a34:	bf1e      	ittt	ne
    1a36:	f042 0202 	orrne.w	r2, r2, #2
    1a3a:	6002      	strne	r2, [r0, #0]
    1a3c:	f000 b856 	bne.w	1aec <mriAdvancePCAndReturn>
    1a40:	f042 0201 	orr.w	r2, r2, #1
    1a44:	6002      	str	r2, [r0, #0]
    1a46:	2040      	movs	r0, #64	; 0x40
    1a48:	f8df c120 	ldr.w	r12, [pc, #288]	; 1b6c <UART3_IRQHandler+0x1e>
    1a4c:	4a48      	ldr	r2, [pc, #288]	; (1b70 <UART3_IRQHandler+0x22>)
    1a4e:	4613      	mov	r3, r2
    1a50:	e96c 2302 	strd	r2, r3, [r12, #-8]!
    1a54:	3801      	subs	r0, #1
    1a56:	d1fb      	bne.n	1a50 <mriSaveRestoreContext+0x24>
    1a58:	f3ef 8208 	mrs	r2, MSP
    1a5c:	4845      	ldr	r0, [pc, #276]	; (1b74 <UART3_IRQHandler+0x26>)
    1a5e:	6002      	str	r2, [r0, #0]
    1a60:	4842      	ldr	r0, [pc, #264]	; (1b6c <UART3_IRQHandler+0x1e>)
    1a62:	f380 8808 	msr	MSP, r0
    1a66:	4844      	ldr	r0, [pc, #272]	; (1b78 <UART3_IRQHandler+0x2a>)
    1a68:	e92d 5000 	stmdb	sp!, {r12, lr}
    1a6c:	e8b1 500c 	ldmia.w	r1!, {r2, r3, r12, lr}
    1a70:	e8a0 500c 	stmia.w	r0!, {r2, r3, r12, lr}
    1a74:	e8a0 0ff0 	stmia.w	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    1a78:	c93c      	ldmia	r1!, {r2, r3, r4, r5}
    1a7a:	f840 2b08 	str.w	r2, [r0], #8
    1a7e:	c038      	stmia	r0!, {r3, r4, r5}
    1a80:	f415 7f00 	tst.w	r5, #512	; 0x200
    1a84:	bf18      	it	ne
    1a86:	3104      	addne	r1, #4
    1a88:	f840 1c10 	str.w	r1, [r0, #-16]
    1a8c:	f7fe fd5c 	bl	548 <__mriDebugException>
    1a90:	483a      	ldr	r0, [pc, #232]	; (1b7c <UART3_IRQHandler+0x2e>)
    1a92:	f850 1c0c 	ldr.w	r1, [r0, #-12]
    1a96:	6802      	ldr	r2, [r0, #0]
    1a98:	f422 7200 	bic.w	r2, r2, #512	; 0x200
    1a9c:	f841 2d04 	str.w	r2, [r1, #-4]!
    1aa0:	e930 000c 	ldmdb	r0!, {r2, r3}
    1aa4:	e921 000c 	stmdb	r1!, {r2, r3}
    1aa8:	f850 cd08 	ldr.w	r12, [r0, #-8]!
    1aac:	f841 cd04 	str.w	r12, [r1, #-4]!
    1ab0:	e930 0ff0 	ldmdb	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    1ab4:	e930 500c 	ldmdb	r0!, {r2, r3, r12, lr}
    1ab8:	e921 500c 	stmdb	r1!, {r2, r3, r12, lr}
    1abc:	e8bd 5000 	ldmia.w	sp!, {r12, lr}
    1ac0:	482c      	ldr	r0, [pc, #176]	; (1b74 <UART3_IRQHandler+0x26>)
    1ac2:	6802      	ldr	r2, [r0, #0]
    1ac4:	f382 8808 	msr	MSP, r2
    1ac8:	f01e 0f04 	tst.w	lr, #4
    1acc:	bf0c      	ite	eq
    1ace:	f381 8808 	msreq	MSP, r1
    1ad2:	f381 8809 	msrne	PSP, r1
    1ad6:	4825      	ldr	r0, [pc, #148]	; (1b6c <UART3_IRQHandler+0x1e>)
    1ad8:	6801      	ldr	r1, [r0, #0]
    1ada:	f021 0101 	bic.w	r1, r1, #1
    1ade:	6001      	str	r1, [r0, #0]
    1ae0:	f3bf 8f4f 	dsb	sy
    1ae4:	f3bf 8f6f 	isb	sy
    1ae8:	f000 b81b 	b.w	1b22 <mriClearFaultStatusBitsAndReturn>

00001aec <mriAdvancePCAndReturn>:
    1aec:	481c      	ldr	r0, [pc, #112]	; (1b60 <UART3_IRQHandler+0x12>)
    1aee:	6800      	ldr	r0, [r0, #0]
    1af0:	f410 6f80 	tst.w	r0, #1024	; 0x400
    1af4:	f040 8015 	bne.w	1b22 <mriClearFaultStatusBitsAndReturn>
    1af8:	6988      	ldr	r0, [r1, #24]
    1afa:	8802      	ldrh	r2, [r0, #0]
    1afc:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
    1b00:	f5b2 4f68 	cmp.w	r2, #59392	; 0xe800
    1b04:	d008      	beq.n	1b18 <mriAdvancePCAndReturn+0x2c>
    1b06:	f5b2 4f70 	cmp.w	r2, #61440	; 0xf000
    1b0a:	d005      	beq.n	1b18 <mriAdvancePCAndReturn+0x2c>
    1b0c:	f5b2 4f78 	cmp.w	r2, #63488	; 0xf800
    1b10:	d002      	beq.n	1b18 <mriAdvancePCAndReturn+0x2c>
    1b12:	f100 0002 	add.w	r0, r0, #2
    1b16:	e001      	b.n	1b1c <mriAdvancePCAndReturn+0x30>
    1b18:	f100 0004 	add.w	r0, r0, #4
    1b1c:	6188      	str	r0, [r1, #24]
    1b1e:	f000 b800 	b.w	1b22 <mriClearFaultStatusBitsAndReturn>

00001b22 <mriClearFaultStatusBitsAndReturn>:
    1b22:	480f      	ldr	r0, [pc, #60]	; (1b60 <UART3_IRQHandler+0x12>)
    1b24:	6801      	ldr	r1, [r0, #0]
    1b26:	6001      	str	r1, [r0, #0]
    1b28:	6841      	ldr	r1, [r0, #4]
    1b2a:	6041      	str	r1, [r0, #4]
    1b2c:	4770      	bx	lr

00001b2e <HardFault_Handler>:
    1b2e:	f7ff bf67 	b.w	1a00 <mriFaultHandler>

00001b32 <MemManage_Handler>:
    1b32:	f7ff bf65 	b.w	1a00 <mriFaultHandler>

00001b36 <BusFault_Handler>:
    1b36:	f7ff bf63 	b.w	1a00 <mriFaultHandler>

00001b3a <UsageFault_Handler>:
    1b3a:	f7ff bf5e 	b.w	19fa <mriExceptionHandler>

00001b3e <DebugMon_Handler>:
    1b3e:	f7ff bf5c 	b.w	19fa <mriExceptionHandler>

00001b42 <UART0_IRQHandler>:
    1b42:	f7ff bf5a 	b.w	19fa <mriExceptionHandler>

00001b46 <UART1_IRQHandler>:
    1b46:	f7ff bf58 	b.w	19fa <mriExceptionHandler>

00001b4a <UART2_IRQHandler>:
    1b4a:	f7ff bf56 	b.w	19fa <mriExceptionHandler>

00001b4e <UART3_IRQHandler>:
    1b4e:	f7ff bf54 	b.w	19fa <mriExceptionHandler>
    1b52:	0000      	.short	0x0000
    1b54:	00001a2d 	.word	0x00001a2d
    1b58:	00001a1b 	.word	0x00001a1b
    1b5c:	100003e8 	.word	0x100003e8
    1b60:	e000ed28 	.word	0xe000ed28
    1b64:	00001818 	.word	0x00001818
    1b68:	000037cc 	.word	0x000037cc
    1b6c:	100003e0 	.word	0x100003e0
    1b70:	deadbeef 	.word	0xdeadbeef
    1b74:	100003e4 	.word	0x100003e4
    1b78:	100003ec 	.word	0x100003ec
    1b7c:	1000042c 	.word	0x1000042c

00001b80 <__mriDisableMbed>:
    1b80:	b082      	sub	sp, #8
    1b82:	a901      	add	r1, sp, #4
    1b84:	f240 1005 	movw	r0, #261	; 0x105
    1b88:	beab      	bkpt	0x00ab
    1b8a:	2800      	cmp	r0, #0
    1b8c:	bf0c      	ite	eq
    1b8e:	9801      	ldreq	r0, [sp, #4]
    1b90:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    1b94:	b002      	add	sp, #8
    1b96:	4770      	bx	lr

00001b98 <__mriGetMbedUid>:
    1b98:	b082      	sub	sp, #8
    1b9a:	9000      	str	r0, [sp, #0]
    1b9c:	2021      	movs	r0, #33	; 0x21
    1b9e:	9001      	str	r0, [sp, #4]
    1ba0:	4669      	mov	r1, sp
    1ba2:	f240 1001 	movw	r0, #257	; 0x101
    1ba6:	beab      	bkpt	0x00ab
    1ba8:	b002      	add	sp, #8
    1baa:	4770      	bx	lr

00001bac <__mriNewlib_SemihostWrite>:
    1bac:	beff      	bkpt	0x00ff
    1bae:	4770      	bx	lr

00001bb0 <__mriNewlib_SemihostRead>:
    1bb0:	beff      	bkpt	0x00ff
    1bb2:	4770      	bx	lr

00001bb4 <__mriNewLib_SemihostOpen>:
    1bb4:	beff      	bkpt	0x00ff
    1bb6:	4770      	bx	lr

00001bb8 <__mriNewLib_SemihostRename>:
    1bb8:	beff      	bkpt	0x00ff
    1bba:	4770      	bx	lr

00001bbc <__mriNewLib_SemihostUnlink>:
    1bbc:	beff      	bkpt	0x00ff
    1bbe:	4770      	bx	lr

00001bc0 <__mriNewLib_SemihostStat>:
    1bc0:	beff      	bkpt	0x00ff
    1bc2:	4770      	bx	lr

00001bc4 <__mriNewlib_SemihostLSeek>:
    1bc4:	beff      	bkpt	0x00ff
    1bc6:	4770      	bx	lr

00001bc8 <__mriNewlib_SemihostClose>:
    1bc8:	beff      	bkpt	0x00ff
    1bca:	4770      	bx	lr

00001bcc <__mriNewlib_SemihostFStat>:
    1bcc:	beff      	bkpt	0x00ff
    1bce:	4770      	bx	lr

00001bd0 <HexCharToNibble>:
    1bd0:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    1bd4:	2b05      	cmp	r3, #5
    1bd6:	d801      	bhi.n	1bdc <HexCharToNibble+0xc>
    1bd8:	3857      	subs	r0, #87	; 0x57
    1bda:	4770      	bx	lr
    1bdc:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
    1be0:	2905      	cmp	r1, #5
    1be2:	d801      	bhi.n	1be8 <HexCharToNibble+0x18>
    1be4:	3837      	subs	r0, #55	; 0x37
    1be6:	4770      	bx	lr
    1be8:	3830      	subs	r0, #48	; 0x30
    1bea:	b2c2      	uxtb	r2, r0
    1bec:	2a09      	cmp	r2, #9
    1bee:	d907      	bls.n	1c00 <HexCharToNibble+0x30>
    1bf0:	4804      	ldr	r0, [pc, #16]	; (1c04 <HexCharToNibble+0x34>)
    1bf2:	6803      	ldr	r3, [r0, #0]
    1bf4:	2b02      	cmp	r3, #2
    1bf6:	bfb8      	it	lt
    1bf8:	2302      	movlt	r3, #2
    1bfa:	6003      	str	r3, [r0, #0]
    1bfc:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1c00:	4770      	bx	lr
    1c02:	bf00      	nop
    1c04:	100001dc 	.word	0x100001dc

00001c08 <__mriBuffer_Init>:
    1c08:	188a      	adds	r2, r1, r2
    1c0a:	6001      	str	r1, [r0, #0]
    1c0c:	6042      	str	r2, [r0, #4]
    1c0e:	6081      	str	r1, [r0, #8]
    1c10:	4770      	bx	lr

00001c12 <__mriBuffer_Reset>:
    1c12:	6803      	ldr	r3, [r0, #0]
    1c14:	6083      	str	r3, [r0, #8]
    1c16:	4770      	bx	lr

00001c18 <__mriBuffer_SetEndOfBuffer>:
    1c18:	6883      	ldr	r3, [r0, #8]
    1c1a:	6043      	str	r3, [r0, #4]
    1c1c:	4770      	bx	lr

00001c1e <__mriBuffer_BytesLeft>:
    1c1e:	6883      	ldr	r3, [r0, #8]
    1c20:	6840      	ldr	r0, [r0, #4]
    1c22:	4283      	cmp	r3, r0
    1c24:	bf94      	ite	ls
    1c26:	ebc3 0000 	rsbls	r0, r3, r0
    1c2a:	2000      	movhi	r0, #0
    1c2c:	4770      	bx	lr
	...

00001c30 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>:
    1c30:	b538      	push	{r3, r4, r5, lr}
    1c32:	460d      	mov	r5, r1
    1c34:	4604      	mov	r4, r0
    1c36:	f7ff fff2 	bl	1c1e <__mriBuffer_BytesLeft>
    1c3a:	42a8      	cmp	r0, r5
    1c3c:	d208      	bcs.n	1c50 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x20>
    1c3e:	4905      	ldr	r1, [pc, #20]	; (1c54 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x24>)
    1c40:	6863      	ldr	r3, [r4, #4]
    1c42:	680a      	ldr	r2, [r1, #0]
    1c44:	1c58      	adds	r0, r3, #1
    1c46:	2a01      	cmp	r2, #1
    1c48:	bfb8      	it	lt
    1c4a:	2201      	movlt	r2, #1
    1c4c:	60a0      	str	r0, [r4, #8]
    1c4e:	600a      	str	r2, [r1, #0]
    1c50:	bd38      	pop	{r3, r4, r5, pc}
    1c52:	bf00      	nop
    1c54:	100001dc 	.word	0x100001dc

00001c58 <__mriBuffer_OverrunDetected>:
    1c58:	6882      	ldr	r2, [r0, #8]
    1c5a:	6840      	ldr	r0, [r0, #4]
    1c5c:	4282      	cmp	r2, r0
    1c5e:	bf94      	ite	ls
    1c60:	2000      	movls	r0, #0
    1c62:	2001      	movhi	r0, #1
    1c64:	4770      	bx	lr
	...

00001c68 <__mriBuffer_WriteChar>:
    1c68:	b570      	push	{r4, r5, r6, lr}
    1c6a:	4d07      	ldr	r5, [pc, #28]	; (1c88 <__mriBuffer_WriteChar+0x20>)
    1c6c:	2300      	movs	r3, #0
    1c6e:	460e      	mov	r6, r1
    1c70:	2101      	movs	r1, #1
    1c72:	4604      	mov	r4, r0
    1c74:	602b      	str	r3, [r5, #0]
    1c76:	f7ff ffdb 	bl	1c30 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1c7a:	6828      	ldr	r0, [r5, #0]
    1c7c:	b918      	cbnz	r0, 1c86 <__mriBuffer_WriteChar+0x1e>
    1c7e:	68a1      	ldr	r1, [r4, #8]
    1c80:	f801 6b01 	strb.w	r6, [r1], #1
    1c84:	60a1      	str	r1, [r4, #8]
    1c86:	bd70      	pop	{r4, r5, r6, pc}
    1c88:	100001dc 	.word	0x100001dc

00001c8c <__mriBuffer_ReadChar>:
    1c8c:	b570      	push	{r4, r5, r6, lr}
    1c8e:	4e08      	ldr	r6, [pc, #32]	; (1cb0 <__mriBuffer_ReadChar+0x24>)
    1c90:	2400      	movs	r4, #0
    1c92:	2101      	movs	r1, #1
    1c94:	4605      	mov	r5, r0
    1c96:	6034      	str	r4, [r6, #0]
    1c98:	f7ff ffca 	bl	1c30 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1c9c:	6833      	ldr	r3, [r6, #0]
    1c9e:	b923      	cbnz	r3, 1caa <__mriBuffer_ReadChar+0x1e>
    1ca0:	68a9      	ldr	r1, [r5, #8]
    1ca2:	f811 0b01 	ldrb.w	r0, [r1], #1
    1ca6:	60a9      	str	r1, [r5, #8]
    1ca8:	bd70      	pop	{r4, r5, r6, pc}
    1caa:	4620      	mov	r0, r4
    1cac:	bd70      	pop	{r4, r5, r6, pc}
    1cae:	bf00      	nop
    1cb0:	100001dc 	.word	0x100001dc

00001cb4 <__mriBuffer_WriteByteAsHex>:
    1cb4:	b570      	push	{r4, r5, r6, lr}
    1cb6:	4e0b      	ldr	r6, [pc, #44]	; (1ce4 <__mriBuffer_WriteByteAsHex+0x30>)
    1cb8:	2300      	movs	r3, #0
    1cba:	460d      	mov	r5, r1
    1cbc:	2102      	movs	r1, #2
    1cbe:	4604      	mov	r4, r0
    1cc0:	6033      	str	r3, [r6, #0]
    1cc2:	f7ff ffb5 	bl	1c30 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1cc6:	6830      	ldr	r0, [r6, #0]
    1cc8:	b950      	cbnz	r0, 1ce0 <__mriBuffer_WriteByteAsHex+0x2c>
    1cca:	4a07      	ldr	r2, [pc, #28]	; (1ce8 <__mriBuffer_WriteByteAsHex+0x34>)
    1ccc:	0929      	lsrs	r1, r5, #4
    1cce:	f005 050f 	and.w	r5, r5, #15
    1cd2:	68a3      	ldr	r3, [r4, #8]
    1cd4:	5c50      	ldrb	r0, [r2, r1]
    1cd6:	5d52      	ldrb	r2, [r2, r5]
    1cd8:	7018      	strb	r0, [r3, #0]
    1cda:	705a      	strb	r2, [r3, #1]
    1cdc:	3302      	adds	r3, #2
    1cde:	60a3      	str	r3, [r4, #8]
    1ce0:	bd70      	pop	{r4, r5, r6, pc}
    1ce2:	bf00      	nop
    1ce4:	100001dc 	.word	0x100001dc
    1ce8:	00004076 	.word	0x00004076

00001cec <__mriBuffer_ReadByteAsHex>:
    1cec:	b570      	push	{r4, r5, r6, lr}
    1cee:	4e11      	ldr	r6, [pc, #68]	; (1d34 <__mriBuffer_ReadByteAsHex+0x48>)
    1cf0:	2300      	movs	r3, #0
    1cf2:	2102      	movs	r1, #2
    1cf4:	4604      	mov	r4, r0
    1cf6:	6033      	str	r3, [r6, #0]
    1cf8:	f7ff ff9a 	bl	1c30 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1cfc:	6830      	ldr	r0, [r6, #0]
    1cfe:	b108      	cbz	r0, 1d04 <__mriBuffer_ReadByteAsHex+0x18>
    1d00:	2500      	movs	r5, #0
    1d02:	e014      	b.n	1d2e <__mriBuffer_ReadByteAsHex+0x42>
    1d04:	68a1      	ldr	r1, [r4, #8]
    1d06:	7808      	ldrb	r0, [r1, #0]
    1d08:	f7ff ff62 	bl	1bd0 <HexCharToNibble>
    1d0c:	6833      	ldr	r3, [r6, #0]
    1d0e:	0102      	lsls	r2, r0, #4
    1d10:	b2d5      	uxtb	r5, r2
    1d12:	b92b      	cbnz	r3, 1d20 <__mriBuffer_ReadByteAsHex+0x34>
    1d14:	68a0      	ldr	r0, [r4, #8]
    1d16:	7840      	ldrb	r0, [r0, #1]
    1d18:	f7ff ff5a 	bl	1bd0 <HexCharToNibble>
    1d1c:	4328      	orrs	r0, r5
    1d1e:	b2c5      	uxtb	r5, r0
    1d20:	4904      	ldr	r1, [pc, #16]	; (1d34 <__mriBuffer_ReadByteAsHex+0x48>)
    1d22:	680a      	ldr	r2, [r1, #0]
    1d24:	2a00      	cmp	r2, #0
    1d26:	d1eb      	bne.n	1d00 <__mriBuffer_ReadByteAsHex+0x14>
    1d28:	68a3      	ldr	r3, [r4, #8]
    1d2a:	1c98      	adds	r0, r3, #2
    1d2c:	60a0      	str	r0, [r4, #8]
    1d2e:	4628      	mov	r0, r5
    1d30:	bd70      	pop	{r4, r5, r6, pc}
    1d32:	bf00      	nop
    1d34:	100001dc 	.word	0x100001dc

00001d38 <__mriBuffer_WriteSizedString>:
    1d38:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1d3a:	4f0b      	ldr	r7, [pc, #44]	; (1d68 <__mriBuffer_WriteSizedString+0x30>)
    1d3c:	2300      	movs	r3, #0
    1d3e:	460c      	mov	r4, r1
    1d40:	4611      	mov	r1, r2
    1d42:	4605      	mov	r5, r0
    1d44:	4616      	mov	r6, r2
    1d46:	603b      	str	r3, [r7, #0]
    1d48:	f7ff ff72 	bl	1c30 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1d4c:	6838      	ldr	r0, [r7, #0]
    1d4e:	b948      	cbnz	r0, 1d64 <__mriBuffer_WriteSizedString+0x2c>
    1d50:	19a6      	adds	r6, r4, r6
    1d52:	42b4      	cmp	r4, r6
    1d54:	d006      	beq.n	1d64 <__mriBuffer_WriteSizedString+0x2c>
    1d56:	f814 2b01 	ldrb.w	r2, [r4], #1
    1d5a:	68a9      	ldr	r1, [r5, #8]
    1d5c:	f801 2b01 	strb.w	r2, [r1], #1
    1d60:	60a9      	str	r1, [r5, #8]
    1d62:	e7f6      	b.n	1d52 <__mriBuffer_WriteSizedString+0x1a>
    1d64:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1d66:	bf00      	nop
    1d68:	100001dc 	.word	0x100001dc

00001d6c <__mriBuffer_WriteString>:
    1d6c:	b538      	push	{r3, r4, r5, lr}
    1d6e:	4605      	mov	r5, r0
    1d70:	4608      	mov	r0, r1
    1d72:	460c      	mov	r4, r1
    1d74:	f001 fb34 	bl	33e0 <strlen>
    1d78:	4621      	mov	r1, r4
    1d7a:	4602      	mov	r2, r0
    1d7c:	4628      	mov	r0, r5
    1d7e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1d82:	f7ff bfd9 	b.w	1d38 <__mriBuffer_WriteSizedString>
	...

00001d88 <__mriBuffer_ReadUIntegerAsHex>:
    1d88:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1d8a:	2500      	movs	r5, #0
    1d8c:	4604      	mov	r4, r0
    1d8e:	462e      	mov	r6, r5
    1d90:	4f13      	ldr	r7, [pc, #76]	; (1de0 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1d92:	2300      	movs	r3, #0
    1d94:	4620      	mov	r0, r4
    1d96:	603b      	str	r3, [r7, #0]
    1d98:	f7ff ff78 	bl	1c8c <__mriBuffer_ReadChar>
    1d9c:	6839      	ldr	r1, [r7, #0]
    1d9e:	b961      	cbnz	r1, 1dba <__mriBuffer_ReadUIntegerAsHex+0x32>
    1da0:	f7ff ff16 	bl	1bd0 <HexCharToNibble>
    1da4:	683a      	ldr	r2, [r7, #0]
    1da6:	b132      	cbz	r2, 1db6 <__mriBuffer_ReadUIntegerAsHex+0x2e>
    1da8:	68a0      	ldr	r0, [r4, #8]
    1daa:	6823      	ldr	r3, [r4, #0]
    1dac:	4298      	cmp	r0, r3
    1dae:	d904      	bls.n	1dba <__mriBuffer_ReadUIntegerAsHex+0x32>
    1db0:	1e41      	subs	r1, r0, #1
    1db2:	60a1      	str	r1, [r4, #8]
    1db4:	e001      	b.n	1dba <__mriBuffer_ReadUIntegerAsHex+0x32>
    1db6:	eb00 1505 	add.w	r5, r0, r5, lsl #4
    1dba:	4809      	ldr	r0, [pc, #36]	; (1de0 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1dbc:	6802      	ldr	r2, [r0, #0]
    1dbe:	b90a      	cbnz	r2, 1dc4 <__mriBuffer_ReadUIntegerAsHex+0x3c>
    1dc0:	3601      	adds	r6, #1
    1dc2:	e7e5      	b.n	1d90 <__mriBuffer_ReadUIntegerAsHex+0x8>
    1dc4:	2300      	movs	r3, #0
    1dc6:	6861      	ldr	r1, [r4, #4]
    1dc8:	6003      	str	r3, [r0, #0]
    1dca:	68a0      	ldr	r0, [r4, #8]
    1dcc:	4288      	cmp	r0, r1
    1dce:	bf88      	it	hi
    1dd0:	60a1      	strhi	r1, [r4, #8]
    1dd2:	b91e      	cbnz	r6, 1ddc <__mriBuffer_ReadUIntegerAsHex+0x54>
    1dd4:	4a02      	ldr	r2, [pc, #8]	; (1de0 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1dd6:	2503      	movs	r5, #3
    1dd8:	6015      	str	r5, [r2, #0]
    1dda:	4635      	mov	r5, r6
    1ddc:	4628      	mov	r0, r5
    1dde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1de0:	100001dc 	.word	0x100001dc

00001de4 <__mriBuffer_WriteUIntegerAsHex>:
    1de4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1de8:	4680      	mov	r8, r0
    1dea:	460e      	mov	r6, r1
    1dec:	b919      	cbnz	r1, 1df6 <__mriBuffer_WriteUIntegerAsHex+0x12>
    1dee:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    1df2:	f7ff bf5f 	b.w	1cb4 <__mriBuffer_WriteByteAsHex>
    1df6:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    1dfa:	2400      	movs	r4, #0
    1dfc:	4233      	tst	r3, r6
    1dfe:	d103      	bne.n	1e08 <__mriBuffer_WriteUIntegerAsHex+0x24>
    1e00:	3401      	adds	r4, #1
    1e02:	0a1b      	lsrs	r3, r3, #8
    1e04:	2c04      	cmp	r4, #4
    1e06:	d1f9      	bne.n	1dfc <__mriBuffer_WriteUIntegerAsHex+0x18>
    1e08:	f1c4 0403 	rsb	r4, r4, #3
    1e0c:	00e5      	lsls	r5, r4, #3
    1e0e:	1c63      	adds	r3, r4, #1
    1e10:	d00d      	beq.n	1e2e <__mriBuffer_WriteUIntegerAsHex+0x4a>
    1e12:	fa26 f105 	lsr.w	r1, r6, r5
    1e16:	4f07      	ldr	r7, [pc, #28]	; (1e34 <__mriBuffer_WriteUIntegerAsHex+0x50>)
    1e18:	2000      	movs	r0, #0
    1e1a:	6038      	str	r0, [r7, #0]
    1e1c:	b2c9      	uxtb	r1, r1
    1e1e:	4640      	mov	r0, r8
    1e20:	f7ff ff48 	bl	1cb4 <__mriBuffer_WriteByteAsHex>
    1e24:	683a      	ldr	r2, [r7, #0]
    1e26:	3c01      	subs	r4, #1
    1e28:	3d08      	subs	r5, #8
    1e2a:	2a00      	cmp	r2, #0
    1e2c:	d0ef      	beq.n	1e0e <__mriBuffer_WriteUIntegerAsHex+0x2a>
    1e2e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1e32:	bf00      	nop
    1e34:	100001dc 	.word	0x100001dc

00001e38 <__mriBuffer_WriteIntegerAsHex>:
    1e38:	4b0a      	ldr	r3, [pc, #40]	; (1e64 <__mriBuffer_WriteIntegerAsHex+0x2c>)
    1e3a:	b570      	push	{r4, r5, r6, lr}
    1e3c:	2200      	movs	r2, #0
    1e3e:	1e0c      	subs	r4, r1, #0
    1e40:	4606      	mov	r6, r0
    1e42:	601a      	str	r2, [r3, #0]
    1e44:	461d      	mov	r5, r3
    1e46:	da03      	bge.n	1e50 <__mriBuffer_WriteIntegerAsHex+0x18>
    1e48:	212d      	movs	r1, #45	; 0x2d
    1e4a:	4264      	negs	r4, r4
    1e4c:	f7ff ff0c 	bl	1c68 <__mriBuffer_WriteChar>
    1e50:	6828      	ldr	r0, [r5, #0]
    1e52:	b928      	cbnz	r0, 1e60 <__mriBuffer_WriteIntegerAsHex+0x28>
    1e54:	4630      	mov	r0, r6
    1e56:	4621      	mov	r1, r4
    1e58:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1e5c:	f7ff bfc2 	b.w	1de4 <__mriBuffer_WriteUIntegerAsHex>
    1e60:	bd70      	pop	{r4, r5, r6, pc}
    1e62:	bf00      	nop
    1e64:	100001dc 	.word	0x100001dc

00001e68 <__mriBuffer_IsNextCharEqualTo>:
    1e68:	b570      	push	{r4, r5, r6, lr}
    1e6a:	4d0b      	ldr	r5, [pc, #44]	; (1e98 <__mriBuffer_IsNextCharEqualTo+0x30>)
    1e6c:	2300      	movs	r3, #0
    1e6e:	460e      	mov	r6, r1
    1e70:	4604      	mov	r4, r0
    1e72:	602b      	str	r3, [r5, #0]
    1e74:	f7ff fed3 	bl	1c1e <__mriBuffer_BytesLeft>
    1e78:	4629      	mov	r1, r5
    1e7a:	b908      	cbnz	r0, 1e80 <__mriBuffer_IsNextCharEqualTo+0x18>
    1e7c:	2201      	movs	r2, #1
    1e7e:	602a      	str	r2, [r5, #0]
    1e80:	6808      	ldr	r0, [r1, #0]
    1e82:	b938      	cbnz	r0, 1e94 <__mriBuffer_IsNextCharEqualTo+0x2c>
    1e84:	68a3      	ldr	r3, [r4, #8]
    1e86:	7819      	ldrb	r1, [r3, #0]
    1e88:	42b1      	cmp	r1, r6
    1e8a:	d104      	bne.n	1e96 <__mriBuffer_IsNextCharEqualTo+0x2e>
    1e8c:	1c58      	adds	r0, r3, #1
    1e8e:	60a0      	str	r0, [r4, #8]
    1e90:	2001      	movs	r0, #1
    1e92:	bd70      	pop	{r4, r5, r6, pc}
    1e94:	2000      	movs	r0, #0
    1e96:	bd70      	pop	{r4, r5, r6, pc}
    1e98:	100001dc 	.word	0x100001dc

00001e9c <__mriBuffer_ReadIntegerAsHex>:
    1e9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e9e:	4c13      	ldr	r4, [pc, #76]	; (1eec <__mriBuffer_ReadIntegerAsHex+0x50>)
    1ea0:	2500      	movs	r5, #0
    1ea2:	212d      	movs	r1, #45	; 0x2d
    1ea4:	4607      	mov	r7, r0
    1ea6:	6025      	str	r5, [r4, #0]
    1ea8:	f7ff ffde 	bl	1e68 <__mriBuffer_IsNextCharEqualTo>
    1eac:	6823      	ldr	r3, [r4, #0]
    1eae:	4606      	mov	r6, r0
    1eb0:	b91b      	cbnz	r3, 1eba <__mriBuffer_ReadIntegerAsHex+0x1e>
    1eb2:	4638      	mov	r0, r7
    1eb4:	f7ff ff68 	bl	1d88 <__mriBuffer_ReadUIntegerAsHex>
    1eb8:	e000      	b.n	1ebc <__mriBuffer_ReadIntegerAsHex+0x20>
    1eba:	4628      	mov	r0, r5
    1ebc:	6822      	ldr	r2, [r4, #0]
    1ebe:	490b      	ldr	r1, [pc, #44]	; (1eec <__mriBuffer_ReadIntegerAsHex+0x50>)
    1ec0:	b98a      	cbnz	r2, 1ee6 <__mriBuffer_ReadIntegerAsHex+0x4a>
    1ec2:	b936      	cbnz	r6, 1ed2 <__mriBuffer_ReadIntegerAsHex+0x36>
    1ec4:	2800      	cmp	r0, #0
    1ec6:	da0f      	bge.n	1ee8 <__mriBuffer_ReadIntegerAsHex+0x4c>
    1ec8:	2303      	movs	r3, #3
    1eca:	600b      	str	r3, [r1, #0]
    1ecc:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
    1ed0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1ed2:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
    1ed6:	d904      	bls.n	1ee2 <__mriBuffer_ReadIntegerAsHex+0x46>
    1ed8:	2003      	movs	r0, #3
    1eda:	6008      	str	r0, [r1, #0]
    1edc:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
    1ee0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1ee2:	4240      	negs	r0, r0
    1ee4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1ee6:	2000      	movs	r0, #0
    1ee8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1eea:	bf00      	nop
    1eec:	100001dc 	.word	0x100001dc

00001ef0 <__mriBuffer_MatchesString>:
    1ef0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1ef4:	4e12      	ldr	r6, [pc, #72]	; (1f40 <__mriBuffer_MatchesString+0x50>)
    1ef6:	2300      	movs	r3, #0
    1ef8:	4614      	mov	r4, r2
    1efa:	4605      	mov	r5, r0
    1efc:	4688      	mov	r8, r1
    1efe:	6033      	str	r3, [r6, #0]
    1f00:	f7ff fe8d 	bl	1c1e <__mriBuffer_BytesLeft>
    1f04:	42a0      	cmp	r0, r4
    1f06:	d201      	bcs.n	1f0c <__mriBuffer_MatchesString+0x1c>
    1f08:	2001      	movs	r0, #1
    1f0a:	6030      	str	r0, [r6, #0]
    1f0c:	6837      	ldr	r7, [r6, #0]
    1f0e:	b97f      	cbnz	r7, 1f30 <__mriBuffer_MatchesString+0x40>
    1f10:	68ae      	ldr	r6, [r5, #8]
    1f12:	4641      	mov	r1, r8
    1f14:	4630      	mov	r0, r6
    1f16:	4622      	mov	r2, r4
    1f18:	f001 fa6a 	bl	33f0 <strncmp>
    1f1c:	4680      	mov	r8, r0
    1f1e:	b938      	cbnz	r0, 1f30 <__mriBuffer_MatchesString+0x40>
    1f20:	4628      	mov	r0, r5
    1f22:	f7ff fe7c 	bl	1c1e <__mriBuffer_BytesLeft>
    1f26:	42a0      	cmp	r0, r4
    1f28:	d005      	beq.n	1f36 <__mriBuffer_MatchesString+0x46>
    1f2a:	5d31      	ldrb	r1, [r6, r4]
    1f2c:	293a      	cmp	r1, #58	; 0x3a
    1f2e:	d002      	beq.n	1f36 <__mriBuffer_MatchesString+0x46>
    1f30:	2000      	movs	r0, #0
    1f32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1f36:	1934      	adds	r4, r6, r4
    1f38:	60ac      	str	r4, [r5, #8]
    1f3a:	2001      	movs	r0, #1
    1f3c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1f40:	100001dc 	.word	0x100001dc

00001f44 <handleBreakpointWatchpointException>:
    1f44:	4b05      	ldr	r3, [pc, #20]	; (1f5c <handleBreakpointWatchpointException+0x18>)
    1f46:	6818      	ldr	r0, [r3, #0]
    1f48:	2804      	cmp	r0, #4
    1f4a:	d003      	beq.n	1f54 <handleBreakpointWatchpointException+0x10>
    1f4c:	2808      	cmp	r0, #8
    1f4e:	d104      	bne.n	1f5a <handleBreakpointWatchpointException+0x16>
    1f50:	4803      	ldr	r0, [pc, #12]	; (1f60 <handleBreakpointWatchpointException+0x1c>)
    1f52:	e000      	b.n	1f56 <handleBreakpointWatchpointException+0x12>
    1f54:	4803      	ldr	r0, [pc, #12]	; (1f64 <handleBreakpointWatchpointException+0x20>)
    1f56:	f7fe ba35 	b.w	3c4 <__mriCore_PrepareStringResponse>
    1f5a:	4770      	bx	lr
    1f5c:	100001dc 	.word	0x100001dc
    1f60:	0000408a 	.word	0x0000408a
    1f64:	00004086 	.word	0x00004086

00001f68 <parseBreakpointWatchpointCommandArguments>:
    1f68:	b570      	push	{r4, r5, r6, lr}
    1f6a:	4606      	mov	r6, r0
    1f6c:	f7fe fa94 	bl	498 <__mriCore_GetBuffer>
    1f70:	4c0f      	ldr	r4, [pc, #60]	; (1fb0 <parseBreakpointWatchpointCommandArguments+0x48>)
    1f72:	2300      	movs	r3, #0
    1f74:	4605      	mov	r5, r0
    1f76:	6023      	str	r3, [r4, #0]
    1f78:	f7ff fe88 	bl	1c8c <__mriBuffer_ReadChar>
    1f7c:	7230      	strb	r0, [r6, #8]
    1f7e:	6820      	ldr	r0, [r4, #0]
    1f80:	b9a8      	cbnz	r0, 1fae <parseBreakpointWatchpointCommandArguments+0x46>
    1f82:	212c      	movs	r1, #44	; 0x2c
    1f84:	4628      	mov	r0, r5
    1f86:	f000 f8bf 	bl	2108 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    1f8a:	6821      	ldr	r1, [r4, #0]
    1f8c:	b979      	cbnz	r1, 1fae <parseBreakpointWatchpointCommandArguments+0x46>
    1f8e:	4628      	mov	r0, r5
    1f90:	f000 f8ac 	bl	20ec <__mriCmd_ReadUIntegerArgument>
    1f94:	6822      	ldr	r2, [r4, #0]
    1f96:	6030      	str	r0, [r6, #0]
    1f98:	b94a      	cbnz	r2, 1fae <parseBreakpointWatchpointCommandArguments+0x46>
    1f9a:	4628      	mov	r0, r5
    1f9c:	212c      	movs	r1, #44	; 0x2c
    1f9e:	f000 f8b3 	bl	2108 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    1fa2:	6823      	ldr	r3, [r4, #0]
    1fa4:	b91b      	cbnz	r3, 1fae <parseBreakpointWatchpointCommandArguments+0x46>
    1fa6:	4628      	mov	r0, r5
    1fa8:	f000 f8a0 	bl	20ec <__mriCmd_ReadUIntegerArgument>
    1fac:	6070      	str	r0, [r6, #4]
    1fae:	bd70      	pop	{r4, r5, r6, pc}
    1fb0:	100001dc 	.word	0x100001dc

00001fb4 <handleWatchpointRemoveCommand>:
    1fb4:	b510      	push	{r4, lr}
    1fb6:	4c09      	ldr	r4, [pc, #36]	; (1fdc <handleWatchpointRemoveCommand+0x28>)
    1fb8:	4602      	mov	r2, r0
    1fba:	2300      	movs	r3, #0
    1fbc:	c903      	ldmia	r1, {r0, r1}
    1fbe:	6023      	str	r3, [r4, #0]
    1fc0:	f7ff f932 	bl	1228 <__mriPlatform_ClearHardwareWatchpoint>
    1fc4:	6820      	ldr	r0, [r4, #0]
    1fc6:	b118      	cbz	r0, 1fd0 <handleWatchpointRemoveCommand+0x1c>
    1fc8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1fcc:	f7ff bfba 	b.w	1f44 <handleBreakpointWatchpointException>
    1fd0:	4803      	ldr	r0, [pc, #12]	; (1fe0 <handleWatchpointRemoveCommand+0x2c>)
    1fd2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1fd6:	f7fe b9f5 	b.w	3c4 <__mriCore_PrepareStringResponse>
    1fda:	bf00      	nop
    1fdc:	100001dc 	.word	0x100001dc
    1fe0:	0000408e 	.word	0x0000408e

00001fe4 <handleWatchpointSetCommand>:
    1fe4:	b510      	push	{r4, lr}
    1fe6:	4c09      	ldr	r4, [pc, #36]	; (200c <handleWatchpointSetCommand+0x28>)
    1fe8:	4602      	mov	r2, r0
    1fea:	2300      	movs	r3, #0
    1fec:	c903      	ldmia	r1, {r0, r1}
    1fee:	6023      	str	r3, [r4, #0]
    1ff0:	f7ff f8d2 	bl	1198 <__mriPlatform_SetHardwareWatchpoint>
    1ff4:	6820      	ldr	r0, [r4, #0]
    1ff6:	b118      	cbz	r0, 2000 <handleWatchpointSetCommand+0x1c>
    1ff8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    1ffc:	f7ff bfa2 	b.w	1f44 <handleBreakpointWatchpointException>
    2000:	4803      	ldr	r0, [pc, #12]	; (2010 <handleWatchpointSetCommand+0x2c>)
    2002:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2006:	f7fe b9dd 	b.w	3c4 <__mriCore_PrepareStringResponse>
    200a:	bf00      	nop
    200c:	100001dc 	.word	0x100001dc
    2010:	0000408e 	.word	0x0000408e

00002014 <__mriCmd_HandleBreakpointWatchpointSetCommand>:
    2014:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2016:	4c16      	ldr	r4, [pc, #88]	; (2070 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x5c>)
    2018:	2300      	movs	r3, #0
    201a:	a801      	add	r0, sp, #4
    201c:	6023      	str	r3, [r4, #0]
    201e:	f7ff ffa3 	bl	1f68 <parseBreakpointWatchpointCommandArguments>
    2022:	6820      	ldr	r0, [r4, #0]
    2024:	b108      	cbz	r0, 202a <__mriCmd_HandleBreakpointWatchpointSetCommand+0x16>
    2026:	4813      	ldr	r0, [pc, #76]	; (2074 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x60>)
    2028:	e01d      	b.n	2066 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    202a:	f89d 100c 	ldrb.w	r1, [sp, #12]
    202e:	3931      	subs	r1, #49	; 0x31
    2030:	2903      	cmp	r1, #3
    2032:	d817      	bhi.n	2064 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x50>
    2034:	e8df f001 	tbb	[pc, r1]
    2038:	110f0d02 	.word	0x110f0d02
    203c:	9801      	ldr	r0, [sp, #4]
    203e:	9902      	ldr	r1, [sp, #8]
    2040:	f7ff f856 	bl	10f0 <__mriPlatform_SetHardwareBreakpoint>
    2044:	6822      	ldr	r2, [r4, #0]
    2046:	b112      	cbz	r2, 204e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x3a>
    2048:	f7ff ff7c 	bl	1f44 <handleBreakpointWatchpointException>
    204c:	e00d      	b.n	206a <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    204e:	480a      	ldr	r0, [pc, #40]	; (2078 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x64>)
    2050:	e009      	b.n	2066 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    2052:	2000      	movs	r0, #0
    2054:	e002      	b.n	205c <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    2056:	2001      	movs	r0, #1
    2058:	e000      	b.n	205c <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    205a:	2002      	movs	r0, #2
    205c:	a901      	add	r1, sp, #4
    205e:	f7ff ffc1 	bl	1fe4 <handleWatchpointSetCommand>
    2062:	e002      	b.n	206a <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    2064:	4805      	ldr	r0, [pc, #20]	; (207c <__mriCmd_HandleBreakpointWatchpointSetCommand+0x68>)
    2066:	f7fe f9ad 	bl	3c4 <__mriCore_PrepareStringResponse>
    206a:	2000      	movs	r0, #0
    206c:	b004      	add	sp, #16
    206e:	bd10      	pop	{r4, pc}
    2070:	100001dc 	.word	0x100001dc
    2074:	00004086 	.word	0x00004086
    2078:	0000408e 	.word	0x0000408e
    207c:	000034ee 	.word	0x000034ee

00002080 <__mriCmd_HandleBreakpointWatchpointRemoveCommand>:
    2080:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2082:	4c16      	ldr	r4, [pc, #88]	; (20dc <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x5c>)
    2084:	2300      	movs	r3, #0
    2086:	a801      	add	r0, sp, #4
    2088:	6023      	str	r3, [r4, #0]
    208a:	f7ff ff6d 	bl	1f68 <parseBreakpointWatchpointCommandArguments>
    208e:	6820      	ldr	r0, [r4, #0]
    2090:	b108      	cbz	r0, 2096 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x16>
    2092:	4813      	ldr	r0, [pc, #76]	; (20e0 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x60>)
    2094:	e01d      	b.n	20d2 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    2096:	f89d 100c 	ldrb.w	r1, [sp, #12]
    209a:	3931      	subs	r1, #49	; 0x31
    209c:	2903      	cmp	r1, #3
    209e:	d817      	bhi.n	20d0 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x50>
    20a0:	e8df f001 	tbb	[pc, r1]
    20a4:	110f0d02 	.word	0x110f0d02
    20a8:	9801      	ldr	r0, [sp, #4]
    20aa:	9902      	ldr	r1, [sp, #8]
    20ac:	f7ff f858 	bl	1160 <__mriPlatform_ClearHardwareBreakpoint>
    20b0:	6822      	ldr	r2, [r4, #0]
    20b2:	b112      	cbz	r2, 20ba <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x3a>
    20b4:	f7ff ff46 	bl	1f44 <handleBreakpointWatchpointException>
    20b8:	e00d      	b.n	20d6 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    20ba:	480a      	ldr	r0, [pc, #40]	; (20e4 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x64>)
    20bc:	e009      	b.n	20d2 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    20be:	2000      	movs	r0, #0
    20c0:	e002      	b.n	20c8 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    20c2:	2001      	movs	r0, #1
    20c4:	e000      	b.n	20c8 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    20c6:	2002      	movs	r0, #2
    20c8:	a901      	add	r1, sp, #4
    20ca:	f7ff ff73 	bl	1fb4 <handleWatchpointRemoveCommand>
    20ce:	e002      	b.n	20d6 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    20d0:	4805      	ldr	r0, [pc, #20]	; (20e8 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x68>)
    20d2:	f7fe f977 	bl	3c4 <__mriCore_PrepareStringResponse>
    20d6:	2000      	movs	r0, #0
    20d8:	b004      	add	sp, #16
    20da:	bd10      	pop	{r4, pc}
    20dc:	100001dc 	.word	0x100001dc
    20e0:	00004086 	.word	0x00004086
    20e4:	0000408e 	.word	0x0000408e
    20e8:	000034ee 	.word	0x000034ee

000020ec <__mriCmd_ReadUIntegerArgument>:
    20ec:	b510      	push	{r4, lr}
    20ee:	4c05      	ldr	r4, [pc, #20]	; (2104 <__mriCmd_ReadUIntegerArgument+0x18>)
    20f0:	2300      	movs	r3, #0
    20f2:	6023      	str	r3, [r4, #0]
    20f4:	f7ff fe48 	bl	1d88 <__mriBuffer_ReadUIntegerAsHex>
    20f8:	6821      	ldr	r1, [r4, #0]
    20fa:	2900      	cmp	r1, #0
    20fc:	bf18      	it	ne
    20fe:	2000      	movne	r0, #0
    2100:	bd10      	pop	{r4, pc}
    2102:	bf00      	nop
    2104:	100001dc 	.word	0x100001dc

00002108 <__mriCmd_ThrowIfNextCharIsNotEqualTo>:
    2108:	b508      	push	{r3, lr}
    210a:	f7ff fead 	bl	1e68 <__mriBuffer_IsNextCharEqualTo>
    210e:	b928      	cbnz	r0, 211c <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x14>
    2110:	4b03      	ldr	r3, [pc, #12]	; (2120 <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x18>)
    2112:	681a      	ldr	r2, [r3, #0]
    2114:	2a04      	cmp	r2, #4
    2116:	bfb8      	it	lt
    2118:	2204      	movlt	r2, #4
    211a:	601a      	str	r2, [r3, #0]
    211c:	bd08      	pop	{r3, pc}
    211e:	bf00      	nop
    2120:	100001dc 	.word	0x100001dc

00002124 <__mriCmd_ReadAddressAndLengthArguments>:
    2124:	b570      	push	{r4, r5, r6, lr}
    2126:	4c0a      	ldr	r4, [pc, #40]	; (2150 <__mriCmd_ReadAddressAndLengthArguments+0x2c>)
    2128:	2300      	movs	r3, #0
    212a:	460d      	mov	r5, r1
    212c:	4606      	mov	r6, r0
    212e:	6023      	str	r3, [r4, #0]
    2130:	f7ff ffdc 	bl	20ec <__mriCmd_ReadUIntegerArgument>
    2134:	6028      	str	r0, [r5, #0]
    2136:	6820      	ldr	r0, [r4, #0]
    2138:	b948      	cbnz	r0, 214e <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    213a:	212c      	movs	r1, #44	; 0x2c
    213c:	4630      	mov	r0, r6
    213e:	f7ff ffe3 	bl	2108 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2142:	6821      	ldr	r1, [r4, #0]
    2144:	b919      	cbnz	r1, 214e <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    2146:	4630      	mov	r0, r6
    2148:	f7ff ffd0 	bl	20ec <__mriCmd_ReadUIntegerArgument>
    214c:	6068      	str	r0, [r5, #4]
    214e:	bd70      	pop	{r4, r5, r6, pc}
    2150:	100001dc 	.word	0x100001dc

00002154 <__mriCmd_ReadAddressAndLengthArgumentsWithColon>:
    2154:	b538      	push	{r3, r4, r5, lr}
    2156:	4c07      	ldr	r4, [pc, #28]	; (2174 <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x20>)
    2158:	2300      	movs	r3, #0
    215a:	4605      	mov	r5, r0
    215c:	6023      	str	r3, [r4, #0]
    215e:	f7ff ffe1 	bl	2124 <__mriCmd_ReadAddressAndLengthArguments>
    2162:	6820      	ldr	r0, [r4, #0]
    2164:	b928      	cbnz	r0, 2172 <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x1e>
    2166:	4628      	mov	r0, r5
    2168:	213a      	movs	r1, #58	; 0x3a
    216a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    216e:	f7ff bfcb 	b.w	2108 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2172:	bd38      	pop	{r3, r4, r5, pc}
    2174:	100001dc 	.word	0x100001dc

00002178 <__mriCmd_HandleContinueCommand>:
    2178:	b570      	push	{r4, r5, r6, lr}
    217a:	f7fe f98d 	bl	498 <__mriCore_GetBuffer>
    217e:	4606      	mov	r6, r0
    2180:	f7fe ff2e 	bl	fe0 <__mriPlatform_WasProgramCounterModifiedByUser>
    2184:	b910      	cbnz	r0, 218c <__mriCmd_HandleContinueCommand+0x14>
    2186:	f7fe ff1f 	bl	fc8 <__mriPlatform_IsCurrentInstructionHardcodedBreakpoint>
    218a:	b968      	cbnz	r0, 21a8 <__mriCmd_HandleContinueCommand+0x30>
    218c:	2400      	movs	r4, #0
    218e:	4d08      	ldr	r5, [pc, #32]	; (21b0 <__mriCmd_HandleContinueCommand+0x38>)
    2190:	2300      	movs	r3, #0
    2192:	4630      	mov	r0, r6
    2194:	602b      	str	r3, [r5, #0]
    2196:	f7ff ffa9 	bl	20ec <__mriCmd_ReadUIntegerArgument>
    219a:	6829      	ldr	r1, [r5, #0]
    219c:	b909      	cbnz	r1, 21a2 <__mriCmd_HandleContinueCommand+0x2a>
    219e:	f7fe fef3 	bl	f88 <__mriPlatform_SetProgramCounter>
    21a2:	f044 0003 	orr.w	r0, r4, #3
    21a6:	bd70      	pop	{r4, r5, r6, pc}
    21a8:	f7fe fef4 	bl	f94 <__mriPlatform_AdvanceProgramCounterToNextInstruction>
    21ac:	2404      	movs	r4, #4
    21ae:	e7ee      	b.n	218e <__mriCmd_HandleContinueCommand+0x16>
    21b0:	100001dc 	.word	0x100001dc

000021b4 <processGdbFileResponseCommands>:
    21b4:	b508      	push	{r3, lr}
    21b6:	f7fe f997 	bl	4e8 <__mriCore_GdbCommandHandlingLoop>
    21ba:	f7fe f90f 	bl	3dc <__mriCore_WasControlCFlagSentFromGdb>
    21be:	b148      	cbz	r0, 21d4 <processGdbFileResponseCommands+0x20>
    21c0:	f7fe f92e 	bl	420 <__mriCore_WasSemihostCallCancelledByGdb>
    21c4:	b908      	cbnz	r0, 21ca <processGdbFileResponseCommands+0x16>
    21c6:	f7fe f935 	bl	434 <__mriCore_FlagSemihostCallAsHandled>
    21ca:	2002      	movs	r0, #2
    21cc:	f7fe f94c 	bl	468 <__mriCore_SetSignalValue>
    21d0:	2000      	movs	r0, #0
    21d2:	bd08      	pop	{r3, pc}
    21d4:	f7fe f92e 	bl	434 <__mriCore_FlagSemihostCallAsHandled>
    21d8:	2001      	movs	r0, #1
    21da:	bd08      	pop	{r3, pc}

000021dc <__mriIssueGdbFileOpenRequest>:
    21dc:	b538      	push	{r3, r4, r5, lr}
    21de:	4605      	mov	r5, r0
    21e0:	f7fe f95e 	bl	4a0 <__mriCore_GetInitializedBuffer>
    21e4:	4913      	ldr	r1, [pc, #76]	; (2234 <__mriIssueGdbFileOpenRequest+0x58>)
    21e6:	4604      	mov	r4, r0
    21e8:	f7ff fdc0 	bl	1d6c <__mriBuffer_WriteString>
    21ec:	4620      	mov	r0, r4
    21ee:	6829      	ldr	r1, [r5, #0]
    21f0:	f7ff fdf8 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    21f4:	4620      	mov	r0, r4
    21f6:	212f      	movs	r1, #47	; 0x2f
    21f8:	f7ff fd36 	bl	1c68 <__mriBuffer_WriteChar>
    21fc:	6869      	ldr	r1, [r5, #4]
    21fe:	4620      	mov	r0, r4
    2200:	3101      	adds	r1, #1
    2202:	f7ff fdef 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2206:	4620      	mov	r0, r4
    2208:	212c      	movs	r1, #44	; 0x2c
    220a:	f7ff fd2d 	bl	1c68 <__mriBuffer_WriteChar>
    220e:	4620      	mov	r0, r4
    2210:	68a9      	ldr	r1, [r5, #8]
    2212:	f7ff fde7 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2216:	4620      	mov	r0, r4
    2218:	212c      	movs	r1, #44	; 0x2c
    221a:	f7ff fd25 	bl	1c68 <__mriBuffer_WriteChar>
    221e:	4620      	mov	r0, r4
    2220:	68e9      	ldr	r1, [r5, #12]
    2222:	f7ff fddf 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2226:	f7fe f943 	bl	4b0 <__mriCore_SendPacketToGdb>
    222a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    222e:	f7ff bfc1 	b.w	21b4 <processGdbFileResponseCommands>
    2232:	bf00      	nop
    2234:	000040b4 	.word	0x000040b4

00002238 <__mriIssueGdbFileWriteRequest>:
    2238:	b538      	push	{r3, r4, r5, lr}
    223a:	4605      	mov	r5, r0
    223c:	f7fe f930 	bl	4a0 <__mriCore_GetInitializedBuffer>
    2240:	490e      	ldr	r1, [pc, #56]	; (227c <__mriIssueGdbFileWriteRequest+0x44>)
    2242:	4604      	mov	r4, r0
    2244:	f7ff fd92 	bl	1d6c <__mriBuffer_WriteString>
    2248:	4620      	mov	r0, r4
    224a:	6829      	ldr	r1, [r5, #0]
    224c:	f7ff fdca 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2250:	4620      	mov	r0, r4
    2252:	212c      	movs	r1, #44	; 0x2c
    2254:	f7ff fd08 	bl	1c68 <__mriBuffer_WriteChar>
    2258:	4620      	mov	r0, r4
    225a:	6869      	ldr	r1, [r5, #4]
    225c:	f7ff fdc2 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2260:	4620      	mov	r0, r4
    2262:	212c      	movs	r1, #44	; 0x2c
    2264:	f7ff fd00 	bl	1c68 <__mriBuffer_WriteChar>
    2268:	4620      	mov	r0, r4
    226a:	68a9      	ldr	r1, [r5, #8]
    226c:	f7ff fdba 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2270:	f7fe f91e 	bl	4b0 <__mriCore_SendPacketToGdb>
    2274:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2278:	f7ff bf9c 	b.w	21b4 <processGdbFileResponseCommands>
    227c:	000040ac 	.word	0x000040ac

00002280 <__mriIssueGdbFileReadRequest>:
    2280:	b538      	push	{r3, r4, r5, lr}
    2282:	4605      	mov	r5, r0
    2284:	f7fe f90c 	bl	4a0 <__mriCore_GetInitializedBuffer>
    2288:	490e      	ldr	r1, [pc, #56]	; (22c4 <__mriIssueGdbFileReadRequest+0x44>)
    228a:	4604      	mov	r4, r0
    228c:	f7ff fd6e 	bl	1d6c <__mriBuffer_WriteString>
    2290:	4620      	mov	r0, r4
    2292:	6829      	ldr	r1, [r5, #0]
    2294:	f7ff fda6 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2298:	4620      	mov	r0, r4
    229a:	212c      	movs	r1, #44	; 0x2c
    229c:	f7ff fce4 	bl	1c68 <__mriBuffer_WriteChar>
    22a0:	4620      	mov	r0, r4
    22a2:	6869      	ldr	r1, [r5, #4]
    22a4:	f7ff fd9e 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    22a8:	4620      	mov	r0, r4
    22aa:	212c      	movs	r1, #44	; 0x2c
    22ac:	f7ff fcdc 	bl	1c68 <__mriBuffer_WriteChar>
    22b0:	4620      	mov	r0, r4
    22b2:	68a9      	ldr	r1, [r5, #8]
    22b4:	f7ff fd96 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    22b8:	f7fe f8fa 	bl	4b0 <__mriCore_SendPacketToGdb>
    22bc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    22c0:	f7ff bf78 	b.w	21b4 <processGdbFileResponseCommands>
    22c4:	000040c3 	.word	0x000040c3

000022c8 <__mriIssueGdbFileCloseRequest>:
    22c8:	b538      	push	{r3, r4, r5, lr}
    22ca:	4604      	mov	r4, r0
    22cc:	f7fe f8e8 	bl	4a0 <__mriCore_GetInitializedBuffer>
    22d0:	4906      	ldr	r1, [pc, #24]	; (22ec <__mriIssueGdbFileCloseRequest+0x24>)
    22d2:	4605      	mov	r5, r0
    22d4:	f7ff fd4a 	bl	1d6c <__mriBuffer_WriteString>
    22d8:	4628      	mov	r0, r5
    22da:	4621      	mov	r1, r4
    22dc:	f7ff fd82 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    22e0:	f7fe f8e6 	bl	4b0 <__mriCore_SendPacketToGdb>
    22e4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    22e8:	f7ff bf64 	b.w	21b4 <processGdbFileResponseCommands>
    22ec:	00004091 	.word	0x00004091

000022f0 <__mriIssueGdbFileSeekRequest>:
    22f0:	b538      	push	{r3, r4, r5, lr}
    22f2:	4605      	mov	r5, r0
    22f4:	f7fe f8d4 	bl	4a0 <__mriCore_GetInitializedBuffer>
    22f8:	490e      	ldr	r1, [pc, #56]	; (2334 <__mriIssueGdbFileSeekRequest+0x44>)
    22fa:	4604      	mov	r4, r0
    22fc:	f7ff fd36 	bl	1d6c <__mriBuffer_WriteString>
    2300:	4620      	mov	r0, r4
    2302:	6829      	ldr	r1, [r5, #0]
    2304:	f7ff fd6e 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2308:	4620      	mov	r0, r4
    230a:	212c      	movs	r1, #44	; 0x2c
    230c:	f7ff fcac 	bl	1c68 <__mriBuffer_WriteChar>
    2310:	4620      	mov	r0, r4
    2312:	6869      	ldr	r1, [r5, #4]
    2314:	f7ff fd90 	bl	1e38 <__mriBuffer_WriteIntegerAsHex>
    2318:	4620      	mov	r0, r4
    231a:	212c      	movs	r1, #44	; 0x2c
    231c:	f7ff fca4 	bl	1c68 <__mriBuffer_WriteChar>
    2320:	4620      	mov	r0, r4
    2322:	68a9      	ldr	r1, [r5, #8]
    2324:	f7ff fd88 	bl	1e38 <__mriBuffer_WriteIntegerAsHex>
    2328:	f7fe f8c2 	bl	4b0 <__mriCore_SendPacketToGdb>
    232c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2330:	f7ff bf40 	b.w	21b4 <processGdbFileResponseCommands>
    2334:	000040ca 	.word	0x000040ca

00002338 <__mriIssueGdbFileFStatRequest>:
    2338:	b570      	push	{r4, r5, r6, lr}
    233a:	460d      	mov	r5, r1
    233c:	4606      	mov	r6, r0
    233e:	f7fe f8af 	bl	4a0 <__mriCore_GetInitializedBuffer>
    2342:	490b      	ldr	r1, [pc, #44]	; (2370 <__mriIssueGdbFileFStatRequest+0x38>)
    2344:	4604      	mov	r4, r0
    2346:	f7ff fd11 	bl	1d6c <__mriBuffer_WriteString>
    234a:	4620      	mov	r0, r4
    234c:	4631      	mov	r1, r6
    234e:	f7ff fd49 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2352:	4620      	mov	r0, r4
    2354:	212c      	movs	r1, #44	; 0x2c
    2356:	f7ff fc87 	bl	1c68 <__mriBuffer_WriteChar>
    235a:	4620      	mov	r0, r4
    235c:	4629      	mov	r1, r5
    235e:	f7ff fd41 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2362:	f7fe f8a5 	bl	4b0 <__mriCore_SendPacketToGdb>
    2366:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    236a:	f7ff bf23 	b.w	21b4 <processGdbFileResponseCommands>
    236e:	bf00      	nop
    2370:	000040bb 	.word	0x000040bb

00002374 <__mriIssueGdbFileUnlinkRequest>:
    2374:	b538      	push	{r3, r4, r5, lr}
    2376:	4605      	mov	r5, r0
    2378:	f7fe f892 	bl	4a0 <__mriCore_GetInitializedBuffer>
    237c:	490b      	ldr	r1, [pc, #44]	; (23ac <__mriIssueGdbFileUnlinkRequest+0x38>)
    237e:	4604      	mov	r4, r0
    2380:	f7ff fcf4 	bl	1d6c <__mriBuffer_WriteString>
    2384:	4620      	mov	r0, r4
    2386:	6829      	ldr	r1, [r5, #0]
    2388:	f7ff fd2c 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    238c:	4620      	mov	r0, r4
    238e:	212f      	movs	r1, #47	; 0x2f
    2390:	f7ff fc6a 	bl	1c68 <__mriBuffer_WriteChar>
    2394:	6869      	ldr	r1, [r5, #4]
    2396:	4620      	mov	r0, r4
    2398:	3101      	adds	r1, #1
    239a:	f7ff fd23 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    239e:	f7fe f887 	bl	4b0 <__mriCore_SendPacketToGdb>
    23a2:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    23a6:	f7ff bf05 	b.w	21b4 <processGdbFileResponseCommands>
    23aa:	bf00      	nop
    23ac:	000040d2 	.word	0x000040d2

000023b0 <__mriIssueGdbFileStatRequest>:
    23b0:	b570      	push	{r4, r5, r6, lr}
    23b2:	4605      	mov	r5, r0
    23b4:	460e      	mov	r6, r1
    23b6:	f7fe f873 	bl	4a0 <__mriCore_GetInitializedBuffer>
    23ba:	4910      	ldr	r1, [pc, #64]	; (23fc <__mriIssueGdbFileStatRequest+0x4c>)
    23bc:	4604      	mov	r4, r0
    23be:	f7ff fcd5 	bl	1d6c <__mriBuffer_WriteString>
    23c2:	4620      	mov	r0, r4
    23c4:	4629      	mov	r1, r5
    23c6:	f7ff fd0d 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    23ca:	212f      	movs	r1, #47	; 0x2f
    23cc:	4620      	mov	r0, r4
    23ce:	f7ff fc4b 	bl	1c68 <__mriBuffer_WriteChar>
    23d2:	4628      	mov	r0, r5
    23d4:	f001 f804 	bl	33e0 <strlen>
    23d8:	1c41      	adds	r1, r0, #1
    23da:	4620      	mov	r0, r4
    23dc:	f7ff fd02 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    23e0:	4620      	mov	r0, r4
    23e2:	212c      	movs	r1, #44	; 0x2c
    23e4:	f7ff fc40 	bl	1c68 <__mriBuffer_WriteChar>
    23e8:	4620      	mov	r0, r4
    23ea:	4631      	mov	r1, r6
    23ec:	f7ff fcfa 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    23f0:	f7fe f85e 	bl	4b0 <__mriCore_SendPacketToGdb>
    23f4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    23f8:	f7ff bedc 	b.w	21b4 <processGdbFileResponseCommands>
    23fc:	00004099 	.word	0x00004099

00002400 <__mriIssueGdbFileRenameRequest>:
    2400:	b570      	push	{r4, r5, r6, lr}
    2402:	460d      	mov	r5, r1
    2404:	4606      	mov	r6, r0
    2406:	f7fe f84b 	bl	4a0 <__mriCore_GetInitializedBuffer>
    240a:	4916      	ldr	r1, [pc, #88]	; (2464 <__mriIssueGdbFileRenameRequest+0x64>)
    240c:	4604      	mov	r4, r0
    240e:	f7ff fcad 	bl	1d6c <__mriBuffer_WriteString>
    2412:	4620      	mov	r0, r4
    2414:	4631      	mov	r1, r6
    2416:	f7ff fce5 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    241a:	212f      	movs	r1, #47	; 0x2f
    241c:	4620      	mov	r0, r4
    241e:	f7ff fc23 	bl	1c68 <__mriBuffer_WriteChar>
    2422:	4630      	mov	r0, r6
    2424:	f000 ffdc 	bl	33e0 <strlen>
    2428:	1c41      	adds	r1, r0, #1
    242a:	4620      	mov	r0, r4
    242c:	f7ff fcda 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2430:	4620      	mov	r0, r4
    2432:	212c      	movs	r1, #44	; 0x2c
    2434:	f7ff fc18 	bl	1c68 <__mriBuffer_WriteChar>
    2438:	4620      	mov	r0, r4
    243a:	4629      	mov	r1, r5
    243c:	f7ff fcd2 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2440:	212f      	movs	r1, #47	; 0x2f
    2442:	4620      	mov	r0, r4
    2444:	f7ff fc10 	bl	1c68 <__mriBuffer_WriteChar>
    2448:	4628      	mov	r0, r5
    244a:	f000 ffc9 	bl	33e0 <strlen>
    244e:	1c41      	adds	r1, r0, #1
    2450:	4620      	mov	r0, r4
    2452:	f7ff fcc7 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2456:	f7fe f82b 	bl	4b0 <__mriCore_SendPacketToGdb>
    245a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    245e:	f7ff bea9 	b.w	21b4 <processGdbFileResponseCommands>
    2462:	bf00      	nop
    2464:	000040a3 	.word	0x000040a3

00002468 <__mriHandleFileIOCommand>:
    2468:	b570      	push	{r4, r5, r6, lr}
    246a:	f7fe f815 	bl	498 <__mriCore_GetBuffer>
    246e:	4604      	mov	r4, r0
    2470:	f7ff fd14 	bl	1e9c <__mriBuffer_ReadIntegerAsHex>
    2474:	212c      	movs	r1, #44	; 0x2c
    2476:	4606      	mov	r6, r0
    2478:	4620      	mov	r0, r4
    247a:	f7ff fcf5 	bl	1e68 <__mriBuffer_IsNextCharEqualTo>
    247e:	b150      	cbz	r0, 2496 <__mriHandleFileIOCommand+0x2e>
    2480:	4620      	mov	r0, r4
    2482:	f7ff fd0b 	bl	1e9c <__mriBuffer_ReadIntegerAsHex>
    2486:	4909      	ldr	r1, [pc, #36]	; (24ac <__mriHandleFileIOCommand+0x44>)
    2488:	4605      	mov	r5, r0
    248a:	2202      	movs	r2, #2
    248c:	4620      	mov	r0, r4
    248e:	f7ff fd2f 	bl	1ef0 <__mriBuffer_MatchesString>
    2492:	4604      	mov	r4, r0
    2494:	e001      	b.n	249a <__mriHandleFileIOCommand+0x32>
    2496:	4604      	mov	r4, r0
    2498:	4605      	mov	r5, r0
    249a:	4630      	mov	r0, r6
    249c:	4629      	mov	r1, r5
    249e:	f7fd ffef 	bl	480 <__mriCore_SetSemihostReturnValues>
    24a2:	4620      	mov	r0, r4
    24a4:	f7fd ffb0 	bl	408 <__mriCore_RecordControlCFlagSentFromGdb>
    24a8:	2003      	movs	r0, #3
    24aa:	bd70      	pop	{r4, r5, r6, pc}
    24ac:	000040a0 	.word	0x000040a0

000024b0 <__mriCmd_HandleMemoryReadCommand>:
    24b0:	b537      	push	{r0, r1, r2, r4, r5, lr}
    24b2:	f7fd fff1 	bl	498 <__mriCore_GetBuffer>
    24b6:	4c0b      	ldr	r4, [pc, #44]	; (24e4 <__mriCmd_HandleMemoryReadCommand+0x34>)
    24b8:	2300      	movs	r3, #0
    24ba:	4669      	mov	r1, sp
    24bc:	4605      	mov	r5, r0
    24be:	6023      	str	r3, [r4, #0]
    24c0:	f7ff fe30 	bl	2124 <__mriCmd_ReadAddressAndLengthArguments>
    24c4:	6820      	ldr	r0, [r4, #0]
    24c6:	b118      	cbz	r0, 24d0 <__mriCmd_HandleMemoryReadCommand+0x20>
    24c8:	4807      	ldr	r0, [pc, #28]	; (24e8 <__mriCmd_HandleMemoryReadCommand+0x38>)
    24ca:	f7fd ff7b 	bl	3c4 <__mriCore_PrepareStringResponse>
    24ce:	e006      	b.n	24de <__mriCmd_HandleMemoryReadCommand+0x2e>
    24d0:	f7fd ff68 	bl	3a4 <__mriCore_InitBuffer>
    24d4:	e89d 0006 	ldmia.w	sp, {r1, r2}
    24d8:	4628      	mov	r0, r5
    24da:	f000 fa48 	bl	296e <__mriMem_ReadMemoryIntoHexBuffer>
    24de:	2000      	movs	r0, #0
    24e0:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    24e2:	bf00      	nop
    24e4:	100001dc 	.word	0x100001dc
    24e8:	00004086 	.word	0x00004086

000024ec <__mriCmd_HandleMemoryWriteCommand>:
    24ec:	b537      	push	{r0, r1, r2, r4, r5, lr}
    24ee:	f7fd ffd3 	bl	498 <__mriCore_GetBuffer>
    24f2:	4c0c      	ldr	r4, [pc, #48]	; (2524 <__mriCmd_HandleMemoryWriteCommand+0x38>)
    24f4:	2300      	movs	r3, #0
    24f6:	4669      	mov	r1, sp
    24f8:	4605      	mov	r5, r0
    24fa:	6023      	str	r3, [r4, #0]
    24fc:	f7ff fe2a 	bl	2154 <__mriCmd_ReadAddressAndLengthArgumentsWithColon>
    2500:	6820      	ldr	r0, [r4, #0]
    2502:	b108      	cbz	r0, 2508 <__mriCmd_HandleMemoryWriteCommand+0x1c>
    2504:	4808      	ldr	r0, [pc, #32]	; (2528 <__mriCmd_HandleMemoryWriteCommand+0x3c>)
    2506:	e008      	b.n	251a <__mriCmd_HandleMemoryWriteCommand+0x2e>
    2508:	4628      	mov	r0, r5
    250a:	e89d 0006 	ldmia.w	sp, {r1, r2}
    250e:	f000 fa5b 	bl	29c8 <__mriMem_WriteHexBufferToMemory>
    2512:	b108      	cbz	r0, 2518 <__mriCmd_HandleMemoryWriteCommand+0x2c>
    2514:	4805      	ldr	r0, [pc, #20]	; (252c <__mriCmd_HandleMemoryWriteCommand+0x40>)
    2516:	e000      	b.n	251a <__mriCmd_HandleMemoryWriteCommand+0x2e>
    2518:	4805      	ldr	r0, [pc, #20]	; (2530 <__mriCmd_HandleMemoryWriteCommand+0x44>)
    251a:	f7fd ff53 	bl	3c4 <__mriCore_PrepareStringResponse>
    251e:	2000      	movs	r0, #0
    2520:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    2522:	bf00      	nop
    2524:	100001dc 	.word	0x100001dc
    2528:	00004086 	.word	0x00004086
    252c:	0000408e 	.word	0x0000408e
    2530:	000040db 	.word	0x000040db

00002534 <__mriCmd_HandleBinaryMemoryWriteCommand>:
    2534:	b537      	push	{r0, r1, r2, r4, r5, lr}
    2536:	f7fd ffaf 	bl	498 <__mriCore_GetBuffer>
    253a:	4d12      	ldr	r5, [pc, #72]	; (2584 <__mriCmd_HandleBinaryMemoryWriteCommand+0x50>)
    253c:	2300      	movs	r3, #0
    253e:	4669      	mov	r1, sp
    2540:	4604      	mov	r4, r0
    2542:	602b      	str	r3, [r5, #0]
    2544:	f7ff fdee 	bl	2124 <__mriCmd_ReadAddressAndLengthArguments>
    2548:	6828      	ldr	r0, [r5, #0]
    254a:	b918      	cbnz	r0, 2554 <__mriCmd_HandleBinaryMemoryWriteCommand+0x20>
    254c:	4620      	mov	r0, r4
    254e:	213a      	movs	r1, #58	; 0x3a
    2550:	f7ff fdda 	bl	2108 <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2554:	6829      	ldr	r1, [r5, #0]
    2556:	b109      	cbz	r1, 255c <__mriCmd_HandleBinaryMemoryWriteCommand+0x28>
    2558:	480b      	ldr	r0, [pc, #44]	; (2588 <__mriCmd_HandleBinaryMemoryWriteCommand+0x54>)
    255a:	e00e      	b.n	257a <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    255c:	4620      	mov	r0, r4
    255e:	e89d 0006 	ldmia.w	sp, {r1, r2}
    2562:	f000 fa59 	bl	2a18 <__mriMem_WriteBinaryBufferToMemory>
    2566:	b108      	cbz	r0, 256c <__mriCmd_HandleBinaryMemoryWriteCommand+0x38>
    2568:	4808      	ldr	r0, [pc, #32]	; (258c <__mriCmd_HandleBinaryMemoryWriteCommand+0x58>)
    256a:	e006      	b.n	257a <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    256c:	4620      	mov	r0, r4
    256e:	f7ff fb73 	bl	1c58 <__mriBuffer_OverrunDetected>
    2572:	b108      	cbz	r0, 2578 <__mriCmd_HandleBinaryMemoryWriteCommand+0x44>
    2574:	4806      	ldr	r0, [pc, #24]	; (2590 <__mriCmd_HandleBinaryMemoryWriteCommand+0x5c>)
    2576:	e000      	b.n	257a <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    2578:	4806      	ldr	r0, [pc, #24]	; (2594 <__mriCmd_HandleBinaryMemoryWriteCommand+0x60>)
    257a:	f7fd ff23 	bl	3c4 <__mriCore_PrepareStringResponse>
    257e:	2000      	movs	r0, #0
    2580:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    2582:	bf00      	nop
    2584:	100001dc 	.word	0x100001dc
    2588:	00004086 	.word	0x00004086
    258c:	0000408e 	.word	0x0000408e
    2590:	00003478 	.word	0x00003478
    2594:	000040db 	.word	0x000040db

00002598 <handleQueryTransferReadCommand>:
    2598:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    259c:	4604      	mov	r4, r0
    259e:	f7fd ff7b 	bl	498 <__mriCore_GetBuffer>
    25a2:	1d25      	adds	r5, r4, #4
    25a4:	e895 01a0 	ldmia.w	r5, {r5, r7, r8}
    25a8:	42af      	cmp	r7, r5
    25aa:	4606      	mov	r6, r0
    25ac:	d203      	bcs.n	25b6 <handleQueryTransferReadCommand+0x1e>
    25ae:	1bed      	subs	r5, r5, r7
    25b0:	f04f 096d 	mov.w	r9, #109	; 0x6d
    25b4:	e003      	b.n	25be <handleQueryTransferReadCommand+0x26>
    25b6:	2500      	movs	r5, #0
    25b8:	46a8      	mov	r8, r5
    25ba:	f04f 096c 	mov.w	r9, #108	; 0x6c
    25be:	f7fd fef1 	bl	3a4 <__mriCore_InitBuffer>
    25c2:	4630      	mov	r0, r6
    25c4:	f7ff fb2b 	bl	1c1e <__mriBuffer_BytesLeft>
    25c8:	4540      	cmp	r0, r8
    25ca:	bf38      	it	cc
    25cc:	4680      	movcc	r8, r0
    25ce:	45a8      	cmp	r8, r5
    25d0:	bf88      	it	hi
    25d2:	f04f 096c 	movhi.w	r9, #108	; 0x6c
    25d6:	4630      	mov	r0, r6
    25d8:	4649      	mov	r1, r9
    25da:	bf88      	it	hi
    25dc:	46a8      	movhi	r8, r5
    25de:	f7ff fb43 	bl	1c68 <__mriBuffer_WriteChar>
    25e2:	6821      	ldr	r1, [r4, #0]
    25e4:	4630      	mov	r0, r6
    25e6:	19c9      	adds	r1, r1, r7
    25e8:	4642      	mov	r2, r8
    25ea:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    25ee:	f7ff bba3 	b.w	1d38 <__mriBuffer_WriteSizedString>
	...

000025f4 <readQueryTransferReadArguments>:
    25f4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    25f6:	4604      	mov	r4, r0
    25f8:	460e      	mov	r6, r1
    25fa:	4608      	mov	r0, r1
    25fc:	2210      	movs	r2, #16
    25fe:	2100      	movs	r1, #0
    2600:	f000 fedb 	bl	33ba <memset>
    2604:	4620      	mov	r0, r4
    2606:	213a      	movs	r1, #58	; 0x3a
    2608:	f7ff fc2e 	bl	1e68 <__mriBuffer_IsNextCharEqualTo>
    260c:	b930      	cbnz	r0, 261c <readQueryTransferReadArguments+0x28>
    260e:	481f      	ldr	r0, [pc, #124]	; (268c <readQueryTransferReadArguments+0x98>)
    2610:	6802      	ldr	r2, [r0, #0]
    2612:	2a04      	cmp	r2, #4
    2614:	bfb8      	it	lt
    2616:	2204      	movlt	r2, #4
    2618:	6002      	str	r2, [r0, #0]
    261a:	e036      	b.n	268a <readQueryTransferReadArguments+0x96>
    261c:	4620      	mov	r0, r4
    261e:	491c      	ldr	r1, [pc, #112]	; (2690 <readQueryTransferReadArguments+0x9c>)
    2620:	2204      	movs	r2, #4
    2622:	f7ff fc65 	bl	1ef0 <__mriBuffer_MatchesString>
    2626:	2800      	cmp	r0, #0
    2628:	d0f1      	beq.n	260e <readQueryTransferReadArguments+0x1a>
    262a:	4620      	mov	r0, r4
    262c:	213a      	movs	r1, #58	; 0x3a
    262e:	f7ff fc1b 	bl	1e68 <__mriBuffer_IsNextCharEqualTo>
    2632:	2800      	cmp	r0, #0
    2634:	d0eb      	beq.n	260e <readQueryTransferReadArguments+0x1a>
    2636:	4d15      	ldr	r5, [pc, #84]	; (268c <readQueryTransferReadArguments+0x98>)
    2638:	2300      	movs	r3, #0
    263a:	4620      	mov	r0, r4
    263c:	4915      	ldr	r1, [pc, #84]	; (2694 <readQueryTransferReadArguments+0xa0>)
    263e:	220a      	movs	r2, #10
    2640:	602b      	str	r3, [r5, #0]
    2642:	f7ff fc55 	bl	1ef0 <__mriBuffer_MatchesString>
    2646:	4607      	mov	r7, r0
    2648:	b190      	cbz	r0, 2670 <readQueryTransferReadArguments+0x7c>
    264a:	4620      	mov	r0, r4
    264c:	213a      	movs	r1, #58	; 0x3a
    264e:	f7ff fc0b 	bl	1e68 <__mriBuffer_IsNextCharEqualTo>
    2652:	b1a0      	cbz	r0, 267e <readQueryTransferReadArguments+0x8a>
    2654:	480f      	ldr	r0, [pc, #60]	; (2694 <readQueryTransferReadArguments+0xa0>)
    2656:	6030      	str	r0, [r6, #0]
    2658:	480c      	ldr	r0, [pc, #48]	; (268c <readQueryTransferReadArguments+0x98>)
    265a:	6802      	ldr	r2, [r0, #0]
    265c:	b9aa      	cbnz	r2, 268a <readQueryTransferReadArguments+0x96>
    265e:	4669      	mov	r1, sp
    2660:	4620      	mov	r0, r4
    2662:	f7ff fd5f 	bl	2124 <__mriCmd_ReadAddressAndLengthArguments>
    2666:	9b00      	ldr	r3, [sp, #0]
    2668:	9901      	ldr	r1, [sp, #4]
    266a:	60b3      	str	r3, [r6, #8]
    266c:	60f1      	str	r1, [r6, #12]
    266e:	e00c      	b.n	268a <readQueryTransferReadArguments+0x96>
    2670:	4620      	mov	r0, r4
    2672:	213a      	movs	r1, #58	; 0x3a
    2674:	f7ff fbf8 	bl	1e68 <__mriBuffer_IsNextCharEqualTo>
    2678:	b108      	cbz	r0, 267e <readQueryTransferReadArguments+0x8a>
    267a:	4638      	mov	r0, r7
    267c:	e7eb      	b.n	2656 <readQueryTransferReadArguments+0x62>
    267e:	6829      	ldr	r1, [r5, #0]
    2680:	2904      	cmp	r1, #4
    2682:	bfb8      	it	lt
    2684:	2104      	movlt	r1, #4
    2686:	6029      	str	r1, [r5, #0]
    2688:	e7e5      	b.n	2656 <readQueryTransferReadArguments+0x62>
    268a:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    268c:	100001dc 	.word	0x100001dc
    2690:	000040df 	.word	0x000040df
    2694:	000040f3 	.word	0x000040f3

00002698 <__mriCmd_HandleQueryCommand>:
    2698:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    269a:	f7fd fefd 	bl	498 <__mriCore_GetBuffer>
    269e:	4935      	ldr	r1, [pc, #212]	; (2774 <__mriCmd_HandleQueryCommand+0xdc>)
    26a0:	2209      	movs	r2, #9
    26a2:	4604      	mov	r4, r0
    26a4:	f7ff fc24 	bl	1ef0 <__mriBuffer_MatchesString>
    26a8:	4606      	mov	r6, r0
    26aa:	b168      	cbz	r0, 26c8 <__mriCmd_HandleQueryCommand+0x30>
    26ac:	f7fe fb1c 	bl	ce8 <__mriPlatform_GetPacketBufferSize>
    26b0:	4604      	mov	r4, r0
    26b2:	f7fd fef5 	bl	4a0 <__mriCore_GetInitializedBuffer>
    26b6:	4930      	ldr	r1, [pc, #192]	; (2778 <__mriCmd_HandleQueryCommand+0xe0>)
    26b8:	4605      	mov	r5, r0
    26ba:	f7ff fb57 	bl	1d6c <__mriBuffer_WriteString>
    26be:	4628      	mov	r0, r5
    26c0:	4621      	mov	r1, r4
    26c2:	f7ff fb8f 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    26c6:	e051      	b.n	276c <__mriCmd_HandleQueryCommand+0xd4>
    26c8:	4620      	mov	r0, r4
    26ca:	492c      	ldr	r1, [pc, #176]	; (277c <__mriCmd_HandleQueryCommand+0xe4>)
    26cc:	2204      	movs	r2, #4
    26ce:	f7ff fc0f 	bl	1ef0 <__mriBuffer_MatchesString>
    26d2:	2800      	cmp	r0, #0
    26d4:	d047      	beq.n	2766 <__mriCmd_HandleQueryCommand+0xce>
    26d6:	f7fd fedf 	bl	498 <__mriCore_GetBuffer>
    26da:	213a      	movs	r1, #58	; 0x3a
    26dc:	4604      	mov	r4, r0
    26de:	f7ff fbc3 	bl	1e68 <__mriBuffer_IsNextCharEqualTo>
    26e2:	2800      	cmp	r0, #0
    26e4:	d033      	beq.n	274e <__mriCmd_HandleQueryCommand+0xb6>
    26e6:	4620      	mov	r0, r4
    26e8:	4925      	ldr	r1, [pc, #148]	; (2780 <__mriCmd_HandleQueryCommand+0xe8>)
    26ea:	220a      	movs	r2, #10
    26ec:	f7ff fc00 	bl	1ef0 <__mriBuffer_MatchesString>
    26f0:	4605      	mov	r5, r0
    26f2:	b1a0      	cbz	r0, 271e <__mriCmd_HandleQueryCommand+0x86>
    26f4:	4c23      	ldr	r4, [pc, #140]	; (2784 <__mriCmd_HandleQueryCommand+0xec>)
    26f6:	f7fd fecf 	bl	498 <__mriCore_GetBuffer>
    26fa:	4669      	mov	r1, sp
    26fc:	6026      	str	r6, [r4, #0]
    26fe:	f7ff ff79 	bl	25f4 <readQueryTransferReadArguments>
    2702:	6822      	ldr	r2, [r4, #0]
    2704:	b91a      	cbnz	r2, 270e <__mriCmd_HandleQueryCommand+0x76>
    2706:	9b00      	ldr	r3, [sp, #0]
    2708:	b10b      	cbz	r3, 270e <__mriCmd_HandleQueryCommand+0x76>
    270a:	2004      	movs	r0, #4
    270c:	6020      	str	r0, [r4, #0]
    270e:	6821      	ldr	r1, [r4, #0]
    2710:	b9e9      	cbnz	r1, 274e <__mriCmd_HandleQueryCommand+0xb6>
    2712:	f7fe ffd1 	bl	16b8 <__mriPlatform_GetDeviceMemoryMapXml>
    2716:	9000      	str	r0, [sp, #0]
    2718:	f7fe ffca 	bl	16b0 <__mriPlatform_GetDeviceMemoryMapXmlSize>
    271c:	e01e      	b.n	275c <__mriCmd_HandleQueryCommand+0xc4>
    271e:	4620      	mov	r0, r4
    2720:	4919      	ldr	r1, [pc, #100]	; (2788 <__mriCmd_HandleQueryCommand+0xf0>)
    2722:	2208      	movs	r2, #8
    2724:	f7ff fbe4 	bl	1ef0 <__mriBuffer_MatchesString>
    2728:	b1e8      	cbz	r0, 2766 <__mriCmd_HandleQueryCommand+0xce>
    272a:	4c16      	ldr	r4, [pc, #88]	; (2784 <__mriCmd_HandleQueryCommand+0xec>)
    272c:	f7fd feb4 	bl	498 <__mriCore_GetBuffer>
    2730:	4669      	mov	r1, sp
    2732:	6025      	str	r5, [r4, #0]
    2734:	f7ff ff5e 	bl	25f4 <readQueryTransferReadArguments>
    2738:	6823      	ldr	r3, [r4, #0]
    273a:	b933      	cbnz	r3, 274a <__mriCmd_HandleQueryCommand+0xb2>
    273c:	9800      	ldr	r0, [sp, #0]
    273e:	4913      	ldr	r1, [pc, #76]	; (278c <__mriCmd_HandleQueryCommand+0xf4>)
    2740:	f000 fe43 	bl	33ca <strcmp>
    2744:	b108      	cbz	r0, 274a <__mriCmd_HandleQueryCommand+0xb2>
    2746:	2004      	movs	r0, #4
    2748:	6020      	str	r0, [r4, #0]
    274a:	6821      	ldr	r1, [r4, #0]
    274c:	b109      	cbz	r1, 2752 <__mriCmd_HandleQueryCommand+0xba>
    274e:	4810      	ldr	r0, [pc, #64]	; (2790 <__mriCmd_HandleQueryCommand+0xf8>)
    2750:	e00a      	b.n	2768 <__mriCmd_HandleQueryCommand+0xd0>
    2752:	f7fe fd97 	bl	1284 <__mriPlatform_GetTargetXml>
    2756:	9000      	str	r0, [sp, #0]
    2758:	f7fe fd90 	bl	127c <__mriPlatform_GetTargetXmlSize>
    275c:	9001      	str	r0, [sp, #4]
    275e:	4668      	mov	r0, sp
    2760:	f7ff ff1a 	bl	2598 <handleQueryTransferReadCommand>
    2764:	e002      	b.n	276c <__mriCmd_HandleQueryCommand+0xd4>
    2766:	480b      	ldr	r0, [pc, #44]	; (2794 <__mriCmd_HandleQueryCommand+0xfc>)
    2768:	f7fd fe2c 	bl	3c4 <__mriCore_PrepareStringResponse>
    276c:	2000      	movs	r0, #0
    276e:	b004      	add	sp, #16
    2770:	bd70      	pop	{r4, r5, r6, pc}
    2772:	bf00      	nop
    2774:	000040e9 	.word	0x000040e9
    2778:	00004109 	.word	0x00004109
    277c:	000040e4 	.word	0x000040e4
    2780:	0000414a 	.word	0x0000414a
    2784:	100001dc 	.word	0x100001dc
    2788:	00004141 	.word	0x00004141
    278c:	000040fe 	.word	0x000040fe
    2790:	00004086 	.word	0x00004086
    2794:	000034ee 	.word	0x000034ee

00002798 <__mriCmd_Send_T_StopResponse>:
    2798:	b510      	push	{r4, lr}
    279a:	f7fd fe81 	bl	4a0 <__mriCore_GetInitializedBuffer>
    279e:	2154      	movs	r1, #84	; 0x54
    27a0:	4604      	mov	r4, r0
    27a2:	f7ff fa61 	bl	1c68 <__mriBuffer_WriteChar>
    27a6:	f7fd fe65 	bl	474 <__mriCore_GetSignalValue>
    27aa:	4601      	mov	r1, r0
    27ac:	4620      	mov	r0, r4
    27ae:	f7ff fa81 	bl	1cb4 <__mriBuffer_WriteByteAsHex>
    27b2:	4620      	mov	r0, r4
    27b4:	f7fe fc5e 	bl	1074 <__mriPlatform_WriteTResponseRegistersToBuffer>
    27b8:	f7fd fe7a 	bl	4b0 <__mriCore_SendPacketToGdb>
    27bc:	2002      	movs	r0, #2
    27be:	bd10      	pop	{r4, pc}

000027c0 <__mriCmd_HandleRegisterReadCommand>:
    27c0:	b508      	push	{r3, lr}
    27c2:	f7fd fe6d 	bl	4a0 <__mriCore_GetInitializedBuffer>
    27c6:	f7fe fc73 	bl	10b0 <__mriPlatform_CopyContextToBuffer>
    27ca:	2000      	movs	r0, #0
    27cc:	bd08      	pop	{r3, pc}
	...

000027d0 <__mriCmd_HandleRegisterWriteCommand>:
    27d0:	b510      	push	{r4, lr}
    27d2:	f7fd fe61 	bl	498 <__mriCore_GetBuffer>
    27d6:	4604      	mov	r4, r0
    27d8:	f7fe fc7a 	bl	10d0 <__mriPlatform_CopyContextFromBuffer>
    27dc:	4620      	mov	r0, r4
    27de:	f7ff fa3b 	bl	1c58 <__mriBuffer_OverrunDetected>
    27e2:	b108      	cbz	r0, 27e8 <__mriCmd_HandleRegisterWriteCommand+0x18>
    27e4:	4803      	ldr	r0, [pc, #12]	; (27f4 <__mriCmd_HandleRegisterWriteCommand+0x24>)
    27e6:	e000      	b.n	27ea <__mriCmd_HandleRegisterWriteCommand+0x1a>
    27e8:	4803      	ldr	r0, [pc, #12]	; (27f8 <__mriCmd_HandleRegisterWriteCommand+0x28>)
    27ea:	f7fd fdeb 	bl	3c4 <__mriCore_PrepareStringResponse>
    27ee:	2000      	movs	r0, #0
    27f0:	bd10      	pop	{r4, pc}
    27f2:	bf00      	nop
    27f4:	00003478 	.word	0x00003478
    27f8:	0000408e 	.word	0x0000408e

000027fc <__mriCmd_HandleSingleStepCommand>:
    27fc:	b508      	push	{r3, lr}
    27fe:	f7ff fcbb 	bl	2178 <__mriCmd_HandleContinueCommand>
    2802:	0743      	lsls	r3, r0, #29
    2804:	d503      	bpl.n	280e <__mriCmd_HandleSingleStepCommand+0x12>
    2806:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    280a:	f7ff bfc5 	b.w	2798 <__mriCmd_Send_T_StopResponse>
    280e:	f7fe fa2b 	bl	c68 <__mriPlatform_EnableSingleStep>
    2812:	2003      	movs	r0, #3
    2814:	bd08      	pop	{r3, pc}

00002816 <__mriGdbConsole_WriteString>:
    2816:	b538      	push	{r3, r4, r5, lr}
    2818:	4604      	mov	r4, r0
    281a:	f7fe fd7d 	bl	1318 <__mriPlatform_CommSharingWithApplication>
    281e:	b150      	cbz	r0, 2836 <__mriGdbConsole_WriteString+0x20>
    2820:	f7fd fe1a 	bl	458 <__mriCore_IsFirstException>
    2824:	b138      	cbz	r0, 2836 <__mriGdbConsole_WriteString+0x20>
    2826:	3c01      	subs	r4, #1
    2828:	f814 0f01 	ldrb.w	r0, [r4, #1]!
    282c:	b110      	cbz	r0, 2834 <__mriGdbConsole_WriteString+0x1e>
    282e:	f7fe fd51 	bl	12d4 <__mriPlatform_CommSendChar>
    2832:	e7f9      	b.n	2828 <__mriGdbConsole_WriteString+0x12>
    2834:	bd38      	pop	{r3, r4, r5, pc}
    2836:	f7fd fe33 	bl	4a0 <__mriCore_GetInitializedBuffer>
    283a:	214f      	movs	r1, #79	; 0x4f
    283c:	4605      	mov	r5, r0
    283e:	f7ff fa13 	bl	1c68 <__mriBuffer_WriteChar>
    2842:	4620      	mov	r0, r4
    2844:	f000 fdcc 	bl	33e0 <strlen>
    2848:	4621      	mov	r1, r4
    284a:	4602      	mov	r2, r0
    284c:	4628      	mov	r0, r5
    284e:	f000 f88e 	bl	296e <__mriMem_ReadMemoryIntoHexBuffer>
    2852:	4628      	mov	r0, r5
    2854:	f7ff fa00 	bl	1c58 <__mriBuffer_OverrunDetected>
    2858:	b918      	cbnz	r0, 2862 <__mriGdbConsole_WriteString+0x4c>
    285a:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    285e:	f7fd be27 	b.w	4b0 <__mriCore_SendPacketToGdb>
    2862:	bd38      	pop	{r3, r4, r5, pc}

00002864 <__mriGdbConsole_WriteHexValue>:
    2864:	b510      	push	{r4, lr}
    2866:	b086      	sub	sp, #24
    2868:	220b      	movs	r2, #11
    286a:	4604      	mov	r4, r0
    286c:	4669      	mov	r1, sp
    286e:	a803      	add	r0, sp, #12
    2870:	f7ff f9ca 	bl	1c08 <__mriBuffer_Init>
    2874:	a803      	add	r0, sp, #12
    2876:	4908      	ldr	r1, [pc, #32]	; (2898 <__mriGdbConsole_WriteHexValue+0x34>)
    2878:	f7ff fa78 	bl	1d6c <__mriBuffer_WriteString>
    287c:	a803      	add	r0, sp, #12
    287e:	4621      	mov	r1, r4
    2880:	f7ff fab0 	bl	1de4 <__mriBuffer_WriteUIntegerAsHex>
    2884:	a803      	add	r0, sp, #12
    2886:	2100      	movs	r1, #0
    2888:	f7ff f9ee 	bl	1c68 <__mriBuffer_WriteChar>
    288c:	4668      	mov	r0, sp
    288e:	f7ff ffc2 	bl	2816 <__mriGdbConsole_WriteString>
    2892:	b006      	add	sp, #24
    2894:	bd10      	pop	{r4, pc}
    2896:	bf00      	nop
    2898:	00004155 	.word	0x00004155

0000289c <writeBinaryBufferToByteMemory>:
    289c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    28a0:	4606      	mov	r6, r0
    28a2:	eb01 0802 	add.w	r8, r1, r2
    28a6:	460c      	mov	r4, r1
    28a8:	4544      	cmp	r4, r8
    28aa:	d024      	beq.n	28f6 <writeBinaryBufferToByteMemory+0x5a>
    28ac:	4d13      	ldr	r5, [pc, #76]	; (28fc <writeBinaryBufferToByteMemory+0x60>)
    28ae:	2300      	movs	r3, #0
    28b0:	4630      	mov	r0, r6
    28b2:	602b      	str	r3, [r5, #0]
    28b4:	f7ff f9ea 	bl	1c8c <__mriBuffer_ReadChar>
    28b8:	682f      	ldr	r7, [r5, #0]
    28ba:	4601      	mov	r1, r0
    28bc:	b95f      	cbnz	r7, 28d6 <writeBinaryBufferToByteMemory+0x3a>
    28be:	287d      	cmp	r0, #125	; 0x7d
    28c0:	d109      	bne.n	28d6 <writeBinaryBufferToByteMemory+0x3a>
    28c2:	4630      	mov	r0, r6
    28c4:	f7ff f9e2 	bl	1c8c <__mriBuffer_ReadChar>
    28c8:	6829      	ldr	r1, [r5, #0]
    28ca:	b919      	cbnz	r1, 28d4 <writeBinaryBufferToByteMemory+0x38>
    28cc:	f080 0020 	eor.w	r0, r0, #32
    28d0:	b2c1      	uxtb	r1, r0
    28d2:	e000      	b.n	28d6 <writeBinaryBufferToByteMemory+0x3a>
    28d4:	4639      	mov	r1, r7
    28d6:	4a09      	ldr	r2, [pc, #36]	; (28fc <writeBinaryBufferToByteMemory+0x60>)
    28d8:	6813      	ldr	r3, [r2, #0]
    28da:	b113      	cbz	r3, 28e2 <writeBinaryBufferToByteMemory+0x46>
    28dc:	2000      	movs	r0, #0
    28de:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    28e2:	4620      	mov	r0, r4
    28e4:	1c65      	adds	r5, r4, #1
    28e6:	f000 f8ca 	bl	2a7e <__mriPlatform_MemWrite8>
    28ea:	f7fe fbb1 	bl	1050 <__mriPlatform_WasMemoryFaultEncountered>
    28ee:	2800      	cmp	r0, #0
    28f0:	d1f4      	bne.n	28dc <writeBinaryBufferToByteMemory+0x40>
    28f2:	462c      	mov	r4, r5
    28f4:	e7d8      	b.n	28a8 <writeBinaryBufferToByteMemory+0xc>
    28f6:	2001      	movs	r0, #1
    28f8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    28fc:	100001dc 	.word	0x100001dc

00002900 <writeHexBufferToByteMemory>:
    2900:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2902:	4607      	mov	r7, r0
    2904:	188e      	adds	r6, r1, r2
    2906:	460c      	mov	r4, r1
    2908:	42b4      	cmp	r4, r6
    290a:	d014      	beq.n	2936 <writeHexBufferToByteMemory+0x36>
    290c:	4d0b      	ldr	r5, [pc, #44]	; (293c <writeHexBufferToByteMemory+0x3c>)
    290e:	2300      	movs	r3, #0
    2910:	4638      	mov	r0, r7
    2912:	602b      	str	r3, [r5, #0]
    2914:	f7ff f9ea 	bl	1cec <__mriBuffer_ReadByteAsHex>
    2918:	4601      	mov	r1, r0
    291a:	6828      	ldr	r0, [r5, #0]
    291c:	b108      	cbz	r0, 2922 <writeHexBufferToByteMemory+0x22>
    291e:	2000      	movs	r0, #0
    2920:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2922:	4620      	mov	r0, r4
    2924:	1c65      	adds	r5, r4, #1
    2926:	f000 f8aa 	bl	2a7e <__mriPlatform_MemWrite8>
    292a:	f7fe fb91 	bl	1050 <__mriPlatform_WasMemoryFaultEncountered>
    292e:	2800      	cmp	r0, #0
    2930:	d1f5      	bne.n	291e <writeHexBufferToByteMemory+0x1e>
    2932:	462c      	mov	r4, r5
    2934:	e7e8      	b.n	2908 <writeHexBufferToByteMemory+0x8>
    2936:	2001      	movs	r0, #1
    2938:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    293a:	bf00      	nop
    293c:	100001dc 	.word	0x100001dc

00002940 <readMemoryBytesIntoHexBuffer>:
    2940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2942:	4605      	mov	r5, r0
    2944:	188c      	adds	r4, r1, r2
    2946:	4608      	mov	r0, r1
    2948:	42a0      	cmp	r0, r4
    294a:	d00c      	beq.n	2966 <readMemoryBytesIntoHexBuffer+0x26>
    294c:	1c46      	adds	r6, r0, #1
    294e:	f000 f890 	bl	2a72 <__mriPlatform_MemRead8>
    2952:	4607      	mov	r7, r0
    2954:	f7fe fb7c 	bl	1050 <__mriPlatform_WasMemoryFaultEncountered>
    2958:	b938      	cbnz	r0, 296a <readMemoryBytesIntoHexBuffer+0x2a>
    295a:	4628      	mov	r0, r5
    295c:	4639      	mov	r1, r7
    295e:	f7ff f9a9 	bl	1cb4 <__mriBuffer_WriteByteAsHex>
    2962:	4630      	mov	r0, r6
    2964:	e7f0      	b.n	2948 <readMemoryBytesIntoHexBuffer+0x8>
    2966:	2001      	movs	r0, #1
    2968:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    296a:	2000      	movs	r0, #0
    296c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0000296e <__mriMem_ReadMemoryIntoHexBuffer>:
    296e:	2a02      	cmp	r2, #2
    2970:	b573      	push	{r0, r1, r4, r5, r6, lr}
    2972:	4605      	mov	r5, r0
    2974:	4614      	mov	r4, r2
    2976:	d002      	beq.n	297e <__mriMem_ReadMemoryIntoHexBuffer+0x10>
    2978:	2a04      	cmp	r2, #4
    297a:	d122      	bne.n	29c2 <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    297c:	e00e      	b.n	299c <__mriMem_ReadMemoryIntoHexBuffer+0x2e>
    297e:	f011 0601 	ands.w	r6, r1, #1
    2982:	d11e      	bne.n	29c2 <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    2984:	4608      	mov	r0, r1
    2986:	f000 f871 	bl	2a6c <__mriPlatform_MemRead16>
    298a:	f8ad 0002 	strh.w	r0, [sp, #2]
    298e:	f7fe fb5f 	bl	1050 <__mriPlatform_WasMemoryFaultEncountered>
    2992:	b9a0      	cbnz	r0, 29be <__mriMem_ReadMemoryIntoHexBuffer+0x50>
    2994:	4628      	mov	r0, r5
    2996:	f10d 0102 	add.w	r1, sp, #2
    299a:	e00b      	b.n	29b4 <__mriMem_ReadMemoryIntoHexBuffer+0x46>
    299c:	f011 0603 	ands.w	r6, r1, #3
    29a0:	d10f      	bne.n	29c2 <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    29a2:	4608      	mov	r0, r1
    29a4:	f000 f860 	bl	2a68 <__mriPlatform_MemRead32>
    29a8:	9001      	str	r0, [sp, #4]
    29aa:	f7fe fb51 	bl	1050 <__mriPlatform_WasMemoryFaultEncountered>
    29ae:	b930      	cbnz	r0, 29be <__mriMem_ReadMemoryIntoHexBuffer+0x50>
    29b0:	4628      	mov	r0, r5
    29b2:	a901      	add	r1, sp, #4
    29b4:	4622      	mov	r2, r4
    29b6:	f7ff ffc3 	bl	2940 <readMemoryBytesIntoHexBuffer>
    29ba:	2001      	movs	r0, #1
    29bc:	e003      	b.n	29c6 <__mriMem_ReadMemoryIntoHexBuffer+0x58>
    29be:	4630      	mov	r0, r6
    29c0:	e001      	b.n	29c6 <__mriMem_ReadMemoryIntoHexBuffer+0x58>
    29c2:	f7ff ffbd 	bl	2940 <readMemoryBytesIntoHexBuffer>
    29c6:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

000029c8 <__mriMem_WriteHexBufferToMemory>:
    29c8:	2a02      	cmp	r2, #2
    29ca:	b513      	push	{r0, r1, r4, lr}
    29cc:	460c      	mov	r4, r1
    29ce:	d002      	beq.n	29d6 <__mriMem_WriteHexBufferToMemory+0xe>
    29d0:	2a04      	cmp	r2, #4
    29d2:	d11e      	bne.n	2a12 <__mriMem_WriteHexBufferToMemory+0x4a>
    29d4:	e00c      	b.n	29f0 <__mriMem_WriteHexBufferToMemory+0x28>
    29d6:	07cb      	lsls	r3, r1, #31
    29d8:	d41b      	bmi.n	2a12 <__mriMem_WriteHexBufferToMemory+0x4a>
    29da:	f10d 0102 	add.w	r1, sp, #2
    29de:	f7ff ff8f 	bl	2900 <writeHexBufferToByteMemory>
    29e2:	b1c0      	cbz	r0, 2a16 <__mriMem_WriteHexBufferToMemory+0x4e>
    29e4:	4620      	mov	r0, r4
    29e6:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    29ea:	f000 f846 	bl	2a7a <__mriPlatform_MemWrite16>
    29ee:	e009      	b.n	2a04 <__mriMem_WriteHexBufferToMemory+0x3c>
    29f0:	078b      	lsls	r3, r1, #30
    29f2:	d10e      	bne.n	2a12 <__mriMem_WriteHexBufferToMemory+0x4a>
    29f4:	a901      	add	r1, sp, #4
    29f6:	f7ff ff83 	bl	2900 <writeHexBufferToByteMemory>
    29fa:	b160      	cbz	r0, 2a16 <__mriMem_WriteHexBufferToMemory+0x4e>
    29fc:	4620      	mov	r0, r4
    29fe:	9901      	ldr	r1, [sp, #4]
    2a00:	f000 f839 	bl	2a76 <__mriPlatform_MemWrite32>
    2a04:	f7fe fb24 	bl	1050 <__mriPlatform_WasMemoryFaultEncountered>
    2a08:	f1d0 0001 	rsbs	r0, r0, #1
    2a0c:	bf38      	it	cc
    2a0e:	2000      	movcc	r0, #0
    2a10:	e001      	b.n	2a16 <__mriMem_WriteHexBufferToMemory+0x4e>
    2a12:	f7ff ff75 	bl	2900 <writeHexBufferToByteMemory>
    2a16:	bd1c      	pop	{r2, r3, r4, pc}

00002a18 <__mriMem_WriteBinaryBufferToMemory>:
    2a18:	2a02      	cmp	r2, #2
    2a1a:	b513      	push	{r0, r1, r4, lr}
    2a1c:	460c      	mov	r4, r1
    2a1e:	d002      	beq.n	2a26 <__mriMem_WriteBinaryBufferToMemory+0xe>
    2a20:	2a04      	cmp	r2, #4
    2a22:	d11e      	bne.n	2a62 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2a24:	e00c      	b.n	2a40 <__mriMem_WriteBinaryBufferToMemory+0x28>
    2a26:	07cb      	lsls	r3, r1, #31
    2a28:	d41b      	bmi.n	2a62 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2a2a:	f10d 0102 	add.w	r1, sp, #2
    2a2e:	f7ff ff35 	bl	289c <writeBinaryBufferToByteMemory>
    2a32:	b1c0      	cbz	r0, 2a66 <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2a34:	4620      	mov	r0, r4
    2a36:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    2a3a:	f000 f81e 	bl	2a7a <__mriPlatform_MemWrite16>
    2a3e:	e009      	b.n	2a54 <__mriMem_WriteBinaryBufferToMemory+0x3c>
    2a40:	078b      	lsls	r3, r1, #30
    2a42:	d10e      	bne.n	2a62 <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2a44:	a901      	add	r1, sp, #4
    2a46:	f7ff ff29 	bl	289c <writeBinaryBufferToByteMemory>
    2a4a:	b160      	cbz	r0, 2a66 <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2a4c:	4620      	mov	r0, r4
    2a4e:	9901      	ldr	r1, [sp, #4]
    2a50:	f000 f811 	bl	2a76 <__mriPlatform_MemWrite32>
    2a54:	f7fe fafc 	bl	1050 <__mriPlatform_WasMemoryFaultEncountered>
    2a58:	f1d0 0001 	rsbs	r0, r0, #1
    2a5c:	bf38      	it	cc
    2a5e:	2000      	movcc	r0, #0
    2a60:	e001      	b.n	2a66 <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2a62:	f7ff ff1b 	bl	289c <writeBinaryBufferToByteMemory>
    2a66:	bd1c      	pop	{r2, r3, r4, pc}

00002a68 <__mriPlatform_MemRead32>:
    2a68:	6800      	ldr	r0, [r0, #0]
    2a6a:	4770      	bx	lr

00002a6c <__mriPlatform_MemRead16>:
    2a6c:	8800      	ldrh	r0, [r0, #0]
    2a6e:	b280      	uxth	r0, r0
    2a70:	4770      	bx	lr

00002a72 <__mriPlatform_MemRead8>:
    2a72:	7800      	ldrb	r0, [r0, #0]
    2a74:	4770      	bx	lr

00002a76 <__mriPlatform_MemWrite32>:
    2a76:	6001      	str	r1, [r0, #0]
    2a78:	4770      	bx	lr

00002a7a <__mriPlatform_MemWrite16>:
    2a7a:	8001      	strh	r1, [r0, #0]
    2a7c:	4770      	bx	lr

00002a7e <__mriPlatform_MemWrite8>:
    2a7e:	7001      	strb	r1, [r0, #0]
    2a80:	4770      	bx	lr
	...

00002a84 <NVIC_SetVector>:
    2a84:	b086      	sub	sp, #24
    2a86:	4603      	mov	r3, r0
    2a88:	9100      	str	r1, [sp, #0]
    2a8a:	f88d 3007 	strb.w	r3, [sp, #7]
    2a8e:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2a92:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2a96:	689b      	ldr	r3, [r3, #8]
    2a98:	9305      	str	r3, [sp, #20]
    2a9a:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2a9e:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2aa2:	689b      	ldr	r3, [r3, #8]
    2aa4:	2b00      	cmp	r3, #0
    2aa6:	d122      	bne.n	2aee <NVIC_SetVector+0x6a>
    2aa8:	9b05      	ldr	r3, [sp, #20]
    2aaa:	9303      	str	r3, [sp, #12]
    2aac:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    2ab0:	9305      	str	r3, [sp, #20]
    2ab2:	f04f 0300 	mov.w	r3, #0
    2ab6:	9304      	str	r3, [sp, #16]
    2ab8:	e00f      	b.n	2ada <NVIC_SetVector+0x56>
    2aba:	9b04      	ldr	r3, [sp, #16]
    2abc:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2ac0:	9a05      	ldr	r2, [sp, #20]
    2ac2:	18d3      	adds	r3, r2, r3
    2ac4:	9a04      	ldr	r2, [sp, #16]
    2ac6:	ea4f 0282 	mov.w	r2, r2, lsl #2
    2aca:	9903      	ldr	r1, [sp, #12]
    2acc:	188a      	adds	r2, r1, r2
    2ace:	6812      	ldr	r2, [r2, #0]
    2ad0:	601a      	str	r2, [r3, #0]
    2ad2:	9b04      	ldr	r3, [sp, #16]
    2ad4:	f103 0301 	add.w	r3, r3, #1
    2ad8:	9304      	str	r3, [sp, #16]
    2ada:	9b04      	ldr	r3, [sp, #16]
    2adc:	2b30      	cmp	r3, #48	; 0x30
    2ade:	d9ec      	bls.n	2aba <NVIC_SetVector+0x36>
    2ae0:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2ae4:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2ae8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2aec:	609a      	str	r2, [r3, #8]
    2aee:	f99d 3007 	ldrsb.w	r3, [sp, #7]
    2af2:	f103 0310 	add.w	r3, r3, #16
    2af6:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2afa:	9a05      	ldr	r2, [sp, #20]
    2afc:	18d3      	adds	r3, r2, r3
    2afe:	9a00      	ldr	r2, [sp, #0]
    2b00:	601a      	str	r2, [r3, #0]
    2b02:	b006      	add	sp, #24
    2b04:	4770      	bx	lr
    2b06:	bf00      	nop

00002b08 <SystemInit>:
    2b08:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b0c:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b10:	f04f 0220 	mov.w	r2, #32
    2b14:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
    2b18:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b1c:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b20:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2b24:	f003 0320 	and.w	r3, r3, #32
    2b28:	2b00      	cmp	r3, #0
    2b2a:	d00a      	beq.n	2b42 <SystemInit+0x3a>
    2b2c:	bf00      	nop
    2b2e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b32:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b36:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2b3a:	f003 0340 	and.w	r3, r3, #64	; 0x40
    2b3e:	2b00      	cmp	r3, #0
    2b40:	d0f5      	beq.n	2b2e <SystemInit+0x26>
    2b42:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b46:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b4a:	f04f 0202 	mov.w	r2, #2
    2b4e:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
    2b52:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b56:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b5a:	f04f 0200 	mov.w	r2, #0
    2b5e:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    2b62:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b66:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b6a:	f04f 0200 	mov.w	r2, #0
    2b6e:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    2b72:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b76:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b7a:	f04f 0201 	mov.w	r2, #1
    2b7e:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
    2b82:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b86:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b8a:	f04f 020b 	mov.w	r2, #11
    2b8e:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    2b92:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2b96:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2b9a:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2b9e:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2ba2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ba6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2baa:	f04f 0255 	mov.w	r2, #85	; 0x55
    2bae:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2bb2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bb6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bba:	f04f 0201 	mov.w	r2, #1
    2bbe:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2bc2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bc6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bca:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2bce:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2bd2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bd6:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bda:	f04f 0255 	mov.w	r2, #85	; 0x55
    2bde:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2be2:	bf00      	nop
    2be4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2be8:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bec:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2bf0:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
    2bf4:	2b00      	cmp	r3, #0
    2bf6:	d0f5      	beq.n	2be4 <SystemInit+0xdc>
    2bf8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bfc:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c00:	f04f 0203 	mov.w	r2, #3
    2c04:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2c08:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c0c:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c10:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2c14:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c18:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c1c:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c20:	f04f 0255 	mov.w	r2, #85	; 0x55
    2c24:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c28:	bf00      	nop
    2c2a:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c2e:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c32:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2c36:	f003 7340 	and.w	r3, r3, #50331648	; 0x3000000
    2c3a:	2b00      	cmp	r3, #0
    2c3c:	d0f5      	beq.n	2c2a <SystemInit+0x122>
    2c3e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c42:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c46:	f04f 0205 	mov.w	r2, #5
    2c4a:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
    2c4e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c52:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c56:	f248 72de 	movw	r2, #34782	; 0x87de
    2c5a:	f2c0 4228 	movt	r2, #1064	; 0x428
    2c5e:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    2c62:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c66:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c6a:	f04f 0200 	mov.w	r2, #0
    2c6e:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
    2c72:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c76:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c7a:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2c7e:	f2c4 020f 	movt	r2, #16399	; 0x400f
    2c82:	6812      	ldr	r2, [r2, #0]
    2c84:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
    2c88:	f022 023a 	bic.w	r2, r2, #58	; 0x3a
    2c8c:	f442 5240 	orr.w	r2, r2, #12288	; 0x3000
    2c90:	f042 023a 	orr.w	r2, r2, #58	; 0x3a
    2c94:	601a      	str	r2, [r3, #0]
    2c96:	4770      	bx	lr

00002c98 <exit>:
    2c98:	b500      	push	{lr}
    2c9a:	b083      	sub	sp, #12
    2c9c:	9001      	str	r0, [sp, #4]
    2c9e:	f000 f80b 	bl	2cb8 <mbed_interface_connected>
    2ca2:	4603      	mov	r3, r0
    2ca4:	2b00      	cmp	r3, #0
    2ca6:	d001      	beq.n	2cac <exit+0x14>
    2ca8:	f000 f81c 	bl	2ce4 <semihost_exit>
    2cac:	9b01      	ldr	r3, [sp, #4]
    2cae:	2b00      	cmp	r3, #0
    2cb0:	d001      	beq.n	2cb6 <exit+0x1e>
    2cb2:	f000 f955 	bl	2f60 <mbed_die>
    2cb6:	e7fe      	b.n	2cb6 <exit+0x1e>

00002cb8 <mbed_interface_connected>:
    2cb8:	b508      	push	{r3, lr}
    2cba:	f7fd fb49 	bl	350 <__wrap_semihost_connected>
    2cbe:	4603      	mov	r3, r0
    2cc0:	4618      	mov	r0, r3
    2cc2:	bd08      	pop	{r3, pc}

00002cc4 <__semihost>:
    2cc4:	b530      	push	{r4, r5, lr}
    2cc6:	b085      	sub	sp, #20
    2cc8:	9001      	str	r0, [sp, #4]
    2cca:	9100      	str	r1, [sp, #0]
    2ccc:	9c01      	ldr	r4, [sp, #4]
    2cce:	9d00      	ldr	r5, [sp, #0]
    2cd0:	4620      	mov	r0, r4
    2cd2:	4629      	mov	r1, r5
    2cd4:	beab      	bkpt	0x00ab
    2cd6:	4604      	mov	r4, r0
    2cd8:	9403      	str	r4, [sp, #12]
    2cda:	9b03      	ldr	r3, [sp, #12]
    2cdc:	4618      	mov	r0, r3
    2cde:	b005      	add	sp, #20
    2ce0:	bd30      	pop	{r4, r5, pc}
    2ce2:	bf00      	nop

00002ce4 <semihost_exit>:
    2ce4:	b500      	push	{lr}
    2ce6:	b085      	sub	sp, #20
    2ce8:	466b      	mov	r3, sp
    2cea:	f04f 0018 	mov.w	r0, #24
    2cee:	4619      	mov	r1, r3
    2cf0:	f7ff ffe8 	bl	2cc4 <__semihost>
    2cf4:	4603      	mov	r3, r0
    2cf6:	4618      	mov	r0, r3
    2cf8:	b005      	add	sp, #20
    2cfa:	bd00      	pop	{pc}

00002cfc <Reset_Handler>:
    2cfc:	4907      	ldr	r1, [pc, #28]	; (2d1c <.flash_to_ram_loop+0x1a>)
    2cfe:	4a08      	ldr	r2, [pc, #32]	; (2d20 <.flash_to_ram_loop+0x1e>)
    2d00:	4b08      	ldr	r3, [pc, #32]	; (2d24 <.flash_to_ram_loop+0x22>)

00002d02 <.flash_to_ram_loop>:
    2d02:	429a      	cmp	r2, r3
    2d04:	bfbe      	ittt	lt
    2d06:	f851 0b04 	ldrlt.w	r0, [r1], #4
    2d0a:	f842 0b04 	strlt.w	r0, [r2], #4
    2d0e:	f7ff bff8 	blt.w	2d02 <.flash_to_ram_loop>
    2d12:	4805      	ldr	r0, [pc, #20]	; (2d28 <.flash_to_ram_loop+0x26>)
    2d14:	4780      	blx	r0
    2d16:	4805      	ldr	r0, [pc, #20]	; (2d2c <.flash_to_ram_loop+0x2a>)
    2d18:	4700      	bx	r0
    2d1a:	0000      	.short	0x0000
    2d1c:	0000415c 	.word	0x0000415c
    2d20:	100000c8 	.word	0x100000c8
    2d24:	10000164 	.word	0x10000164
    2d28:	00002b09 	.word	0x00002b09
    2d2c:	00000305 	.word	0x00000305

00002d30 <NMI_Handler>:
    2d30:	e7fe      	b.n	2d30 <NMI_Handler>
    2d32:	e7fe      	b.n	2d32 <NMI_Handler+0x2>
    2d34:	e7fe      	b.n	2d34 <NMI_Handler+0x4>
    2d36:	e7fe      	b.n	2d36 <NMI_Handler+0x6>
    2d38:	e7fe      	b.n	2d38 <NMI_Handler+0x8>

00002d3a <SVC_Handler>:
    2d3a:	e7fe      	b.n	2d3a <SVC_Handler>
    2d3c:	e7fe      	b.n	2d3c <SVC_Handler+0x2>

00002d3e <PendSV_Handler>:
    2d3e:	e7fe      	b.n	2d3e <PendSV_Handler>

00002d40 <SysTick_Handler>:
    2d40:	e7fe      	b.n	2d40 <SysTick_Handler>

00002d42 <DEF_IRQHandler>:
    2d42:	e7fe      	b.n	2d42 <DEF_IRQHandler>

00002d44 <WDT_IRQHandler>:
    2d44:	e7fe      	b.n	2d44 <WDT_IRQHandler>

00002d46 <TIMER0_IRQHandler>:
    2d46:	e7fe      	b.n	2d46 <TIMER0_IRQHandler>

00002d48 <TIMER1_IRQHandler>:
    2d48:	e7fe      	b.n	2d48 <TIMER1_IRQHandler>

00002d4a <TIMER2_IRQHandler>:
    2d4a:	e7fe      	b.n	2d4a <TIMER2_IRQHandler>

00002d4c <TIMER3_IRQHandler>:
    2d4c:	e7fe      	b.n	2d4c <TIMER3_IRQHandler>
    2d4e:	e7fe      	b.n	2d4e <TIMER3_IRQHandler+0x2>
    2d50:	e7fe      	b.n	2d50 <TIMER3_IRQHandler+0x4>
    2d52:	e7fe      	b.n	2d52 <TIMER3_IRQHandler+0x6>
    2d54:	e7fe      	b.n	2d54 <TIMER3_IRQHandler+0x8>

00002d56 <PWM1_IRQHandler>:
    2d56:	e7fe      	b.n	2d56 <PWM1_IRQHandler>

00002d58 <I2C0_IRQHandler>:
    2d58:	e7fe      	b.n	2d58 <I2C0_IRQHandler>

00002d5a <I2C1_IRQHandler>:
    2d5a:	e7fe      	b.n	2d5a <I2C1_IRQHandler>

00002d5c <I2C2_IRQHandler>:
    2d5c:	e7fe      	b.n	2d5c <I2C2_IRQHandler>

00002d5e <SPI_IRQHandler>:
    2d5e:	e7fe      	b.n	2d5e <SPI_IRQHandler>

00002d60 <SSP0_IRQHandler>:
    2d60:	e7fe      	b.n	2d60 <SSP0_IRQHandler>

00002d62 <SSP1_IRQHandler>:
    2d62:	e7fe      	b.n	2d62 <SSP1_IRQHandler>

00002d64 <PLL0_IRQHandler>:
    2d64:	e7fe      	b.n	2d64 <PLL0_IRQHandler>

00002d66 <RTC_IRQHandler>:
    2d66:	e7fe      	b.n	2d66 <RTC_IRQHandler>

00002d68 <EINT0_IRQHandler>:
    2d68:	e7fe      	b.n	2d68 <EINT0_IRQHandler>

00002d6a <EINT1_IRQHandler>:
    2d6a:	e7fe      	b.n	2d6a <EINT1_IRQHandler>

00002d6c <EINT2_IRQHandler>:
    2d6c:	e7fe      	b.n	2d6c <EINT2_IRQHandler>

00002d6e <EINT3_IRQHandler>:
    2d6e:	e7fe      	b.n	2d6e <EINT3_IRQHandler>

00002d70 <ADC_IRQHandler>:
    2d70:	e7fe      	b.n	2d70 <ADC_IRQHandler>

00002d72 <BOD_IRQHandler>:
    2d72:	e7fe      	b.n	2d72 <BOD_IRQHandler>

00002d74 <USB_IRQHandler>:
    2d74:	e7fe      	b.n	2d74 <USB_IRQHandler>

00002d76 <CAN_IRQHandler>:
    2d76:	e7fe      	b.n	2d76 <CAN_IRQHandler>

00002d78 <DMA_IRQHandler>:
    2d78:	e7fe      	b.n	2d78 <DMA_IRQHandler>

00002d7a <I2S_IRQHandler>:
    2d7a:	e7fe      	b.n	2d7a <I2S_IRQHandler>

00002d7c <ENET_IRQHandler>:
    2d7c:	e7fe      	b.n	2d7c <ENET_IRQHandler>

00002d7e <RIT_IRQHandler>:
    2d7e:	e7fe      	b.n	2d7e <RIT_IRQHandler>

00002d80 <MCPWM_IRQHandler>:
    2d80:	e7fe      	b.n	2d80 <MCPWM_IRQHandler>

00002d82 <QEI_IRQHandler>:
    2d82:	e7fe      	b.n	2d82 <QEI_IRQHandler>

00002d84 <PLL1_IRQHandler>:
    2d84:	e7fe      	b.n	2d84 <PLL1_IRQHandler>

00002d86 <USBActivity_IRQHandler>:
    2d86:	e7fe      	b.n	2d86 <USBActivity_IRQHandler>

00002d88 <CANActivity_IRQHandler>:
    2d88:	e7fe      	b.n	2d88 <CANActivity_IRQHandler>
    2d8a:	bf00      	nop

00002d8c <pin_function>:
    2d8c:	b086      	sub	sp, #24
    2d8e:	9001      	str	r0, [sp, #4]
    2d90:	9100      	str	r1, [sp, #0]
    2d92:	9b01      	ldr	r3, [sp, #4]
    2d94:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2d98:	d039      	beq.n	2e0e <pin_function+0x82>
    2d9a:	9b01      	ldr	r3, [sp, #4]
    2d9c:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2da0:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    2da4:	9305      	str	r3, [sp, #20]
    2da6:	9b05      	ldr	r3, [sp, #20]
    2da8:	ea4f 1313 	mov.w	r3, r3, lsr #4
    2dac:	9304      	str	r3, [sp, #16]
    2dae:	9b05      	ldr	r3, [sp, #20]
    2db0:	f003 030f 	and.w	r3, r3, #15
    2db4:	ea4f 0343 	mov.w	r3, r3, lsl #1
    2db8:	9303      	str	r3, [sp, #12]
    2dba:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2dbe:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2dc2:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2dc6:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2dca:	9904      	ldr	r1, [sp, #16]
    2dcc:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2dd0:	f04f 0003 	mov.w	r0, #3
    2dd4:	9a03      	ldr	r2, [sp, #12]
    2dd6:	fa00 f202 	lsl.w	r2, r0, r2
    2dda:	ea6f 0202 	mvn.w	r2, r2
    2dde:	4011      	ands	r1, r2
    2de0:	9a04      	ldr	r2, [sp, #16]
    2de2:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2de6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2dea:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2dee:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2df2:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2df6:	9904      	ldr	r1, [sp, #16]
    2df8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2dfc:	9800      	ldr	r0, [sp, #0]
    2dfe:	9a03      	ldr	r2, [sp, #12]
    2e00:	fa00 f202 	lsl.w	r2, r0, r2
    2e04:	4311      	orrs	r1, r2
    2e06:	9a04      	ldr	r2, [sp, #16]
    2e08:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2e0c:	e000      	b.n	2e10 <pin_function+0x84>
    2e0e:	bf00      	nop
    2e10:	b006      	add	sp, #24
    2e12:	4770      	bx	lr

00002e14 <pin_mode>:
    2e14:	b086      	sub	sp, #24
    2e16:	9001      	str	r0, [sp, #4]
    2e18:	460b      	mov	r3, r1
    2e1a:	f88d 3003 	strb.w	r3, [sp, #3]
    2e1e:	9b01      	ldr	r3, [sp, #4]
    2e20:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2e24:	f000 8085 	beq.w	2f32 <pin_mode+0x11e>
    2e28:	9b01      	ldr	r3, [sp, #4]
    2e2a:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2e2e:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    2e32:	9305      	str	r3, [sp, #20]
    2e34:	9b05      	ldr	r3, [sp, #20]
    2e36:	ea4f 1353 	mov.w	r3, r3, lsr #5
    2e3a:	9304      	str	r3, [sp, #16]
    2e3c:	9b05      	ldr	r3, [sp, #20]
    2e3e:	f003 031f 	and.w	r3, r3, #31
    2e42:	9303      	str	r3, [sp, #12]
    2e44:	f89d 3003 	ldrb.w	r3, [sp, #3]
    2e48:	f003 0304 	and.w	r3, r3, #4
    2e4c:	ea4f 0393 	mov.w	r3, r3, lsr #2
    2e50:	9302      	str	r3, [sp, #8]
    2e52:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e56:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2e5a:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2e5e:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2e62:	9904      	ldr	r1, [sp, #16]
    2e64:	f101 011a 	add.w	r1, r1, #26
    2e68:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2e6c:	9802      	ldr	r0, [sp, #8]
    2e6e:	9a03      	ldr	r2, [sp, #12]
    2e70:	fa00 f202 	lsl.w	r2, r0, r2
    2e74:	ea6f 0202 	mvn.w	r2, r2
    2e78:	4011      	ands	r1, r2
    2e7a:	9a04      	ldr	r2, [sp, #16]
    2e7c:	f102 021a 	add.w	r2, r2, #26
    2e80:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2e84:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2e88:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2e8c:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2e90:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2e94:	9904      	ldr	r1, [sp, #16]
    2e96:	f101 011a 	add.w	r1, r1, #26
    2e9a:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2e9e:	9802      	ldr	r0, [sp, #8]
    2ea0:	9a03      	ldr	r2, [sp, #12]
    2ea2:	fa00 f202 	lsl.w	r2, r0, r2
    2ea6:	4311      	orrs	r1, r2
    2ea8:	9a04      	ldr	r2, [sp, #16]
    2eaa:	f102 021a 	add.w	r2, r2, #26
    2eae:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2eb2:	9b02      	ldr	r3, [sp, #8]
    2eb4:	2b00      	cmp	r3, #0
    2eb6:	d13d      	bne.n	2f34 <pin_mode+0x120>
    2eb8:	9b05      	ldr	r3, [sp, #20]
    2eba:	ea4f 1313 	mov.w	r3, r3, lsr #4
    2ebe:	9304      	str	r3, [sp, #16]
    2ec0:	9b05      	ldr	r3, [sp, #20]
    2ec2:	f003 030f 	and.w	r3, r3, #15
    2ec6:	ea4f 0343 	mov.w	r3, r3, lsl #1
    2eca:	9303      	str	r3, [sp, #12]
    2ecc:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ed0:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2ed4:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2ed8:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2edc:	9904      	ldr	r1, [sp, #16]
    2ede:	f101 0110 	add.w	r1, r1, #16
    2ee2:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2ee6:	f04f 0003 	mov.w	r0, #3
    2eea:	9a03      	ldr	r2, [sp, #12]
    2eec:	fa00 f202 	lsl.w	r2, r0, r2
    2ef0:	ea6f 0202 	mvn.w	r2, r2
    2ef4:	4011      	ands	r1, r2
    2ef6:	9a04      	ldr	r2, [sp, #16]
    2ef8:	f102 0210 	add.w	r2, r2, #16
    2efc:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2f00:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2f04:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2f08:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2f0c:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2f10:	9904      	ldr	r1, [sp, #16]
    2f12:	f101 0110 	add.w	r1, r1, #16
    2f16:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2f1a:	f89d 0003 	ldrb.w	r0, [sp, #3]
    2f1e:	9a03      	ldr	r2, [sp, #12]
    2f20:	fa00 f202 	lsl.w	r2, r0, r2
    2f24:	4311      	orrs	r1, r2
    2f26:	9a04      	ldr	r2, [sp, #16]
    2f28:	f102 0210 	add.w	r2, r2, #16
    2f2c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2f30:	e000      	b.n	2f34 <pin_mode+0x120>
    2f32:	bf00      	nop
    2f34:	b006      	add	sp, #24
    2f36:	4770      	bx	lr

00002f38 <gpio_write>:
    2f38:	b082      	sub	sp, #8
    2f3a:	9001      	str	r0, [sp, #4]
    2f3c:	9100      	str	r1, [sp, #0]
    2f3e:	9b00      	ldr	r3, [sp, #0]
    2f40:	2b00      	cmp	r3, #0
    2f42:	d005      	beq.n	2f50 <gpio_write+0x18>
    2f44:	9b01      	ldr	r3, [sp, #4]
    2f46:	68db      	ldr	r3, [r3, #12]
    2f48:	9a01      	ldr	r2, [sp, #4]
    2f4a:	6852      	ldr	r2, [r2, #4]
    2f4c:	601a      	str	r2, [r3, #0]
    2f4e:	e004      	b.n	2f5a <gpio_write+0x22>
    2f50:	9b01      	ldr	r3, [sp, #4]
    2f52:	691b      	ldr	r3, [r3, #16]
    2f54:	9a01      	ldr	r2, [sp, #4]
    2f56:	6852      	ldr	r2, [r2, #4]
    2f58:	601a      	str	r2, [r3, #0]
    2f5a:	b002      	add	sp, #8
    2f5c:	4770      	bx	lr
    2f5e:	bf00      	nop

00002f60 <mbed_die>:
    2f60:	b500      	push	{lr}
    2f62:	b099      	sub	sp, #100	; 0x64
    2f64:	ab12      	add	r3, sp, #72	; 0x48
    2f66:	4618      	mov	r0, r3
    2f68:	f24c 0132 	movw	r1, #49202	; 0xc032
    2f6c:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2f70:	f04f 0201 	mov.w	r2, #1
    2f74:	f000 f88a 	bl	308c <gpio_init>
    2f78:	ab0c      	add	r3, sp, #48	; 0x30
    2f7a:	4618      	mov	r0, r3
    2f7c:	f24c 0134 	movw	r1, #49204	; 0xc034
    2f80:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2f84:	f04f 0201 	mov.w	r2, #1
    2f88:	f000 f880 	bl	308c <gpio_init>
    2f8c:	ab06      	add	r3, sp, #24
    2f8e:	4618      	mov	r0, r3
    2f90:	f24c 0135 	movw	r1, #49205	; 0xc035
    2f94:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2f98:	f04f 0201 	mov.w	r2, #1
    2f9c:	f000 f876 	bl	308c <gpio_init>
    2fa0:	466b      	mov	r3, sp
    2fa2:	4618      	mov	r0, r3
    2fa4:	f24c 0137 	movw	r1, #49207	; 0xc037
    2fa8:	f2c2 0109 	movt	r1, #8201	; 0x2009
    2fac:	f04f 0201 	mov.w	r2, #1
    2fb0:	f000 f86c 	bl	308c <gpio_init>
    2fb4:	ab12      	add	r3, sp, #72	; 0x48
    2fb6:	4618      	mov	r0, r3
    2fb8:	f04f 0101 	mov.w	r1, #1
    2fbc:	f7ff ffbc 	bl	2f38 <gpio_write>
    2fc0:	ab0c      	add	r3, sp, #48	; 0x30
    2fc2:	4618      	mov	r0, r3
    2fc4:	f04f 0100 	mov.w	r1, #0
    2fc8:	f7ff ffb6 	bl	2f38 <gpio_write>
    2fcc:	ab06      	add	r3, sp, #24
    2fce:	4618      	mov	r0, r3
    2fd0:	f04f 0100 	mov.w	r1, #0
    2fd4:	f7ff ffb0 	bl	2f38 <gpio_write>
    2fd8:	466b      	mov	r3, sp
    2fda:	4618      	mov	r0, r3
    2fdc:	f04f 0101 	mov.w	r1, #1
    2fe0:	f7ff ffaa 	bl	2f38 <gpio_write>
    2fe4:	f04f 0096 	mov.w	r0, #150	; 0x96
    2fe8:	f000 f81e 	bl	3028 <wait_ms>
    2fec:	ab12      	add	r3, sp, #72	; 0x48
    2fee:	4618      	mov	r0, r3
    2ff0:	f04f 0100 	mov.w	r1, #0
    2ff4:	f7ff ffa0 	bl	2f38 <gpio_write>
    2ff8:	ab0c      	add	r3, sp, #48	; 0x30
    2ffa:	4618      	mov	r0, r3
    2ffc:	f04f 0101 	mov.w	r1, #1
    3000:	f7ff ff9a 	bl	2f38 <gpio_write>
    3004:	ab06      	add	r3, sp, #24
    3006:	4618      	mov	r0, r3
    3008:	f04f 0101 	mov.w	r1, #1
    300c:	f7ff ff94 	bl	2f38 <gpio_write>
    3010:	466b      	mov	r3, sp
    3012:	4618      	mov	r0, r3
    3014:	f04f 0100 	mov.w	r1, #0
    3018:	f7ff ff8e 	bl	2f38 <gpio_write>
    301c:	f04f 0096 	mov.w	r0, #150	; 0x96
    3020:	f000 f802 	bl	3028 <wait_ms>
    3024:	e7c6      	b.n	2fb4 <mbed_die+0x54>
    3026:	bf00      	nop

00003028 <wait_ms>:
    3028:	b500      	push	{lr}
    302a:	b083      	sub	sp, #12
    302c:	9001      	str	r0, [sp, #4]
    302e:	9b01      	ldr	r3, [sp, #4]
    3030:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    3034:	fb02 f303 	mul.w	r3, r2, r3
    3038:	4618      	mov	r0, r3
    303a:	f000 f803 	bl	3044 <wait_us>
    303e:	b003      	add	sp, #12
    3040:	bd00      	pop	{pc}
    3042:	bf00      	nop

00003044 <wait_us>:
    3044:	b500      	push	{lr}
    3046:	b085      	sub	sp, #20
    3048:	9001      	str	r0, [sp, #4]
    304a:	f000 f8ff 	bl	324c <us_ticker_read>
    304e:	9003      	str	r0, [sp, #12]
    3050:	bf00      	nop
    3052:	f000 f8fb 	bl	324c <us_ticker_read>
    3056:	4602      	mov	r2, r0
    3058:	9b03      	ldr	r3, [sp, #12]
    305a:	1ad2      	subs	r2, r2, r3
    305c:	9b01      	ldr	r3, [sp, #4]
    305e:	429a      	cmp	r2, r3
    3060:	d3f7      	bcc.n	3052 <wait_us+0xe>
    3062:	b005      	add	sp, #20
    3064:	bd00      	pop	{pc}
    3066:	bf00      	nop

00003068 <gpio_set>:
    3068:	b500      	push	{lr}
    306a:	b083      	sub	sp, #12
    306c:	9001      	str	r0, [sp, #4]
    306e:	9801      	ldr	r0, [sp, #4]
    3070:	f04f 0100 	mov.w	r1, #0
    3074:	f7ff fe8a 	bl	2d8c <pin_function>
    3078:	9b01      	ldr	r3, [sp, #4]
    307a:	f003 031f 	and.w	r3, r3, #31
    307e:	f04f 0201 	mov.w	r2, #1
    3082:	fa02 f303 	lsl.w	r3, r2, r3
    3086:	4618      	mov	r0, r3
    3088:	b003      	add	sp, #12
    308a:	bd00      	pop	{pc}

0000308c <gpio_init>:
    308c:	b500      	push	{lr}
    308e:	b087      	sub	sp, #28
    3090:	9003      	str	r0, [sp, #12]
    3092:	9102      	str	r1, [sp, #8]
    3094:	4613      	mov	r3, r2
    3096:	f88d 3007 	strb.w	r3, [sp, #7]
    309a:	9b02      	ldr	r3, [sp, #8]
    309c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    30a0:	d037      	beq.n	3112 <gpio_init+0x86>
    30a2:	9b03      	ldr	r3, [sp, #12]
    30a4:	9a02      	ldr	r2, [sp, #8]
    30a6:	601a      	str	r2, [r3, #0]
    30a8:	9802      	ldr	r0, [sp, #8]
    30aa:	f7ff ffdd 	bl	3068 <gpio_set>
    30ae:	4602      	mov	r2, r0
    30b0:	9b03      	ldr	r3, [sp, #12]
    30b2:	605a      	str	r2, [r3, #4]
    30b4:	9b02      	ldr	r3, [sp, #8]
    30b6:	f023 031f 	bic.w	r3, r3, #31
    30ba:	9305      	str	r3, [sp, #20]
    30bc:	9b05      	ldr	r3, [sp, #20]
    30be:	f103 0218 	add.w	r2, r3, #24
    30c2:	9b03      	ldr	r3, [sp, #12]
    30c4:	60da      	str	r2, [r3, #12]
    30c6:	9b05      	ldr	r3, [sp, #20]
    30c8:	f103 021c 	add.w	r2, r3, #28
    30cc:	9b03      	ldr	r3, [sp, #12]
    30ce:	611a      	str	r2, [r3, #16]
    30d0:	9b05      	ldr	r3, [sp, #20]
    30d2:	f103 0214 	add.w	r2, r3, #20
    30d6:	9b03      	ldr	r3, [sp, #12]
    30d8:	615a      	str	r2, [r3, #20]
    30da:	9a05      	ldr	r2, [sp, #20]
    30dc:	9b03      	ldr	r3, [sp, #12]
    30de:	609a      	str	r2, [r3, #8]
    30e0:	f89d 3007 	ldrb.w	r3, [sp, #7]
    30e4:	9803      	ldr	r0, [sp, #12]
    30e6:	4619      	mov	r1, r3
    30e8:	f000 f816 	bl	3118 <gpio_dir>
    30ec:	f89d 3007 	ldrb.w	r3, [sp, #7]
    30f0:	2b00      	cmp	r3, #0
    30f2:	d007      	beq.n	3104 <gpio_init+0x78>
    30f4:	2b01      	cmp	r3, #1
    30f6:	d10d      	bne.n	3114 <gpio_init+0x88>
    30f8:	9802      	ldr	r0, [sp, #8]
    30fa:	f04f 0102 	mov.w	r1, #2
    30fe:	f7ff fe89 	bl	2e14 <pin_mode>
    3102:	e007      	b.n	3114 <gpio_init+0x88>
    3104:	9802      	ldr	r0, [sp, #8]
    3106:	f04f 0103 	mov.w	r1, #3
    310a:	f7ff fe83 	bl	2e14 <pin_mode>
    310e:	bf00      	nop
    3110:	e000      	b.n	3114 <gpio_init+0x88>
    3112:	bf00      	nop
    3114:	b007      	add	sp, #28
    3116:	bd00      	pop	{pc}

00003118 <gpio_dir>:
    3118:	b082      	sub	sp, #8
    311a:	9001      	str	r0, [sp, #4]
    311c:	460b      	mov	r3, r1
    311e:	f88d 3003 	strb.w	r3, [sp, #3]
    3122:	f89d 3003 	ldrb.w	r3, [sp, #3]
    3126:	2b00      	cmp	r3, #0
    3128:	d002      	beq.n	3130 <gpio_dir+0x18>
    312a:	2b01      	cmp	r3, #1
    312c:	d00c      	beq.n	3148 <gpio_dir+0x30>
    312e:	e015      	b.n	315c <gpio_dir+0x44>
    3130:	9b01      	ldr	r3, [sp, #4]
    3132:	689b      	ldr	r3, [r3, #8]
    3134:	9a01      	ldr	r2, [sp, #4]
    3136:	6892      	ldr	r2, [r2, #8]
    3138:	6811      	ldr	r1, [r2, #0]
    313a:	9a01      	ldr	r2, [sp, #4]
    313c:	6852      	ldr	r2, [r2, #4]
    313e:	ea6f 0202 	mvn.w	r2, r2
    3142:	400a      	ands	r2, r1
    3144:	601a      	str	r2, [r3, #0]
    3146:	e009      	b.n	315c <gpio_dir+0x44>
    3148:	9b01      	ldr	r3, [sp, #4]
    314a:	689b      	ldr	r3, [r3, #8]
    314c:	9a01      	ldr	r2, [sp, #4]
    314e:	6892      	ldr	r2, [r2, #8]
    3150:	6811      	ldr	r1, [r2, #0]
    3152:	9a01      	ldr	r2, [sp, #4]
    3154:	6852      	ldr	r2, [r2, #4]
    3156:	430a      	orrs	r2, r1
    3158:	601a      	str	r2, [r3, #0]
    315a:	bf00      	nop
    315c:	b002      	add	sp, #8
    315e:	4770      	bx	lr

00003160 <NVIC_EnableIRQ>:
    3160:	b082      	sub	sp, #8
    3162:	4603      	mov	r3, r0
    3164:	f88d 3007 	strb.w	r3, [sp, #7]
    3168:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    316c:	f2ce 0300 	movt	r3, #57344	; 0xe000
    3170:	f99d 2007 	ldrsb.w	r2, [sp, #7]
    3174:	ea4f 1252 	mov.w	r2, r2, lsr #5
    3178:	f89d 1007 	ldrb.w	r1, [sp, #7]
    317c:	f001 011f 	and.w	r1, r1, #31
    3180:	f04f 0001 	mov.w	r0, #1
    3184:	fa00 f101 	lsl.w	r1, r0, r1
    3188:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    318c:	b002      	add	sp, #8
    318e:	4770      	bx	lr

00003190 <us_ticker_init>:
    3190:	b500      	push	{lr}
    3192:	b083      	sub	sp, #12
    3194:	f240 13d0 	movw	r3, #464	; 0x1d0
    3198:	f2c1 0300 	movt	r3, #4096	; 0x1000
    319c:	681b      	ldr	r3, [r3, #0]
    319e:	2b00      	cmp	r3, #0
    31a0:	d151      	bne.n	3246 <us_ticker_init+0xb6>
    31a2:	f240 13d0 	movw	r3, #464	; 0x1d0
    31a6:	f2c1 0300 	movt	r3, #4096	; 0x1000
    31aa:	f04f 0201 	mov.w	r2, #1
    31ae:	601a      	str	r2, [r3, #0]
    31b0:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    31b4:	f2c4 030f 	movt	r3, #16399	; 0x400f
    31b8:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    31bc:	f2c4 020f 	movt	r2, #16399	; 0x400f
    31c0:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    31c4:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
    31c8:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    31cc:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    31d0:	f2c4 0309 	movt	r3, #16393	; 0x4009
    31d4:	f04f 0200 	mov.w	r2, #0
    31d8:	671a      	str	r2, [r3, #112]	; 0x70
    31da:	f240 1358 	movw	r3, #344	; 0x158
    31de:	f2c1 0300 	movt	r3, #4096	; 0x1000
    31e2:	681b      	ldr	r3, [r3, #0]
    31e4:	ea4f 0393 	mov.w	r3, r3, lsr #2
    31e8:	9301      	str	r3, [sp, #4]
    31ea:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    31ee:	f2c4 0309 	movt	r3, #16393	; 0x4009
    31f2:	f04f 0202 	mov.w	r2, #2
    31f6:	605a      	str	r2, [r3, #4]
    31f8:	9a01      	ldr	r2, [sp, #4]
    31fa:	f64d 6383 	movw	r3, #56963	; 0xde83
    31fe:	f2c4 331b 	movt	r3, #17179	; 0x431b
    3202:	fba3 1302 	umull	r1, r3, r3, r2
    3206:	ea4f 4393 	mov.w	r3, r3, lsr #18
    320a:	9300      	str	r3, [sp, #0]
    320c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3210:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3214:	9a00      	ldr	r2, [sp, #0]
    3216:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
    321a:	60da      	str	r2, [r3, #12]
    321c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3220:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3224:	f04f 0201 	mov.w	r2, #1
    3228:	605a      	str	r2, [r3, #4]
    322a:	f243 23c9 	movw	r3, #13001	; 0x32c9
    322e:	f2c0 0300 	movt	r3, #0
    3232:	f04f 0004 	mov.w	r0, #4
    3236:	4619      	mov	r1, r3
    3238:	f7ff fc24 	bl	2a84 <NVIC_SetVector>
    323c:	f04f 0004 	mov.w	r0, #4
    3240:	f7ff ff8e 	bl	3160 <NVIC_EnableIRQ>
    3244:	e000      	b.n	3248 <us_ticker_init+0xb8>
    3246:	bf00      	nop
    3248:	b003      	add	sp, #12
    324a:	bd00      	pop	{pc}

0000324c <us_ticker_read>:
    324c:	b508      	push	{r3, lr}
    324e:	f240 13d0 	movw	r3, #464	; 0x1d0
    3252:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3256:	681b      	ldr	r3, [r3, #0]
    3258:	2b00      	cmp	r3, #0
    325a:	d101      	bne.n	3260 <us_ticker_read+0x14>
    325c:	f7ff ff98 	bl	3190 <us_ticker_init>
    3260:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3264:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3268:	689b      	ldr	r3, [r3, #8]
    326a:	4618      	mov	r0, r3
    326c:	bd08      	pop	{r3, pc}
    326e:	bf00      	nop

00003270 <us_ticker_set_interrupt>:
    3270:	b082      	sub	sp, #8
    3272:	9001      	str	r0, [sp, #4]
    3274:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3278:	f2c4 0309 	movt	r3, #16393	; 0x4009
    327c:	9a01      	ldr	r2, [sp, #4]
    327e:	619a      	str	r2, [r3, #24]
    3280:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3284:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3288:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    328c:	f2c4 0209 	movt	r2, #16393	; 0x4009
    3290:	6952      	ldr	r2, [r2, #20]
    3292:	f042 0201 	orr.w	r2, r2, #1
    3296:	615a      	str	r2, [r3, #20]
    3298:	b002      	add	sp, #8
    329a:	4770      	bx	lr

0000329c <us_ticker_disable_interrupt>:
    329c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32a0:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32a4:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    32a8:	f2c4 0209 	movt	r2, #16393	; 0x4009
    32ac:	6952      	ldr	r2, [r2, #20]
    32ae:	f022 0201 	bic.w	r2, r2, #1
    32b2:	615a      	str	r2, [r3, #20]
    32b4:	4770      	bx	lr
    32b6:	bf00      	nop

000032b8 <us_ticker_clear_interrupt>:
    32b8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32bc:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32c0:	f04f 0201 	mov.w	r2, #1
    32c4:	601a      	str	r2, [r3, #0]
    32c6:	4770      	bx	lr

000032c8 <us_ticker_irq_handler>:
    32c8:	b510      	push	{r4, lr}
    32ca:	b082      	sub	sp, #8
    32cc:	f7ff fff4 	bl	32b8 <us_ticker_clear_interrupt>
    32d0:	e000      	b.n	32d4 <us_ticker_irq_handler+0xc>
    32d2:	bf00      	nop
    32d4:	f240 13d8 	movw	r3, #472	; 0x1d8
    32d8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    32dc:	681b      	ldr	r3, [r3, #0]
    32de:	2b00      	cmp	r3, #0
    32e0:	d102      	bne.n	32e8 <us_ticker_irq_handler+0x20>
    32e2:	f7ff ffdb 	bl	329c <us_ticker_disable_interrupt>
    32e6:	e037      	b.n	3358 <us_ticker_irq_handler+0x90>
    32e8:	f240 13d8 	movw	r3, #472	; 0x1d8
    32ec:	f2c1 0300 	movt	r3, #4096	; 0x1000
    32f0:	681b      	ldr	r3, [r3, #0]
    32f2:	681c      	ldr	r4, [r3, #0]
    32f4:	f7ff ffaa 	bl	324c <us_ticker_read>
    32f8:	4603      	mov	r3, r0
    32fa:	1ae3      	subs	r3, r4, r3
    32fc:	2b00      	cmp	r3, #0
    32fe:	dc21      	bgt.n	3344 <us_ticker_irq_handler+0x7c>
    3300:	f240 13d8 	movw	r3, #472	; 0x1d8
    3304:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3308:	681b      	ldr	r3, [r3, #0]
    330a:	9301      	str	r3, [sp, #4]
    330c:	f240 13d8 	movw	r3, #472	; 0x1d8
    3310:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3314:	681b      	ldr	r3, [r3, #0]
    3316:	689a      	ldr	r2, [r3, #8]
    3318:	f240 13d8 	movw	r3, #472	; 0x1d8
    331c:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3320:	601a      	str	r2, [r3, #0]
    3322:	f240 13d4 	movw	r3, #468	; 0x1d4
    3326:	f2c1 0300 	movt	r3, #4096	; 0x1000
    332a:	681b      	ldr	r3, [r3, #0]
    332c:	2b00      	cmp	r3, #0
    332e:	d0d0      	beq.n	32d2 <us_ticker_irq_handler+0xa>
    3330:	f240 13d4 	movw	r3, #468	; 0x1d4
    3334:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3338:	681b      	ldr	r3, [r3, #0]
    333a:	9a01      	ldr	r2, [sp, #4]
    333c:	6852      	ldr	r2, [r2, #4]
    333e:	4610      	mov	r0, r2
    3340:	4798      	blx	r3
    3342:	e7c6      	b.n	32d2 <us_ticker_irq_handler+0xa>
    3344:	f240 13d8 	movw	r3, #472	; 0x1d8
    3348:	f2c1 0300 	movt	r3, #4096	; 0x1000
    334c:	681b      	ldr	r3, [r3, #0]
    334e:	681b      	ldr	r3, [r3, #0]
    3350:	4618      	mov	r0, r3
    3352:	f7ff ff8d 	bl	3270 <us_ticker_set_interrupt>
    3356:	bf00      	nop
    3358:	b002      	add	sp, #8
    335a:	bd10      	pop	{r4, pc}

0000335c <__libc_init_array>:
    335c:	b538      	push	{r3, r4, r5, lr}
    335e:	4d0e      	ldr	r5, [pc, #56]	; (3398 <__libc_init_array+0x3c>)
    3360:	4b0e      	ldr	r3, [pc, #56]	; (339c <__libc_init_array+0x40>)
    3362:	2400      	movs	r4, #0
    3364:	1ae8      	subs	r0, r5, r3
    3366:	1085      	asrs	r5, r0, #2
    3368:	42ac      	cmp	r4, r5
    336a:	d005      	beq.n	3378 <__libc_init_array+0x1c>
    336c:	490b      	ldr	r1, [pc, #44]	; (339c <__libc_init_array+0x40>)
    336e:	f851 2024 	ldr.w	r2, [r1, r4, lsl #2]
    3372:	4790      	blx	r2
    3374:	3401      	adds	r4, #1
    3376:	e7f7      	b.n	3368 <__libc_init_array+0xc>
    3378:	f000 f868 	bl	344c <_init>
    337c:	4908      	ldr	r1, [pc, #32]	; (33a0 <__libc_init_array+0x44>)
    337e:	4a09      	ldr	r2, [pc, #36]	; (33a4 <__libc_init_array+0x48>)
    3380:	1a54      	subs	r4, r2, r1
    3382:	10a5      	asrs	r5, r4, #2
    3384:	2400      	movs	r4, #0
    3386:	42ac      	cmp	r4, r5
    3388:	d005      	beq.n	3396 <__libc_init_array+0x3a>
    338a:	4b05      	ldr	r3, [pc, #20]	; (33a0 <__libc_init_array+0x44>)
    338c:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    3390:	4780      	blx	r0
    3392:	3401      	adds	r4, #1
    3394:	e7f7      	b.n	3386 <__libc_init_array+0x2a>
    3396:	bd38      	pop	{r3, r4, r5, pc}
    3398:	1000015c 	.word	0x1000015c
    339c:	1000015c 	.word	0x1000015c
    33a0:	1000015c 	.word	0x1000015c
    33a4:	10000160 	.word	0x10000160

000033a8 <memcpy>:
    33a8:	b510      	push	{r4, lr}
    33aa:	2300      	movs	r3, #0
    33ac:	4293      	cmp	r3, r2
    33ae:	d003      	beq.n	33b8 <memcpy+0x10>
    33b0:	5ccc      	ldrb	r4, [r1, r3]
    33b2:	54c4      	strb	r4, [r0, r3]
    33b4:	3301      	adds	r3, #1
    33b6:	e7f9      	b.n	33ac <memcpy+0x4>
    33b8:	bd10      	pop	{r4, pc}

000033ba <memset>:
    33ba:	1882      	adds	r2, r0, r2
    33bc:	4603      	mov	r3, r0
    33be:	4293      	cmp	r3, r2
    33c0:	d002      	beq.n	33c8 <memset+0xe>
    33c2:	f803 1b01 	strb.w	r1, [r3], #1
    33c6:	e7fa      	b.n	33be <memset+0x4>
    33c8:	4770      	bx	lr

000033ca <strcmp>:
    33ca:	f810 2b01 	ldrb.w	r2, [r0], #1
    33ce:	f811 3b01 	ldrb.w	r3, [r1], #1
    33d2:	2a01      	cmp	r2, #1
    33d4:	bf28      	it	cs
    33d6:	429a      	cmpcs	r2, r3
    33d8:	d0f7      	beq.n	33ca <strcmp>
    33da:	eba2 0003 	sub.w	r0, r2, r3
    33de:	4770      	bx	lr

000033e0 <strlen>:
    33e0:	4603      	mov	r3, r0
    33e2:	f813 2b01 	ldrb.w	r2, [r3], #1
    33e6:	2a00      	cmp	r2, #0
    33e8:	d1fb      	bne.n	33e2 <strlen+0x2>
    33ea:	1a18      	subs	r0, r3, r0
    33ec:	3801      	subs	r0, #1
    33ee:	4770      	bx	lr

000033f0 <strncmp>:
    33f0:	b570      	push	{r4, r5, r6, lr}
    33f2:	b192      	cbz	r2, 341a <strncmp+0x2a>
    33f4:	460b      	mov	r3, r1
    33f6:	4605      	mov	r5, r0
    33f8:	b91a      	cbnz	r2, 3402 <strncmp+0x12>
    33fa:	7828      	ldrb	r0, [r5, #0]
    33fc:	7819      	ldrb	r1, [r3, #0]
    33fe:	1a40      	subs	r0, r0, r1
    3400:	bd70      	pop	{r4, r5, r6, pc}
    3402:	f810 6b01 	ldrb.w	r6, [r0], #1
    3406:	781c      	ldrb	r4, [r3, #0]
    3408:	3101      	adds	r1, #1
    340a:	42b4      	cmp	r4, r6
    340c:	d1f5      	bne.n	33fa <strncmp+0xa>
    340e:	2a01      	cmp	r2, #1
    3410:	d0f3      	beq.n	33fa <strncmp+0xa>
    3412:	3a01      	subs	r2, #1
    3414:	2c00      	cmp	r4, #0
    3416:	d1ed      	bne.n	33f4 <strncmp+0x4>
    3418:	e7ef      	b.n	33fa <strncmp+0xa>
    341a:	4610      	mov	r0, r2
    341c:	bd70      	pop	{r4, r5, r6, pc}

0000341e <strstr>:
    341e:	b530      	push	{r4, r5, lr}
    3420:	7803      	ldrb	r3, [r0, #0]
    3422:	b10b      	cbz	r3, 3428 <strstr+0xa>
    3424:	4602      	mov	r2, r0
    3426:	e003      	b.n	3430 <strstr+0x12>
    3428:	7809      	ldrb	r1, [r1, #0]
    342a:	b171      	cbz	r1, 344a <strstr+0x2c>
    342c:	2000      	movs	r0, #0
    342e:	bd30      	pop	{r4, r5, pc}
    3430:	4610      	mov	r0, r2
    3432:	7803      	ldrb	r3, [r0, #0]
    3434:	3201      	adds	r2, #1
    3436:	2b00      	cmp	r3, #0
    3438:	d0f8      	beq.n	342c <strstr+0xe>
    343a:	2300      	movs	r3, #0
    343c:	5ccc      	ldrb	r4, [r1, r3]
    343e:	b124      	cbz	r4, 344a <strstr+0x2c>
    3440:	5cc5      	ldrb	r5, [r0, r3]
    3442:	42a5      	cmp	r5, r4
    3444:	d1f4      	bne.n	3430 <strstr+0x12>
    3446:	3301      	adds	r3, #1
    3448:	e7f8      	b.n	343c <strstr+0x1e>
    344a:	bd30      	pop	{r4, r5, pc}

0000344c <_init>:
    344c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    344e:	bf00      	nop
    3450:	bcf8      	pop	{r3, r4, r5, r6, r7}
    3452:	bc08      	pop	{r3}
    3454:	469e      	mov	lr, r3
    3456:	4770      	bx	lr

00003458 <_fini>:
    3458:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    345a:	bf00      	nop
    345c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    345e:	bc08      	pop	{r3}
    3460:	469e      	mov	lr, r3
    3462:	4770      	bx	lr
    3464:	5f49524d 	.word	0x5f49524d
    3468:	54524155 	.word	0x54524155
    346c:	45424d5f 	.word	0x45424d5f
    3470:	53555f44 	.word	0x53555f44
    3474:	00000042 	.word	0x00000042
    3478:	00343045 	.word	0x00343045

0000347c <commandTable.5672>:
    347c:	00002799 0000003f 00002179 00000063     .'..?...y!..c...
    348c:	00002469 00000046 000027c1 00000067     i$..F....'..g...
    349c:	000027d1 00000047 000024b1 0000006d     .'..G....$..m...
    34ac:	000024ed 0000004d 00002699 00000071     .$..M....&..q...
    34bc:	000027fd 00000073 00002535 00000058     .'..s...5%..X...
    34cc:	00002081 0000007a 00002015 0000005a     . ..z.... ..Z...

000034dc <NibbleToHexChar>:
    34dc:	33323130 37363534 62613938 66656463     0123456789abcdef
    34ec:	3c000920                                          ..

000034ef <g_targetXml>:
    34ef:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    34ff:	3f22302e 213c0a3e 54434f44 20455059     .0"?>.<!DOCTYPE 
    350f:	74616566 20657275 54535953 22204d45     feature SYSTEM "
    351f:	2d626467 67726174 642e7465 3e226474     gdb-target.dtd">
    352f:	61743c0a 74656772 663c0a3e 75746165     .<target>.<featu
    353f:	6e206572 3d656d61 67726f22 756e672e     re name="org.gnu
    354f:	6264672e 6d72612e 702d6d2e 69666f72     .gdb.arm.m-profi
    355f:	3e22656c 65723c0a 616e2067 223d656d     le">.<reg name="
    356f:	20223072 73746962 3d657a69 22323322     r0" bitsize="32"
    357f:	3c0a3e2f 20676572 656d616e 3172223d     />.<reg name="r1
    358f:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    359f:	65723c0a 616e2067 223d656d 20223272     .<reg name="r2" 
    35af:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    35bf:	20676572 656d616e 3372223d 69622022     reg name="r3" bi
    35cf:	7a697374 33223d65 3e2f2232 65723c0a     tsize="32"/>.<re
    35df:	616e2067 223d656d 20223472 73746962     g name="r4" bits
    35ef:	3d657a69 22323322 3c0a3e2f 20676572     ize="32"/>.<reg 
    35ff:	656d616e 3572223d 69622022 7a697374     name="r5" bitsiz
    360f:	33223d65 3e2f2232 65723c0a 616e2067     e="32"/>.<reg na
    361f:	223d656d 20223672 73746962 3d657a69     me="r6" bitsize=
    362f:	22323322 3c0a3e2f 20676572 656d616e     "32"/>.<reg name
    363f:	3772223d 69622022 7a697374 33223d65     ="r7" bitsize="3
    364f:	3e2f2232 65723c0a 616e2067 223d656d     2"/>.<reg name="
    365f:	20223872 73746962 3d657a69 22323322     r8" bitsize="32"
    366f:	3c0a3e2f 20676572 656d616e 3972223d     />.<reg name="r9
    367f:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    368f:	65723c0a 616e2067 223d656d 22303172     .<reg name="r10"
    369f:	74696220 657a6973 3233223d 0a3e2f22      bitsize="32"/>.
    36af:	6765723c 6d616e20 72223d65 20223131     <reg name="r11" 
    36bf:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    36cf:	20676572 656d616e 3172223d 62202232     reg name="r12" b
    36df:	69737469 223d657a 2f223233 723c0a3e     itsize="32"/>.<r
    36ef:	6e206765 3d656d61 22707322 74696220     eg name="sp" bit
    36ff:	657a6973 3233223d 79742022 223d6570     size="32" type="
    370f:	61746164 7274705f 0a3e2f22 6765723c     data_ptr"/>.<reg
    371f:	6d616e20 6c223d65 62202272 69737469      name="lr" bitsi
    372f:	223d657a 2f223233 723c0a3e 6e206765     ze="32"/>.<reg n
    373f:	3d656d61 22637022 74696220 657a6973     ame="pc" bitsize
    374f:	3233223d 79742022 223d6570 65646f63     ="32" type="code
    375f:	7274705f 0a3e2f22 6765723c 6d616e20     _ptr"/>.<reg nam
    376f:	78223d65 22727370 74696220 657a6973     e="xpsr" bitsize
    377f:	3233223d 65722022 6d756e67 3532223d     ="32" regnum="25
    378f:	0a3e2f22 65662f3c 72757461 3c0a3e65     "/>.</feature>.<
    379f:	7261742f 3e746567 0000000a 00001000              /target>.....

000037ac <debugEventToSignalMap.6974>:
    37ac:	00000010 00000011 00000004 00000005     ................
    37bc:	00000002 00000005 00000001 00000005     ................

000037cc <__mriCortexMFakeStack>:
    37cc:	deaddead deaddead deaddead deaddead     ................
    37dc:	deaddead deaddead deaddead deaddead     ................

000037ec <CSWTCH.106>:
    37ec:	0a070506 504d2a2a 61462055 2a746c75     ....**MPU Fault*
    37fc:	200a002a 61745320 20737574 69676552     *..  Status Regi
    380c:	72657473 0a00203a 20202020 6c756146     ster: ..    Faul
    381c:	64412074 73657264 00203a73 2020200a     t Address: ..   
    382c:	20504620 797a614c 65725020 76726573      FP Lazy Preserv
    383c:	6f697461 200a006e 53202020 6b636174     ation..    Stack
    384c:	20676e69 6f727245 2f772072 20505320     ing Error w/ SP 
    385c:	0a00203d 20202020 74736e55 696b6361     = ..    Unstacki
    386c:	4520676e 726f7272 202f7720 3d205053     ng Error w/ SP =
    387c:	200a0020 44202020 20617461 65636341      ..    Data Acce
    388c:	0a007373 20202020 74736e49 74637572     ss..    Instruct
    389c:	206e6f69 63746546 2a0a0068 7375422a     ion Fetch..**Bus
    38ac:	75614620 2a2a746c 20200a00 6d492020      Fault**..    Im
    38bc:	63657270 20657369 61746144 63634120     precise Data Acc
    38cc:	00737365 2020200a 65725020 65736963     ess..    Precise
    38dc:	74614420 63412061 73736563 20200a00      Data Access..  
    38ec:	6e492020 75727473 6f697463 7250206e       Instruction Pr
    38fc:	74656665 0a006863 73552a2a 20656761     efetch..**Usage 
    390c:	6c756146 002a2a74 2020200a 76694420     Fault**..    Div
    391c:	20656469 5a207962 006f7265 2020200a     ide by Zero..   
    392c:	616e5520 6e67696c 41206465 73656363      Unaligned Acces
    393c:	200a0073 43202020 6f72706f 73736563     s..    Coprocess
    394c:	4120726f 73656363 200a0073 49202020     or Access..    I
    395c:	6c61766e 45206469 70656378 6e6f6974     nvalid Exception
    396c:	74655220 206e7275 74617453 200a0065      Return State.. 
    397c:	49202020 6c61766e 53206469 65746174        Invalid State
    398c:	20200a00 6e552020 69666564 2064656e     ..    Undefined 
    399c:	74736e49 74637572 006e6f69 482a2a0a     Instruction..**H
    39ac:	20647261 6c756146 002a2a74 2020200a     ard Fault**..   
    39bc:	62654420 45206775 746e6576 20200a00      Debug Event..  
    39cc:	65562020 726f7463 62615420 5220656c       Vector Table R
    39dc:	00646165 2020200a 726f4620 00646563     ead..    Forced.
    39ec:	524d000a                                         ..

000039ee <baudRatePrefix.7338>:
    39ee:	5f49524d 54524155 5541425f 4d003d44     MRI_UART_BAUD=.M
    39fe:	555f4952 5f545241 4445424d 4253555f     RI_UART_MBED_USB
    3a0e:	49524d00 5241555f 424d5f54 505f4445     .MRI_UART_MBED_P
    3a1e:	31505f39 524d0030 41555f49 4d5f5452     9_P10.MRI_UART_M
    3a2e:	5f444542 5f333150 00343150 5f49524d     BED_P13_P14.MRI_
    3a3e:	54524155 45424d5f 32505f44 32505f38     UART_MBED_P28_P2
    3a4e:	524d0037 41555f49 305f5452 49524d00     7.MRI_UART_0.MRI
    3a5e:	5241555f 00315f54 5f49524d 54524155     _UART_1.MRI_UART
    3a6e:	4d00325f 555f4952 5f545241 524d0033     _2.MRI_UART_3.MR
    3a7e:	41555f49 535f5452 45524148 783f3c00              I_UART_SHARE.

00003a8b <g_memoryMapXml>:
    3a8b:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    3a9b:	3f22302e 44213c3e 5954434f 6d204550     .0"?><!DOCTYPE m
    3aab:	726f6d65 616d2d79 55502070 43494c42     emory-map PUBLIC
    3abb:	2f2b2220 4e44492f 756e6720 67726f2e      "+//IDN gnu.org
    3acb:	54442f2f 44472044 654d2042 79726f6d     //DTD GDB Memory
    3adb:	70614d20 2e315620 452f2f30 2220224e      Map V1.0//EN" "
    3aeb:	70747468 732f2f3a 6372756f 72617765     http://sourcewar
    3afb:	726f2e65 64672f67 64672f62 656d2d62     e.org/gdb/gdb-me
    3b0b:	79726f6d 70616d2d 6474642e 6d3c3e22     mory-map.dtd"><m
    3b1b:	726f6d65 616d2d79 6d3c3e70 726f6d65     emory-map><memor
    3b2b:	79742079 223d6570 73616c66 73202268     y type="flash" s
    3b3b:	74726174 7830223d 6c202230 74676e65     tart="0x0" lengt
    3b4b:	30223d68 30303178 3e223030 72703c20     h="0x10000"> <pr
    3b5b:	7265706f 6e207974 3d656d61 6f6c6222     operty name="blo
    3b6b:	69736b63 3e22657a 30317830 2f3c3030     cksize">0x1000</
    3b7b:	706f7270 79747265 6d2f3c3e 726f6d65     property></memor
    3b8b:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    3b9b:	73616c66 73202268 74726174 7830223d     flash" start="0x
    3bab:	30303031 6c202230 74676e65 30223d68     10000" length="0
    3bbb:	30303778 3e223030 72703c20 7265706f     x70000"> <proper
    3bcb:	6e207974 3d656d61 6f6c6222 69736b63     ty name="blocksi
    3bdb:	3e22657a 30387830 2f3c3030 706f7270     ze">0x8000</prop
    3beb:	79747265 6d2f3c3e 726f6d65 6d3c3e79     erty></memory><m
    3bfb:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3c0b:	61747320 223d7472 30317830 30303030      start="0x100000
    3c1b:	20223030 676e656c 223d6874 30387830     00" length="0x80
    3c2b:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3c3b:	726f6d65 79742079 223d6570 226d6f72     emory type="rom"
    3c4b:	61747320 223d7472 46317830 30304646      start="0x1FFF00
    3c5b:	20223030 676e656c 223d6874 30327830     00" length="0x20
    3c6b:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3c7b:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3c8b:	61747320 223d7472 30327830 30433730      start="0x2007C0
    3c9b:	20223030 676e656c 223d6874 30387830     00" length="0x80
    3cab:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3cbb:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3ccb:	61747320 223d7472 30327830 30433930      start="0x2009C0
    3cdb:	20223030 676e656c 223d6874 30347830     00" length="0x40
    3ceb:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3cfb:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3d0b:	61747320 223d7472 32327830 30303030      start="0x220000
    3d1b:	20223030 676e656c 223d6874 30327830     00" length="0x20
    3d2b:	30303030 203e2230 656d2f3c 79726f6d     00000"> </memory
    3d3b:	656d3c3e 79726f6d 70797420 72223d65     ><memory type="r
    3d4b:	20226d61 72617473 30223d74 30303478     am" start="0x400
    3d5b:	30303030 6c202230 74676e65 30223d68     00000" length="0
    3d6b:	30343178 3e223030 6d2f3c20 726f6d65     x14000"> </memor
    3d7b:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    3d8b:	226d6172 61747320 223d7472 30347830     ram" start="0x40
    3d9b:	30383130 20223030 676e656c 223d6874     018000" length="
    3dab:	34337830 22303030 2f3c203e 6f6d656d     0x34000"> </memo
    3dbb:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    3dcb:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    3ddb:	43353030 22303030 6e656c20 3d687467     005C000" length=
    3deb:	34783022 22303030 2f3c203e 6f6d656d     "0x4000"> </memo
    3dfb:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    3e0b:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    3e1b:	38383030 22303030 6e656c20 3d687467     0088000" length=
    3e2b:	31783022 30303043 3c203e22 6d656d2f     "0x1C000"> </mem
    3e3b:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3e4b:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3e5b:	41303034 30303038 656c2022 6874676e     400A8000" length
    3e6b:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3e7b:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3e8b:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3e9b:	42303034 30303030 656c2022 6874676e     400B0000" length
    3eab:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3ebb:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3ecb:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3edb:	42303034 30303038 656c2022 6874676e     400B8000" length
    3eeb:	7830223d 30303038 3c203e22 6d656d2f     ="0x8000"> </mem
    3efb:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3f0b:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3f1b:	46303034 30303043 656c2022 6874676e     400FC000" length
    3f2b:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3f3b:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3f4b:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3f5b:	30303234 30303030 656c2022 6874676e     42000000" length
    3f6b:	7830223d 30303032 22303030 2f3c203e     ="0x2000000"> </
    3f7b:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    3f8b:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    3f9b:	35783022 30303030 22303030 6e656c20     "0x50000000" len
    3fab:	3d687467 38783022 22303030 2f3c203e     gth="0x8000"> </
    3fbb:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    3fcb:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    3fdb:	35783022 43303030 22303030 6e656c20     "0x5000C000" len
    3feb:	3d687467 34783022 22303030 2f3c203e     gth="0x4000"> </
    3ffb:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    400b:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    401b:	45783022 30303030 22303030 6e656c20     "0xE0000000" len
    402b:	3d687467 31783022 30303030 203e2230     gth="0x100000"> 
    403b:	656d2f3c 79726f6d 6d2f3c3e 726f6d65     </memory></memor
    404b:	616d2d79 31003e70 30303130 30303030     y-map>.101000000
    405b:	30303030 30303030 30303030 46323030     000000000000002F
    406b:	30304637 00303030 30000000                       7F00000....

00004076 <NibbleToHexChar>:
    4076:	33323130 37363534 62613938 66656463     0123456789abcdef
    4086:	00313045 00353045 46004b4f                       E01.E05.OK.

00004091 <gdbCloseCommand.4654>:
    4091:	6f6c6346 002c6573                       Fclose,.

00004099 <gdbStatCommand.4676>:
    4099:	61747346 2c002c74                                Fstat,.

000040a0 <controlCFlag.4687>:
    40a0:	4600432c                                         ,C.

000040a3 <gdbCommand.4682>:
    40a3:	6e657246 2c656d61 72774600                       Frename,.

000040ac <gdbWriteCommand.4644>:
    40ac:	69727746 002c6574                       Fwrite,.

000040b4 <gdbOpenCommand.4639>:
    40b4:	65706f46 46002c6e                                Fopen,.

000040bb <gdbStatCommand.4665>:
    40bb:	74736646 002c7461                       Ffstat,.

000040c3 <gdbReadCommand.4649>:
    40c3:	61657246 46002c64                                Fread,.

000040ca <gdbSeekCommand.4659>:
    40ca:	65736c46 002c6b65                       Flseek,.

000040d2 <gdbUnlinkCommand.4670>:
    40d2:	6c6e7546 2c6b6e69 33304500 61657200              Funlink,.E03.

000040df <readCommand.4768>:
    40df:	64616572 65665800                                read.

000040e4 <qXferCommand.4745>:
    40e4:	72656658 70755300                                Xfer.

000040e9 <qSupportedCommand.4744>:
    40e9:	70707553 6574726f 61740064                       Supported.

000040f3 <targetXmlAnnex.4773>:
    40f3:	67726174 782e7465 74006c6d 65677261     target.xml.targe
    4103:	6d782e74 5871006c                                t.xml.

00004109 <querySupportResponse.4749>:
    4109:	65665871 656d3a72 79726f6d 70616d2d     qXfer:memory-map
    4119:	6165723a 713b2b64 72656658 6165663a     :read+;qXfer:fea
    4129:	65727574 65723a73 3b2b6461 6b636150     tures:read+;Pack
    4139:	69537465 003d657a                       etSize=.

00004141 <featureObject.4757>:
    4141:	74616566 73657275 6d656d00                       features.

0000414a <memoryMapObject.4756>:
    414a:	6f6d656d 6d2d7972 30007061 00000078              memory-map.0x.

00004158 <__EH_FRAME_BEGIN__>:
    4158:	00000000                                ....
