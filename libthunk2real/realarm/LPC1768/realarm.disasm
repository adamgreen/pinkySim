
LPC1768/realarm.elf:     file format elf32-littlearm
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00002de9


Disassembly of section .text:

00000000 <__isr_vector>:
       0:	10008000 	.word	0x10008000
       4:	00002de9 	.word	0x00002de9
       8:	00002e1d 	.word	0x00002e1d
       c:	00001c33 	.word	0x00001c33
      10:	00001c37 	.word	0x00001c37
      14:	00001c3b 	.word	0x00001c3b
      18:	00001c3f 	.word	0x00001c3f
	...
      2c:	00000305 	.word	0x00000305
      30:	00001c43 	.word	0x00001c43
      34:	00000000 	.word	0x00000000
      38:	00002e2b 	.word	0x00002e2b
      3c:	00002e2d 	.word	0x00002e2d
      40:	00002e31 	.word	0x00002e31
      44:	00002e33 	.word	0x00002e33
      48:	00002e35 	.word	0x00002e35
      4c:	00002e37 	.word	0x00002e37
      50:	00002e39 	.word	0x00002e39
      54:	00001c47 	.word	0x00001c47
      58:	00001c4b 	.word	0x00001c4b
      5c:	00001c4f 	.word	0x00001c4f
      60:	00001c53 	.word	0x00001c53
      64:	00002e43 	.word	0x00002e43
      68:	00002e45 	.word	0x00002e45
      6c:	00002e47 	.word	0x00002e47
      70:	00002e49 	.word	0x00002e49
      74:	00002e4b 	.word	0x00002e4b
      78:	00002e4d 	.word	0x00002e4d
      7c:	00002e4f 	.word	0x00002e4f
      80:	00002e51 	.word	0x00002e51
      84:	00002e53 	.word	0x00002e53
      88:	00002e55 	.word	0x00002e55
      8c:	00002e57 	.word	0x00002e57
      90:	00002e59 	.word	0x00002e59
      94:	00002e5b 	.word	0x00002e5b
      98:	00002e5d 	.word	0x00002e5d
      9c:	00002e5f 	.word	0x00002e5f
      a0:	00002e61 	.word	0x00002e61
      a4:	00002e63 	.word	0x00002e63
      a8:	00002e65 	.word	0x00002e65
      ac:	00002e67 	.word	0x00002e67
      b0:	00002e69 	.word	0x00002e69
      b4:	00002e6b 	.word	0x00002e6b
      b8:	00002e6d 	.word	0x00002e6d
      bc:	00002e6f 	.word	0x00002e6f
      c0:	00002e71 	.word	0x00002e71
      c4:	00002e73 	.word	0x00002e73
      c8:	00002e75 	.word	0x00002e75

000000cc <__do_global_dtors_aux>:
      cc:	b510      	push	{r4, lr}
      ce:	4c05      	ldr	r4, [pc, #20]	; (e4 <__do_global_dtors_aux+0x18>)
      d0:	7823      	ldrb	r3, [r4, #0]
      d2:	b933      	cbnz	r3, e2 <__do_global_dtors_aux+0x16>
      d4:	4804      	ldr	r0, [pc, #16]	; (e8 <__do_global_dtors_aux+0x1c>)
      d6:	b110      	cbz	r0, de <__do_global_dtors_aux+0x12>
      d8:	4804      	ldr	r0, [pc, #16]	; (ec <__do_global_dtors_aux+0x20>)
      da:	f3af 8000 	nop.w
      de:	2101      	movs	r1, #1
      e0:	7021      	strb	r1, [r4, #0]
      e2:	bd10      	pop	{r4, pc}
      e4:	100000d8 	.word	0x100000d8
      e8:	00000000 	.word	0x00000000
      ec:	000042d8 	.word	0x000042d8

000000f0 <frame_dummy>:
      f0:	b508      	push	{r3, lr}
      f2:	4b06      	ldr	r3, [pc, #24]	; (10c <frame_dummy+0x1c>)
      f4:	b11b      	cbz	r3, fe <frame_dummy+0xe>
      f6:	4806      	ldr	r0, [pc, #24]	; (110 <frame_dummy+0x20>)
      f8:	4906      	ldr	r1, [pc, #24]	; (114 <frame_dummy+0x24>)
      fa:	f3af 8000 	nop.w
      fe:	4806      	ldr	r0, [pc, #24]	; (118 <frame_dummy+0x28>)
     100:	6801      	ldr	r1, [r0, #0]
     102:	b111      	cbz	r1, 10a <frame_dummy+0x1a>
     104:	4a05      	ldr	r2, [pc, #20]	; (11c <frame_dummy+0x2c>)
     106:	b102      	cbz	r2, 10a <frame_dummy+0x1a>
     108:	4790      	blx	r2
     10a:	bd08      	pop	{r3, pc}
     10c:	00000000 	.word	0x00000000
     110:	000042d8 	.word	0x000042d8
     114:	100000dc 	.word	0x100000dc
     118:	100000d4 	.word	0x100000d4
     11c:	00000000 	.word	0x00000000

00000120 <getMPUDataRegionCount()>:
     120:	f64e 5390 	movw	r3, #60816	; 0xed90
     124:	f2ce 0300 	movt	r3, #57344	; 0xe000
     128:	681b      	ldr	r3, [r3, #0]
     12a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
     12e:	ea4f 2313 	mov.w	r3, r3, lsr #8
     132:	4618      	mov	r0, r3
     134:	4770      	bx	lr
     136:	bf00      	nop

00000138 <getHighestMPUDataRegionIndex()>:
     138:	b508      	push	{r3, lr}
     13a:	f7ff fff1 	bl	120 <getMPUDataRegionCount()>
     13e:	4603      	mov	r3, r0
     140:	f103 33ff 	add.w	r3, r3, #4294967295	; 0xffffffff
     144:	4618      	mov	r0, r3
     146:	bd08      	pop	{r3, pc}

00000148 <isMPURegionNumberValid(unsigned long)>:
     148:	b500      	push	{lr}
     14a:	b083      	sub	sp, #12
     14c:	9001      	str	r0, [sp, #4]
     14e:	f7ff ffe7 	bl	120 <getMPUDataRegionCount()>
     152:	4602      	mov	r2, r0
     154:	9b01      	ldr	r3, [sp, #4]
     156:	429a      	cmp	r2, r3
     158:	bf94      	ite	ls
     15a:	2300      	movls	r3, #0
     15c:	2301      	movhi	r3, #1
     15e:	b2db      	uxtb	r3, r3
     160:	4618      	mov	r0, r3
     162:	b003      	add	sp, #12
     164:	bd00      	pop	{pc}
     166:	bf00      	nop

00000168 <isMPUNotPresent()>:
     168:	b508      	push	{r3, lr}
     16a:	f7ff ffd9 	bl	120 <getMPUDataRegionCount()>
     16e:	4603      	mov	r3, r0
     170:	2b00      	cmp	r3, #0
     172:	bf14      	ite	ne
     174:	2300      	movne	r3, #0
     176:	2301      	moveq	r3, #1
     178:	b2db      	uxtb	r3, r3
     17a:	4618      	mov	r0, r3
     17c:	bd08      	pop	{r3, pc}
     17e:	bf00      	nop

00000180 <disableMPU()>:
     180:	b508      	push	{r3, lr}
     182:	f7ff fff1 	bl	168 <isMPUNotPresent()>
     186:	4603      	mov	r3, r0
     188:	2b00      	cmp	r3, #0
     18a:	bf0c      	ite	eq
     18c:	2300      	moveq	r3, #0
     18e:	2301      	movne	r3, #1
     190:	b2db      	uxtb	r3, r3
     192:	2b00      	cmp	r3, #0
     194:	d110      	bne.n	1b8 <disableMPU()+0x38>
     196:	f64e 5390 	movw	r3, #60816	; 0xed90
     19a:	f2ce 0300 	movt	r3, #57344	; 0xe000
     19e:	f64e 5290 	movw	r2, #60816	; 0xed90
     1a2:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1a6:	6852      	ldr	r2, [r2, #4]
     1a8:	f022 0201 	bic.w	r2, r2, #1
     1ac:	605a      	str	r2, [r3, #4]
     1ae:	f3bf 8f4f 	dsb	sy
     1b2:	f3bf 8f6f 	isb	sy
     1b6:	e000      	b.n	1ba <disableMPU()+0x3a>
     1b8:	bf00      	nop
     1ba:	bd08      	pop	{r3, pc}

000001bc <enableMPUWithHardAndNMIFaults()>:
     1bc:	b508      	push	{r3, lr}
     1be:	f7ff ffd3 	bl	168 <isMPUNotPresent()>
     1c2:	4603      	mov	r3, r0
     1c4:	2b00      	cmp	r3, #0
     1c6:	bf0c      	ite	eq
     1c8:	2300      	moveq	r3, #0
     1ca:	2301      	movne	r3, #1
     1cc:	b2db      	uxtb	r3, r3
     1ce:	2b00      	cmp	r3, #0
     1d0:	d110      	bne.n	1f4 <enableMPUWithHardAndNMIFaults()+0x38>
     1d2:	f64e 5390 	movw	r3, #60816	; 0xed90
     1d6:	f2ce 0300 	movt	r3, #57344	; 0xe000
     1da:	f64e 5290 	movw	r2, #60816	; 0xed90
     1de:	f2ce 0200 	movt	r2, #57344	; 0xe000
     1e2:	6852      	ldr	r2, [r2, #4]
     1e4:	f042 0203 	orr.w	r2, r2, #3
     1e8:	605a      	str	r2, [r3, #4]
     1ea:	f3bf 8f4f 	dsb	sy
     1ee:	f3bf 8f6f 	isb	sy
     1f2:	e000      	b.n	1f6 <enableMPUWithHardAndNMIFaults()+0x3a>
     1f4:	bf00      	nop
     1f6:	bd08      	pop	{r3, pc}

000001f8 <prepareToAccessMPURegion(unsigned long)>:
     1f8:	b500      	push	{lr}
     1fa:	b083      	sub	sp, #12
     1fc:	9001      	str	r0, [sp, #4]
     1fe:	9801      	ldr	r0, [sp, #4]
     200:	f7ff ffa2 	bl	148 <isMPURegionNumberValid(unsigned long)>
     204:	4603      	mov	r3, r0
     206:	2b00      	cmp	r3, #0
     208:	bf14      	ite	ne
     20a:	2300      	movne	r3, #0
     20c:	2301      	moveq	r3, #1
     20e:	b2db      	uxtb	r3, r3
     210:	2b00      	cmp	r3, #0
     212:	d002      	beq.n	21a <PSR_STACK_ALIGN+0x1a>
     214:	f04f 0300 	mov.w	r3, #0
     218:	e007      	b.n	22a <PSR_STACK_ALIGN+0x2a>
     21a:	f64e 5390 	movw	r3, #60816	; 0xed90
     21e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     222:	9a01      	ldr	r2, [sp, #4]
     224:	609a      	str	r2, [r3, #8]
     226:	f04f 0301 	mov.w	r3, #1
     22a:	4618      	mov	r0, r3
     22c:	b003      	add	sp, #12
     22e:	bd00      	pop	{pc}

00000230 <setMPURegionAddress(unsigned long)>:
     230:	b500      	push	{lr}
     232:	b083      	sub	sp, #12
     234:	9001      	str	r0, [sp, #4]
     236:	f7ff ff97 	bl	168 <isMPUNotPresent()>
     23a:	4603      	mov	r3, r0
     23c:	2b00      	cmp	r3, #0
     23e:	bf0c      	ite	eq
     240:	2300      	moveq	r3, #0
     242:	2301      	movne	r3, #1
     244:	b2db      	uxtb	r3, r3
     246:	2b00      	cmp	r3, #0
     248:	d108      	bne.n	25c <setMPURegionAddress(unsigned long)+0x2c>
     24a:	f64e 5390 	movw	r3, #60816	; 0xed90
     24e:	f2ce 0300 	movt	r3, #57344	; 0xe000
     252:	9a01      	ldr	r2, [sp, #4]
     254:	ea4f 1242 	mov.w	r2, r2, lsl #5
     258:	60da      	str	r2, [r3, #12]
     25a:	e000      	b.n	25e <setMPURegionAddress(unsigned long)+0x2e>
     25c:	bf00      	nop
     25e:	b003      	add	sp, #12
     260:	bd00      	pop	{pc}
     262:	bf00      	nop

00000264 <setMPURegionAttributeAndSize(unsigned long)>:
     264:	b500      	push	{lr}
     266:	b083      	sub	sp, #12
     268:	9001      	str	r0, [sp, #4]
     26a:	f7ff ff7d 	bl	168 <isMPUNotPresent()>
     26e:	4603      	mov	r3, r0
     270:	2b00      	cmp	r3, #0
     272:	bf0c      	ite	eq
     274:	2300      	moveq	r3, #0
     276:	2301      	movne	r3, #1
     278:	b2db      	uxtb	r3, r3
     27a:	2b00      	cmp	r3, #0
     27c:	d106      	bne.n	28c <setMPURegionAttributeAndSize(unsigned long)+0x28>
     27e:	f64e 5390 	movw	r3, #60816	; 0xed90
     282:	f2ce 0300 	movt	r3, #57344	; 0xe000
     286:	9a01      	ldr	r2, [sp, #4]
     288:	611a      	str	r2, [r3, #16]
     28a:	e000      	b.n	28e <setMPURegionAttributeAndSize(unsigned long)+0x2a>
     28c:	bf00      	nop
     28e:	b003      	add	sp, #12
     290:	bd00      	pop	{pc}
     292:	bf00      	nop

00000294 <attemptUnalignedAccess()>:
     294:	4770      	bx	lr
     296:	bf00      	nop

00000298 <attemptMemoryWriteFault()>:
     298:	4770      	bx	lr
     29a:	bf00      	nop

0000029c <disallowUnalignedAccesses()>:
     29c:	f44f 436d 	mov.w	r3, #60672	; 0xed00
     2a0:	f2ce 0300 	movt	r3, #57344	; 0xe000
     2a4:	f44f 426d 	mov.w	r2, #60672	; 0xed00
     2a8:	f2ce 0200 	movt	r2, #57344	; 0xe000
     2ac:	6952      	ldr	r2, [r2, #20]
     2ae:	f042 0208 	orr.w	r2, r2, #8
     2b2:	615a      	str	r2, [r3, #20]
     2b4:	4770      	bx	lr
     2b6:	bf00      	nop

000002b8 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>:
     2b8:	b508      	push	{r3, lr}
     2ba:	f7ff ff3d 	bl	138 <getHighestMPUDataRegionIndex()>
     2be:	4603      	mov	r3, r0
     2c0:	4618      	mov	r0, r3
     2c2:	f7ff ff99 	bl	1f8 <prepareToAccessMPURegion(unsigned long)>
     2c6:	f04f 0000 	mov.w	r0, #0
     2ca:	f7ff ffb1 	bl	230 <setMPURegionAddress(unsigned long)>
     2ce:	f04f 003f 	mov.w	r0, #63	; 0x3f
     2d2:	f2c0 1000 	movt	r0, #256	; 0x100
     2d6:	f7ff ffc5 	bl	264 <setMPURegionAttributeAndSize(unsigned long)>
     2da:	bd08      	pop	{r3, pc}

000002dc <disableWriteCaching()>:
     2dc:	b508      	push	{r3, lr}
     2de:	f7ff ff4f 	bl	180 <disableMPU()>
     2e2:	f7ff ffe9 	bl	2b8 <configureHighestMpuRegionToAccessAllMemoryWithNoCaching()>
     2e6:	f7ff ff69 	bl	1bc <enableMPUWithHardAndNMIFaults()>
     2ea:	bd08      	pop	{r3, pc}

000002ec <main>:
     2ec:	b508      	push	{r3, lr}
     2ee:	f7ff ffd5 	bl	29c <disallowUnalignedAccesses()>
     2f2:	f7ff fff3 	bl	2dc <disableWriteCaching()>
     2f6:	f7ff ffcd 	bl	294 <attemptUnalignedAccess()>
     2fa:	f7ff ffcd 	bl	298 <attemptMemoryWriteFault()>
     2fe:	be00      	bkpt	0x0000
     300:	e7fd      	b.n	2fe <main+0x12>
     302:	bf00      	nop

00000304 <SVC_Handler>:
     304:	4770      	bx	lr
     306:	bf00      	nop

00000308 <_start>:
     308:	b500      	push	{lr}
     30a:	b083      	sub	sp, #12
     30c:	f240 4254 	movw	r2, #1108	; 0x454
     310:	f2c1 0200 	movt	r2, #4096	; 0x1000
     314:	f240 03d8 	movw	r3, #216	; 0xd8
     318:	f2c1 0300 	movt	r3, #4096	; 0x1000
     31c:	1ad3      	subs	r3, r2, r3
     31e:	9301      	str	r3, [sp, #4]
     320:	9b01      	ldr	r3, [sp, #4]
     322:	f240 00d8 	movw	r0, #216	; 0xd8
     326:	f2c1 0000 	movt	r0, #4096	; 0x1000
     32a:	f04f 0100 	mov.w	r1, #0
     32e:	461a      	mov	r2, r3
     330:	f003 f8b9 	bl	34a6 <memset>
     334:	f243 5050 	movw	r0, #13648	; 0x3550
     338:	f2c0 0000 	movt	r0, #0
     33c:	f000 f80e 	bl	35c <__mriInit>
     340:	f3af 8000 	nop.w
     344:	f003 f880 	bl	3448 <__libc_init_array>
     348:	f7ff ffd0 	bl	2ec <main>
     34c:	9000      	str	r0, [sp, #0]
     34e:	9800      	ldr	r0, [sp, #0]
     350:	f002 fd18 	bl	2d84 <exit>

00000354 <__wrap_semihost_connected>:
     354:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
     358:	4618      	mov	r0, r3
     35a:	4770      	bx	lr

0000035c <__mriInit>:
     35c:	b570      	push	{r4, r5, r6, lr}
     35e:	2100      	movs	r1, #0
     360:	b09e      	sub	sp, #120	; 0x78
     362:	2224      	movs	r2, #36	; 0x24
     364:	4c0e      	ldr	r4, [pc, #56]	; (3a0 <__mriInit+0x44>)
     366:	4606      	mov	r6, r0
     368:	480e      	ldr	r0, [pc, #56]	; (3a4 <__mriInit+0x48>)
     36a:	f003 f89c 	bl	34a6 <memset>
     36e:	2500      	movs	r5, #0
     370:	a801      	add	r0, sp, #4
     372:	6025      	str	r5, [r4, #0]
     374:	f000 f9f2 	bl	75c <__mriToken_Init>
     378:	a801      	add	r0, sp, #4
     37a:	4631      	mov	r1, r6
     37c:	6025      	str	r5, [r4, #0]
     37e:	f000 f9f7 	bl	770 <__mriToken_SplitString>
     382:	6823      	ldr	r3, [r4, #0]
     384:	b913      	cbnz	r3, 38c <__mriInit+0x30>
     386:	a801      	add	r0, sp, #4
     388:	f001 fa1c 	bl	17c4 <__mriPlatform_Init>
     38c:	6820      	ldr	r0, [r4, #0]
     38e:	b920      	cbnz	r0, 39a <__mriInit+0x3e>
     390:	4904      	ldr	r1, [pc, #16]	; (3a4 <__mriInit+0x48>)
     392:	694a      	ldr	r2, [r1, #20]
     394:	f042 0303 	orr.w	r3, r2, #3
     398:	614b      	str	r3, [r1, #20]
     39a:	b01e      	add	sp, #120	; 0x78
     39c:	bd70      	pop	{r4, r5, r6, pc}
     39e:	bf00      	nop
     3a0:	1000014c 	.word	0x1000014c
     3a4:	100000f4 	.word	0x100000f4

000003a8 <__mriCore_InitBuffer>:
     3a8:	b510      	push	{r4, lr}
     3aa:	f000 fc67 	bl	c7c <__mriPlatform_GetPacketBuffer>
     3ae:	4604      	mov	r4, r0
     3b0:	f000 fc68 	bl	c84 <__mriPlatform_GetPacketBufferSize>
     3b4:	4602      	mov	r2, r0
     3b6:	4803      	ldr	r0, [pc, #12]	; (3c4 <__mriCore_InitBuffer+0x1c>)
     3b8:	4621      	mov	r1, r4
     3ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3be:	f001 bca5 	b.w	1d0c <__mriBuffer_Init>
     3c2:	bf00      	nop
     3c4:	100000fc 	.word	0x100000fc

000003c8 <__mriCore_PrepareStringResponse>:
     3c8:	b510      	push	{r4, lr}
     3ca:	4604      	mov	r4, r0
     3cc:	f7ff ffec 	bl	3a8 <__mriCore_InitBuffer>
     3d0:	4802      	ldr	r0, [pc, #8]	; (3dc <__mriCore_PrepareStringResponse+0x14>)
     3d2:	4621      	mov	r1, r4
     3d4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     3d8:	f001 bd4a 	b.w	1e70 <__mriBuffer_WriteString>
     3dc:	100000fc 	.word	0x100000fc

000003e0 <__mriCore_WasControlCFlagSentFromGdb>:
     3e0:	4b02      	ldr	r3, [pc, #8]	; (3ec <__mriCore_WasControlCFlagSentFromGdb+0xc>)
     3e2:	6958      	ldr	r0, [r3, #20]
     3e4:	f000 0004 	and.w	r0, r0, #4
     3e8:	4770      	bx	lr
     3ea:	bf00      	nop
     3ec:	100000f4 	.word	0x100000f4

000003f0 <__mriCore_IsWaitingForGdbToConnect>:
     3f0:	b508      	push	{r3, lr}
     3f2:	4b05      	ldr	r3, [pc, #20]	; (408 <CFSR_BUS_IMPRECISE_BIT+0x8>)
     3f4:	6958      	ldr	r0, [r3, #20]
     3f6:	f010 0002 	ands.w	r0, r0, #2
     3fa:	d004      	beq.n	406 <CFSR_BUS_IMPRECISE_BIT+0x6>
     3fc:	f001 f816 	bl	142c <__mriPlatform_CommShouldWaitForGdbConnect>
     400:	3000      	adds	r0, #0
     402:	bf18      	it	ne
     404:	2001      	movne	r0, #1
     406:	bd08      	pop	{r3, pc}
     408:	100000f4 	.word	0x100000f4

0000040c <__mriCore_RecordControlCFlagSentFromGdb>:
     40c:	4b04      	ldr	r3, [pc, #16]	; (420 <__mriCore_RecordControlCFlagSentFromGdb+0x14>)
     40e:	695a      	ldr	r2, [r3, #20]
     410:	b110      	cbz	r0, 418 <__mriCore_RecordControlCFlagSentFromGdb+0xc>
     412:	f042 0004 	orr.w	r0, r2, #4
     416:	e001      	b.n	41c <__mriCore_RecordControlCFlagSentFromGdb+0x10>
     418:	f022 0004 	bic.w	r0, r2, #4
     41c:	6158      	str	r0, [r3, #20]
     41e:	4770      	bx	lr
     420:	100000f4 	.word	0x100000f4

00000424 <__mriCore_WasSemihostCallCancelledByGdb>:
     424:	4b03      	ldr	r3, [pc, #12]	; (434 <__mriCore_WasSemihostCallCancelledByGdb+0x10>)
     426:	69d8      	ldr	r0, [r3, #28]
     428:	1f01      	subs	r1, r0, #4
     42a:	424a      	negs	r2, r1
     42c:	eb52 0001 	adcs.w	r0, r2, r1
     430:	4770      	bx	lr
     432:	bf00      	nop
     434:	100000f4 	.word	0x100000f4

00000438 <__mriCore_FlagSemihostCallAsHandled>:
     438:	b510      	push	{r4, lr}
     43a:	4c06      	ldr	r4, [pc, #24]	; (454 <__mriCore_FlagSemihostCallAsHandled+0x1c>)
     43c:	f000 fd6e 	bl	f1c <__mriPlatform_AdvanceProgramCounterToNextInstruction>
     440:	69a0      	ldr	r0, [r4, #24]
     442:	f000 fd1b 	bl	e7c <__mriPlatform_SetSemihostCallReturnValue>
     446:	69a3      	ldr	r3, [r4, #24]
     448:	b113      	cbz	r3, 450 <__mriCore_FlagSemihostCallAsHandled+0x18>
     44a:	69e2      	ldr	r2, [r4, #28]
     44c:	4802      	ldr	r0, [pc, #8]	; (458 <__mriCore_FlagSemihostCallAsHandled+0x20>)
     44e:	6002      	str	r2, [r0, #0]
     450:	bd10      	pop	{r4, pc}
     452:	bf00      	nop
     454:	100000f4 	.word	0x100000f4
     458:	10000450 	.word	0x10000450

0000045c <__mriCore_IsFirstException>:
     45c:	4b02      	ldr	r3, [pc, #8]	; (468 <__mriCore_IsFirstException+0xc>)
     45e:	6958      	ldr	r0, [r3, #20]
     460:	f000 0002 	and.w	r0, r0, #2
     464:	4770      	bx	lr
     466:	bf00      	nop
     468:	100000f4 	.word	0x100000f4

0000046c <__mriCore_SetSignalValue>:
     46c:	4b01      	ldr	r3, [pc, #4]	; (474 <__mriCore_SetSignalValue+0x8>)
     46e:	f883 0020 	strb.w	r0, [r3, #32]
     472:	4770      	bx	lr
     474:	100000f4 	.word	0x100000f4

00000478 <__mriCore_GetSignalValue>:
     478:	4b01      	ldr	r3, [pc, #4]	; (480 <__mriCore_GetSignalValue+0x8>)
     47a:	f893 0020 	ldrb.w	r0, [r3, #32]
     47e:	4770      	bx	lr
     480:	100000f4 	.word	0x100000f4

00000484 <__mriCore_SetSemihostReturnValues>:
     484:	4b01      	ldr	r3, [pc, #4]	; (48c <__mriCore_SetSemihostReturnValues+0x8>)
     486:	6198      	str	r0, [r3, #24]
     488:	61d9      	str	r1, [r3, #28]
     48a:	4770      	bx	lr
     48c:	100000f4 	.word	0x100000f4

00000490 <__mriCore_GetSemihostReturnCode>:
     490:	4b01      	ldr	r3, [pc, #4]	; (498 <__mriCore_GetSemihostReturnCode+0x8>)
     492:	6998      	ldr	r0, [r3, #24]
     494:	4770      	bx	lr
     496:	bf00      	nop
     498:	100000f4 	.word	0x100000f4

0000049c <__mriCore_GetBuffer>:
     49c:	4800      	ldr	r0, [pc, #0]	; (4a0 <__mriCore_GetBuffer+0x4>)
     49e:	4770      	bx	lr
     4a0:	100000fc 	.word	0x100000fc

000004a4 <__mriCore_GetInitializedBuffer>:
     4a4:	b508      	push	{r3, lr}
     4a6:	f7ff ff7f 	bl	3a8 <__mriCore_InitBuffer>
     4aa:	4801      	ldr	r0, [pc, #4]	; (4b0 <__mriCore_GetInitializedBuffer+0xc>)
     4ac:	bd08      	pop	{r3, pc}
     4ae:	bf00      	nop
     4b0:	100000fc 	.word	0x100000fc

000004b4 <__mriCore_SendPacketToGdb>:
     4b4:	b508      	push	{r3, lr}
     4b6:	480a      	ldr	r0, [pc, #40]	; (4e0 <__mriCore_SendPacketToGdb+0x2c>)
     4b8:	f001 fc50 	bl	1d5c <__mriBuffer_OverrunDetected>
     4bc:	b128      	cbz	r0, 4ca <__mriCore_SendPacketToGdb+0x16>
     4be:	f7ff ff73 	bl	3a8 <__mriCore_InitBuffer>
     4c2:	4807      	ldr	r0, [pc, #28]	; (4e0 <__mriCore_SendPacketToGdb+0x2c>)
     4c4:	4907      	ldr	r1, [pc, #28]	; (4e4 <__mriCore_SendPacketToGdb+0x30>)
     4c6:	f001 fcd3 	bl	1e70 <__mriBuffer_WriteString>
     4ca:	4805      	ldr	r0, [pc, #20]	; (4e0 <__mriCore_SendPacketToGdb+0x2c>)
     4cc:	f001 fc26 	bl	1d1c <__mriBuffer_SetEndOfBuffer>
     4d0:	4805      	ldr	r0, [pc, #20]	; (4e8 <__mriCore_SendPacketToGdb+0x34>)
     4d2:	f100 0108 	add.w	r1, r0, #8
     4d6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
     4da:	f000 b8f9 	b.w	6d0 <__mriPacket_SendToGDB>
     4de:	bf00      	nop
     4e0:	100000fc 	.word	0x100000fc
     4e4:	00003564 	.word	0x00003564
     4e8:	100000f4 	.word	0x100000f4

000004ec <__mriCore_GdbCommandHandlingLoop>:
     4ec:	b510      	push	{r4, lr}
     4ee:	f7ff ff5b 	bl	3a8 <__mriCore_InitBuffer>
     4f2:	4812      	ldr	r0, [pc, #72]	; (53c <__mriCore_GdbCommandHandlingLoop+0x50>)
     4f4:	f100 0108 	add.w	r1, r0, #8
     4f8:	f000 f894 	bl	624 <__mriPacket_GetFromGDB>
     4fc:	4810      	ldr	r0, [pc, #64]	; (540 <__mriCore_GdbCommandHandlingLoop+0x54>)
     4fe:	f001 fc47 	bl	1d90 <__mriBuffer_ReadChar>
     502:	2300      	movs	r3, #0
     504:	4a0f      	ldr	r2, [pc, #60]	; (544 <__mriCore_GdbCommandHandlingLoop+0x58>)
     506:	eb02 01c3 	add.w	r1, r2, r3, lsl #3
     50a:	790c      	ldrb	r4, [r1, #4]
     50c:	4284      	cmp	r4, r0
     50e:	d106      	bne.n	51e <__mriCore_GdbCommandHandlingLoop+0x32>
     510:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
     514:	4780      	blx	r0
     516:	0782      	lsls	r2, r0, #30
     518:	4604      	mov	r4, r0
     51a:	d507      	bpl.n	52c <__mriCore_GdbCommandHandlingLoop+0x40>
     51c:	e008      	b.n	530 <__mriCore_GdbCommandHandlingLoop+0x44>
     51e:	3301      	adds	r3, #1
     520:	2b0c      	cmp	r3, #12
     522:	d1ef      	bne.n	504 <__mriCore_GdbCommandHandlingLoop+0x18>
     524:	4808      	ldr	r0, [pc, #32]	; (548 <__mriCore_GdbCommandHandlingLoop+0x5c>)
     526:	f7ff ff4f 	bl	3c8 <__mriCore_PrepareStringResponse>
     52a:	2400      	movs	r4, #0
     52c:	f7ff ffc2 	bl	4b4 <__mriCore_SendPacketToGdb>
     530:	f004 0401 	and.w	r4, r4, #1
     534:	2c00      	cmp	r4, #0
     536:	d0da      	beq.n	4ee <__mriCore_GdbCommandHandlingLoop+0x2>
     538:	bd10      	pop	{r4, pc}
     53a:	bf00      	nop
     53c:	100000f4 	.word	0x100000f4
     540:	100000fc 	.word	0x100000fc
     544:	00003568 	.word	0x00003568
     548:	000035da 	.word	0x000035da

0000054c <__mriDebugException>:
     54c:	b570      	push	{r4, r5, r6, lr}
     54e:	f7ff ff4f 	bl	3f0 <__mriCore_IsWaitingForGdbToConnect>
     552:	4605      	mov	r5, r0
     554:	f000 fb8a 	bl	c6c <__mriPlatform_IsSingleStepping>
     558:	4606      	mov	r6, r0
     55a:	f000 ff4b 	bl	13f4 <__mriPlatform_CommCausedInterrupt>
     55e:	b130      	cbz	r0, 56e <__mriDebugException+0x22>
     560:	f000 ff24 	bl	13ac <__mriPlatform_CommHasReceiveData>
     564:	b918      	cbnz	r0, 56e <__mriDebugException+0x22>
     566:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     56a:	f000 bf4f 	b.w	140c <__mriPlatform_CommClearInterrupt>
     56e:	f3af 8000 	nop.w
     572:	f7ff ff3d 	bl	3f0 <__mriCore_IsWaitingForGdbToConnect>
     576:	b160      	cbz	r0, 592 <__mriDebugException+0x46>
     578:	f000 ff66 	bl	1448 <__mriPlatform_CommIsWaitingForGdbToConnect>
     57c:	2800      	cmp	r0, #0
     57e:	d1fb      	bne.n	578 <__mriDebugException+0x2c>
     580:	f000 ff1e 	bl	13c0 <__mriPlatform_CommReceiveChar>
     584:	282b      	cmp	r0, #43	; 0x2b
     586:	d004      	beq.n	592 <__mriDebugException+0x46>
     588:	f001 f8ce 	bl	1728 <__mriPlatform_CommWaitForReceiveDataToStop>
     58c:	f000 ff6a 	bl	1464 <__mriPlatform_CommPrepareToWaitForGdbConnection>
     590:	e7f2      	b.n	578 <__mriDebugException+0x2c>
     592:	f000 fde7 	bl	1164 <__mriPlatform_EnteringDebugger>
     596:	f000 fb77 	bl	c88 <__mriPlatform_DetermineCauseOfException>
     59a:	4c13      	ldr	r4, [pc, #76]	; (5e8 <__mriDebugException+0x9c>)
     59c:	2805      	cmp	r0, #5
     59e:	f884 0020 	strb.w	r0, [r4, #32]
     5a2:	d10f      	bne.n	5c4 <__mriDebugException+0x78>
     5a4:	f001 f95c 	bl	1860 <__mriSemihost_IsDebuggeeMakingSemihostCall>
     5a8:	b160      	cbz	r0, 5c4 <__mriDebugException+0x78>
     5aa:	f001 f963 	bl	1874 <__mriSemihost_HandleSemihostRequest>
     5ae:	b148      	cbz	r0, 5c4 <__mriDebugException+0x78>
     5b0:	b946      	cbnz	r6, 5c4 <__mriDebugException+0x78>
     5b2:	f000 fbe3 	bl	d7c <__mriPlatform_LeavingDebugger>
     5b6:	f3af 8000 	nop.w
     5ba:	6961      	ldr	r1, [r4, #20]
     5bc:	f021 0302 	bic.w	r3, r1, #2
     5c0:	6163      	str	r3, [r4, #20]
     5c2:	bd70      	pop	{r4, r5, r6, pc}
     5c4:	b91d      	cbnz	r5, 5ce <__mriDebugException+0x82>
     5c6:	f000 fb93 	bl	cf0 <__mriPlatform_DisplayFaultCauseToGdbConsole>
     5ca:	f002 f969 	bl	28a0 <__mriCmd_Send_T_StopResponse>
     5ce:	f7ff ff8d 	bl	4ec <__mriCore_GdbCommandHandlingLoop>
     5d2:	f000 fbd3 	bl	d7c <__mriPlatform_LeavingDebugger>
     5d6:	f3af 8000 	nop.w
     5da:	4b03      	ldr	r3, [pc, #12]	; (5e8 <__mriDebugException+0x9c>)
     5dc:	695a      	ldr	r2, [r3, #20]
     5de:	f022 0002 	bic.w	r0, r2, #2
     5e2:	6158      	str	r0, [r3, #20]
     5e4:	bd70      	pop	{r4, r5, r6, pc}
     5e6:	bf00      	nop
     5e8:	100000f4 	.word	0x100000f4

000005ec <HexCharToNibble>:
     5ec:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
     5f0:	2b05      	cmp	r3, #5
     5f2:	d801      	bhi.n	5f8 <HexCharToNibble+0xc>
     5f4:	3857      	subs	r0, #87	; 0x57
     5f6:	4770      	bx	lr
     5f8:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
     5fc:	2905      	cmp	r1, #5
     5fe:	d801      	bhi.n	604 <HexCharToNibble+0x18>
     600:	3837      	subs	r0, #55	; 0x37
     602:	4770      	bx	lr
     604:	3830      	subs	r0, #48	; 0x30
     606:	b2c2      	uxtb	r2, r0
     608:	2a09      	cmp	r2, #9
     60a:	d907      	bls.n	61c <HexCharToNibble+0x30>
     60c:	4804      	ldr	r0, [pc, #16]	; (620 <HexCharToNibble+0x34>)
     60e:	6803      	ldr	r3, [r0, #0]
     610:	2b02      	cmp	r3, #2
     612:	bfb8      	it	lt
     614:	2302      	movlt	r3, #2
     616:	6003      	str	r3, [r0, #0]
     618:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     61c:	4770      	bx	lr
     61e:	bf00      	nop
     620:	1000014c 	.word	0x1000014c

00000624 <__mriPacket_GetFromGDB>:
     624:	b538      	push	{r3, r4, r5, lr}
     626:	2208      	movs	r2, #8
     628:	4604      	mov	r4, r0
     62a:	460d      	mov	r5, r1
     62c:	2100      	movs	r1, #0
     62e:	f002 ff3a 	bl	34a6 <memset>
     632:	6025      	str	r5, [r4, #0]
     634:	7925      	ldrb	r5, [r4, #4]
     636:	2d24      	cmp	r5, #36	; 0x24
     638:	d004      	beq.n	644 <__mriPacket_GetFromGDB+0x20>
     63a:	f000 fec1 	bl	13c0 <__mriPlatform_CommReceiveChar>
     63e:	b2c5      	uxtb	r5, r0
     640:	7125      	strb	r5, [r4, #4]
     642:	e7f8      	b.n	636 <__mriPacket_GetFromGDB+0x12>
     644:	6820      	ldr	r0, [r4, #0]
     646:	f001 fb66 	bl	1d16 <__mriBuffer_Reset>
     64a:	2300      	movs	r3, #0
     64c:	7163      	strb	r3, [r4, #5]
     64e:	f000 feb7 	bl	13c0 <__mriPlatform_CommReceiveChar>
     652:	b2c5      	uxtb	r5, r0
     654:	7125      	strb	r5, [r4, #4]
     656:	6820      	ldr	r0, [r4, #0]
     658:	f001 fb63 	bl	1d22 <__mriBuffer_BytesLeft>
     65c:	b158      	cbz	r0, 676 <__mriPacket_GetFromGDB+0x52>
     65e:	2d24      	cmp	r5, #36	; 0x24
     660:	d0e8      	beq.n	634 <__mriPacket_GetFromGDB+0x10>
     662:	2d23      	cmp	r5, #35	; 0x23
     664:	d009      	beq.n	67a <__mriPacket_GetFromGDB+0x56>
     666:	7962      	ldrb	r2, [r4, #5]
     668:	6820      	ldr	r0, [r4, #0]
     66a:	18a9      	adds	r1, r5, r2
     66c:	7161      	strb	r1, [r4, #5]
     66e:	4629      	mov	r1, r5
     670:	f001 fb7c 	bl	1d6c <__mriBuffer_WriteChar>
     674:	e7eb      	b.n	64e <__mriPacket_GetFromGDB+0x2a>
     676:	2d23      	cmp	r5, #35	; 0x23
     678:	d1dc      	bne.n	634 <__mriPacket_GetFromGDB+0x10>
     67a:	f000 fea1 	bl	13c0 <__mriPlatform_CommReceiveChar>
     67e:	b2c0      	uxtb	r0, r0
     680:	7120      	strb	r0, [r4, #4]
     682:	f7ff ffb3 	bl	5ec <HexCharToNibble>
     686:	4605      	mov	r5, r0
     688:	f000 fe9a 	bl	13c0 <__mriPlatform_CommReceiveChar>
     68c:	b2c0      	uxtb	r0, r0
     68e:	7120      	strb	r0, [r4, #4]
     690:	f7ff ffac 	bl	5ec <HexCharToNibble>
     694:	b2ed      	uxtb	r5, r5
     696:	ea40 1005 	orr.w	r0, r0, r5, lsl #4
     69a:	71a0      	strb	r0, [r4, #6]
     69c:	f000 fe86 	bl	13ac <__mriPlatform_CommHasReceiveData>
     6a0:	2800      	cmp	r0, #0
     6a2:	d1c7      	bne.n	634 <__mriPacket_GetFromGDB+0x10>
     6a4:	79a2      	ldrb	r2, [r4, #6]
     6a6:	7961      	ldrb	r1, [r4, #5]
     6a8:	428a      	cmp	r2, r1
     6aa:	d001      	beq.n	6b0 <__mriPacket_GetFromGDB+0x8c>
     6ac:	202d      	movs	r0, #45	; 0x2d
     6ae:	e000      	b.n	6b2 <__mriPacket_GetFromGDB+0x8e>
     6b0:	202b      	movs	r0, #43	; 0x2b
     6b2:	f000 fe91 	bl	13d8 <__mriPlatform_CommSendChar>
     6b6:	79a0      	ldrb	r0, [r4, #6]
     6b8:	7963      	ldrb	r3, [r4, #5]
     6ba:	4298      	cmp	r0, r3
     6bc:	d1ba      	bne.n	634 <__mriPacket_GetFromGDB+0x10>
     6be:	6820      	ldr	r0, [r4, #0]
     6c0:	f001 fb2c 	bl	1d1c <__mriBuffer_SetEndOfBuffer>
     6c4:	6820      	ldr	r0, [r4, #0]
     6c6:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
     6ca:	f001 bb24 	b.w	1d16 <__mriBuffer_Reset>
	...

000006d0 <__mriPacket_SendToGDB>:
     6d0:	b570      	push	{r4, r5, r6, lr}
     6d2:	2208      	movs	r2, #8
     6d4:	4604      	mov	r4, r0
     6d6:	460d      	mov	r5, r1
     6d8:	2100      	movs	r1, #0
     6da:	f002 fee4 	bl	34a6 <memset>
     6de:	6025      	str	r5, [r4, #0]
     6e0:	6820      	ldr	r0, [r4, #0]
     6e2:	f001 fb18 	bl	1d16 <__mriBuffer_Reset>
     6e6:	2300      	movs	r3, #0
     6e8:	7163      	strb	r3, [r4, #5]
     6ea:	2024      	movs	r0, #36	; 0x24
     6ec:	f000 fe74 	bl	13d8 <__mriPlatform_CommSendChar>
     6f0:	6820      	ldr	r0, [r4, #0]
     6f2:	f001 fb16 	bl	1d22 <__mriBuffer_BytesLeft>
     6f6:	b148      	cbz	r0, 70c <__mriPacket_SendToGDB+0x3c>
     6f8:	6820      	ldr	r0, [r4, #0]
     6fa:	f001 fb49 	bl	1d90 <__mriBuffer_ReadChar>
     6fe:	4605      	mov	r5, r0
     700:	f000 fe6a 	bl	13d8 <__mriPlatform_CommSendChar>
     704:	7963      	ldrb	r3, [r4, #5]
     706:	18ee      	adds	r6, r5, r3
     708:	7166      	strb	r6, [r4, #5]
     70a:	e7f1      	b.n	6f0 <__mriPacket_SendToGDB+0x20>
     70c:	2023      	movs	r0, #35	; 0x23
     70e:	f000 fe63 	bl	13d8 <__mriPlatform_CommSendChar>
     712:	7966      	ldrb	r6, [r4, #5]
     714:	4d0a      	ldr	r5, [pc, #40]	; (740 <__mriPacket_SendToGDB+0x70>)
     716:	0930      	lsrs	r0, r6, #4
     718:	5c28      	ldrb	r0, [r5, r0]
     71a:	f006 060f 	and.w	r6, r6, #15
     71e:	f000 fe5b 	bl	13d8 <__mriPlatform_CommSendChar>
     722:	5da8      	ldrb	r0, [r5, r6]
     724:	f000 fe58 	bl	13d8 <__mriPlatform_CommSendChar>
     728:	f000 fe4a 	bl	13c0 <__mriPlatform_CommReceiveChar>
     72c:	b2c1      	uxtb	r1, r0
     72e:	2903      	cmp	r1, #3
     730:	7120      	strb	r0, [r4, #4]
     732:	d0f9      	beq.n	728 <__mriPacket_SendToGDB+0x58>
     734:	b2ca      	uxtb	r2, r1
     736:	2a2b      	cmp	r2, #43	; 0x2b
     738:	d001      	beq.n	73e <__mriPacket_SendToGDB+0x6e>
     73a:	2a24      	cmp	r2, #36	; 0x24
     73c:	d1d0      	bne.n	6e0 <__mriPacket_SendToGDB+0x10>
     73e:	bd70      	pop	{r4, r5, r6, pc}
     740:	000035c8 	.word	0x000035c8

00000744 <clearTokenObject>:
     744:	b510      	push	{r4, lr}
     746:	2100      	movs	r1, #0
     748:	2228      	movs	r2, #40	; 0x28
     74a:	4604      	mov	r4, r0
     74c:	f002 feab 	bl	34a6 <memset>
     750:	2300      	movs	r3, #0
     752:	62e3      	str	r3, [r4, #44]	; 0x2c
     754:	f884 3030 	strb.w	r3, [r4, #48]	; 0x30
     758:	bd10      	pop	{r4, pc}
	...

0000075c <__mriToken_Init>:
     75c:	b510      	push	{r4, lr}
     75e:	4604      	mov	r4, r0
     760:	f7ff fff0 	bl	744 <clearTokenObject>
     764:	4b01      	ldr	r3, [pc, #4]	; (76c <__mriToken_Init+0x10>)
     766:	62a3      	str	r3, [r4, #40]	; 0x28
     768:	bd10      	pop	{r4, pc}
     76a:	bf00      	nop
     76c:	000035d8 	.word	0x000035d8

00000770 <__mriToken_SplitString>:
     770:	4b2b      	ldr	r3, [pc, #172]	; (820 <Heap_Size+0x20>)
     772:	b570      	push	{r4, r5, r6, lr}
     774:	2200      	movs	r2, #0
     776:	4604      	mov	r4, r0
     778:	460d      	mov	r5, r1
     77a:	601a      	str	r2, [r3, #0]
     77c:	f7ff ffe2 	bl	744 <clearTokenObject>
     780:	f104 0330 	add.w	r3, r4, #48	; 0x30
     784:	4629      	mov	r1, r5
     786:	461a      	mov	r2, r3
     788:	f105 0640 	add.w	r6, r5, #64	; 0x40
     78c:	4608      	mov	r0, r1
     78e:	f811 5b01 	ldrb.w	r5, [r1], #1
     792:	b125      	cbz	r5, 79e <__mriToken_SplitString+0x2e>
     794:	42b1      	cmp	r1, r6
     796:	f802 5b01 	strb.w	r5, [r2], #1
     79a:	4608      	mov	r0, r1
     79c:	d1f6      	bne.n	78c <__mriToken_SplitString+0x1c>
     79e:	2100      	movs	r1, #0
     7a0:	7011      	strb	r1, [r2, #0]
     7a2:	7800      	ldrb	r0, [r0, #0]
     7a4:	4a1e      	ldr	r2, [pc, #120]	; (820 <Heap_Size+0x20>)
     7a6:	b120      	cbz	r0, 7b2 <__mriToken_SplitString+0x42>
     7a8:	6811      	ldr	r1, [r2, #0]
     7aa:	2901      	cmp	r1, #1
     7ac:	bfb8      	it	lt
     7ae:	2101      	movlt	r1, #1
     7b0:	6011      	str	r1, [r2, #0]
     7b2:	6810      	ldr	r0, [r2, #0]
     7b4:	2800      	cmp	r0, #0
     7b6:	d132      	bne.n	81e <Heap_Size+0x1e>
     7b8:	781a      	ldrb	r2, [r3, #0]
     7ba:	2a00      	cmp	r2, #0
     7bc:	d02f      	beq.n	81e <Heap_Size+0x1e>
     7be:	461a      	mov	r2, r3
     7c0:	f813 5b01 	ldrb.w	r5, [r3], #1
     7c4:	b92d      	cbnz	r5, 7d2 <__mriToken_SplitString+0x62>
     7c6:	4b16      	ldr	r3, [pc, #88]	; (820 <Heap_Size+0x20>)
     7c8:	2000      	movs	r0, #0
     7ca:	6018      	str	r0, [r3, #0]
     7cc:	7811      	ldrb	r1, [r2, #0]
     7ce:	b949      	cbnz	r1, 7e4 <__mriToken_SplitString+0x74>
     7d0:	e012      	b.n	7f8 <__mriToken_SplitString+0x88>
     7d2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     7d4:	1e48      	subs	r0, r1, #1
     7d6:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     7da:	2900      	cmp	r1, #0
     7dc:	d0f3      	beq.n	7c6 <__mriToken_SplitString+0x56>
     7de:	428d      	cmp	r5, r1
     7e0:	d1f9      	bne.n	7d6 <__mriToken_SplitString+0x66>
     7e2:	e7ec      	b.n	7be <__mriToken_SplitString+0x4e>
     7e4:	6ae0      	ldr	r0, [r4, #44]	; 0x2c
     7e6:	2809      	cmp	r0, #9
     7e8:	d902      	bls.n	7f0 <__mriToken_SplitString+0x80>
     7ea:	2001      	movs	r0, #1
     7ec:	6018      	str	r0, [r3, #0]
     7ee:	e003      	b.n	7f8 <__mriToken_SplitString+0x88>
     7f0:	1c41      	adds	r1, r0, #1
     7f2:	f844 2020 	str.w	r2, [r4, r0, lsl #2]
     7f6:	62e1      	str	r1, [r4, #44]	; 0x2c
     7f8:	681b      	ldr	r3, [r3, #0]
     7fa:	b983      	cbnz	r3, 81e <Heap_Size+0x1e>
     7fc:	4613      	mov	r3, r2
     7fe:	f812 5b01 	ldrb.w	r5, [r2], #1
     802:	2d00      	cmp	r5, #0
     804:	d0d8      	beq.n	7b8 <__mriToken_SplitString+0x48>
     806:	6aa1      	ldr	r1, [r4, #40]	; 0x28
     808:	1e48      	subs	r0, r1, #1
     80a:	f810 1f01 	ldrb.w	r1, [r0, #1]!
     80e:	2900      	cmp	r1, #0
     810:	d0f4      	beq.n	7fc <__mriToken_SplitString+0x8c>
     812:	428d      	cmp	r5, r1
     814:	d1f9      	bne.n	80a <Heap_Size+0xa>
     816:	2100      	movs	r1, #0
     818:	f803 1b01 	strb.w	r1, [r3], #1
     81c:	e7cc      	b.n	7b8 <__mriToken_SplitString+0x48>
     81e:	bd70      	pop	{r4, r5, r6, pc}
     820:	1000014c 	.word	0x1000014c

00000824 <__mriToken_MatchingString>:
     824:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     828:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     82a:	4606      	mov	r6, r0
     82c:	4688      	mov	r8, r1
     82e:	2400      	movs	r4, #0
     830:	42bc      	cmp	r4, r7
     832:	d008      	beq.n	846 <__mriToken_MatchingString+0x22>
     834:	f856 5024 	ldr.w	r5, [r6, r4, lsl #2]
     838:	4641      	mov	r1, r8
     83a:	4628      	mov	r0, r5
     83c:	f002 fe3b 	bl	34b6 <strcmp>
     840:	b110      	cbz	r0, 848 <__mriToken_MatchingString+0x24>
     842:	3401      	adds	r4, #1
     844:	e7f4      	b.n	830 <__mriToken_MatchingString+0xc>
     846:	2500      	movs	r5, #0
     848:	4628      	mov	r0, r5
     84a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0000084e <__mriToken_MatchingStringPrefix>:
     84e:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
     852:	6ac7      	ldr	r7, [r0, #44]	; 0x2c
     854:	4606      	mov	r6, r0
     856:	4688      	mov	r8, r1
     858:	2500      	movs	r5, #0
     85a:	42bd      	cmp	r5, r7
     85c:	d009      	beq.n	872 <__mriToken_MatchingStringPrefix+0x24>
     85e:	f856 4025 	ldr.w	r4, [r6, r5, lsl #2]
     862:	4641      	mov	r1, r8
     864:	4620      	mov	r0, r4
     866:	f002 fe50 	bl	350a <strstr>
     86a:	4284      	cmp	r4, r0
     86c:	d002      	beq.n	874 <__mriToken_MatchingStringPrefix+0x26>
     86e:	3501      	adds	r5, #1
     870:	e7f3      	b.n	85a <__mriToken_MatchingStringPrefix+0xc>
     872:	2400      	movs	r4, #0
     874:	4620      	mov	r0, r4
     876:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

0000087c <findDWTComparator>:
     87c:	4b12      	ldr	r3, [pc, #72]	; (8c8 <findDWTComparator+0x4c>)
     87e:	b5f0      	push	{r4, r5, r6, r7, lr}
     880:	681f      	ldr	r7, [r3, #0]
     882:	4606      	mov	r6, r0
     884:	0f3f      	lsrs	r7, r7, #28
     886:	2300      	movs	r3, #0
     888:	f103 6060 	add.w	r0, r3, #234881024	; 0xe000000
     88c:	f500 7081 	add.w	r0, r0, #258	; 0x102
     890:	0100      	lsls	r0, r0, #4
     892:	42bb      	cmp	r3, r7
     894:	d013      	beq.n	8be <findDWTComparator+0x42>
     896:	6885      	ldr	r5, [r0, #8]
     898:	4c0c      	ldr	r4, [pc, #48]	; (8cc <findDWTComparator+0x50>)
     89a:	402c      	ands	r4, r5
     89c:	4294      	cmp	r4, r2
     89e:	d110      	bne.n	8c2 <findDWTComparator+0x46>
     8a0:	6804      	ldr	r4, [r0, #0]
     8a2:	42b4      	cmp	r4, r6
     8a4:	d10d      	bne.n	8c2 <findDWTComparator+0x46>
     8a6:	f8d0 c004 	ldr.w	r12, [r0, #4]
     8aa:	460d      	mov	r5, r1
     8ac:	2400      	movs	r4, #0
     8ae:	2d01      	cmp	r5, #1
     8b0:	d902      	bls.n	8b8 <findDWTComparator+0x3c>
     8b2:	086d      	lsrs	r5, r5, #1
     8b4:	3401      	adds	r4, #1
     8b6:	e7fa      	b.n	8ae <findDWTComparator+0x32>
     8b8:	45a4      	cmp	r12, r4
     8ba:	d102      	bne.n	8c2 <findDWTComparator+0x46>
     8bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8be:	2000      	movs	r0, #0
     8c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
     8c2:	3301      	adds	r3, #1
     8c4:	e7e0      	b.n	888 <findDWTComparator+0xc>
     8c6:	bf00      	nop
     8c8:	e0001000 	.word	0xe0001000
     8cc:	000ffdaf 	.word	0x000ffdaf

000008d0 <getFPBCodeComparatorCount>:
     8d0:	4b04      	ldr	r3, [pc, #16]	; (8e4 <getFPBCodeComparatorCount+0x14>)
     8d2:	6819      	ldr	r1, [r3, #0]
     8d4:	f3c1 1003 	ubfx	r0, r1, #4, #4
     8d8:	f401 42e0 	and.w	r2, r1, #28672	; 0x7000
     8dc:	ea40 2012 	orr.w	r0, r0, r2, lsr #8
     8e0:	4770      	bx	lr
     8e2:	bf00      	nop
     8e4:	e0002000 	.word	0xe0002000

000008e8 <prepareToAccessMPURegion>:
     8e8:	4b05      	ldr	r3, [pc, #20]	; (900 <prepareToAccessMPURegion+0x18>)
     8ea:	681a      	ldr	r2, [r3, #0]
     8ec:	f3c2 2107 	ubfx	r1, r2, #8, #8
     8f0:	4288      	cmp	r0, r1
     8f2:	d202      	bcs.n	8fa <prepareToAccessMPURegion+0x12>
     8f4:	6098      	str	r0, [r3, #8]
     8f6:	2001      	movs	r0, #1
     8f8:	4770      	bx	lr
     8fa:	2000      	movs	r0, #0
     8fc:	4770      	bx	lr
     8fe:	bf00      	nop
     900:	e000ed90 	.word	0xe000ed90

00000904 <displayMemFaultCauseToGdbConsole>:
     904:	b570      	push	{r4, r5, r6, lr}
     906:	4d1e      	ldr	r5, [pc, #120]	; (980 <displayMemFaultCauseToGdbConsole+0x7c>)
     908:	6aac      	ldr	r4, [r5, #40]	; 0x28
     90a:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     90e:	d035      	beq.n	97c <displayMemFaultCauseToGdbConsole+0x78>
     910:	481c      	ldr	r0, [pc, #112]	; (984 <displayMemFaultCauseToGdbConsole+0x80>)
     912:	f002 f804 	bl	291e <__mriGdbConsole_WriteString>
     916:	481c      	ldr	r0, [pc, #112]	; (988 <displayMemFaultCauseToGdbConsole+0x84>)
     918:	f002 f801 	bl	291e <__mriGdbConsole_WriteString>
     91c:	4630      	mov	r0, r6
     91e:	f002 f825 	bl	296c <__mriGdbConsole_WriteHexValue>
     922:	0622      	lsls	r2, r4, #24
     924:	d505      	bpl.n	932 <displayMemFaultCauseToGdbConsole+0x2e>
     926:	4819      	ldr	r0, [pc, #100]	; (98c <displayMemFaultCauseToGdbConsole+0x88>)
     928:	f001 fff9 	bl	291e <__mriGdbConsole_WriteString>
     92c:	6b68      	ldr	r0, [r5, #52]	; 0x34
     92e:	f002 f81d 	bl	296c <__mriGdbConsole_WriteHexValue>
     932:	06a3      	lsls	r3, r4, #26
     934:	d502      	bpl.n	93c <displayMemFaultCauseToGdbConsole+0x38>
     936:	4816      	ldr	r0, [pc, #88]	; (990 <displayMemFaultCauseToGdbConsole+0x8c>)
     938:	f001 fff1 	bl	291e <__mriGdbConsole_WriteString>
     93c:	06e0      	lsls	r0, r4, #27
     93e:	d507      	bpl.n	950 <displayMemFaultCauseToGdbConsole+0x4c>
     940:	4814      	ldr	r0, [pc, #80]	; (994 <displayMemFaultCauseToGdbConsole+0x90>)
     942:	f001 ffec 	bl	291e <__mriGdbConsole_WriteString>
     946:	4b14      	ldr	r3, [pc, #80]	; (998 <displayMemFaultCauseToGdbConsole+0x94>)
     948:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     94c:	f002 f80e 	bl	296c <__mriGdbConsole_WriteHexValue>
     950:	0721      	lsls	r1, r4, #28
     952:	d507      	bpl.n	964 <displayMemFaultCauseToGdbConsole+0x60>
     954:	4811      	ldr	r0, [pc, #68]	; (99c <displayMemFaultCauseToGdbConsole+0x98>)
     956:	f001 ffe2 	bl	291e <__mriGdbConsole_WriteString>
     95a:	480f      	ldr	r0, [pc, #60]	; (998 <displayMemFaultCauseToGdbConsole+0x94>)
     95c:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     960:	f002 f804 	bl	296c <__mriGdbConsole_WriteHexValue>
     964:	07a2      	lsls	r2, r4, #30
     966:	d502      	bpl.n	96e <displayMemFaultCauseToGdbConsole+0x6a>
     968:	480d      	ldr	r0, [pc, #52]	; (9a0 <displayMemFaultCauseToGdbConsole+0x9c>)
     96a:	f001 ffd8 	bl	291e <__mriGdbConsole_WriteString>
     96e:	07e3      	lsls	r3, r4, #31
     970:	d504      	bpl.n	97c <displayMemFaultCauseToGdbConsole+0x78>
     972:	480c      	ldr	r0, [pc, #48]	; (9a4 <displayMemFaultCauseToGdbConsole+0xa0>)
     974:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     978:	f001 bfd1 	b.w	291e <__mriGdbConsole_WriteString>
     97c:	bd70      	pop	{r4, r5, r6, pc}
     97e:	bf00      	nop
     980:	e000ed00 	.word	0xe000ed00
     984:	000038bb 	.word	0x000038bb
     988:	000038ca 	.word	0x000038ca
     98c:	000038df 	.word	0x000038df
     990:	000038f4 	.word	0x000038f4
     994:	0000390e 	.word	0x0000390e
     998:	10000150 	.word	0x10000150
     99c:	0000392b 	.word	0x0000392b
     9a0:	0000394a 	.word	0x0000394a
     9a4:	0000395b 	.word	0x0000395b

000009a8 <displayBusFaultCauseToGdbConsole>:
     9a8:	b570      	push	{r4, r5, r6, lr}
     9aa:	4d21      	ldr	r5, [pc, #132]	; (a30 <displayBusFaultCauseToGdbConsole+0x88>)
     9ac:	6aac      	ldr	r4, [r5, #40]	; 0x28
     9ae:	0a24      	lsrs	r4, r4, #8
     9b0:	f014 06ff 	ands.w	r6, r4, #255	; 0xff
     9b4:	d03a      	beq.n	a2c <displayBusFaultCauseToGdbConsole+0x84>
     9b6:	481f      	ldr	r0, [pc, #124]	; (a34 <displayBusFaultCauseToGdbConsole+0x8c>)
     9b8:	f001 ffb1 	bl	291e <__mriGdbConsole_WriteString>
     9bc:	481e      	ldr	r0, [pc, #120]	; (a38 <displayBusFaultCauseToGdbConsole+0x90>)
     9be:	f001 ffae 	bl	291e <__mriGdbConsole_WriteString>
     9c2:	4630      	mov	r0, r6
     9c4:	f001 ffd2 	bl	296c <__mriGdbConsole_WriteHexValue>
     9c8:	0623      	lsls	r3, r4, #24
     9ca:	d505      	bpl.n	9d8 <displayBusFaultCauseToGdbConsole+0x30>
     9cc:	481b      	ldr	r0, [pc, #108]	; (a3c <displayBusFaultCauseToGdbConsole+0x94>)
     9ce:	f001 ffa6 	bl	291e <__mriGdbConsole_WriteString>
     9d2:	6ba8      	ldr	r0, [r5, #56]	; 0x38
     9d4:	f001 ffca 	bl	296c <__mriGdbConsole_WriteHexValue>
     9d8:	06a0      	lsls	r0, r4, #26
     9da:	d502      	bpl.n	9e2 <displayBusFaultCauseToGdbConsole+0x3a>
     9dc:	4818      	ldr	r0, [pc, #96]	; (a40 <displayBusFaultCauseToGdbConsole+0x98>)
     9de:	f001 ff9e 	bl	291e <__mriGdbConsole_WriteString>
     9e2:	06e1      	lsls	r1, r4, #27
     9e4:	d507      	bpl.n	9f6 <displayBusFaultCauseToGdbConsole+0x4e>
     9e6:	4817      	ldr	r0, [pc, #92]	; (a44 <displayBusFaultCauseToGdbConsole+0x9c>)
     9e8:	f001 ff99 	bl	291e <__mriGdbConsole_WriteString>
     9ec:	4b16      	ldr	r3, [pc, #88]	; (a48 <displayBusFaultCauseToGdbConsole+0xa0>)
     9ee:	f8d3 0208 	ldr.w	r0, [r3, #520]	; 0x208
     9f2:	f001 ffbb 	bl	296c <__mriGdbConsole_WriteHexValue>
     9f6:	0722      	lsls	r2, r4, #28
     9f8:	d507      	bpl.n	a0a <displayBusFaultCauseToGdbConsole+0x62>
     9fa:	4814      	ldr	r0, [pc, #80]	; (a4c <displayBusFaultCauseToGdbConsole+0xa4>)
     9fc:	f001 ff8f 	bl	291e <__mriGdbConsole_WriteString>
     a00:	4811      	ldr	r0, [pc, #68]	; (a48 <displayBusFaultCauseToGdbConsole+0xa0>)
     a02:	f8d0 0208 	ldr.w	r0, [r0, #520]	; 0x208
     a06:	f001 ffb1 	bl	296c <__mriGdbConsole_WriteHexValue>
     a0a:	0763      	lsls	r3, r4, #29
     a0c:	d502      	bpl.n	a14 <displayBusFaultCauseToGdbConsole+0x6c>
     a0e:	4810      	ldr	r0, [pc, #64]	; (a50 <displayBusFaultCauseToGdbConsole+0xa8>)
     a10:	f001 ff85 	bl	291e <__mriGdbConsole_WriteString>
     a14:	07a0      	lsls	r0, r4, #30
     a16:	d502      	bpl.n	a1e <displayBusFaultCauseToGdbConsole+0x76>
     a18:	480e      	ldr	r0, [pc, #56]	; (a54 <displayBusFaultCauseToGdbConsole+0xac>)
     a1a:	f001 ff80 	bl	291e <__mriGdbConsole_WriteString>
     a1e:	07e1      	lsls	r1, r4, #31
     a20:	d504      	bpl.n	a2c <displayBusFaultCauseToGdbConsole+0x84>
     a22:	480d      	ldr	r0, [pc, #52]	; (a58 <displayBusFaultCauseToGdbConsole+0xb0>)
     a24:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
     a28:	f001 bf79 	b.w	291e <__mriGdbConsole_WriteString>
     a2c:	bd70      	pop	{r4, r5, r6, pc}
     a2e:	bf00      	nop
     a30:	e000ed00 	.word	0xe000ed00
     a34:	00003972 	.word	0x00003972
     a38:	000038ca 	.word	0x000038ca
     a3c:	000038df 	.word	0x000038df
     a40:	000038f4 	.word	0x000038f4
     a44:	0000390e 	.word	0x0000390e
     a48:	10000150 	.word	0x10000150
     a4c:	0000392b 	.word	0x0000392b
     a50:	00003981 	.word	0x00003981
     a54:	0000399c 	.word	0x0000399c
     a58:	000039b5 	.word	0x000039b5

00000a5c <displayUsageFaultCauseToGdbConsole>:
     a5c:	4b17      	ldr	r3, [pc, #92]	; (abc <displayUsageFaultCauseToGdbConsole+0x60>)
     a5e:	b510      	push	{r4, lr}
     a60:	6a9c      	ldr	r4, [r3, #40]	; 0x28
     a62:	0c24      	lsrs	r4, r4, #16
     a64:	d028      	beq.n	ab8 <displayUsageFaultCauseToGdbConsole+0x5c>
     a66:	4816      	ldr	r0, [pc, #88]	; (ac0 <displayUsageFaultCauseToGdbConsole+0x64>)
     a68:	f001 ff59 	bl	291e <__mriGdbConsole_WriteString>
     a6c:	4815      	ldr	r0, [pc, #84]	; (ac4 <displayUsageFaultCauseToGdbConsole+0x68>)
     a6e:	f001 ff56 	bl	291e <__mriGdbConsole_WriteString>
     a72:	4620      	mov	r0, r4
     a74:	f001 ff7a 	bl	296c <__mriGdbConsole_WriteHexValue>
     a78:	05a1      	lsls	r1, r4, #22
     a7a:	d502      	bpl.n	a82 <displayUsageFaultCauseToGdbConsole+0x26>
     a7c:	4812      	ldr	r0, [pc, #72]	; (ac8 <displayUsageFaultCauseToGdbConsole+0x6c>)
     a7e:	f001 ff4e 	bl	291e <__mriGdbConsole_WriteString>
     a82:	05e2      	lsls	r2, r4, #23
     a84:	d502      	bpl.n	a8c <displayUsageFaultCauseToGdbConsole+0x30>
     a86:	4811      	ldr	r0, [pc, #68]	; (acc <displayUsageFaultCauseToGdbConsole+0x70>)
     a88:	f001 ff49 	bl	291e <__mriGdbConsole_WriteString>
     a8c:	0723      	lsls	r3, r4, #28
     a8e:	d502      	bpl.n	a96 <displayUsageFaultCauseToGdbConsole+0x3a>
     a90:	480f      	ldr	r0, [pc, #60]	; (ad0 <displayUsageFaultCauseToGdbConsole+0x74>)
     a92:	f001 ff44 	bl	291e <__mriGdbConsole_WriteString>
     a96:	0760      	lsls	r0, r4, #29
     a98:	d502      	bpl.n	aa0 <displayUsageFaultCauseToGdbConsole+0x44>
     a9a:	480e      	ldr	r0, [pc, #56]	; (ad4 <displayUsageFaultCauseToGdbConsole+0x78>)
     a9c:	f001 ff3f 	bl	291e <__mriGdbConsole_WriteString>
     aa0:	07a1      	lsls	r1, r4, #30
     aa2:	d502      	bpl.n	aaa <displayUsageFaultCauseToGdbConsole+0x4e>
     aa4:	480c      	ldr	r0, [pc, #48]	; (ad8 <displayUsageFaultCauseToGdbConsole+0x7c>)
     aa6:	f001 ff3a 	bl	291e <__mriGdbConsole_WriteString>
     aaa:	07e2      	lsls	r2, r4, #31
     aac:	d504      	bpl.n	ab8 <displayUsageFaultCauseToGdbConsole+0x5c>
     aae:	480b      	ldr	r0, [pc, #44]	; (adc <displayUsageFaultCauseToGdbConsole+0x80>)
     ab0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     ab4:	f001 bf33 	b.w	291e <__mriGdbConsole_WriteString>
     ab8:	bd10      	pop	{r4, pc}
     aba:	bf00      	nop
     abc:	e000ed00 	.word	0xe000ed00
     ac0:	000039cf 	.word	0x000039cf
     ac4:	000038ca 	.word	0x000038ca
     ac8:	000039e0 	.word	0x000039e0
     acc:	000039f4 	.word	0x000039f4
     ad0:	00003a0a 	.word	0x00003a0a
     ad4:	00003a22 	.word	0x00003a22
     ad8:	00003a46 	.word	0x00003a46
     adc:	00003a59 	.word	0x00003a59

00000ae0 <calculateFPBComparatorValue>:
     ae0:	4b0c      	ldr	r3, [pc, #48]	; (b14 <calculateFPBComparatorValue+0x34>)
     ae2:	4003      	ands	r3, r0
     ae4:	b113      	cbz	r3, aec <calculateFPBComparatorValue+0xc>
     ae6:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
     aea:	4770      	bx	lr
     aec:	f020 4260 	bic.w	r2, r0, #3758096384	; 0xe0000000
     af0:	f022 0303 	bic.w	r3, r2, #3
     af4:	f043 0201 	orr.w	r2, r3, #1
     af8:	b939      	cbnz	r1, b0a <calculateFPBComparatorValue+0x2a>
     afa:	f010 0f02 	tst.w	r0, #2
     afe:	bf0c      	ite	eq
     b00:	f04f 4080 	moveq.w	r0, #1073741824	; 0x40000000
     b04:	f04f 4000 	movne.w	r0, #2147483648	; 0x80000000
     b08:	e001      	b.n	b0e <calculateFPBComparatorValue+0x2e>
     b0a:	f04f 4040 	mov.w	r0, #3221225472	; 0xc0000000
     b0e:	4310      	orrs	r0, r2
     b10:	4770      	bx	lr
     b12:	bf00      	nop
     b14:	e0000001 	.word	0xe0000001

00000b18 <findFPBBreakpointComparator>:
     b18:	b538      	push	{r3, r4, r5, lr}
     b1a:	f7ff ffe1 	bl	ae0 <calculateFPBComparatorValue>
     b1e:	4604      	mov	r4, r0
     b20:	f7ff fed6 	bl	8d0 <getFPBCodeComparatorCount>
     b24:	4a08      	ldr	r2, [pc, #32]	; (b48 <findFPBBreakpointComparator+0x30>)
     b26:	2300      	movs	r3, #0
     b28:	4283      	cmp	r3, r0
     b2a:	4611      	mov	r1, r2
     b2c:	d009      	beq.n	b42 <findFPBBreakpointComparator+0x2a>
     b2e:	f852 5b04 	ldr.w	r5, [r2], #4
     b32:	f025 5500 	bic.w	r5, r5, #536870912	; 0x20000000
     b36:	f025 0502 	bic.w	r5, r5, #2
     b3a:	42ac      	cmp	r4, r5
     b3c:	d002      	beq.n	b44 <findFPBBreakpointComparator+0x2c>
     b3e:	3301      	adds	r3, #1
     b40:	e7f2      	b.n	b28 <findFPBBreakpointComparator+0x10>
     b42:	2100      	movs	r1, #0
     b44:	4608      	mov	r0, r1
     b46:	bd38      	pop	{r3, r4, r5, pc}
     b48:	e0002008 	.word	0xe0002008

00000b4c <isMPUNotPresent>:
     b4c:	4b04      	ldr	r3, [pc, #16]	; (b60 <isMPUNotPresent+0x14>)
     b4e:	6818      	ldr	r0, [r3, #0]
     b50:	f3c0 2107 	ubfx	r1, r0, #8, #8
     b54:	f1d1 0001 	rsbs	r0, r1, #1
     b58:	bf38      	it	cc
     b5a:	2000      	movcc	r0, #0
     b5c:	4770      	bx	lr
     b5e:	bf00      	nop
     b60:	e000ed90 	.word	0xe000ed90

00000b64 <sendRegisterForTResponse>:
     b64:	b573      	push	{r0, r1, r4, r5, r6, lr}
     b66:	4604      	mov	r4, r0
     b68:	ad02      	add	r5, sp, #8
     b6a:	f845 2d04 	str.w	r2, [r5, #-4]!
     b6e:	f001 f923 	bl	1db8 <__mriBuffer_WriteByteAsHex>
     b72:	4620      	mov	r0, r4
     b74:	213a      	movs	r1, #58	; 0x3a
     b76:	f001 f8f9 	bl	1d6c <__mriBuffer_WriteChar>
     b7a:	3d01      	subs	r5, #1
     b7c:	f10d 0607 	add.w	r6, sp, #7
     b80:	f815 1f01 	ldrb.w	r1, [r5, #1]!
     b84:	4620      	mov	r0, r4
     b86:	f001 f917 	bl	1db8 <__mriBuffer_WriteByteAsHex>
     b8a:	42b5      	cmp	r5, r6
     b8c:	d1f8      	bne.n	b80 <sendRegisterForTResponse+0x1c>
     b8e:	4620      	mov	r0, r4
     b90:	213b      	movs	r1, #59	; 0x3b
     b92:	f001 f8eb 	bl	1d6c <__mriBuffer_WriteChar>
     b96:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

00000b98 <__mriPlatform_DisableSingleStep>:
     b98:	4b06      	ldr	r3, [pc, #24]	; (bb4 <__mriPlatform_DisableSingleStep+0x1c>)
     b9a:	4907      	ldr	r1, [pc, #28]	; (bb8 <__mriPlatform_DisableSingleStep+0x20>)
     b9c:	68da      	ldr	r2, [r3, #12]
     b9e:	f422 2080 	bic.w	r0, r2, #262144	; 0x40000
     ba2:	60d8      	str	r0, [r3, #12]
     ba4:	f8d1 3200 	ldr.w	r3, [r1, #512]	; 0x200
     ba8:	f023 0204 	bic.w	r2, r3, #4
     bac:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
     bb0:	4770      	bx	lr
     bb2:	bf00      	nop
     bb4:	e000edf0 	.word	0xe000edf0
     bb8:	10000150 	.word	0x10000150

00000bbc <__mriCortexMInit>:
     bbc:	b510      	push	{r4, lr}
     bbe:	2100      	movs	r1, #0
     bc0:	f44f 723e 	mov.w	r2, #760	; 0x2f8
     bc4:	4823      	ldr	r0, [pc, #140]	; (c54 <Stack_Size+0x54>)
     bc6:	f002 fc6e 	bl	34a6 <memset>
     bca:	4b23      	ldr	r3, [pc, #140]	; (c58 <Stack_Size+0x58>)
     bcc:	4923      	ldr	r1, [pc, #140]	; (c5c <Stack_Size+0x5c>)
     bce:	68da      	ldr	r2, [r3, #12]
     bd0:	f042 7080 	orr.w	r0, r2, #16777216	; 0x1000000
     bd4:	60d8      	str	r0, [r3, #12]
     bd6:	680c      	ldr	r4, [r1, #0]
     bd8:	2300      	movs	r3, #0
     bda:	0f20      	lsrs	r0, r4, #28
     bdc:	f103 6260 	add.w	r2, r3, #234881024	; 0xe000000
     be0:	f502 7181 	add.w	r1, r2, #258	; 0x102
     be4:	010c      	lsls	r4, r1, #4
     be6:	4283      	cmp	r3, r0
     be8:	d00a      	beq.n	c00 <Stack_Size>
     bea:	2100      	movs	r1, #0
     bec:	6021      	str	r1, [r4, #0]
     bee:	6061      	str	r1, [r4, #4]
     bf0:	68a2      	ldr	r2, [r4, #8]
     bf2:	3301      	adds	r3, #1
     bf4:	f422 71d7 	bic.w	r1, r2, #430	; 0x1ae
     bf8:	f021 0201 	bic.w	r2, r1, #1
     bfc:	60a2      	str	r2, [r4, #8]
     bfe:	e7ed      	b.n	bdc <__mriCortexMInit+0x20>
     c00:	f7ff fe66 	bl	8d0 <getFPBCodeComparatorCount>
     c04:	4a16      	ldr	r2, [pc, #88]	; (c60 <Stack_Size+0x60>)
     c06:	6813      	ldr	r3, [r2, #0]
     c08:	f3c3 2103 	ubfx	r1, r3, #8, #4
     c0c:	1840      	adds	r0, r0, r1
     c0e:	4915      	ldr	r1, [pc, #84]	; (c64 <Stack_Size+0x64>)
     c10:	2300      	movs	r3, #0
     c12:	4283      	cmp	r3, r0
     c14:	d004      	beq.n	c20 <Stack_Size+0x20>
     c16:	2400      	movs	r4, #0
     c18:	f841 4b04 	str.w	r4, [r1], #4
     c1c:	3301      	adds	r3, #1
     c1e:	e7f8      	b.n	c12 <Stack_Size+0x12>
     c20:	6810      	ldr	r0, [r2, #0]
     c22:	f040 0403 	orr.w	r4, r0, #3
     c26:	6014      	str	r4, [r2, #0]
     c28:	4c0f      	ldr	r4, [pc, #60]	; (c68 <Stack_Size+0x68>)
     c2a:	2208      	movs	r2, #8
     c2c:	77e2      	strb	r2, [r4, #31]
     c2e:	f884 2022 	strb.w	r2, [r4, #34]	; 0x22
     c32:	f884 2023 	strb.w	r2, [r4, #35]	; 0x23
     c36:	f7ff ffaf 	bl	b98 <__mriPlatform_DisableSingleStep>
     c3a:	4b07      	ldr	r3, [pc, #28]	; (c58 <Stack_Size+0x58>)
     c3c:	2200      	movs	r2, #0
     c3e:	68d9      	ldr	r1, [r3, #12]
     c40:	f421 3000 	bic.w	r0, r1, #131072	; 0x20000
     c44:	60d8      	str	r0, [r3, #12]
     c46:	f884 2020 	strb.w	r2, [r4, #32]
     c4a:	68d9      	ldr	r1, [r3, #12]
     c4c:	f441 3080 	orr.w	r0, r1, #65536	; 0x10000
     c50:	60d8      	str	r0, [r3, #12]
     c52:	bd10      	pop	{r4, pc}
     c54:	10000150 	.word	0x10000150
     c58:	e000edf0 	.word	0xe000edf0
     c5c:	e0001000 	.word	0xe0001000
     c60:	e0002000 	.word	0xe0002000
     c64:	e0002008 	.word	0xe0002008
     c68:	e000ed00 	.word	0xe000ed00

00000c6c <__mriPlatform_IsSingleStepping>:
     c6c:	4b02      	ldr	r3, [pc, #8]	; (c78 <__mriPlatform_IsSingleStepping+0xc>)
     c6e:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
     c72:	f000 0004 	and.w	r0, r0, #4
     c76:	4770      	bx	lr
     c78:	10000150 	.word	0x10000150

00000c7c <__mriPlatform_GetPacketBuffer>:
     c7c:	4800      	ldr	r0, [pc, #0]	; (c80 <__mriPlatform_GetPacketBuffer+0x4>)
     c7e:	4770      	bx	lr
     c80:	100003bc 	.word	0x100003bc

00000c84 <__mriPlatform_GetPacketBufferSize>:
     c84:	2089      	movs	r0, #137	; 0x89
     c86:	4770      	bx	lr

00000c88 <__mriPlatform_DetermineCauseOfException>:
     c88:	b510      	push	{r4, lr}
     c8a:	f000 ff29 	bl	1ae0 <__mriGetIPSR>
     c8e:	b2c0      	uxtb	r0, r0
     c90:	1e81      	subs	r1, r0, #2
     c92:	2916      	cmp	r1, #22
     c94:	d824      	bhi.n	ce0 <__mriPlatform_DetermineCauseOfException+0x58>
     c96:	e8df f001 	tbb	[pc, r1]
     c9a:	250c      	.short	0x250c
     c9c:	23100e25 	.word	0x23100e25
     ca0:	23232323 	.word	0x23232323
     ca4:	23232312 	.word	0x23232312
     ca8:	23232323 	.word	0x23232323
     cac:	0c0c0c23 	.word	0x0c0c0c23
     cb0:	0c          	.byte	0x0c
     cb1:	00          	.byte	0x00
     cb2:	2002      	movs	r0, #2
     cb4:	bd10      	pop	{r4, pc}
     cb6:	200a      	movs	r0, #10
     cb8:	bd10      	pop	{r4, pc}
     cba:	2004      	movs	r0, #4
     cbc:	bd10      	pop	{r4, pc}
     cbe:	4b0a      	ldr	r3, [pc, #40]	; (ce8 <__mriPlatform_DetermineCauseOfException+0x60>)
     cc0:	6b18      	ldr	r0, [r3, #48]	; 0x30
     cc2:	2300      	movs	r3, #0
     cc4:	4a09      	ldr	r2, [pc, #36]	; (cec <__mriPlatform_DetermineCauseOfException+0x64>)
     cc6:	00dc      	lsls	r4, r3, #3
     cc8:	f852 1033 	ldr.w	r1, [r2, r3, lsl #3]
     ccc:	4201      	tst	r1, r0
     cce:	d004      	beq.n	cda <__mriPlatform_DetermineCauseOfException+0x52>
     cd0:	4805      	ldr	r0, [pc, #20]	; (ce8 <__mriPlatform_DetermineCauseOfException+0x60>)
     cd2:	1912      	adds	r2, r2, r4
     cd4:	6301      	str	r1, [r0, #48]	; 0x30
     cd6:	7910      	ldrb	r0, [r2, #4]
     cd8:	bd10      	pop	{r4, pc}
     cda:	3301      	adds	r3, #1
     cdc:	2b04      	cmp	r3, #4
     cde:	d1f1      	bne.n	cc4 <__mriPlatform_DetermineCauseOfException+0x3c>
     ce0:	2011      	movs	r0, #17
     ce2:	bd10      	pop	{r4, pc}
     ce4:	200b      	movs	r0, #11
     ce6:	bd10      	pop	{r4, pc}
     ce8:	e000ed00 	.word	0xe000ed00
     cec:	00003abc 	.word	0x00003abc

00000cf0 <__mriPlatform_DisplayFaultCauseToGdbConsole>:
     cf0:	b510      	push	{r4, lr}
     cf2:	f000 fef5 	bl	1ae0 <__mriGetIPSR>
     cf6:	b2c0      	uxtb	r0, r0
     cf8:	1ec1      	subs	r1, r0, #3
     cfa:	2903      	cmp	r1, #3
     cfc:	d82f      	bhi.n	d5e <__mriPlatform_DisplayFaultCauseToGdbConsole+0x6e>
     cfe:	e8df f001 	tbb	[pc, r1]
     d02:	2102      	.short	0x2102
     d04:	2724      	.short	0x2724
     d06:	4b16      	ldr	r3, [pc, #88]	; (d60 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x70>)
     d08:	4816      	ldr	r0, [pc, #88]	; (d64 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x74>)
     d0a:	6adc      	ldr	r4, [r3, #44]	; 0x2c
     d0c:	f001 fe07 	bl	291e <__mriGdbConsole_WriteString>
     d10:	4815      	ldr	r0, [pc, #84]	; (d68 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x78>)
     d12:	f001 fe04 	bl	291e <__mriGdbConsole_WriteString>
     d16:	4620      	mov	r0, r4
     d18:	f001 fe28 	bl	296c <__mriGdbConsole_WriteHexValue>
     d1c:	2c00      	cmp	r4, #0
     d1e:	da02      	bge.n	d26 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x36>
     d20:	4812      	ldr	r0, [pc, #72]	; (d6c <__mriPlatform_DisplayFaultCauseToGdbConsole+0x7c>)
     d22:	f001 fdfc 	bl	291e <__mriGdbConsole_WriteString>
     d26:	07a3      	lsls	r3, r4, #30
     d28:	d502      	bpl.n	d30 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x40>
     d2a:	4811      	ldr	r0, [pc, #68]	; (d70 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x80>)
     d2c:	f001 fdf7 	bl	291e <__mriGdbConsole_WriteString>
     d30:	0060      	lsls	r0, r4, #1
     d32:	d50f      	bpl.n	d54 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     d34:	480f      	ldr	r0, [pc, #60]	; (d74 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x84>)
     d36:	f001 fdf2 	bl	291e <__mriGdbConsole_WriteString>
     d3a:	f7ff fde3 	bl	904 <displayMemFaultCauseToGdbConsole>
     d3e:	f7ff fe33 	bl	9a8 <displayBusFaultCauseToGdbConsole>
     d42:	e005      	b.n	d50 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x60>
     d44:	f7ff fdde 	bl	904 <displayMemFaultCauseToGdbConsole>
     d48:	e004      	b.n	d54 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     d4a:	f7ff fe2d 	bl	9a8 <displayBusFaultCauseToGdbConsole>
     d4e:	e001      	b.n	d54 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x64>
     d50:	f7ff fe84 	bl	a5c <displayUsageFaultCauseToGdbConsole>
     d54:	4808      	ldr	r0, [pc, #32]	; (d78 <__mriPlatform_DisplayFaultCauseToGdbConsole+0x88>)
     d56:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
     d5a:	f001 bde0 	b.w	291e <__mriGdbConsole_WriteString>
     d5e:	bd10      	pop	{r4, pc}
     d60:	e000ed00 	.word	0xe000ed00
     d64:	00003a74 	.word	0x00003a74
     d68:	000038ca 	.word	0x000038ca
     d6c:	00003a84 	.word	0x00003a84
     d70:	00003a95 	.word	0x00003a95
     d74:	00003aac 	.word	0x00003aac
     d78:	00003ab8 	.word	0x00003ab8

00000d7c <__mriPlatform_LeavingDebugger>:
     d7c:	b538      	push	{r3, r4, r5, lr}
     d7e:	f7ff fee5 	bl	b4c <isMPUNotPresent>
     d82:	4c24      	ldr	r4, [pc, #144]	; (e14 <__mriPlatform_LeavingDebugger+0x98>)
     d84:	b938      	cbnz	r0, d96 <__mriPlatform_LeavingDebugger+0x1a>
     d86:	6863      	ldr	r3, [r4, #4]
     d88:	f023 0001 	bic.w	r0, r3, #1
     d8c:	6060      	str	r0, [r4, #4]
     d8e:	f000 feb0 	bl	1af2 <__mriDSB>
     d92:	f000 feb1 	bl	1af8 <__mriISB>
     d96:	6821      	ldr	r1, [r4, #0]
     d98:	4c1f      	ldr	r4, [pc, #124]	; (e18 <__mriPlatform_LeavingDebugger+0x9c>)
     d9a:	f3c1 2207 	ubfx	r2, r1, #8, #8
     d9e:	1e50      	subs	r0, r2, #1
     da0:	f7ff fda2 	bl	8e8 <prepareToAccessMPURegion>
     da4:	f8d4 525c 	ldr.w	r5, [r4, #604]	; 0x25c
     da8:	f7ff fed0 	bl	b4c <isMPUNotPresent>
     dac:	b910      	cbnz	r0, db4 <__mriPlatform_LeavingDebugger+0x38>
     dae:	4b19      	ldr	r3, [pc, #100]	; (e14 <__mriPlatform_LeavingDebugger+0x98>)
     db0:	016d      	lsls	r5, r5, #5
     db2:	60dd      	str	r5, [r3, #12]
     db4:	f8d4 4260 	ldr.w	r4, [r4, #608]	; 0x260
     db8:	f7ff fec8 	bl	b4c <isMPUNotPresent>
     dbc:	b908      	cbnz	r0, dc2 <__mriPlatform_LeavingDebugger+0x46>
     dbe:	4815      	ldr	r0, [pc, #84]	; (e14 <__mriPlatform_LeavingDebugger+0x98>)
     dc0:	6104      	str	r4, [r0, #16]
     dc2:	4c15      	ldr	r4, [pc, #84]	; (e18 <__mriPlatform_LeavingDebugger+0x9c>)
     dc4:	f8d4 0258 	ldr.w	r0, [r4, #600]	; 0x258
     dc8:	f7ff fd8e 	bl	8e8 <prepareToAccessMPURegion>
     dcc:	f8d4 4254 	ldr.w	r4, [r4, #596]	; 0x254
     dd0:	f7ff febc 	bl	b4c <isMPUNotPresent>
     dd4:	b928      	cbnz	r0, de2 <__mriPlatform_LeavingDebugger+0x66>
     dd6:	490f      	ldr	r1, [pc, #60]	; (e14 <__mriPlatform_LeavingDebugger+0x98>)
     dd8:	604c      	str	r4, [r1, #4]
     dda:	f000 fe8a 	bl	1af2 <__mriDSB>
     dde:	f000 fe8b 	bl	1af8 <__mriISB>
     de2:	4b0d      	ldr	r3, [pc, #52]	; (e18 <__mriPlatform_LeavingDebugger+0x9c>)
     de4:	461a      	mov	r2, r3
     de6:	6811      	ldr	r1, [r2, #0]
     de8:	480c      	ldr	r0, [pc, #48]	; (e1c <__mriPlatform_LeavingDebugger+0xa0>)
     dea:	3304      	adds	r3, #4
     dec:	4281      	cmp	r1, r0
     dee:	490c      	ldr	r1, [pc, #48]	; (e20 <__mriPlatform_LeavingDebugger+0xa4>)
     df0:	d102      	bne.n	df8 <__mriPlatform_LeavingDebugger+0x7c>
     df2:	428b      	cmp	r3, r1
     df4:	461a      	mov	r2, r3
     df6:	d3f5      	bcc.n	de4 <__mriPlatform_LeavingDebugger+0x68>
     df8:	4b07      	ldr	r3, [pc, #28]	; (e18 <__mriPlatform_LeavingDebugger+0x9c>)
     dfa:	1a8a      	subs	r2, r1, r2
     dfc:	f8d3 0268 	ldr.w	r0, [r3, #616]	; 0x268
     e00:	4908      	ldr	r1, [pc, #32]	; (e24 <__mriPlatform_LeavingDebugger+0xa8>)
     e02:	4282      	cmp	r2, r0
     e04:	bfc8      	it	gt
     e06:	f8c3 2268 	strgt.w	r2, [r3, #616]	; 0x268
     e0a:	68ca      	ldr	r2, [r1, #12]
     e0c:	f422 3300 	bic.w	r3, r2, #131072	; 0x20000
     e10:	60cb      	str	r3, [r1, #12]
     e12:	bd38      	pop	{r3, r4, r5, pc}
     e14:	e000ed90 	.word	0xe000ed90
     e18:	10000150 	.word	0x10000150
     e1c:	deadbeef 	.word	0xdeadbeef
     e20:	10000350 	.word	0x10000350
     e24:	e000edf0 	.word	0xe000edf0

00000e28 <__mriPlatform_GetProgramCounter>:
     e28:	4b01      	ldr	r3, [pc, #4]	; (e30 <__mriPlatform_GetProgramCounter+0x8>)
     e2a:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     e2e:	4770      	bx	lr
     e30:	10000150 	.word	0x10000150

00000e34 <__mriPlatform_SetProgramCounter>:
     e34:	4b01      	ldr	r3, [pc, #4]	; (e3c <__mriPlatform_SetProgramCounter+0x8>)
     e36:	f8c3 0248 	str.w	r0, [r3, #584]	; 0x248
     e3a:	4770      	bx	lr
     e3c:	10000150 	.word	0x10000150

00000e40 <__mriPlatform_WasProgramCounterModifiedByUser>:
     e40:	4b04      	ldr	r3, [pc, #16]	; (e54 <__mriPlatform_WasProgramCounterModifiedByUser+0x14>)
     e42:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     e46:	f8d3 1250 	ldr.w	r1, [r3, #592]	; 0x250
     e4a:	1a40      	subs	r0, r0, r1
     e4c:	bf18      	it	ne
     e4e:	2001      	movne	r0, #1
     e50:	4770      	bx	lr
     e52:	bf00      	nop
     e54:	10000150 	.word	0x10000150

00000e58 <__mriPlatform_GetSemihostCallParameters>:
     e58:	4a07      	ldr	r2, [pc, #28]	; (e78 <__mriPlatform_GetSemihostCallParameters+0x20>)
     e5a:	b530      	push	{r4, r5, lr}
     e5c:	f8d2 1218 	ldr.w	r1, [r2, #536]	; 0x218
     e60:	f8d2 5210 	ldr.w	r5, [r2, #528]	; 0x210
     e64:	f8d2 4214 	ldr.w	r4, [r2, #532]	; 0x214
     e68:	f8d2 220c 	ldr.w	r2, [r2, #524]	; 0x20c
     e6c:	6084      	str	r4, [r0, #8]
     e6e:	e880 0024 	stmia.w	r0, {r2, r5}
     e72:	60c1      	str	r1, [r0, #12]
     e74:	bd30      	pop	{r4, r5, pc}
     e76:	bf00      	nop
     e78:	10000150 	.word	0x10000150

00000e7c <__mriPlatform_SetSemihostCallReturnValue>:
     e7c:	4b01      	ldr	r3, [pc, #4]	; (e84 <__mriPlatform_SetSemihostCallReturnValue+0x8>)
     e7e:	f8c3 020c 	str.w	r0, [r3, #524]	; 0x20c
     e82:	4770      	bx	lr
     e84:	10000150 	.word	0x10000150

00000e88 <__mriPlatform_WasMemoryFaultEncountered>:
     e88:	b508      	push	{r3, lr}
     e8a:	f000 fe32 	bl	1af2 <__mriDSB>
     e8e:	4b06      	ldr	r3, [pc, #24]	; (ea8 <__mriPlatform_WasMemoryFaultEncountered+0x20>)
     e90:	f8d3 0200 	ldr.w	r0, [r3, #512]	; 0x200
     e94:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
     e98:	f000 0002 	and.w	r0, r0, #2
     e9c:	f022 0102 	bic.w	r1, r2, #2
     ea0:	f8c3 1200 	str.w	r1, [r3, #512]	; 0x200
     ea4:	bd08      	pop	{r3, pc}
     ea6:	bf00      	nop
     ea8:	10000150 	.word	0x10000150

00000eac <throwingMemRead16>:
     eac:	b510      	push	{r4, lr}
     eae:	f000 fa63 	bl	1378 <__mriPlatform_MemRead16>
     eb2:	4604      	mov	r4, r0
     eb4:	f7ff ffe8 	bl	e88 <__mriPlatform_WasMemoryFaultEncountered>
     eb8:	b130      	cbz	r0, ec8 <throwingMemRead16+0x1c>
     eba:	4b04      	ldr	r3, [pc, #16]	; (ecc <throwingMemRead16+0x20>)
     ebc:	2400      	movs	r4, #0
     ebe:	681a      	ldr	r2, [r3, #0]
     ec0:	2a0a      	cmp	r2, #10
     ec2:	bfb8      	it	lt
     ec4:	220a      	movlt	r2, #10
     ec6:	601a      	str	r2, [r3, #0]
     ec8:	4620      	mov	r0, r4
     eca:	bd10      	pop	{r4, pc}
     ecc:	1000014c 	.word	0x1000014c

00000ed0 <getFirstHalfWordOfCurrentInstruction>:
     ed0:	4b02      	ldr	r3, [pc, #8]	; (edc <getFirstHalfWordOfCurrentInstruction+0xc>)
     ed2:	f8d3 0248 	ldr.w	r0, [r3, #584]	; 0x248
     ed6:	f7ff bfe9 	b.w	eac <throwingMemRead16>
     eda:	bf00      	nop
     edc:	10000150 	.word	0x10000150

00000ee0 <__mriPlatform_TypeOfCurrentInstruction>:
     ee0:	b538      	push	{r3, r4, r5, lr}
     ee2:	4d0d      	ldr	r5, [pc, #52]	; (f18 <__mriPlatform_TypeOfCurrentInstruction+0x38>)
     ee4:	2400      	movs	r4, #0
     ee6:	602c      	str	r4, [r5, #0]
     ee8:	f7ff fff2 	bl	ed0 <getFirstHalfWordOfCurrentInstruction>
     eec:	682b      	ldr	r3, [r5, #0]
     eee:	b113      	cbz	r3, ef6 <__mriPlatform_TypeOfCurrentInstruction+0x16>
     ef0:	602c      	str	r4, [r5, #0]
     ef2:	4620      	mov	r0, r4
     ef4:	bd38      	pop	{r3, r4, r5, pc}
     ef6:	f64b 61ab 	movw	r1, #48811	; 0xbeab
     efa:	4288      	cmp	r0, r1
     efc:	d008      	beq.n	f10 <__mriPlatform_TypeOfCurrentInstruction+0x30>
     efe:	3154      	adds	r1, #84	; 0x54
     f00:	4288      	cmp	r0, r1
     f02:	d007      	beq.n	f14 <__mriPlatform_TypeOfCurrentInstruction+0x34>
     f04:	f5b0 4f3e 	cmp.w	r0, #48640	; 0xbe00
     f08:	bf0c      	ite	eq
     f0a:	2003      	moveq	r0, #3
     f0c:	2000      	movne	r0, #0
     f0e:	bd38      	pop	{r3, r4, r5, pc}
     f10:	2001      	movs	r0, #1
     f12:	bd38      	pop	{r3, r4, r5, pc}
     f14:	2002      	movs	r0, #2
     f16:	bd38      	pop	{r3, r4, r5, pc}
     f18:	1000014c 	.word	0x1000014c

00000f1c <__mriPlatform_AdvanceProgramCounterToNextInstruction>:
     f1c:	b538      	push	{r3, r4, r5, lr}
     f1e:	4c0f      	ldr	r4, [pc, #60]	; (f5c <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x40>)
     f20:	2500      	movs	r5, #0
     f22:	6025      	str	r5, [r4, #0]
     f24:	f7ff ffd4 	bl	ed0 <getFirstHalfWordOfCurrentInstruction>
     f28:	6823      	ldr	r3, [r4, #0]
     f2a:	b10b      	cbz	r3, f30 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x14>
     f2c:	6025      	str	r5, [r4, #0]
     f2e:	bd38      	pop	{r3, r4, r5, pc}
     f30:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
     f34:	f5b0 4f68 	cmp.w	r0, #59392	; 0xe800
     f38:	4909      	ldr	r1, [pc, #36]	; (f60 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x44>)
     f3a:	d005      	beq.n	f48 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x2c>
     f3c:	f5b0 4f70 	cmp.w	r0, #61440	; 0xf000
     f40:	d002      	beq.n	f48 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x2c>
     f42:	f5b0 4f78 	cmp.w	r0, #63488	; 0xf800
     f46:	d103      	bne.n	f50 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x34>
     f48:	f8d1 0248 	ldr.w	r0, [r1, #584]	; 0x248
     f4c:	1d03      	adds	r3, r0, #4
     f4e:	e002      	b.n	f56 <__mriPlatform_AdvanceProgramCounterToNextInstruction+0x3a>
     f50:	f8d1 2248 	ldr.w	r2, [r1, #584]	; 0x248
     f54:	1c93      	adds	r3, r2, #2
     f56:	f8c1 3248 	str.w	r3, [r1, #584]	; 0x248
     f5a:	bd38      	pop	{r3, r4, r5, pc}
     f5c:	1000014c 	.word	0x1000014c
     f60:	10000150 	.word	0x10000150

00000f64 <__mriPlatform_WriteTResponseRegistersToBuffer>:
     f64:	b538      	push	{r3, r4, r5, lr}
     f66:	4c0d      	ldr	r4, [pc, #52]	; (f9c <__mriPlatform_WriteTResponseRegistersToBuffer+0x38>)
     f68:	4605      	mov	r5, r0
     f6a:	210c      	movs	r1, #12
     f6c:	f8d4 223c 	ldr.w	r2, [r4, #572]	; 0x23c
     f70:	f7ff fdf8 	bl	b64 <sendRegisterForTResponse>
     f74:	4628      	mov	r0, r5
     f76:	210d      	movs	r1, #13
     f78:	f8d4 2240 	ldr.w	r2, [r4, #576]	; 0x240
     f7c:	f7ff fdf2 	bl	b64 <sendRegisterForTResponse>
     f80:	4628      	mov	r0, r5
     f82:	210e      	movs	r1, #14
     f84:	f8d4 2244 	ldr.w	r2, [r4, #580]	; 0x244
     f88:	f7ff fdec 	bl	b64 <sendRegisterForTResponse>
     f8c:	f8d4 2248 	ldr.w	r2, [r4, #584]	; 0x248
     f90:	4628      	mov	r0, r5
     f92:	210f      	movs	r1, #15
     f94:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
     f98:	f7ff bde4 	b.w	b64 <sendRegisterForTResponse>
     f9c:	10000150 	.word	0x10000150

00000fa0 <__mriPlatform_CopyContextToBuffer>:
     fa0:	b570      	push	{r4, r5, r6, lr}
     fa2:	4c06      	ldr	r4, [pc, #24]	; (fbc <__mriPlatform_CopyContextToBuffer+0x1c>)
     fa4:	4606      	mov	r6, r0
     fa6:	f104 0544 	add.w	r5, r4, #68	; 0x44
     faa:	f814 1f01 	ldrb.w	r1, [r4, #1]!
     fae:	4630      	mov	r0, r6
     fb0:	f000 ff02 	bl	1db8 <__mriBuffer_WriteByteAsHex>
     fb4:	42ac      	cmp	r4, r5
     fb6:	d1f8      	bne.n	faa <__mriPlatform_CopyContextToBuffer+0xa>
     fb8:	bd70      	pop	{r4, r5, r6, pc}
     fba:	bf00      	nop
     fbc:	1000035b 	.word	0x1000035b

00000fc0 <__mriPlatform_CopyContextFromBuffer>:
     fc0:	b570      	push	{r4, r5, r6, lr}
     fc2:	4c06      	ldr	r4, [pc, #24]	; (fdc <__mriPlatform_CopyContextFromBuffer+0x1c>)
     fc4:	4606      	mov	r6, r0
     fc6:	f104 0544 	add.w	r5, r4, #68	; 0x44
     fca:	4630      	mov	r0, r6
     fcc:	f000 ff10 	bl	1df0 <__mriBuffer_ReadByteAsHex>
     fd0:	f804 0f01 	strb.w	r0, [r4, #1]!
     fd4:	42ac      	cmp	r4, r5
     fd6:	d1f8      	bne.n	fca <__mriPlatform_CopyContextFromBuffer+0xa>
     fd8:	bd70      	pop	{r4, r5, r6, pc}
     fda:	bf00      	nop
     fdc:	1000035b 	.word	0x1000035b

00000fe0 <__mriPlatform_SetHardwareBreakpoint>:
     fe0:	4b19      	ldr	r3, [pc, #100]	; (1048 <__mriPlatform_SetHardwareBreakpoint+0x68>)
     fe2:	b570      	push	{r4, r5, r6, lr}
     fe4:	2400      	movs	r4, #0
     fe6:	2902      	cmp	r1, #2
     fe8:	4605      	mov	r5, r0
     fea:	601c      	str	r4, [r3, #0]
     fec:	d008      	beq.n	1000 <__mriPlatform_SetHardwareBreakpoint+0x20>
     fee:	d301      	bcc.n	ff4 <__mriPlatform_SetHardwareBreakpoint+0x14>
     ff0:	2904      	cmp	r1, #4
     ff2:	d904      	bls.n	ffe <__mriPlatform_SetHardwareBreakpoint+0x1e>
     ff4:	2204      	movs	r2, #4
     ff6:	601a      	str	r2, [r3, #0]
     ff8:	f04f 34ff 	mov.w	r4, #4294967295	; 0xffffffff
     ffc:	e000      	b.n	1000 <__mriPlatform_SetHardwareBreakpoint+0x20>
     ffe:	2401      	movs	r4, #1
    1000:	6818      	ldr	r0, [r3, #0]
    1002:	b9f8      	cbnz	r0, 1044 <__mriPlatform_SetHardwareBreakpoint+0x64>
    1004:	4628      	mov	r0, r5
    1006:	4621      	mov	r1, r4
    1008:	f7ff fd86 	bl	b18 <findFPBBreakpointComparator>
    100c:	4606      	mov	r6, r0
    100e:	b9c8      	cbnz	r0, 1044 <__mriPlatform_SetHardwareBreakpoint+0x64>
    1010:	f7ff fc5e 	bl	8d0 <getFPBCodeComparatorCount>
    1014:	4a0d      	ldr	r2, [pc, #52]	; (104c <__mriPlatform_SetHardwareBreakpoint+0x6c>)
    1016:	4633      	mov	r3, r6
    1018:	4283      	cmp	r3, r0
    101a:	4616      	mov	r6, r2
    101c:	d00c      	beq.n	1038 <__mriPlatform_SetHardwareBreakpoint+0x58>
    101e:	f852 1b04 	ldr.w	r1, [r2], #4
    1022:	07c9      	lsls	r1, r1, #31
    1024:	d501      	bpl.n	102a <__mriPlatform_SetHardwareBreakpoint+0x4a>
    1026:	3301      	adds	r3, #1
    1028:	e7f6      	b.n	1018 <__mriPlatform_SetHardwareBreakpoint+0x38>
    102a:	b12e      	cbz	r6, 1038 <__mriPlatform_SetHardwareBreakpoint+0x58>
    102c:	4628      	mov	r0, r5
    102e:	4621      	mov	r1, r4
    1030:	f7ff fd56 	bl	ae0 <calculateFPBComparatorValue>
    1034:	6030      	str	r0, [r6, #0]
    1036:	bd70      	pop	{r4, r5, r6, pc}
    1038:	4803      	ldr	r0, [pc, #12]	; (1048 <__mriPlatform_SetHardwareBreakpoint+0x68>)
    103a:	6802      	ldr	r2, [r0, #0]
    103c:	2a08      	cmp	r2, #8
    103e:	bfb8      	it	lt
    1040:	2208      	movlt	r2, #8
    1042:	6002      	str	r2, [r0, #0]
    1044:	bd70      	pop	{r4, r5, r6, pc}
    1046:	bf00      	nop
    1048:	1000014c 	.word	0x1000014c
    104c:	e0002008 	.word	0xe0002008

00001050 <__mriPlatform_EnableSingleStep>:
    1050:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1052:	4c32      	ldr	r4, [pc, #200]	; (111c <__mriPlatform_EnableSingleStep+0xcc>)
    1054:	2300      	movs	r3, #0
    1056:	6023      	str	r3, [r4, #0]
    1058:	f7ff ff3a 	bl	ed0 <getFirstHalfWordOfCurrentInstruction>
    105c:	6825      	ldr	r5, [r4, #0]
    105e:	b925      	cbnz	r5, 106a <__mriPlatform_EnableSingleStep+0x1a>
    1060:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
    1064:	f5b0 4f5f 	cmp.w	r0, #57088	; 0xdf00
    1068:	d02d      	beq.n	10c6 <__mriPlatform_EnableSingleStep+0x76>
    106a:	4c2d      	ldr	r4, [pc, #180]	; (1120 <__mriPlatform_EnableSingleStep+0xd0>)
    106c:	f8d4 5200 	ldr.w	r5, [r4, #512]	; 0x200
    1070:	f045 0604 	orr.w	r6, r5, #4
    1074:	4d29      	ldr	r5, [pc, #164]	; (111c <__mriPlatform_EnableSingleStep+0xcc>)
    1076:	f8c4 6200 	str.w	r6, [r4, #512]	; 0x200
    107a:	2600      	movs	r6, #0
    107c:	602e      	str	r6, [r5, #0]
    107e:	f7ff ff27 	bl	ed0 <getFirstHalfWordOfCurrentInstruction>
    1082:	6829      	ldr	r1, [r5, #0]
    1084:	4607      	mov	r7, r0
    1086:	b929      	cbnz	r1, 1094 <__mriPlatform_EnableSingleStep+0x44>
    1088:	f8d4 3248 	ldr.w	r3, [r4, #584]	; 0x248
    108c:	1c98      	adds	r0, r3, #2
    108e:	f7ff ff0d 	bl	eac <throwingMemRead16>
    1092:	e000      	b.n	1096 <__mriPlatform_EnableSingleStep+0x46>
    1094:	4630      	mov	r0, r6
    1096:	682a      	ldr	r2, [r5, #0]
    1098:	b11a      	cbz	r2, 10a2 <__mriPlatform_EnableSingleStep+0x52>
    109a:	4920      	ldr	r1, [pc, #128]	; (111c <__mriPlatform_EnableSingleStep+0xcc>)
    109c:	2000      	movs	r0, #0
    109e:	6008      	str	r0, [r1, #0]
    10a0:	e023      	b.n	10ea <__mriPlatform_EnableSingleStep+0x9a>
    10a2:	f027 070f 	bic.w	r7, r7, #15
    10a6:	b2bf      	uxth	r7, r7
    10a8:	f24f 3180 	movw	r1, #62336	; 0xf380
    10ac:	428f      	cmp	r7, r1
    10ae:	d11c      	bne.n	10ea <__mriPlatform_EnableSingleStep+0x9a>
    10b0:	f648 0311 	movw	r3, #34833	; 0x8811
    10b4:	4298      	cmp	r0, r3
    10b6:	d002      	beq.n	10be <__mriPlatform_EnableSingleStep+0x6e>
    10b8:	1c5a      	adds	r2, r3, #1
    10ba:	4290      	cmp	r0, r2
    10bc:	d115      	bne.n	10ea <__mriPlatform_EnableSingleStep+0x9a>
    10be:	2008      	movs	r0, #8
    10c0:	f000 fd11 	bl	1ae6 <__mriSetBASEPRI>
    10c4:	e024      	b.n	1110 <__mriPlatform_EnableSingleStep+0xc0>
    10c6:	4917      	ldr	r1, [pc, #92]	; (1124 <__mriPlatform_EnableSingleStep+0xd4>)
    10c8:	688a      	ldr	r2, [r1, #8]
    10ca:	2102      	movs	r1, #2
    10cc:	6ad3      	ldr	r3, [r2, #44]	; 0x2c
    10ce:	f023 0001 	bic.w	r0, r3, #1
    10d2:	f7ff ff85 	bl	fe0 <__mriPlatform_SetHardwareBreakpoint>
    10d6:	6820      	ldr	r0, [r4, #0]
    10d8:	4911      	ldr	r1, [pc, #68]	; (1120 <__mriPlatform_EnableSingleStep+0xd0>)
    10da:	b990      	cbnz	r0, 1102 <__mriPlatform_EnableSingleStep+0xb2>
    10dc:	f8d1 2200 	ldr.w	r2, [r1, #512]	; 0x200
    10e0:	f042 0310 	orr.w	r3, r2, #16
    10e4:	f8c1 3200 	str.w	r3, [r1, #512]	; 0x200
    10e8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    10ea:	f000 fcff 	bl	1aec <__mriGetBASEPRI>
    10ee:	4b0c      	ldr	r3, [pc, #48]	; (1120 <__mriPlatform_EnableSingleStep+0xd0>)
    10f0:	f8d3 2200 	ldr.w	r2, [r3, #512]	; 0x200
    10f4:	f8c3 0264 	str.w	r0, [r3, #612]	; 0x264
    10f8:	f042 0008 	orr.w	r0, r2, #8
    10fc:	f8c3 0200 	str.w	r0, [r3, #512]	; 0x200
    1100:	e7dd      	b.n	10be <__mriPlatform_EnableSingleStep+0x6e>
    1102:	f8d1 0200 	ldr.w	r0, [r1, #512]	; 0x200
    1106:	6025      	str	r5, [r4, #0]
    1108:	f040 0204 	orr.w	r2, r0, #4
    110c:	f8c1 2200 	str.w	r2, [r1, #512]	; 0x200
    1110:	4905      	ldr	r1, [pc, #20]	; (1128 <__mriPlatform_EnableSingleStep+0xd8>)
    1112:	68cb      	ldr	r3, [r1, #12]
    1114:	f443 2280 	orr.w	r2, r3, #262144	; 0x40000
    1118:	60ca      	str	r2, [r1, #12]
    111a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    111c:	1000014c 	.word	0x1000014c
    1120:	10000150 	.word	0x10000150
    1124:	e000ed00 	.word	0xe000ed00
    1128:	e000edf0 	.word	0xe000edf0

0000112c <__mriPlatform_ClearHardwareBreakpoint>:
    112c:	4b0c      	ldr	r3, [pc, #48]	; (1160 <__mriPlatform_ClearHardwareBreakpoint+0x34>)
    112e:	2200      	movs	r2, #0
    1130:	2902      	cmp	r1, #2
    1132:	b510      	push	{r4, lr}
    1134:	601a      	str	r2, [r3, #0]
    1136:	d003      	beq.n	1140 <__mriPlatform_ClearHardwareBreakpoint+0x14>
    1138:	d304      	bcc.n	1144 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    113a:	2904      	cmp	r1, #4
    113c:	d802      	bhi.n	1144 <__mriPlatform_ClearHardwareBreakpoint+0x18>
    113e:	e006      	b.n	114e <__mriPlatform_ClearHardwareBreakpoint+0x22>
    1140:	4611      	mov	r1, r2
    1142:	e005      	b.n	1150 <__mriPlatform_ClearHardwareBreakpoint+0x24>
    1144:	2104      	movs	r1, #4
    1146:	6019      	str	r1, [r3, #0]
    1148:	f04f 31ff 	mov.w	r1, #4294967295	; 0xffffffff
    114c:	e000      	b.n	1150 <__mriPlatform_ClearHardwareBreakpoint+0x24>
    114e:	2101      	movs	r1, #1
    1150:	681c      	ldr	r4, [r3, #0]
    1152:	b91c      	cbnz	r4, 115c <__mriPlatform_ClearHardwareBreakpoint+0x30>
    1154:	f7ff fce0 	bl	b18 <findFPBBreakpointComparator>
    1158:	b100      	cbz	r0, 115c <__mriPlatform_ClearHardwareBreakpoint+0x30>
    115a:	6004      	str	r4, [r0, #0]
    115c:	bd10      	pop	{r4, pc}
    115e:	bf00      	nop
    1160:	1000014c 	.word	0x1000014c

00001164 <__mriPlatform_EnteringDebugger>:
    1164:	b510      	push	{r4, lr}
    1166:	4c42      	ldr	r4, [pc, #264]	; (1270 <__mriPlatform_EnteringDebugger+0x10c>)
    1168:	f8d4 3200 	ldr.w	r3, [r4, #512]	; 0x200
    116c:	f8d4 1248 	ldr.w	r1, [r4, #584]	; 0x248
    1170:	f023 0002 	bic.w	r0, r3, #2
    1174:	f8c4 0200 	str.w	r0, [r4, #512]	; 0x200
    1178:	f8c4 1250 	str.w	r1, [r4, #592]	; 0x250
    117c:	f7ff fce6 	bl	b4c <isMPUNotPresent>
    1180:	4b3c      	ldr	r3, [pc, #240]	; (1274 <__mriPlatform_EnteringDebugger+0x110>)
    1182:	b908      	cbnz	r0, 1188 <__mriPlatform_EnteringDebugger+0x24>
    1184:	685a      	ldr	r2, [r3, #4]
    1186:	e001      	b.n	118c <__mriPlatform_EnteringDebugger+0x28>
    1188:	f04f 32ff 	mov.w	r2, #4294967295	; 0xffffffff
    118c:	f8c4 2254 	str.w	r2, [r4, #596]	; 0x254
    1190:	6898      	ldr	r0, [r3, #8]
    1192:	f8c4 0258 	str.w	r0, [r4, #600]	; 0x258
    1196:	681c      	ldr	r4, [r3, #0]
    1198:	f3c4 2107 	ubfx	r1, r4, #8, #8
    119c:	1e48      	subs	r0, r1, #1
    119e:	f7ff fba3 	bl	8e8 <prepareToAccessMPURegion>
    11a2:	f7ff fcd3 	bl	b4c <isMPUNotPresent>
    11a6:	b918      	cbnz	r0, 11b0 <__mriPlatform_EnteringDebugger+0x4c>
    11a8:	4b32      	ldr	r3, [pc, #200]	; (1274 <__mriPlatform_EnteringDebugger+0x110>)
    11aa:	68da      	ldr	r2, [r3, #12]
    11ac:	0950      	lsrs	r0, r2, #5
    11ae:	e000      	b.n	11b2 <__mriPlatform_EnteringDebugger+0x4e>
    11b0:	2000      	movs	r0, #0
    11b2:	4c2f      	ldr	r4, [pc, #188]	; (1270 <__mriPlatform_EnteringDebugger+0x10c>)
    11b4:	f8c4 025c 	str.w	r0, [r4, #604]	; 0x25c
    11b8:	f7ff fcc8 	bl	b4c <isMPUNotPresent>
    11bc:	b910      	cbnz	r0, 11c4 <__mriPlatform_EnteringDebugger+0x60>
    11be:	492d      	ldr	r1, [pc, #180]	; (1274 <__mriPlatform_EnteringDebugger+0x110>)
    11c0:	690b      	ldr	r3, [r1, #16]
    11c2:	e000      	b.n	11c6 <__mriPlatform_EnteringDebugger+0x62>
    11c4:	2300      	movs	r3, #0
    11c6:	f8c4 3260 	str.w	r3, [r4, #608]	; 0x260
    11ca:	f7ff fcbf 	bl	b4c <isMPUNotPresent>
    11ce:	4c29      	ldr	r4, [pc, #164]	; (1274 <__mriPlatform_EnteringDebugger+0x110>)
    11d0:	b938      	cbnz	r0, 11e2 <__mriPlatform_EnteringDebugger+0x7e>
    11d2:	6862      	ldr	r2, [r4, #4]
    11d4:	f022 0001 	bic.w	r0, r2, #1
    11d8:	6060      	str	r0, [r4, #4]
    11da:	f000 fc8a 	bl	1af2 <__mriDSB>
    11de:	f000 fc8b 	bl	1af8 <__mriISB>
    11e2:	6821      	ldr	r1, [r4, #0]
    11e4:	f3c1 2307 	ubfx	r3, r1, #8, #8
    11e8:	1e58      	subs	r0, r3, #1
    11ea:	f7ff fb7d 	bl	8e8 <prepareToAccessMPURegion>
    11ee:	f7ff fcad 	bl	b4c <isMPUNotPresent>
    11f2:	b908      	cbnz	r0, 11f8 <__mriPlatform_EnteringDebugger+0x94>
    11f4:	4c1f      	ldr	r4, [pc, #124]	; (1274 <__mriPlatform_EnteringDebugger+0x110>)
    11f6:	60e0      	str	r0, [r4, #12]
    11f8:	f7ff fca8 	bl	b4c <isMPUNotPresent>
    11fc:	b910      	cbnz	r0, 1204 <__mriPlatform_EnteringDebugger+0xa0>
    11fe:	4a1e      	ldr	r2, [pc, #120]	; (1278 <__mriPlatform_EnteringDebugger+0x114>)
    1200:	481c      	ldr	r0, [pc, #112]	; (1274 <__mriPlatform_EnteringDebugger+0x110>)
    1202:	6102      	str	r2, [r0, #16]
    1204:	f7ff fca2 	bl	b4c <isMPUNotPresent>
    1208:	b940      	cbnz	r0, 121c <__mriPlatform_EnteringDebugger+0xb8>
    120a:	491a      	ldr	r1, [pc, #104]	; (1274 <__mriPlatform_EnteringDebugger+0x110>)
    120c:	684b      	ldr	r3, [r1, #4]
    120e:	f043 0403 	orr.w	r4, r3, #3
    1212:	604c      	str	r4, [r1, #4]
    1214:	f000 fc6d 	bl	1af2 <__mriDSB>
    1218:	f000 fc6e 	bl	1af8 <__mriISB>
    121c:	4c14      	ldr	r4, [pc, #80]	; (1270 <__mriPlatform_EnteringDebugger+0x10c>)
    121e:	f8d4 2200 	ldr.w	r2, [r4, #512]	; 0x200
    1222:	0713      	lsls	r3, r2, #28
    1224:	d50c      	bpl.n	1240 <__mriPlatform_EnteringDebugger+0xdc>
    1226:	f8d4 0200 	ldr.w	r0, [r4, #512]	; 0x200
    122a:	f020 0108 	bic.w	r1, r0, #8
    122e:	f8d4 0264 	ldr.w	r0, [r4, #612]	; 0x264
    1232:	f8c4 1200 	str.w	r1, [r4, #512]	; 0x200
    1236:	f000 fc56 	bl	1ae6 <__mriSetBASEPRI>
    123a:	2300      	movs	r3, #0
    123c:	f8c4 3264 	str.w	r3, [r4, #612]	; 0x264
    1240:	f8d4 2200 	ldr.w	r2, [r4, #512]	; 0x200
    1244:	490a      	ldr	r1, [pc, #40]	; (1270 <__mriPlatform_EnteringDebugger+0x10c>)
    1246:	06d0      	lsls	r0, r2, #27
    1248:	d50d      	bpl.n	1266 <__mriPlatform_EnteringDebugger+0x102>
    124a:	f8d1 0200 	ldr.w	r0, [r1, #512]	; 0x200
    124e:	f020 0310 	bic.w	r3, r0, #16
    1252:	f8c1 3200 	str.w	r3, [r1, #512]	; 0x200
    1256:	4909      	ldr	r1, [pc, #36]	; (127c <__mriPlatform_EnteringDebugger+0x118>)
    1258:	688a      	ldr	r2, [r1, #8]
    125a:	2102      	movs	r1, #2
    125c:	6ad0      	ldr	r0, [r2, #44]	; 0x2c
    125e:	f020 0001 	bic.w	r0, r0, #1
    1262:	f7ff ff63 	bl	112c <__mriPlatform_ClearHardwareBreakpoint>
    1266:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    126a:	f7ff bc95 	b.w	b98 <__mriPlatform_DisableSingleStep>
    126e:	bf00      	nop
    1270:	10000150 	.word	0x10000150
    1274:	e000ed90 	.word	0xe000ed90
    1278:	0100003f 	.word	0x0100003f
    127c:	e000ed00 	.word	0xe000ed00

00001280 <__mriPlatform_SetHardwareWatchpoint>:
    1280:	2a02      	cmp	r2, #2
    1282:	bf98      	it	ls
    1284:	4b1f      	ldrls	r3, [pc, #124]	; (1304 <__mriPlatform_SetHardwareWatchpoint+0x84>)
    1286:	b570      	push	{r4, r5, r6, lr}
    1288:	bf94      	ite	ls
    128a:	5c9d      	ldrbls	r5, [r3, r2]
    128c:	2500      	movhi	r5, #0
    128e:	1e4b      	subs	r3, r1, #1
    1290:	420b      	tst	r3, r1
    1292:	4606      	mov	r6, r0
    1294:	460c      	mov	r4, r1
    1296:	d106      	bne.n	12a6 <__mriPlatform_SetHardwareWatchpoint+0x26>
    1298:	4248      	negs	r0, r1
    129a:	4030      	ands	r0, r6
    129c:	4286      	cmp	r6, r0
    129e:	d102      	bne.n	12a6 <__mriPlatform_SetHardwareWatchpoint+0x26>
    12a0:	1f69      	subs	r1, r5, #5
    12a2:	2902      	cmp	r1, #2
    12a4:	d905      	bls.n	12b2 <__mriPlatform_SetHardwareWatchpoint+0x32>
    12a6:	4b18      	ldr	r3, [pc, #96]	; (1308 <__mriPlatform_SetHardwareWatchpoint+0x88>)
    12a8:	6819      	ldr	r1, [r3, #0]
    12aa:	2904      	cmp	r1, #4
    12ac:	bfb8      	it	lt
    12ae:	2104      	movlt	r1, #4
    12b0:	e026      	b.n	1300 <__mriPlatform_SetHardwareWatchpoint+0x80>
    12b2:	4630      	mov	r0, r6
    12b4:	4621      	mov	r1, r4
    12b6:	462a      	mov	r2, r5
    12b8:	f7ff fae0 	bl	87c <findDWTComparator>
    12bc:	bb08      	cbnz	r0, 1302 <__mriPlatform_SetHardwareWatchpoint+0x82>
    12be:	4a13      	ldr	r2, [pc, #76]	; (130c <__mriPlatform_SetHardwareWatchpoint+0x8c>)
    12c0:	6813      	ldr	r3, [r2, #0]
    12c2:	0f19      	lsrs	r1, r3, #28
    12c4:	f100 6260 	add.w	r2, r0, #234881024	; 0xe000000
    12c8:	f502 7381 	add.w	r3, r2, #258	; 0x102
    12cc:	011b      	lsls	r3, r3, #4
    12ce:	4288      	cmp	r0, r1
    12d0:	d011      	beq.n	12f6 <__mriPlatform_SetHardwareWatchpoint+0x76>
    12d2:	689a      	ldr	r2, [r3, #8]
    12d4:	f012 020f 	ands.w	r2, r2, #15
    12d8:	d001      	beq.n	12de <__mriPlatform_SetHardwareWatchpoint+0x5e>
    12da:	3001      	adds	r0, #1
    12dc:	e7f2      	b.n	12c4 <__mriPlatform_SetHardwareWatchpoint+0x44>
    12de:	2c01      	cmp	r4, #1
    12e0:	d902      	bls.n	12e8 <__mriPlatform_SetHardwareWatchpoint+0x68>
    12e2:	0864      	lsrs	r4, r4, #1
    12e4:	3201      	adds	r2, #1
    12e6:	e7fa      	b.n	12de <__mriPlatform_SetHardwareWatchpoint+0x5e>
    12e8:	605a      	str	r2, [r3, #4]
    12ea:	6858      	ldr	r0, [r3, #4]
    12ec:	4290      	cmp	r0, r2
    12ee:	d102      	bne.n	12f6 <__mriPlatform_SetHardwareWatchpoint+0x76>
    12f0:	601e      	str	r6, [r3, #0]
    12f2:	609d      	str	r5, [r3, #8]
    12f4:	bd70      	pop	{r4, r5, r6, pc}
    12f6:	4b04      	ldr	r3, [pc, #16]	; (1308 <__mriPlatform_SetHardwareWatchpoint+0x88>)
    12f8:	6819      	ldr	r1, [r3, #0]
    12fa:	2908      	cmp	r1, #8
    12fc:	bfb8      	it	lt
    12fe:	2108      	movlt	r1, #8
    1300:	6019      	str	r1, [r3, #0]
    1302:	bd70      	pop	{r4, r5, r6, pc}
    1304:	000038b8 	.word	0x000038b8
    1308:	1000014c 	.word	0x1000014c
    130c:	e0001000 	.word	0xe0001000

00001310 <__mriPlatform_ClearHardwareWatchpoint>:
    1310:	2a02      	cmp	r2, #2
    1312:	bf98      	it	ls
    1314:	4b11      	ldrls	r3, [pc, #68]	; (135c <__mriPlatform_ClearHardwareWatchpoint+0x4c>)
    1316:	b510      	push	{r4, lr}
    1318:	bf94      	ite	ls
    131a:	5c9a      	ldrbls	r2, [r3, r2]
    131c:	2200      	movhi	r2, #0
    131e:	1e4c      	subs	r4, r1, #1
    1320:	400c      	ands	r4, r1
    1322:	d106      	bne.n	1332 <__mriPlatform_ClearHardwareWatchpoint+0x22>
    1324:	424b      	negs	r3, r1
    1326:	4003      	ands	r3, r0
    1328:	4298      	cmp	r0, r3
    132a:	d102      	bne.n	1332 <__mriPlatform_ClearHardwareWatchpoint+0x22>
    132c:	1f53      	subs	r3, r2, #5
    132e:	2b02      	cmp	r3, #2
    1330:	d906      	bls.n	1340 <__mriPlatform_ClearHardwareWatchpoint+0x30>
    1332:	480b      	ldr	r0, [pc, #44]	; (1360 <__mriPlatform_ClearHardwareWatchpoint+0x50>)
    1334:	6802      	ldr	r2, [r0, #0]
    1336:	2a04      	cmp	r2, #4
    1338:	bfb8      	it	lt
    133a:	2204      	movlt	r2, #4
    133c:	6002      	str	r2, [r0, #0]
    133e:	bd10      	pop	{r4, pc}
    1340:	f7ff fa9c 	bl	87c <findDWTComparator>
    1344:	b140      	cbz	r0, 1358 <__mriPlatform_ClearHardwareWatchpoint+0x48>
    1346:	6004      	str	r4, [r0, #0]
    1348:	6044      	str	r4, [r0, #4]
    134a:	6881      	ldr	r1, [r0, #8]
    134c:	f421 73d7 	bic.w	r3, r1, #430	; 0x1ae
    1350:	f023 0201 	bic.w	r2, r3, #1
    1354:	6082      	str	r2, [r0, #8]
    1356:	bd10      	pop	{r4, pc}
    1358:	bd10      	pop	{r4, pc}
    135a:	bf00      	nop
    135c:	000038b8 	.word	0x000038b8
    1360:	1000014c 	.word	0x1000014c

00001364 <__mriPlatform_GetTargetXmlSize>:
    1364:	f240 20b9 	movw	r0, #697	; 0x2b9
    1368:	4770      	bx	lr
	...

0000136c <__mriPlatform_GetTargetXml>:
    136c:	4800      	ldr	r0, [pc, #0]	; (1370 <__mriPlatform_GetTargetXml+0x4>)
    136e:	4770      	bx	lr
    1370:	000035db 	.word	0x000035db

00001374 <__mriPlatform_MemRead32>:
    1374:	6800      	ldr	r0, [r0, #0]
    1376:	4770      	bx	lr

00001378 <__mriPlatform_MemRead16>:
    1378:	8800      	ldrh	r0, [r0, #0]
    137a:	b280      	uxth	r0, r0
    137c:	4770      	bx	lr

0000137e <__mriPlatform_MemRead8>:
    137e:	7800      	ldrb	r0, [r0, #0]
    1380:	4770      	bx	lr

00001382 <__mriPlatform_MemWrite32>:
    1382:	6001      	str	r1, [r0, #0]
    1384:	4770      	bx	lr

00001386 <__mriPlatform_MemWrite16>:
    1386:	8001      	strh	r1, [r0, #0]
    1388:	4770      	bx	lr

0000138a <__mriPlatform_MemWrite8>:
    138a:	7001      	strb	r1, [r0, #0]
    138c:	4770      	bx	lr
	...

00001390 <__mriPlatform_CommUartIndex>:
    1390:	4b03      	ldr	r3, [pc, #12]	; (13a0 <__mriPlatform_CommUartIndex+0x10>)
    1392:	4804      	ldr	r0, [pc, #16]	; (13a4 <__mriPlatform_CommUartIndex+0x14>)
    1394:	681a      	ldr	r2, [r3, #0]
    1396:	1a11      	subs	r1, r2, r0
    1398:	4803      	ldr	r0, [pc, #12]	; (13a8 <__mriPlatform_CommUartIndex+0x18>)
    139a:	108b      	asrs	r3, r1, #2
    139c:	4358      	muls	r0, r3
    139e:	4770      	bx	lr
    13a0:	10000448 	.word	0x10000448
    13a4:	00003aec 	.word	0x00003aec
    13a8:	38e38e39 	.word	0x38e38e39

000013ac <__mriPlatform_CommHasReceiveData>:
    13ac:	4b03      	ldr	r3, [pc, #12]	; (13bc <__mriPlatform_CommHasReceiveData+0x10>)
    13ae:	6818      	ldr	r0, [r3, #0]
    13b0:	68c1      	ldr	r1, [r0, #12]
    13b2:	7d0a      	ldrb	r2, [r1, #20]
    13b4:	f002 0001 	and.w	r0, r2, #1
    13b8:	4770      	bx	lr
    13ba:	bf00      	nop
    13bc:	10000448 	.word	0x10000448

000013c0 <__mriPlatform_CommReceiveChar>:
    13c0:	b508      	push	{r3, lr}
    13c2:	f7ff fff3 	bl	13ac <__mriPlatform_CommHasReceiveData>
    13c6:	2800      	cmp	r0, #0
    13c8:	d0fb      	beq.n	13c2 <__mriPlatform_CommReceiveChar+0x2>
    13ca:	4b02      	ldr	r3, [pc, #8]	; (13d4 <__mriPlatform_CommReceiveChar+0x14>)
    13cc:	6818      	ldr	r0, [r3, #0]
    13ce:	68c1      	ldr	r1, [r0, #12]
    13d0:	7808      	ldrb	r0, [r1, #0]
    13d2:	bd08      	pop	{r3, pc}
    13d4:	10000448 	.word	0x10000448

000013d8 <__mriPlatform_CommSendChar>:
    13d8:	4b05      	ldr	r3, [pc, #20]	; (13f0 <__mriPlatform_CommSendChar+0x18>)
    13da:	6819      	ldr	r1, [r3, #0]
    13dc:	68cb      	ldr	r3, [r1, #12]
    13de:	7d1a      	ldrb	r2, [r3, #20]
    13e0:	f002 0120 	and.w	r1, r2, #32
    13e4:	b2ca      	uxtb	r2, r1
    13e6:	2a00      	cmp	r2, #0
    13e8:	d0f9      	beq.n	13de <__mriPlatform_CommSendChar+0x6>
    13ea:	b2c0      	uxtb	r0, r0
    13ec:	7018      	strb	r0, [r3, #0]
    13ee:	4770      	bx	lr
    13f0:	10000448 	.word	0x10000448

000013f4 <__mriPlatform_CommCausedInterrupt>:
    13f4:	b510      	push	{r4, lr}
    13f6:	f000 fb73 	bl	1ae0 <__mriGetIPSR>
    13fa:	4604      	mov	r4, r0
    13fc:	f7ff ffc8 	bl	1390 <__mriPlatform_CommUartIndex>
    1400:	b2e3      	uxtb	r3, r4
    1402:	3015      	adds	r0, #21
    1404:	1a19      	subs	r1, r3, r0
    1406:	4248      	negs	r0, r1
    1408:	4148      	adcs	r0, r1
    140a:	bd10      	pop	{r4, pc}

0000140c <__mriPlatform_CommClearInterrupt>:
    140c:	4b02      	ldr	r3, [pc, #8]	; (1418 <__mriPlatform_CommClearInterrupt+0xc>)
    140e:	6818      	ldr	r0, [r3, #0]
    1410:	68c1      	ldr	r1, [r0, #12]
    1412:	688b      	ldr	r3, [r1, #8]
    1414:	4770      	bx	lr
    1416:	bf00      	nop
    1418:	10000448 	.word	0x10000448

0000141c <__mriPlatform_CommSharingWithApplication>:
    141c:	4b02      	ldr	r3, [pc, #8]	; (1428 <__mriPlatform_CommSharingWithApplication+0xc>)
    141e:	6858      	ldr	r0, [r3, #4]
    1420:	f000 0001 	and.w	r0, r0, #1
    1424:	4770      	bx	lr
    1426:	bf00      	nop
    1428:	10000448 	.word	0x10000448

0000142c <__mriPlatform_CommShouldWaitForGdbConnect>:
    142c:	4b05      	ldr	r3, [pc, #20]	; (1444 <__mriPlatform_CommShouldWaitForGdbConnect+0x18>)
    142e:	6858      	ldr	r0, [r3, #4]
    1430:	0782      	lsls	r2, r0, #30
    1432:	d404      	bmi.n	143e <__mriPlatform_CommShouldWaitForGdbConnect+0x12>
    1434:	f000 0101 	and.w	r1, r0, #1
    1438:	f081 0001 	eor.w	r0, r1, #1
    143c:	4770      	bx	lr
    143e:	2000      	movs	r0, #0
    1440:	4770      	bx	lr
    1442:	bf00      	nop
    1444:	10000448 	.word	0x10000448

00001448 <__mriPlatform_CommIsWaitingForGdbToConnect>:
    1448:	b508      	push	{r3, lr}
    144a:	f7ff ffef 	bl	142c <__mriPlatform_CommShouldWaitForGdbConnect>
    144e:	b128      	cbz	r0, 145c <__mriPlatform_CommIsWaitingForGdbToConnect+0x14>
    1450:	4b03      	ldr	r3, [pc, #12]	; (1460 <__mriPlatform_CommIsWaitingForGdbToConnect+0x18>)
    1452:	6818      	ldr	r0, [r3, #0]
    1454:	68c1      	ldr	r1, [r0, #12]
    1456:	6a0a      	ldr	r2, [r1, #32]
    1458:	f002 0001 	and.w	r0, r2, #1
    145c:	bd08      	pop	{r3, pc}
    145e:	bf00      	nop
    1460:	10000448 	.word	0x10000448

00001464 <__mriPlatform_CommPrepareToWaitForGdbConnection>:
    1464:	b508      	push	{r3, lr}
    1466:	f7ff ffe1 	bl	142c <__mriPlatform_CommShouldWaitForGdbConnect>
    146a:	b120      	cbz	r0, 1476 <__mriPlatform_CommPrepareToWaitForGdbConnection+0x12>
    146c:	4b02      	ldr	r3, [pc, #8]	; (1478 <__mriPlatform_CommPrepareToWaitForGdbConnection+0x14>)
    146e:	2207      	movs	r2, #7
    1470:	6818      	ldr	r0, [r3, #0]
    1472:	68c1      	ldr	r1, [r0, #12]
    1474:	620a      	str	r2, [r1, #32]
    1476:	bd08      	pop	{r3, pc}
    1478:	10000448 	.word	0x10000448

0000147c <__mriLpc176xUart_Init>:
    147c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, lr}
    1480:	b087      	sub	sp, #28
    1482:	4604      	mov	r4, r0
    1484:	2100      	movs	r1, #0
    1486:	220c      	movs	r2, #12
    1488:	a803      	add	r0, sp, #12
    148a:	f002 f80c 	bl	34a6 <memset>
    148e:	4995      	ldr	r1, [pc, #596]	; (16e4 <__mriLpc176xUart_Init+0x268>)
    1490:	4620      	mov	r0, r4
    1492:	f7ff f9c7 	bl	824 <__mriToken_MatchingString>
    1496:	4620      	mov	r0, r4
    1498:	4993      	ldr	r1, [pc, #588]	; (16e8 <__mriLpc176xUart_Init+0x26c>)
    149a:	f7ff f9c3 	bl	824 <__mriToken_MatchingString>
    149e:	b108      	cbz	r0, 14a4 <__mriLpc176xUart_Init+0x28>
    14a0:	2303      	movs	r3, #3
    14a2:	9304      	str	r3, [sp, #16]
    14a4:	4620      	mov	r0, r4
    14a6:	4991      	ldr	r1, [pc, #580]	; (16ec <__mriLpc176xUart_Init+0x270>)
    14a8:	f7ff f9bc 	bl	824 <__mriToken_MatchingString>
    14ac:	b108      	cbz	r0, 14b2 <__mriLpc176xUart_Init+0x36>
    14ae:	2001      	movs	r0, #1
    14b0:	9004      	str	r0, [sp, #16]
    14b2:	4620      	mov	r0, r4
    14b4:	498e      	ldr	r1, [pc, #568]	; (16f0 <__mriLpc176xUart_Init+0x274>)
    14b6:	f7ff f9b5 	bl	824 <__mriToken_MatchingString>
    14ba:	b108      	cbz	r0, 14c0 <__mriLpc176xUart_Init+0x44>
    14bc:	2102      	movs	r1, #2
    14be:	9104      	str	r1, [sp, #16]
    14c0:	4620      	mov	r0, r4
    14c2:	498c      	ldr	r1, [pc, #560]	; (16f4 <__mriLpc176xUart_Init+0x278>)
    14c4:	f7ff f9ae 	bl	824 <__mriToken_MatchingString>
    14c8:	b108      	cbz	r0, 14ce <__mriLpc176xUart_Init+0x52>
    14ca:	2200      	movs	r2, #0
    14cc:	9204      	str	r2, [sp, #16]
    14ce:	4620      	mov	r0, r4
    14d0:	4989      	ldr	r1, [pc, #548]	; (16f8 <__mriLpc176xUart_Init+0x27c>)
    14d2:	f7ff f9a7 	bl	824 <__mriToken_MatchingString>
    14d6:	b108      	cbz	r0, 14dc <__mriLpc176xUart_Init+0x60>
    14d8:	2701      	movs	r7, #1
    14da:	9704      	str	r7, [sp, #16]
    14dc:	4620      	mov	r0, r4
    14de:	4987      	ldr	r1, [pc, #540]	; (16fc <__mriLpc176xUart_Init+0x280>)
    14e0:	f7ff f9a0 	bl	824 <__mriToken_MatchingString>
    14e4:	b108      	cbz	r0, 14ea <__mriLpc176xUart_Init+0x6e>
    14e6:	2302      	movs	r3, #2
    14e8:	9304      	str	r3, [sp, #16]
    14ea:	4620      	mov	r0, r4
    14ec:	4984      	ldr	r1, [pc, #528]	; (1700 <__mriLpc176xUart_Init+0x284>)
    14ee:	f7ff f999 	bl	824 <__mriToken_MatchingString>
    14f2:	b108      	cbz	r0, 14f8 <__mriLpc176xUart_Init+0x7c>
    14f4:	2003      	movs	r0, #3
    14f6:	9004      	str	r0, [sp, #16]
    14f8:	4620      	mov	r0, r4
    14fa:	4982      	ldr	r1, [pc, #520]	; (1704 <__mriLpc176xUart_Init+0x288>)
    14fc:	f7ff f9a7 	bl	84e <__mriToken_MatchingStringPrefix>
    1500:	b1d8      	cbz	r0, 153a <__mriLpc176xUart_Init+0xbe>
    1502:	300e      	adds	r0, #14
    1504:	2300      	movs	r3, #0
    1506:	f810 1b01 	ldrb.w	r1, [r0], #1
    150a:	b1a9      	cbz	r1, 1538 <__mriLpc176xUart_Init+0xbc>
    150c:	4a7e      	ldr	r2, [pc, #504]	; (1708 <__mriLpc176xUart_Init+0x28c>)
    150e:	2500      	movs	r5, #0
    1510:	6015      	str	r5, [r2, #0]
    1512:	f810 1c01 	ldrb.w	r1, [r0, #-1]
    1516:	3930      	subs	r1, #48	; 0x30
    1518:	b2ce      	uxtb	r6, r1
    151a:	2e09      	cmp	r6, #9
    151c:	d902      	bls.n	1524 <__mriLpc176xUart_Init+0xa8>
    151e:	2709      	movs	r7, #9
    1520:	6017      	str	r7, [r2, #0]
    1522:	4629      	mov	r1, r5
    1524:	6812      	ldr	r2, [r2, #0]
    1526:	b11a      	cbz	r2, 1530 <__mriLpc176xUart_Init+0xb4>
    1528:	4977      	ldr	r1, [pc, #476]	; (1708 <__mriLpc176xUart_Init+0x28c>)
    152a:	2000      	movs	r0, #0
    152c:	6008      	str	r0, [r1, #0]
    152e:	e003      	b.n	1538 <__mriLpc176xUart_Init+0xbc>
    1530:	270a      	movs	r7, #10
    1532:	fb07 1303 	mla	r3, r7, r3, r1
    1536:	e7e6      	b.n	1506 <__mriLpc176xUart_Init+0x8a>
    1538:	9305      	str	r3, [sp, #20]
    153a:	4620      	mov	r0, r4
    153c:	4973      	ldr	r1, [pc, #460]	; (170c <__mriLpc176xUart_Init+0x290>)
    153e:	f7ff f971 	bl	824 <__mriToken_MatchingString>
    1542:	b108      	cbz	r0, 1548 <__mriLpc176xUart_Init+0xcc>
    1544:	2201      	movs	r2, #1
    1546:	9203      	str	r2, [sp, #12]
    1548:	9f04      	ldr	r7, [sp, #16]
    154a:	2124      	movs	r1, #36	; 0x24
    154c:	4379      	muls	r1, r7
    154e:	4870      	ldr	r0, [pc, #448]	; (1710 <__mriLpc176xUart_Init+0x294>)
    1550:	4a70      	ldr	r2, [pc, #448]	; (1714 <__mriLpc176xUart_Init+0x298>)
    1552:	9f03      	ldr	r7, [sp, #12]
    1554:	1843      	adds	r3, r0, r1
    1556:	6013      	str	r3, [r2, #0]
    1558:	b127      	cbz	r7, 1564 <__mriLpc176xUart_Init+0xe8>
    155a:	6851      	ldr	r1, [r2, #4]
    155c:	f041 0301 	orr.w	r3, r1, #1
    1560:	6053      	str	r3, [r2, #4]
    1562:	e0bb      	b.n	16dc <__mriLpc176xUart_Init+0x260>
    1564:	4a6c      	ldr	r2, [pc, #432]	; (1718 <__mriLpc176xUart_Init+0x29c>)
    1566:	691c      	ldr	r4, [r3, #16]
    1568:	f8d2 50c4 	ldr.w	r5, [r2, #196]	; 0xc4
    156c:	4325      	orrs	r5, r4
    156e:	f8c2 50c4 	str.w	r5, [r2, #196]	; 0xc4
    1572:	5842      	ldr	r2, [r0, r1]
    1574:	6959      	ldr	r1, [r3, #20]
    1576:	6810      	ldr	r0, [r2, #0]
    1578:	ea20 0401 	bic.w	r4, r0, r1
    157c:	6014      	str	r4, [r2, #0]
    157e:	6958      	ldr	r0, [r3, #20]
    1580:	6815      	ldr	r5, [r2, #0]
    1582:	f000 3155 	and.w	r1, r0, #1431655765	; 0x55555555
    1586:	4329      	orrs	r1, r5
    1588:	6011      	str	r1, [r2, #0]
    158a:	68da      	ldr	r2, [r3, #12]
    158c:	2510      	movs	r5, #16
    158e:	f882 5028 	strb.w	r5, [r2, #40]	; 0x28
    1592:	68dc      	ldr	r4, [r3, #12]
    1594:	2101      	movs	r1, #1
    1596:	7221      	strb	r1, [r4, #8]
    1598:	68da      	ldr	r2, [r3, #12]
    159a:	2003      	movs	r0, #3
    159c:	7310      	strb	r0, [r2, #12]
    159e:	9a05      	ldr	r2, [sp, #20]
    15a0:	2a00      	cmp	r2, #0
    15a2:	d05b      	beq.n	165c <__mriLpc176xUart_Init+0x1e0>
    15a4:	4c5d      	ldr	r4, [pc, #372]	; (171c <__mriLpc176xUart_Init+0x2a0>)
    15a6:	6820      	ldr	r0, [r4, #0]
    15a8:	ea4f 1c10 	mov.w	r12, r0, lsr #4
    15ac:	fbbc f4f2 	udiv	r4, r12, r2
    15b0:	fb02 f004 	mul.w	r0, r2, r4
    15b4:	4560      	cmp	r0, r12
    15b6:	d03a      	beq.n	162e <__mriLpc176xUart_Init+0x1b2>
    15b8:	0116      	lsls	r6, r2, #4
    15ba:	ea4f 2c0c 	mov.w	r12, r12, lsl #8
    15be:	9601      	str	r6, [sp, #4]
    15c0:	460d      	mov	r5, r1
    15c2:	f04f 38ff 	mov.w	r8, #4294967295	; 0xffffffff
    15c6:	ea4f 1e01 	mov.w	lr, r1, lsl #4
    15ca:	4616      	mov	r6, r2
    15cc:	2001      	movs	r0, #1
    15ce:	4288      	cmp	r0, r1
    15d0:	d228      	bcs.n	1624 <__mriLpc176xUart_Init+0x1a8>
    15d2:	ea4f 1906 	mov.w	r9, r6, lsl #4
    15d6:	fbb9 fafe 	udiv	r10, r9, lr
    15da:	eb0a 0b02 	add.w	r11, r10, r2
    15de:	fbbc f9fb 	udiv	r9, r12, r11
    15e2:	f109 0a80 	add.w	r10, r9, #128	; 0x80
    15e6:	ea4f 291a 	mov.w	r9, r10, lsr #8
    15ea:	ea4f 1a09 	mov.w	r10, r9, lsl #4
    15ee:	fb00 fb0a 	mul.w	r11, r0, r10
    15f2:	ea4f 1b0b 	mov.w	r11, r11, lsl #4
    15f6:	fbbb fbfe 	udiv	r11, r11, lr
    15fa:	44da      	add	r10, r11
    15fc:	f8dd b004 	ldr.w	r11, [sp, #4]
    1600:	fbbc fafa 	udiv	r10, r12, r10
    1604:	ebcb 0a0a 	rsb	r10, r11, r10
    1608:	f1ba 0f00 	cmp.w	r10, #0
    160c:	bfb8      	it	lt
    160e:	f1ca 0a00 	rsblt	r10, r10, #0
    1612:	45c2      	cmp	r10, r8
    1614:	d203      	bcs.n	161e <__mriLpc176xUart_Init+0x1a2>
    1616:	4607      	mov	r7, r0
    1618:	460d      	mov	r5, r1
    161a:	464c      	mov	r4, r9
    161c:	46d0      	mov	r8, r10
    161e:	3001      	adds	r0, #1
    1620:	18b6      	adds	r6, r6, r2
    1622:	e7d4      	b.n	15ce <__mriLpc176xUart_Init+0x152>
    1624:	3101      	adds	r1, #1
    1626:	2910      	cmp	r1, #16
    1628:	d1cd      	bne.n	15c6 <__mriLpc176xUart_Init+0x14a>
    162a:	ea47 1505 	orr.w	r5, r7, r5, lsl #4
    162e:	68d8      	ldr	r0, [r3, #12]
    1630:	b2ed      	uxtb	r5, r5
    1632:	7b01      	ldrb	r1, [r0, #12]
    1634:	f041 0280 	orr.w	r2, r1, #128	; 0x80
    1638:	b2e1      	uxtb	r1, r4
    163a:	f3c4 2407 	ubfx	r4, r4, #8, #8
    163e:	7302      	strb	r2, [r0, #12]
    1640:	7001      	strb	r1, [r0, #0]
    1642:	7104      	strb	r4, [r0, #4]
    1644:	f880 5028 	strb.w	r5, [r0, #40]	; 0x28
    1648:	68d8      	ldr	r0, [r3, #12]
    164a:	4c32      	ldr	r4, [pc, #200]	; (1714 <__mriLpc176xUart_Init+0x298>)
    164c:	7b02      	ldrb	r2, [r0, #12]
    164e:	f002 017f 	and.w	r1, r2, #127	; 0x7f
    1652:	7301      	strb	r1, [r0, #12]
    1654:	6860      	ldr	r0, [r4, #4]
    1656:	f040 0202 	orr.w	r2, r0, #2
    165a:	6062      	str	r2, [r4, #4]
    165c:	685a      	ldr	r2, [r3, #4]
    165e:	6999      	ldr	r1, [r3, #24]
    1660:	6814      	ldr	r4, [r2, #0]
    1662:	6a18      	ldr	r0, [r3, #32]
    1664:	ea24 0401 	bic.w	r4, r4, r1
    1668:	4008      	ands	r0, r1
    166a:	4304      	orrs	r4, r0
    166c:	6014      	str	r4, [r2, #0]
    166e:	689a      	ldr	r2, [r3, #8]
    1670:	69d9      	ldr	r1, [r3, #28]
    1672:	6814      	ldr	r4, [r2, #0]
    1674:	6a18      	ldr	r0, [r3, #32]
    1676:	ea24 0401 	bic.w	r4, r4, r1
    167a:	4008      	ands	r0, r1
    167c:	ea44 0100 	orr.w	r1, r4, r0
    1680:	6011      	str	r1, [r2, #0]
    1682:	68da      	ldr	r2, [r3, #12]
    1684:	7b11      	ldrb	r1, [r2, #12]
    1686:	7b10      	ldrb	r0, [r2, #12]
    1688:	f000 007f 	and.w	r0, r0, #127	; 0x7f
    168c:	7310      	strb	r0, [r2, #12]
    168e:	68da      	ldr	r2, [r3, #12]
    1690:	2001      	movs	r0, #1
    1692:	6050      	str	r0, [r2, #4]
    1694:	68db      	ldr	r3, [r3, #12]
    1696:	7319      	strb	r1, [r3, #12]
    1698:	f7ff fee4 	bl	1464 <__mriPlatform_CommPrepareToWaitForGdbConnection>
    169c:	f7ff fe78 	bl	1390 <__mriPlatform_CommUartIndex>
    16a0:	1d41      	adds	r1, r0, #5
    16a2:	b2c8      	uxtb	r0, r1
    16a4:	b2c2      	uxtb	r2, r0
    16a6:	b253      	sxtb	r3, r2
    16a8:	2b00      	cmp	r3, #0
    16aa:	da06      	bge.n	16ba <__mriLpc176xUart_Init+0x23e>
    16ac:	4b1c      	ldr	r3, [pc, #112]	; (1720 <__mriLpc176xUart_Init+0x2a4>)
    16ae:	f000 010f 	and.w	r1, r0, #15
    16b2:	18cb      	adds	r3, r1, r3
    16b4:	2100      	movs	r1, #0
    16b6:	7619      	strb	r1, [r3, #24]
    16b8:	e006      	b.n	16c8 <__mriLpc176xUart_Init+0x24c>
    16ba:	f103 4160 	add.w	r1, r3, #3758096384	; 0xe0000000
    16be:	f501 4361 	add.w	r3, r1, #57600	; 0xe100
    16c2:	2100      	movs	r1, #0
    16c4:	f883 1300 	strb.w	r1, [r3, #768]	; 0x300
    16c8:	b252      	sxtb	r2, r2
    16ca:	f000 001f 	and.w	r0, r0, #31
    16ce:	2301      	movs	r3, #1
    16d0:	0951      	lsrs	r1, r2, #5
    16d2:	fa03 f200 	lsl.w	r2, r3, r0
    16d6:	4813      	ldr	r0, [pc, #76]	; (1724 <__mriLpc176xUart_Init+0x2a8>)
    16d8:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
    16dc:	b007      	add	sp, #28
    16de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, r10, r11, pc}
    16e2:	bf00      	nop
    16e4:	00003b7c 	.word	0x00003b7c
    16e8:	00003b8e 	.word	0x00003b8e
    16ec:	00003ba3 	.word	0x00003ba3
    16f0:	00003bb9 	.word	0x00003bb9
    16f4:	00003bcf 	.word	0x00003bcf
    16f8:	00003bda 	.word	0x00003bda
    16fc:	00003be5 	.word	0x00003be5
    1700:	00003bf0 	.word	0x00003bf0
    1704:	00003adc 	.word	0x00003adc
    1708:	1000014c 	.word	0x1000014c
    170c:	00003bfb 	.word	0x00003bfb
    1710:	00003aec 	.word	0x00003aec
    1714:	10000448 	.word	0x10000448
    1718:	400fc000 	.word	0x400fc000
    171c:	100000c8 	.word	0x100000c8
    1720:	e000ecfc 	.word	0xe000ecfc
    1724:	e000e100 	.word	0xe000e100

00001728 <__mriPlatform_CommWaitForReceiveDataToStop>:
    1728:	b538      	push	{r3, r4, r5, lr}
    172a:	4b13      	ldr	r3, [pc, #76]	; (1778 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    172c:	681c      	ldr	r4, [r3, #0]
    172e:	685d      	ldr	r5, [r3, #4]
    1730:	68da      	ldr	r2, [r3, #12]
    1732:	f022 407f 	bic.w	r0, r2, #4278190080	; 0xff000000
    1736:	b140      	cbz	r0, 174a <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    1738:	2200      	movs	r2, #0
    173a:	601a      	str	r2, [r3, #0]
    173c:	68d9      	ldr	r1, [r3, #12]
    173e:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    1742:	6058      	str	r0, [r3, #4]
    1744:	609a      	str	r2, [r3, #8]
    1746:	2205      	movs	r2, #5
    1748:	601a      	str	r2, [r3, #0]
    174a:	f7ff fe2f 	bl	13ac <__mriPlatform_CommHasReceiveData>
    174e:	4b0a      	ldr	r3, [pc, #40]	; (1778 <__mriPlatform_CommWaitForReceiveDataToStop+0x50>)
    1750:	b930      	cbnz	r0, 1760 <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    1752:	68d9      	ldr	r1, [r3, #12]
    1754:	f021 407f 	bic.w	r0, r1, #4278190080	; 0xff000000
    1758:	b110      	cbz	r0, 1760 <__mriPlatform_CommWaitForReceiveDataToStop+0x38>
    175a:	681a      	ldr	r2, [r3, #0]
    175c:	03d1      	lsls	r1, r2, #15
    175e:	d5f4      	bpl.n	174a <__mriPlatform_CommWaitForReceiveDataToStop+0x22>
    1760:	f025 457f 	bic.w	r5, r5, #4278190080	; 0xff000000
    1764:	605d      	str	r5, [r3, #4]
    1766:	601c      	str	r4, [r3, #0]
    1768:	f7ff fe20 	bl	13ac <__mriPlatform_CommHasReceiveData>
    176c:	b110      	cbz	r0, 1774 <__mriPlatform_CommWaitForReceiveDataToStop+0x4c>
    176e:	f7ff fe27 	bl	13c0 <__mriPlatform_CommReceiveChar>
    1772:	e7da      	b.n	172a <__mriPlatform_CommWaitForReceiveDataToStop+0x2>
    1774:	bd38      	pop	{r3, r4, r5, pc}
    1776:	bf00      	nop
    1778:	e000e010 	.word	0xe000e010

0000177c <__mriLpc176x_Init>:
    177c:	b538      	push	{r3, r4, r5, lr}
    177e:	4c0c      	ldr	r4, [pc, #48]	; (17b0 <__mriLpc176x_Init+0x34>)
    1780:	2300      	movs	r3, #0
    1782:	6023      	str	r3, [r4, #0]
    1784:	4605      	mov	r5, r0
    1786:	f7ff fa19 	bl	bbc <__mriCortexMInit>
    178a:	6823      	ldr	r3, [r4, #0]
    178c:	b973      	cbnz	r3, 17ac <__mriLpc176x_Init+0x30>
    178e:	f103 4260 	add.w	r2, r3, #3758096384	; 0xe0000000
    1792:	3301      	adds	r3, #1
    1794:	2108      	movs	r1, #8
    1796:	f502 4061 	add.w	r0, r2, #57600	; 0xe100
    179a:	2b23      	cmp	r3, #35	; 0x23
    179c:	f880 1300 	strb.w	r1, [r0, #768]	; 0x300
    17a0:	d1f5      	bne.n	178e <__mriLpc176x_Init+0x12>
    17a2:	4628      	mov	r0, r5
    17a4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    17a8:	f7ff be68 	b.w	147c <__mriLpc176xUart_Init>
    17ac:	bd38      	pop	{r3, r4, r5, pc}
    17ae:	bf00      	nop
    17b0:	1000014c 	.word	0x1000014c

000017b4 <__mriPlatform_GetDeviceMemoryMapXmlSize>:
    17b4:	f240 50c6 	movw	r0, #1478	; 0x5c6
    17b8:	4770      	bx	lr
	...

000017bc <__mriPlatform_GetDeviceMemoryMapXml>:
    17bc:	4800      	ldr	r0, [pc, #0]	; (17c0 <__mriPlatform_GetDeviceMemoryMapXml+0x4>)
    17be:	4770      	bx	lr
    17c0:	00003c0a 	.word	0x00003c0a

000017c4 <__mriPlatform_Init>:
    17c4:	4a1f      	ldr	r2, [pc, #124]	; (1844 <CFSR_STACK_ERROR_BITS+0x2c>)
    17c6:	2300      	movs	r3, #0
    17c8:	b570      	push	{r4, r5, r6, lr}
    17ca:	f842 3b04 	str.w	r3, [r2], #4
    17ce:	4b1e      	ldr	r3, [pc, #120]	; (1848 <CFSR_STACK_ERROR_BITS+0x30>)
    17d0:	4606      	mov	r6, r0
    17d2:	f103 0520 	add.w	r5, r3, #32
    17d6:	6818      	ldr	r0, [r3, #0]
    17d8:	6859      	ldr	r1, [r3, #4]
    17da:	4614      	mov	r4, r2
    17dc:	c403      	stmia	r4!, {r0, r1}
    17de:	3308      	adds	r3, #8
    17e0:	42ab      	cmp	r3, r5
    17e2:	4622      	mov	r2, r4
    17e4:	d1f7      	bne.n	17d6 <__mriPlatform_Init+0x12>
    17e6:	6818      	ldr	r0, [r3, #0]
    17e8:	4918      	ldr	r1, [pc, #96]	; (184c <CFSR_STACK_ERROR_BITS+0x34>)
    17ea:	6020      	str	r0, [r4, #0]
    17ec:	680b      	ldr	r3, [r1, #0]
    17ee:	4c18      	ldr	r4, [pc, #96]	; (1850 <CFSR_STACK_ERROR_BITS+0x38>)
    17f0:	2500      	movs	r5, #0
    17f2:	07d8      	lsls	r0, r3, #31
    17f4:	6025      	str	r5, [r4, #0]
    17f6:	d51b      	bpl.n	1830 <CFSR_STACK_ERROR_BITS+0x18>
    17f8:	4816      	ldr	r0, [pc, #88]	; (1854 <CFSR_STACK_ERROR_BITS+0x3c>)
    17fa:	f000 fa4f 	bl	1c9c <__mriGetMbedUid>
    17fe:	f000 fa41 	bl	1c84 <__mriDisableMbed>
    1802:	6025      	str	r5, [r4, #0]
    1804:	f241 3089 	movw	r0, #5001	; 0x1389
    1808:	3801      	subs	r0, #1
    180a:	4a10      	ldr	r2, [pc, #64]	; (184c <CFSR_STACK_ERROR_BITS+0x34>)
    180c:	d002      	beq.n	1814 <__mriPlatform_Init+0x50>
    180e:	6811      	ldr	r1, [r2, #0]
    1810:	07c9      	lsls	r1, r1, #31
    1812:	d4f9      	bmi.n	1808 <__mriPlatform_Init+0x44>
    1814:	6813      	ldr	r3, [r2, #0]
    1816:	480e      	ldr	r0, [pc, #56]	; (1850 <CFSR_STACK_ERROR_BITS+0x38>)
    1818:	f013 0f01 	tst.w	r3, #1
    181c:	d001      	beq.n	1822 <CFSR_STACK_ERROR_BITS+0xa>
    181e:	2205      	movs	r2, #5
    1820:	6002      	str	r2, [r0, #0]
    1822:	6801      	ldr	r1, [r0, #0]
    1824:	b921      	cbnz	r1, 1830 <CFSR_STACK_ERROR_BITS+0x18>
    1826:	4b07      	ldr	r3, [pc, #28]	; (1844 <CFSR_STACK_ERROR_BITS+0x2c>)
    1828:	6818      	ldr	r0, [r3, #0]
    182a:	f040 0201 	orr.w	r2, r0, #1
    182e:	601a      	str	r2, [r3, #0]
    1830:	4907      	ldr	r1, [pc, #28]	; (1850 <CFSR_STACK_ERROR_BITS+0x38>)
    1832:	680b      	ldr	r3, [r1, #0]
    1834:	b923      	cbnz	r3, 1840 <CFSR_STACK_ERROR_BITS+0x28>
    1836:	4630      	mov	r0, r6
    1838:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    183c:	f7ff bf9e 	b.w	177c <__mriLpc176x_Init>
    1840:	bd70      	pop	{r4, r5, r6, pc}
    1842:	bf00      	nop
    1844:	10000118 	.word	0x10000118
    1848:	000041d1 	.word	0x000041d1
    184c:	e000edf0 	.word	0xe000edf0
    1850:	1000014c 	.word	0x1000014c
    1854:	1000011c 	.word	0x1000011c

00001858 <__mriMbed1768_GetMbedUid>:
    1858:	4800      	ldr	r0, [pc, #0]	; (185c <__mriMbed1768_GetMbedUid+0x4>)
    185a:	4770      	bx	lr
    185c:	1000011c 	.word	0x1000011c

00001860 <__mriSemihost_IsDebuggeeMakingSemihostCall>:
    1860:	b508      	push	{r3, lr}
    1862:	f7ff fb3d 	bl	ee0 <__mriPlatform_TypeOfCurrentInstruction>
    1866:	3801      	subs	r0, #1
    1868:	b2c0      	uxtb	r0, r0
    186a:	2801      	cmp	r0, #1
    186c:	bf8c      	ite	hi
    186e:	2000      	movhi	r0, #0
    1870:	2001      	movls	r0, #1
    1872:	bd08      	pop	{r3, pc}

00001874 <__mriSemihost_HandleSemihostRequest>:
    1874:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    1876:	f7ff fb33 	bl	ee0 <__mriPlatform_TypeOfCurrentInstruction>
    187a:	4604      	mov	r4, r0
    187c:	4668      	mov	r0, sp
    187e:	f7ff faeb 	bl	e58 <__mriPlatform_GetSemihostCallParameters>
    1882:	2c01      	cmp	r4, #1
    1884:	d103      	bne.n	188e <__mriSemihost_HandleSemihostRequest+0x1a>
    1886:	4668      	mov	r0, sp
    1888:	f000 f894 	bl	19b4 <__mriSemihost_HandleMbedSemihostRequest>
    188c:	e006      	b.n	189c <__mriSemihost_HandleSemihostRequest+0x28>
    188e:	2c02      	cmp	r4, #2
    1890:	d103      	bne.n	189a <__mriSemihost_HandleSemihostRequest+0x26>
    1892:	4668      	mov	r0, sp
    1894:	f000 f804 	bl	18a0 <__mriSemihost_HandleNewlibSemihostRequest>
    1898:	e000      	b.n	189c <__mriSemihost_HandleSemihostRequest+0x28>
    189a:	2000      	movs	r0, #0
    189c:	b004      	add	sp, #16
    189e:	bd10      	pop	{r4, pc}

000018a0 <__mriSemihost_HandleNewlibSemihostRequest>:
    18a0:	b510      	push	{r4, lr}
    18a2:	b08c      	sub	sp, #48	; 0x30
    18a4:	4604      	mov	r4, r0
    18a6:	f7ff fabf 	bl	e28 <__mriPlatform_GetProgramCounter>
    18aa:	4b33      	ldr	r3, [pc, #204]	; (1978 <__mriSemihost_HandleNewlibSemihostRequest+0xd8>)
    18ac:	f040 0001 	orr.w	r0, r0, #1
    18b0:	4298      	cmp	r0, r3
    18b2:	d109      	bne.n	18c8 <__mriSemihost_HandleNewlibSemihostRequest+0x28>
    18b4:	6820      	ldr	r0, [r4, #0]
    18b6:	6863      	ldr	r3, [r4, #4]
    18b8:	68a1      	ldr	r1, [r4, #8]
    18ba:	9002      	str	r0, [sp, #8]
    18bc:	a802      	add	r0, sp, #8
    18be:	9303      	str	r3, [sp, #12]
    18c0:	9104      	str	r1, [sp, #16]
    18c2:	f000 fd3d 	bl	2340 <__mriIssueGdbFileWriteRequest>
    18c6:	e055      	b.n	1974 <__mriSemihost_HandleNewlibSemihostRequest+0xd4>
    18c8:	492c      	ldr	r1, [pc, #176]	; (197c <__mriSemihost_HandleNewlibSemihostRequest+0xdc>)
    18ca:	4288      	cmp	r0, r1
    18cc:	d109      	bne.n	18e2 <__mriSemihost_HandleNewlibSemihostRequest+0x42>
    18ce:	6823      	ldr	r3, [r4, #0]
    18d0:	6861      	ldr	r1, [r4, #4]
    18d2:	68a2      	ldr	r2, [r4, #8]
    18d4:	a802      	add	r0, sp, #8
    18d6:	9302      	str	r3, [sp, #8]
    18d8:	9103      	str	r1, [sp, #12]
    18da:	9204      	str	r2, [sp, #16]
    18dc:	f000 fd54 	bl	2388 <__mriIssueGdbFileReadRequest>
    18e0:	e048      	b.n	1974 <__mriSemihost_HandleNewlibSemihostRequest+0xd4>
    18e2:	4a27      	ldr	r2, [pc, #156]	; (1980 <__mriSemihost_HandleNewlibSemihostRequest+0xe0>)
    18e4:	4290      	cmp	r0, r2
    18e6:	d10c      	bne.n	1902 <__mriSemihost_HandleNewlibSemihostRequest+0x62>
    18e8:	6820      	ldr	r0, [r4, #0]
    18ea:	9008      	str	r0, [sp, #32]
    18ec:	f001 fdee 	bl	34cc <strlen>
    18f0:	9009      	str	r0, [sp, #36]	; 0x24
    18f2:	68a0      	ldr	r0, [r4, #8]
    18f4:	6862      	ldr	r2, [r4, #4]
    18f6:	900b      	str	r0, [sp, #44]	; 0x2c
    18f8:	a808      	add	r0, sp, #32
    18fa:	920a      	str	r2, [sp, #40]	; 0x28
    18fc:	f000 fcf2 	bl	22e4 <__mriIssueGdbFileOpenRequest>
    1900:	e038      	b.n	1974 <__mriSemihost_HandleNewlibSemihostRequest+0xd4>
    1902:	4b20      	ldr	r3, [pc, #128]	; (1984 <__mriSemihost_HandleNewlibSemihostRequest+0xe4>)
    1904:	4298      	cmp	r0, r3
    1906:	d108      	bne.n	191a <__mriSemihost_HandleNewlibSemihostRequest+0x7a>
    1908:	6820      	ldr	r0, [r4, #0]
    190a:	9000      	str	r0, [sp, #0]
    190c:	f001 fdde 	bl	34cc <strlen>
    1910:	9001      	str	r0, [sp, #4]
    1912:	4668      	mov	r0, sp
    1914:	f000 fdb2 	bl	247c <__mriIssueGdbFileUnlinkRequest>
    1918:	e02c      	b.n	1974 <__mriSemihost_HandleNewlibSemihostRequest+0xd4>
    191a:	491b      	ldr	r1, [pc, #108]	; (1988 <__mriSemihost_HandleNewlibSemihostRequest+0xe8>)
    191c:	4288      	cmp	r0, r1
    191e:	d109      	bne.n	1934 <__mriSemihost_HandleNewlibSemihostRequest+0x94>
    1920:	6820      	ldr	r0, [r4, #0]
    1922:	6863      	ldr	r3, [r4, #4]
    1924:	68a1      	ldr	r1, [r4, #8]
    1926:	9005      	str	r0, [sp, #20]
    1928:	a805      	add	r0, sp, #20
    192a:	9306      	str	r3, [sp, #24]
    192c:	9107      	str	r1, [sp, #28]
    192e:	f000 fd63 	bl	23f8 <__mriIssueGdbFileSeekRequest>
    1932:	e01f      	b.n	1974 <__mriSemihost_HandleNewlibSemihostRequest+0xd4>
    1934:	4a15      	ldr	r2, [pc, #84]	; (198c <__mriSemihost_HandleNewlibSemihostRequest+0xec>)
    1936:	4290      	cmp	r0, r2
    1938:	d103      	bne.n	1942 <__mriSemihost_HandleNewlibSemihostRequest+0xa2>
    193a:	6820      	ldr	r0, [r4, #0]
    193c:	f000 fd48 	bl	23d0 <__mriIssueGdbFileCloseRequest>
    1940:	e018      	b.n	1974 <__mriSemihost_HandleNewlibSemihostRequest+0xd4>
    1942:	4b13      	ldr	r3, [pc, #76]	; (1990 <__mriSemihost_HandleNewlibSemihostRequest+0xf0>)
    1944:	4298      	cmp	r0, r3
    1946:	d104      	bne.n	1952 <__mriSemihost_HandleNewlibSemihostRequest+0xb2>
    1948:	e894 0003 	ldmia.w	r4, {r0, r1}
    194c:	f000 fd78 	bl	2440 <__mriIssueGdbFileFStatRequest>
    1950:	e010      	b.n	1974 <__mriSemihost_HandleNewlibSemihostRequest+0xd4>
    1952:	4910      	ldr	r1, [pc, #64]	; (1994 <__mriSemihost_HandleNewlibSemihostRequest+0xf4>)
    1954:	4288      	cmp	r0, r1
    1956:	d104      	bne.n	1962 <__mriSemihost_HandleNewlibSemihostRequest+0xc2>
    1958:	e894 0003 	ldmia.w	r4, {r0, r1}
    195c:	f000 fdac 	bl	24b8 <__mriIssueGdbFileStatRequest>
    1960:	e008      	b.n	1974 <__mriSemihost_HandleNewlibSemihostRequest+0xd4>
    1962:	4a0d      	ldr	r2, [pc, #52]	; (1998 <__mriSemihost_HandleNewlibSemihostRequest+0xf8>)
    1964:	4290      	cmp	r0, r2
    1966:	d104      	bne.n	1972 <__mriSemihost_HandleNewlibSemihostRequest+0xd2>
    1968:	e894 0003 	ldmia.w	r4, {r0, r1}
    196c:	f000 fdcc 	bl	2508 <__mriIssueGdbFileRenameRequest>
    1970:	e000      	b.n	1974 <__mriSemihost_HandleNewlibSemihostRequest+0xd4>
    1972:	2000      	movs	r0, #0
    1974:	b00c      	add	sp, #48	; 0x30
    1976:	bd10      	pop	{r4, pc}
    1978:	00001cb1 	.word	0x00001cb1
    197c:	00001cb5 	.word	0x00001cb5
    1980:	00001cb9 	.word	0x00001cb9
    1984:	00001cc1 	.word	0x00001cc1
    1988:	00001cc9 	.word	0x00001cc9
    198c:	00001ccd 	.word	0x00001ccd
    1990:	00001cd1 	.word	0x00001cd1
    1994:	00001cc5 	.word	0x00001cc5
    1998:	00001cbd 	.word	0x00001cbd

0000199c <convertBytesTransferredToBytesNotTransferred>:
    199c:	b510      	push	{r4, lr}
    199e:	4604      	mov	r4, r0
    19a0:	f7fe fd76 	bl	490 <__mriCore_GetSemihostReturnCode>
    19a4:	1e03      	subs	r3, r0, #0
    19a6:	bfa8      	it	ge
    19a8:	ebc3 0004 	rsbge	r0, r3, r4
    19ac:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    19b0:	f7ff ba64 	b.w	e7c <__mriPlatform_SetSemihostCallReturnValue>

000019b4 <__mriSemihost_HandleMbedSemihostRequest>:
    19b4:	b530      	push	{r4, r5, lr}
    19b6:	6803      	ldr	r3, [r0, #0]
    19b8:	b099      	sub	sp, #100	; 0x64
    19ba:	2b09      	cmp	r3, #9
    19bc:	f000 8084 	beq.w	1ac8 <__mriSemihost_HandleMbedSemihostRequest+0x114>
    19c0:	d80f      	bhi.n	19e2 <__mriSemihost_HandleMbedSemihostRequest+0x2e>
    19c2:	2b02      	cmp	r3, #2
    19c4:	d051      	beq.n	1a6a <__mriSemihost_HandleMbedSemihostRequest+0xb6>
    19c6:	d803      	bhi.n	19d0 <__mriSemihost_HandleMbedSemihostRequest+0x1c>
    19c8:	2b01      	cmp	r3, #1
    19ca:	f040 8084 	bne.w	1ad6 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    19ce:	e02c      	b.n	1a2a <__mriSemihost_HandleMbedSemihostRequest+0x76>
    19d0:	2b05      	cmp	r3, #5
    19d2:	d050      	beq.n	1a76 <__mriSemihost_HandleMbedSemihostRequest+0xc2>
    19d4:	2b06      	cmp	r3, #6
    19d6:	d17e      	bne.n	1ad6 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    19d8:	6845      	ldr	r5, [r0, #4]
    19da:	4628      	mov	r0, r5
    19dc:	f000 fcd4 	bl	2388 <__mriIssueGdbFileReadRequest>
    19e0:	e04d      	b.n	1a7e <__mriSemihost_HandleMbedSemihostRequest+0xca>
    19e2:	2b0c      	cmp	r3, #12
    19e4:	d051      	beq.n	1a8a <__mriSemihost_HandleMbedSemihostRequest+0xd6>
    19e6:	d80c      	bhi.n	1a02 <__mriSemihost_HandleMbedSemihostRequest+0x4e>
    19e8:	2b0a      	cmp	r3, #10
    19ea:	d174      	bne.n	1ad6 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    19ec:	6843      	ldr	r3, [r0, #4]
    19ee:	2000      	movs	r0, #0
    19f0:	681a      	ldr	r2, [r3, #0]
    19f2:	6859      	ldr	r1, [r3, #4]
    19f4:	9003      	str	r0, [sp, #12]
    19f6:	a801      	add	r0, sp, #4
    19f8:	9201      	str	r2, [sp, #4]
    19fa:	9102      	str	r1, [sp, #8]
    19fc:	f000 fcfc 	bl	23f8 <__mriIssueGdbFileSeekRequest>
    1a00:	e037      	b.n	1a72 <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    1a02:	2b0e      	cmp	r3, #14
    1a04:	d05c      	beq.n	1ac0 <__mriSemihost_HandleMbedSemihostRequest+0x10c>
    1a06:	f240 1401 	movw	r4, #257	; 0x101
    1a0a:	42a3      	cmp	r3, r4
    1a0c:	d163      	bne.n	1ad6 <__mriSemihost_HandleMbedSemihostRequest+0x122>
    1a0e:	6845      	ldr	r5, [r0, #4]
    1a10:	686c      	ldr	r4, [r5, #4]
    1a12:	682d      	ldr	r5, [r5, #0]
    1a14:	f7ff ff20 	bl	1858 <__mriMbed1768_GetMbedUid>
    1a18:	2c24      	cmp	r4, #36	; 0x24
    1a1a:	bf34      	ite	cc
    1a1c:	4622      	movcc	r2, r4
    1a1e:	2224      	movcs	r2, #36	; 0x24
    1a20:	4601      	mov	r1, r0
    1a22:	4628      	mov	r0, r5
    1a24:	f001 fd36 	bl	3494 <memcpy>
    1a28:	e04e      	b.n	1ac8 <__mriSemihost_HandleMbedSemihostRequest+0x114>
    1a2a:	6840      	ldr	r0, [r0, #4]
    1a2c:	6802      	ldr	r2, [r0, #0]
    1a2e:	6841      	ldr	r1, [r0, #4]
    1a30:	9204      	str	r2, [sp, #16]
    1a32:	074a      	lsls	r2, r1, #29
    1a34:	d405      	bmi.n	1a42 <__mriSemihost_HandleMbedSemihostRequest+0x8e>
    1a36:	f011 0408 	ands.w	r4, r1, #8
    1a3a:	d005      	beq.n	1a48 <__mriSemihost_HandleMbedSemihostRequest+0x94>
    1a3c:	f44f 7402 	mov.w	r4, #520	; 0x208
    1a40:	e003      	b.n	1a4a <__mriSemihost_HandleMbedSemihostRequest+0x96>
    1a42:	f44f 64c0 	mov.w	r4, #1536	; 0x600
    1a46:	e000      	b.n	1a4a <__mriSemihost_HandleMbedSemihostRequest+0x96>
    1a48:	4623      	mov	r3, r4
    1a4a:	f011 0f02 	tst.w	r1, #2
    1a4e:	6880      	ldr	r0, [r0, #8]
    1a50:	bf18      	it	ne
    1a52:	2302      	movne	r3, #2
    1a54:	ea43 0204 	orr.w	r2, r3, r4
    1a58:	f44f 71db 	mov.w	r1, #438	; 0x1b6
    1a5c:	9005      	str	r0, [sp, #20]
    1a5e:	a804      	add	r0, sp, #16
    1a60:	9206      	str	r2, [sp, #24]
    1a62:	9107      	str	r1, [sp, #28]
    1a64:	f000 fc3e 	bl	22e4 <__mriIssueGdbFileOpenRequest>
    1a68:	e003      	b.n	1a72 <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    1a6a:	6844      	ldr	r4, [r0, #4]
    1a6c:	6820      	ldr	r0, [r4, #0]
    1a6e:	f000 fcaf 	bl	23d0 <__mriIssueGdbFileCloseRequest>
    1a72:	4604      	mov	r4, r0
    1a74:	e030      	b.n	1ad8 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1a76:	6845      	ldr	r5, [r0, #4]
    1a78:	4628      	mov	r0, r5
    1a7a:	f000 fc61 	bl	2340 <__mriIssueGdbFileWriteRequest>
    1a7e:	4604      	mov	r4, r0
    1a80:	b350      	cbz	r0, 1ad8 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1a82:	68a8      	ldr	r0, [r5, #8]
    1a84:	f7ff ff8a 	bl	199c <convertBytesTransferredToBytesNotTransferred>
    1a88:	e026      	b.n	1ad8 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1a8a:	6843      	ldr	r3, [r0, #4]
    1a8c:	a908      	add	r1, sp, #32
    1a8e:	6818      	ldr	r0, [r3, #0]
    1a90:	f000 fcd6 	bl	2440 <__mriIssueGdbFileFStatRequest>
    1a94:	4604      	mov	r4, r0
    1a96:	b1f8      	cbz	r0, 1ad8 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1a98:	f7fe fcfa 	bl	490 <__mriCore_GetSemihostReturnCode>
    1a9c:	b9e0      	cbnz	r0, 1ad8 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1a9e:	f89d 1041 	ldrb.w	r1, [sp, #65]	; 0x41
    1aa2:	f89d 2042 	ldrb.w	r2, [sp, #66]	; 0x42
    1aa6:	0408      	lsls	r0, r1, #16
    1aa8:	ea40 2302 	orr.w	r3, r0, r2, lsl #8
    1aac:	f89d 2043 	ldrb.w	r2, [sp, #67]	; 0x43
    1ab0:	f89d 1040 	ldrb.w	r1, [sp, #64]	; 0x40
    1ab4:	4313      	orrs	r3, r2
    1ab6:	ea43 6001 	orr.w	r0, r3, r1, lsl #24
    1aba:	f7ff f9df 	bl	e7c <__mriPlatform_SetSemihostCallReturnValue>
    1abe:	e00b      	b.n	1ad8 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1ac0:	6840      	ldr	r0, [r0, #4]
    1ac2:	f000 fcdb 	bl	247c <__mriIssueGdbFileUnlinkRequest>
    1ac6:	e7d4      	b.n	1a72 <__mriSemihost_HandleMbedSemihostRequest+0xbe>
    1ac8:	f7ff fa28 	bl	f1c <__mriPlatform_AdvanceProgramCounterToNextInstruction>
    1acc:	2000      	movs	r0, #0
    1ace:	f7ff f9d5 	bl	e7c <__mriPlatform_SetSemihostCallReturnValue>
    1ad2:	2401      	movs	r4, #1
    1ad4:	e000      	b.n	1ad8 <__mriSemihost_HandleMbedSemihostRequest+0x124>
    1ad6:	2400      	movs	r4, #0
    1ad8:	4620      	mov	r0, r4
    1ada:	b019      	add	sp, #100	; 0x64
    1adc:	bd30      	pop	{r4, r5, pc}
	...

00001ae0 <__mriGetIPSR>:
    1ae0:	f3ef 8005 	mrs	r0, IPSR
    1ae4:	4770      	bx	lr

00001ae6 <__mriSetBASEPRI>:
    1ae6:	f380 8811 	msr	BASEPRI, r0
    1aea:	4770      	bx	lr

00001aec <__mriGetBASEPRI>:
    1aec:	f3ef 8011 	mrs	r0, BASEPRI
    1af0:	4770      	bx	lr

00001af2 <__mriDSB>:
    1af2:	f3bf 8f4f 	dsb	sy
    1af6:	4770      	bx	lr

00001af8 <__mriISB>:
    1af8:	f3bf 8f6f 	isb	sy
    1afc:	4770      	bx	lr

00001afe <mriExceptionHandler>:
    1afe:	4856      	ldr	r0, [pc, #344]	; (1c58 <UART3_IRQHandler+0x6>)
    1b00:	f000 b803 	b.w	1b0a <mriGetSPAndCallHandler>

00001b04 <mriFaultHandler>:
    1b04:	4855      	ldr	r0, [pc, #340]	; (1c5c <UART3_IRQHandler+0xa>)
    1b06:	f000 b800 	b.w	1b0a <mriGetSPAndCallHandler>

00001b0a <mriGetSPAndCallHandler>:
    1b0a:	f01e 0f04 	tst.w	lr, #4
    1b0e:	bf0c      	ite	eq
    1b10:	f3ef 8108 	mrseq	r1, MSP
    1b14:	f3ef 8109 	mrsne	r1, PSP
    1b18:	4a51      	ldr	r2, [pc, #324]	; (1c60 <UART3_IRQHandler+0xe>)
    1b1a:	6011      	str	r1, [r2, #0]
    1b1c:	4687      	mov	pc, r0

00001b1e <checkForStackError>:
    1b1e:	4851      	ldr	r0, [pc, #324]	; (1c64 <UART3_IRQHandler+0x12>)
    1b20:	4a51      	ldr	r2, [pc, #324]	; (1c68 <UART3_IRQHandler+0x16>)
    1b22:	6800      	ldr	r0, [r0, #0]
    1b24:	4210      	tst	r0, r2
    1b26:	f000 8003 	beq.w	1b30 <mriSaveRestoreContext>
    1b2a:	4950      	ldr	r1, [pc, #320]	; (1c6c <UART3_IRQHandler+0x1a>)
    1b2c:	f000 b800 	b.w	1b30 <mriSaveRestoreContext>

00001b30 <mriSaveRestoreContext>:
    1b30:	484f      	ldr	r0, [pc, #316]	; (1c70 <UART3_IRQHandler+0x1e>)
    1b32:	6802      	ldr	r2, [r0, #0]
    1b34:	f012 0f01 	tst.w	r2, #1
    1b38:	bf1e      	ittt	ne
    1b3a:	f042 0202 	orrne.w	r2, r2, #2
    1b3e:	6002      	strne	r2, [r0, #0]
    1b40:	f000 b856 	bne.w	1bf0 <mriAdvancePCAndReturn>
    1b44:	f042 0201 	orr.w	r2, r2, #1
    1b48:	6002      	str	r2, [r0, #0]
    1b4a:	2040      	movs	r0, #64	; 0x40
    1b4c:	f8df c120 	ldr.w	r12, [pc, #288]	; 1c70 <UART3_IRQHandler+0x1e>
    1b50:	4a48      	ldr	r2, [pc, #288]	; (1c74 <UART3_IRQHandler+0x22>)
    1b52:	4613      	mov	r3, r2
    1b54:	e96c 2302 	strd	r2, r3, [r12, #-8]!
    1b58:	3801      	subs	r0, #1
    1b5a:	d1fb      	bne.n	1b54 <mriSaveRestoreContext+0x24>
    1b5c:	f3ef 8208 	mrs	r2, MSP
    1b60:	4845      	ldr	r0, [pc, #276]	; (1c78 <UART3_IRQHandler+0x26>)
    1b62:	6002      	str	r2, [r0, #0]
    1b64:	4842      	ldr	r0, [pc, #264]	; (1c70 <UART3_IRQHandler+0x1e>)
    1b66:	f380 8808 	msr	MSP, r0
    1b6a:	4844      	ldr	r0, [pc, #272]	; (1c7c <UART3_IRQHandler+0x2a>)
    1b6c:	e92d 5000 	stmdb	sp!, {r12, lr}
    1b70:	e8b1 500c 	ldmia.w	r1!, {r2, r3, r12, lr}
    1b74:	e8a0 500c 	stmia.w	r0!, {r2, r3, r12, lr}
    1b78:	e8a0 0ff0 	stmia.w	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    1b7c:	c93c      	ldmia	r1!, {r2, r3, r4, r5}
    1b7e:	f840 2b08 	str.w	r2, [r0], #8
    1b82:	c038      	stmia	r0!, {r3, r4, r5}
    1b84:	f415 7f00 	tst.w	r5, #512	; 0x200
    1b88:	bf18      	it	ne
    1b8a:	3104      	addne	r1, #4
    1b8c:	f840 1c10 	str.w	r1, [r0, #-16]
    1b90:	f7fe fcdc 	bl	54c <__mriDebugException>
    1b94:	483a      	ldr	r0, [pc, #232]	; (1c80 <UART3_IRQHandler+0x2e>)
    1b96:	f850 1c0c 	ldr.w	r1, [r0, #-12]
    1b9a:	6802      	ldr	r2, [r0, #0]
    1b9c:	f422 7200 	bic.w	r2, r2, #512	; 0x200
    1ba0:	f841 2d04 	str.w	r2, [r1, #-4]!
    1ba4:	e930 000c 	ldmdb	r0!, {r2, r3}
    1ba8:	e921 000c 	stmdb	r1!, {r2, r3}
    1bac:	f850 cd08 	ldr.w	r12, [r0, #-8]!
    1bb0:	f841 cd04 	str.w	r12, [r1, #-4]!
    1bb4:	e930 0ff0 	ldmdb	r0!, {r4, r5, r6, r7, r8, r9, r10, r11}
    1bb8:	e930 500c 	ldmdb	r0!, {r2, r3, r12, lr}
    1bbc:	e921 500c 	stmdb	r1!, {r2, r3, r12, lr}
    1bc0:	e8bd 5000 	ldmia.w	sp!, {r12, lr}
    1bc4:	482c      	ldr	r0, [pc, #176]	; (1c78 <UART3_IRQHandler+0x26>)
    1bc6:	6802      	ldr	r2, [r0, #0]
    1bc8:	f382 8808 	msr	MSP, r2
    1bcc:	f01e 0f04 	tst.w	lr, #4
    1bd0:	bf0c      	ite	eq
    1bd2:	f381 8808 	msreq	MSP, r1
    1bd6:	f381 8809 	msrne	PSP, r1
    1bda:	4825      	ldr	r0, [pc, #148]	; (1c70 <UART3_IRQHandler+0x1e>)
    1bdc:	6801      	ldr	r1, [r0, #0]
    1bde:	f021 0101 	bic.w	r1, r1, #1
    1be2:	6001      	str	r1, [r0, #0]
    1be4:	f3bf 8f4f 	dsb	sy
    1be8:	f3bf 8f6f 	isb	sy
    1bec:	f000 b81b 	b.w	1c26 <mriClearFaultStatusBitsAndReturn>

00001bf0 <mriAdvancePCAndReturn>:
    1bf0:	481c      	ldr	r0, [pc, #112]	; (1c64 <UART3_IRQHandler+0x12>)
    1bf2:	6800      	ldr	r0, [r0, #0]
    1bf4:	f410 6f80 	tst.w	r0, #1024	; 0x400
    1bf8:	f040 8015 	bne.w	1c26 <mriClearFaultStatusBitsAndReturn>
    1bfc:	6988      	ldr	r0, [r1, #24]
    1bfe:	8802      	ldrh	r2, [r0, #0]
    1c00:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
    1c04:	f5b2 4f68 	cmp.w	r2, #59392	; 0xe800
    1c08:	d008      	beq.n	1c1c <mriAdvancePCAndReturn+0x2c>
    1c0a:	f5b2 4f70 	cmp.w	r2, #61440	; 0xf000
    1c0e:	d005      	beq.n	1c1c <mriAdvancePCAndReturn+0x2c>
    1c10:	f5b2 4f78 	cmp.w	r2, #63488	; 0xf800
    1c14:	d002      	beq.n	1c1c <mriAdvancePCAndReturn+0x2c>
    1c16:	f100 0002 	add.w	r0, r0, #2
    1c1a:	e001      	b.n	1c20 <mriAdvancePCAndReturn+0x30>
    1c1c:	f100 0004 	add.w	r0, r0, #4
    1c20:	6188      	str	r0, [r1, #24]
    1c22:	f000 b800 	b.w	1c26 <mriClearFaultStatusBitsAndReturn>

00001c26 <mriClearFaultStatusBitsAndReturn>:
    1c26:	480f      	ldr	r0, [pc, #60]	; (1c64 <UART3_IRQHandler+0x12>)
    1c28:	6801      	ldr	r1, [r0, #0]
    1c2a:	6001      	str	r1, [r0, #0]
    1c2c:	6841      	ldr	r1, [r0, #4]
    1c2e:	6041      	str	r1, [r0, #4]
    1c30:	4770      	bx	lr

00001c32 <HardFault_Handler>:
    1c32:	f7ff bf67 	b.w	1b04 <mriFaultHandler>

00001c36 <MemManage_Handler>:
    1c36:	f7ff bf65 	b.w	1b04 <mriFaultHandler>

00001c3a <BusFault_Handler>:
    1c3a:	f7ff bf63 	b.w	1b04 <mriFaultHandler>

00001c3e <UsageFault_Handler>:
    1c3e:	f7ff bf5e 	b.w	1afe <mriExceptionHandler>

00001c42 <DebugMon_Handler>:
    1c42:	f7ff bf5c 	b.w	1afe <mriExceptionHandler>

00001c46 <UART0_IRQHandler>:
    1c46:	f7ff bf5a 	b.w	1afe <mriExceptionHandler>

00001c4a <UART1_IRQHandler>:
    1c4a:	f7ff bf58 	b.w	1afe <mriExceptionHandler>

00001c4e <UART2_IRQHandler>:
    1c4e:	f7ff bf56 	b.w	1afe <mriExceptionHandler>

00001c52 <UART3_IRQHandler>:
    1c52:	f7ff bf54 	b.w	1afe <mriExceptionHandler>
    1c56:	0000      	.short	0x0000
    1c58:	00001b31 	.word	0x00001b31
    1c5c:	00001b1f 	.word	0x00001b1f
    1c60:	10000358 	.word	0x10000358
    1c64:	e000ed28 	.word	0xe000ed28
    1c68:	00001818 	.word	0x00001818
    1c6c:	00003898 	.word	0x00003898
    1c70:	10000350 	.word	0x10000350
    1c74:	deadbeef 	.word	0xdeadbeef
    1c78:	10000354 	.word	0x10000354
    1c7c:	1000035c 	.word	0x1000035c
    1c80:	1000039c 	.word	0x1000039c

00001c84 <__mriDisableMbed>:
    1c84:	b082      	sub	sp, #8
    1c86:	a901      	add	r1, sp, #4
    1c88:	f240 1005 	movw	r0, #261	; 0x105
    1c8c:	beab      	bkpt	0x00ab
    1c8e:	2800      	cmp	r0, #0
    1c90:	bf0c      	ite	eq
    1c92:	9801      	ldreq	r0, [sp, #4]
    1c94:	f04f 30ff 	movne.w	r0, #4294967295	; 0xffffffff
    1c98:	b002      	add	sp, #8
    1c9a:	4770      	bx	lr

00001c9c <__mriGetMbedUid>:
    1c9c:	b082      	sub	sp, #8
    1c9e:	9000      	str	r0, [sp, #0]
    1ca0:	2021      	movs	r0, #33	; 0x21
    1ca2:	9001      	str	r0, [sp, #4]
    1ca4:	4669      	mov	r1, sp
    1ca6:	f240 1001 	movw	r0, #257	; 0x101
    1caa:	beab      	bkpt	0x00ab
    1cac:	b002      	add	sp, #8
    1cae:	4770      	bx	lr

00001cb0 <__mriNewlib_SemihostWrite>:
    1cb0:	beff      	bkpt	0x00ff
    1cb2:	4770      	bx	lr

00001cb4 <__mriNewlib_SemihostRead>:
    1cb4:	beff      	bkpt	0x00ff
    1cb6:	4770      	bx	lr

00001cb8 <__mriNewLib_SemihostOpen>:
    1cb8:	beff      	bkpt	0x00ff
    1cba:	4770      	bx	lr

00001cbc <__mriNewLib_SemihostRename>:
    1cbc:	beff      	bkpt	0x00ff
    1cbe:	4770      	bx	lr

00001cc0 <__mriNewLib_SemihostUnlink>:
    1cc0:	beff      	bkpt	0x00ff
    1cc2:	4770      	bx	lr

00001cc4 <__mriNewLib_SemihostStat>:
    1cc4:	beff      	bkpt	0x00ff
    1cc6:	4770      	bx	lr

00001cc8 <__mriNewlib_SemihostLSeek>:
    1cc8:	beff      	bkpt	0x00ff
    1cca:	4770      	bx	lr

00001ccc <__mriNewlib_SemihostClose>:
    1ccc:	beff      	bkpt	0x00ff
    1cce:	4770      	bx	lr

00001cd0 <__mriNewlib_SemihostFStat>:
    1cd0:	beff      	bkpt	0x00ff
    1cd2:	4770      	bx	lr

00001cd4 <HexCharToNibble>:
    1cd4:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
    1cd8:	2b05      	cmp	r3, #5
    1cda:	d801      	bhi.n	1ce0 <HexCharToNibble+0xc>
    1cdc:	3857      	subs	r0, #87	; 0x57
    1cde:	4770      	bx	lr
    1ce0:	f1a0 0141 	sub.w	r1, r0, #65	; 0x41
    1ce4:	2905      	cmp	r1, #5
    1ce6:	d801      	bhi.n	1cec <HexCharToNibble+0x18>
    1ce8:	3837      	subs	r0, #55	; 0x37
    1cea:	4770      	bx	lr
    1cec:	3830      	subs	r0, #48	; 0x30
    1cee:	b2c2      	uxtb	r2, r0
    1cf0:	2a09      	cmp	r2, #9
    1cf2:	d907      	bls.n	1d04 <HexCharToNibble+0x30>
    1cf4:	4804      	ldr	r0, [pc, #16]	; (1d08 <HexCharToNibble+0x34>)
    1cf6:	6803      	ldr	r3, [r0, #0]
    1cf8:	2b02      	cmp	r3, #2
    1cfa:	bfb8      	it	lt
    1cfc:	2302      	movlt	r3, #2
    1cfe:	6003      	str	r3, [r0, #0]
    1d00:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
    1d04:	4770      	bx	lr
    1d06:	bf00      	nop
    1d08:	1000014c 	.word	0x1000014c

00001d0c <__mriBuffer_Init>:
    1d0c:	188a      	adds	r2, r1, r2
    1d0e:	6001      	str	r1, [r0, #0]
    1d10:	6042      	str	r2, [r0, #4]
    1d12:	6081      	str	r1, [r0, #8]
    1d14:	4770      	bx	lr

00001d16 <__mriBuffer_Reset>:
    1d16:	6803      	ldr	r3, [r0, #0]
    1d18:	6083      	str	r3, [r0, #8]
    1d1a:	4770      	bx	lr

00001d1c <__mriBuffer_SetEndOfBuffer>:
    1d1c:	6883      	ldr	r3, [r0, #8]
    1d1e:	6043      	str	r3, [r0, #4]
    1d20:	4770      	bx	lr

00001d22 <__mriBuffer_BytesLeft>:
    1d22:	6883      	ldr	r3, [r0, #8]
    1d24:	6840      	ldr	r0, [r0, #4]
    1d26:	4283      	cmp	r3, r0
    1d28:	bf94      	ite	ls
    1d2a:	ebc3 0000 	rsbls	r0, r3, r0
    1d2e:	2000      	movhi	r0, #0
    1d30:	4770      	bx	lr
	...

00001d34 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>:
    1d34:	b538      	push	{r3, r4, r5, lr}
    1d36:	460d      	mov	r5, r1
    1d38:	4604      	mov	r4, r0
    1d3a:	f7ff fff2 	bl	1d22 <__mriBuffer_BytesLeft>
    1d3e:	42a8      	cmp	r0, r5
    1d40:	d208      	bcs.n	1d54 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x20>
    1d42:	4905      	ldr	r1, [pc, #20]	; (1d58 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan+0x24>)
    1d44:	6863      	ldr	r3, [r4, #4]
    1d46:	680a      	ldr	r2, [r1, #0]
    1d48:	1c58      	adds	r0, r3, #1
    1d4a:	2a01      	cmp	r2, #1
    1d4c:	bfb8      	it	lt
    1d4e:	2201      	movlt	r2, #1
    1d50:	60a0      	str	r0, [r4, #8]
    1d52:	600a      	str	r2, [r1, #0]
    1d54:	bd38      	pop	{r3, r4, r5, pc}
    1d56:	bf00      	nop
    1d58:	1000014c 	.word	0x1000014c

00001d5c <__mriBuffer_OverrunDetected>:
    1d5c:	6882      	ldr	r2, [r0, #8]
    1d5e:	6840      	ldr	r0, [r0, #4]
    1d60:	4282      	cmp	r2, r0
    1d62:	bf94      	ite	ls
    1d64:	2000      	movls	r0, #0
    1d66:	2001      	movhi	r0, #1
    1d68:	4770      	bx	lr
	...

00001d6c <__mriBuffer_WriteChar>:
    1d6c:	b570      	push	{r4, r5, r6, lr}
    1d6e:	4d07      	ldr	r5, [pc, #28]	; (1d8c <__mriBuffer_WriteChar+0x20>)
    1d70:	2300      	movs	r3, #0
    1d72:	460e      	mov	r6, r1
    1d74:	2101      	movs	r1, #1
    1d76:	4604      	mov	r4, r0
    1d78:	602b      	str	r3, [r5, #0]
    1d7a:	f7ff ffdb 	bl	1d34 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1d7e:	6828      	ldr	r0, [r5, #0]
    1d80:	b918      	cbnz	r0, 1d8a <__mriBuffer_WriteChar+0x1e>
    1d82:	68a1      	ldr	r1, [r4, #8]
    1d84:	f801 6b01 	strb.w	r6, [r1], #1
    1d88:	60a1      	str	r1, [r4, #8]
    1d8a:	bd70      	pop	{r4, r5, r6, pc}
    1d8c:	1000014c 	.word	0x1000014c

00001d90 <__mriBuffer_ReadChar>:
    1d90:	b570      	push	{r4, r5, r6, lr}
    1d92:	4e08      	ldr	r6, [pc, #32]	; (1db4 <__mriBuffer_ReadChar+0x24>)
    1d94:	2400      	movs	r4, #0
    1d96:	2101      	movs	r1, #1
    1d98:	4605      	mov	r5, r0
    1d9a:	6034      	str	r4, [r6, #0]
    1d9c:	f7ff ffca 	bl	1d34 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1da0:	6833      	ldr	r3, [r6, #0]
    1da2:	b923      	cbnz	r3, 1dae <__mriBuffer_ReadChar+0x1e>
    1da4:	68a9      	ldr	r1, [r5, #8]
    1da6:	f811 0b01 	ldrb.w	r0, [r1], #1
    1daa:	60a9      	str	r1, [r5, #8]
    1dac:	bd70      	pop	{r4, r5, r6, pc}
    1dae:	4620      	mov	r0, r4
    1db0:	bd70      	pop	{r4, r5, r6, pc}
    1db2:	bf00      	nop
    1db4:	1000014c 	.word	0x1000014c

00001db8 <__mriBuffer_WriteByteAsHex>:
    1db8:	b570      	push	{r4, r5, r6, lr}
    1dba:	4e0b      	ldr	r6, [pc, #44]	; (1de8 <__mriBuffer_WriteByteAsHex+0x30>)
    1dbc:	2300      	movs	r3, #0
    1dbe:	460d      	mov	r5, r1
    1dc0:	2102      	movs	r1, #2
    1dc2:	4604      	mov	r4, r0
    1dc4:	6033      	str	r3, [r6, #0]
    1dc6:	f7ff ffb5 	bl	1d34 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1dca:	6830      	ldr	r0, [r6, #0]
    1dcc:	b950      	cbnz	r0, 1de4 <__mriBuffer_WriteByteAsHex+0x2c>
    1dce:	4a07      	ldr	r2, [pc, #28]	; (1dec <__mriBuffer_WriteByteAsHex+0x34>)
    1dd0:	0929      	lsrs	r1, r5, #4
    1dd2:	f005 050f 	and.w	r5, r5, #15
    1dd6:	68a3      	ldr	r3, [r4, #8]
    1dd8:	5c50      	ldrb	r0, [r2, r1]
    1dda:	5d52      	ldrb	r2, [r2, r5]
    1ddc:	7018      	strb	r0, [r3, #0]
    1dde:	705a      	strb	r2, [r3, #1]
    1de0:	3302      	adds	r3, #2
    1de2:	60a3      	str	r3, [r4, #8]
    1de4:	bd70      	pop	{r4, r5, r6, pc}
    1de6:	bf00      	nop
    1de8:	1000014c 	.word	0x1000014c
    1dec:	000041f5 	.word	0x000041f5

00001df0 <__mriBuffer_ReadByteAsHex>:
    1df0:	b570      	push	{r4, r5, r6, lr}
    1df2:	4e11      	ldr	r6, [pc, #68]	; (1e38 <__mriBuffer_ReadByteAsHex+0x48>)
    1df4:	2300      	movs	r3, #0
    1df6:	2102      	movs	r1, #2
    1df8:	4604      	mov	r4, r0
    1dfa:	6033      	str	r3, [r6, #0]
    1dfc:	f7ff ff9a 	bl	1d34 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1e00:	6830      	ldr	r0, [r6, #0]
    1e02:	b108      	cbz	r0, 1e08 <__mriBuffer_ReadByteAsHex+0x18>
    1e04:	2500      	movs	r5, #0
    1e06:	e014      	b.n	1e32 <__mriBuffer_ReadByteAsHex+0x42>
    1e08:	68a1      	ldr	r1, [r4, #8]
    1e0a:	7808      	ldrb	r0, [r1, #0]
    1e0c:	f7ff ff62 	bl	1cd4 <HexCharToNibble>
    1e10:	6833      	ldr	r3, [r6, #0]
    1e12:	0102      	lsls	r2, r0, #4
    1e14:	b2d5      	uxtb	r5, r2
    1e16:	b92b      	cbnz	r3, 1e24 <__mriBuffer_ReadByteAsHex+0x34>
    1e18:	68a0      	ldr	r0, [r4, #8]
    1e1a:	7840      	ldrb	r0, [r0, #1]
    1e1c:	f7ff ff5a 	bl	1cd4 <HexCharToNibble>
    1e20:	4328      	orrs	r0, r5
    1e22:	b2c5      	uxtb	r5, r0
    1e24:	4904      	ldr	r1, [pc, #16]	; (1e38 <__mriBuffer_ReadByteAsHex+0x48>)
    1e26:	680a      	ldr	r2, [r1, #0]
    1e28:	2a00      	cmp	r2, #0
    1e2a:	d1eb      	bne.n	1e04 <__mriBuffer_ReadByteAsHex+0x14>
    1e2c:	68a3      	ldr	r3, [r4, #8]
    1e2e:	1c98      	adds	r0, r3, #2
    1e30:	60a0      	str	r0, [r4, #8]
    1e32:	4628      	mov	r0, r5
    1e34:	bd70      	pop	{r4, r5, r6, pc}
    1e36:	bf00      	nop
    1e38:	1000014c 	.word	0x1000014c

00001e3c <__mriBuffer_WriteSizedString>:
    1e3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e3e:	4f0b      	ldr	r7, [pc, #44]	; (1e6c <__mriBuffer_WriteSizedString+0x30>)
    1e40:	2300      	movs	r3, #0
    1e42:	460c      	mov	r4, r1
    1e44:	4611      	mov	r1, r2
    1e46:	4605      	mov	r5, r0
    1e48:	4616      	mov	r6, r2
    1e4a:	603b      	str	r3, [r7, #0]
    1e4c:	f7ff ff72 	bl	1d34 <throwExceptionAndFlagBufferOverrunIfBufferLeftIsSmallerThan>
    1e50:	6838      	ldr	r0, [r7, #0]
    1e52:	b948      	cbnz	r0, 1e68 <__mriBuffer_WriteSizedString+0x2c>
    1e54:	19a6      	adds	r6, r4, r6
    1e56:	42b4      	cmp	r4, r6
    1e58:	d006      	beq.n	1e68 <__mriBuffer_WriteSizedString+0x2c>
    1e5a:	f814 2b01 	ldrb.w	r2, [r4], #1
    1e5e:	68a9      	ldr	r1, [r5, #8]
    1e60:	f801 2b01 	strb.w	r2, [r1], #1
    1e64:	60a9      	str	r1, [r5, #8]
    1e66:	e7f6      	b.n	1e56 <__mriBuffer_WriteSizedString+0x1a>
    1e68:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1e6a:	bf00      	nop
    1e6c:	1000014c 	.word	0x1000014c

00001e70 <__mriBuffer_WriteString>:
    1e70:	b538      	push	{r3, r4, r5, lr}
    1e72:	4605      	mov	r5, r0
    1e74:	4608      	mov	r0, r1
    1e76:	460c      	mov	r4, r1
    1e78:	f001 fb28 	bl	34cc <strlen>
    1e7c:	4621      	mov	r1, r4
    1e7e:	4602      	mov	r2, r0
    1e80:	4628      	mov	r0, r5
    1e82:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    1e86:	f7ff bfd9 	b.w	1e3c <__mriBuffer_WriteSizedString>
	...

00001e8c <__mriBuffer_ReadUIntegerAsHex>:
    1e8c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1e8e:	2500      	movs	r5, #0
    1e90:	4604      	mov	r4, r0
    1e92:	462e      	mov	r6, r5
    1e94:	4f13      	ldr	r7, [pc, #76]	; (1ee4 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1e96:	2300      	movs	r3, #0
    1e98:	4620      	mov	r0, r4
    1e9a:	603b      	str	r3, [r7, #0]
    1e9c:	f7ff ff78 	bl	1d90 <__mriBuffer_ReadChar>
    1ea0:	6839      	ldr	r1, [r7, #0]
    1ea2:	b961      	cbnz	r1, 1ebe <__mriBuffer_ReadUIntegerAsHex+0x32>
    1ea4:	f7ff ff16 	bl	1cd4 <HexCharToNibble>
    1ea8:	683a      	ldr	r2, [r7, #0]
    1eaa:	b132      	cbz	r2, 1eba <__mriBuffer_ReadUIntegerAsHex+0x2e>
    1eac:	68a0      	ldr	r0, [r4, #8]
    1eae:	6823      	ldr	r3, [r4, #0]
    1eb0:	4298      	cmp	r0, r3
    1eb2:	d904      	bls.n	1ebe <__mriBuffer_ReadUIntegerAsHex+0x32>
    1eb4:	1e41      	subs	r1, r0, #1
    1eb6:	60a1      	str	r1, [r4, #8]
    1eb8:	e001      	b.n	1ebe <__mriBuffer_ReadUIntegerAsHex+0x32>
    1eba:	eb00 1505 	add.w	r5, r0, r5, lsl #4
    1ebe:	4809      	ldr	r0, [pc, #36]	; (1ee4 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1ec0:	6802      	ldr	r2, [r0, #0]
    1ec2:	b90a      	cbnz	r2, 1ec8 <__mriBuffer_ReadUIntegerAsHex+0x3c>
    1ec4:	3601      	adds	r6, #1
    1ec6:	e7e5      	b.n	1e94 <__mriBuffer_ReadUIntegerAsHex+0x8>
    1ec8:	2300      	movs	r3, #0
    1eca:	6861      	ldr	r1, [r4, #4]
    1ecc:	6003      	str	r3, [r0, #0]
    1ece:	68a0      	ldr	r0, [r4, #8]
    1ed0:	4288      	cmp	r0, r1
    1ed2:	bf88      	it	hi
    1ed4:	60a1      	strhi	r1, [r4, #8]
    1ed6:	b91e      	cbnz	r6, 1ee0 <__mriBuffer_ReadUIntegerAsHex+0x54>
    1ed8:	4a02      	ldr	r2, [pc, #8]	; (1ee4 <__mriBuffer_ReadUIntegerAsHex+0x58>)
    1eda:	2503      	movs	r5, #3
    1edc:	6015      	str	r5, [r2, #0]
    1ede:	4635      	mov	r5, r6
    1ee0:	4628      	mov	r0, r5
    1ee2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1ee4:	1000014c 	.word	0x1000014c

00001ee8 <__mriBuffer_WriteUIntegerAsHex>:
    1ee8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1eec:	4680      	mov	r8, r0
    1eee:	460e      	mov	r6, r1
    1ef0:	b919      	cbnz	r1, 1efa <__mriBuffer_WriteUIntegerAsHex+0x12>
    1ef2:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    1ef6:	f7ff bf5f 	b.w	1db8 <__mriBuffer_WriteByteAsHex>
    1efa:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
    1efe:	2400      	movs	r4, #0
    1f00:	4233      	tst	r3, r6
    1f02:	d103      	bne.n	1f0c <__mriBuffer_WriteUIntegerAsHex+0x24>
    1f04:	3401      	adds	r4, #1
    1f06:	0a1b      	lsrs	r3, r3, #8
    1f08:	2c04      	cmp	r4, #4
    1f0a:	d1f9      	bne.n	1f00 <__mriBuffer_WriteUIntegerAsHex+0x18>
    1f0c:	f1c4 0403 	rsb	r4, r4, #3
    1f10:	00e5      	lsls	r5, r4, #3
    1f12:	1c63      	adds	r3, r4, #1
    1f14:	d00d      	beq.n	1f32 <__mriBuffer_WriteUIntegerAsHex+0x4a>
    1f16:	fa26 f105 	lsr.w	r1, r6, r5
    1f1a:	4f07      	ldr	r7, [pc, #28]	; (1f38 <__mriBuffer_WriteUIntegerAsHex+0x50>)
    1f1c:	2000      	movs	r0, #0
    1f1e:	6038      	str	r0, [r7, #0]
    1f20:	b2c9      	uxtb	r1, r1
    1f22:	4640      	mov	r0, r8
    1f24:	f7ff ff48 	bl	1db8 <__mriBuffer_WriteByteAsHex>
    1f28:	683a      	ldr	r2, [r7, #0]
    1f2a:	3c01      	subs	r4, #1
    1f2c:	3d08      	subs	r5, #8
    1f2e:	2a00      	cmp	r2, #0
    1f30:	d0ef      	beq.n	1f12 <__mriBuffer_WriteUIntegerAsHex+0x2a>
    1f32:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    1f36:	bf00      	nop
    1f38:	1000014c 	.word	0x1000014c

00001f3c <__mriBuffer_WriteIntegerAsHex>:
    1f3c:	4b0a      	ldr	r3, [pc, #40]	; (1f68 <__mriBuffer_WriteIntegerAsHex+0x2c>)
    1f3e:	b570      	push	{r4, r5, r6, lr}
    1f40:	2200      	movs	r2, #0
    1f42:	1e0c      	subs	r4, r1, #0
    1f44:	4606      	mov	r6, r0
    1f46:	601a      	str	r2, [r3, #0]
    1f48:	461d      	mov	r5, r3
    1f4a:	da03      	bge.n	1f54 <__mriBuffer_WriteIntegerAsHex+0x18>
    1f4c:	212d      	movs	r1, #45	; 0x2d
    1f4e:	4264      	negs	r4, r4
    1f50:	f7ff ff0c 	bl	1d6c <__mriBuffer_WriteChar>
    1f54:	6828      	ldr	r0, [r5, #0]
    1f56:	b928      	cbnz	r0, 1f64 <__mriBuffer_WriteIntegerAsHex+0x28>
    1f58:	4630      	mov	r0, r6
    1f5a:	4621      	mov	r1, r4
    1f5c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    1f60:	f7ff bfc2 	b.w	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    1f64:	bd70      	pop	{r4, r5, r6, pc}
    1f66:	bf00      	nop
    1f68:	1000014c 	.word	0x1000014c

00001f6c <__mriBuffer_IsNextCharEqualTo>:
    1f6c:	b570      	push	{r4, r5, r6, lr}
    1f6e:	4d0b      	ldr	r5, [pc, #44]	; (1f9c <__mriBuffer_IsNextCharEqualTo+0x30>)
    1f70:	2300      	movs	r3, #0
    1f72:	460e      	mov	r6, r1
    1f74:	4604      	mov	r4, r0
    1f76:	602b      	str	r3, [r5, #0]
    1f78:	f7ff fed3 	bl	1d22 <__mriBuffer_BytesLeft>
    1f7c:	4629      	mov	r1, r5
    1f7e:	b908      	cbnz	r0, 1f84 <__mriBuffer_IsNextCharEqualTo+0x18>
    1f80:	2201      	movs	r2, #1
    1f82:	602a      	str	r2, [r5, #0]
    1f84:	6808      	ldr	r0, [r1, #0]
    1f86:	b938      	cbnz	r0, 1f98 <__mriBuffer_IsNextCharEqualTo+0x2c>
    1f88:	68a3      	ldr	r3, [r4, #8]
    1f8a:	7819      	ldrb	r1, [r3, #0]
    1f8c:	42b1      	cmp	r1, r6
    1f8e:	d104      	bne.n	1f9a <__mriBuffer_IsNextCharEqualTo+0x2e>
    1f90:	1c58      	adds	r0, r3, #1
    1f92:	60a0      	str	r0, [r4, #8]
    1f94:	2001      	movs	r0, #1
    1f96:	bd70      	pop	{r4, r5, r6, pc}
    1f98:	2000      	movs	r0, #0
    1f9a:	bd70      	pop	{r4, r5, r6, pc}
    1f9c:	1000014c 	.word	0x1000014c

00001fa0 <__mriBuffer_ReadIntegerAsHex>:
    1fa0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    1fa2:	4c13      	ldr	r4, [pc, #76]	; (1ff0 <__mriBuffer_ReadIntegerAsHex+0x50>)
    1fa4:	2500      	movs	r5, #0
    1fa6:	212d      	movs	r1, #45	; 0x2d
    1fa8:	4607      	mov	r7, r0
    1faa:	6025      	str	r5, [r4, #0]
    1fac:	f7ff ffde 	bl	1f6c <__mriBuffer_IsNextCharEqualTo>
    1fb0:	6823      	ldr	r3, [r4, #0]
    1fb2:	4606      	mov	r6, r0
    1fb4:	b91b      	cbnz	r3, 1fbe <__mriBuffer_ReadIntegerAsHex+0x1e>
    1fb6:	4638      	mov	r0, r7
    1fb8:	f7ff ff68 	bl	1e8c <__mriBuffer_ReadUIntegerAsHex>
    1fbc:	e000      	b.n	1fc0 <__mriBuffer_ReadIntegerAsHex+0x20>
    1fbe:	4628      	mov	r0, r5
    1fc0:	6822      	ldr	r2, [r4, #0]
    1fc2:	490b      	ldr	r1, [pc, #44]	; (1ff0 <__mriBuffer_ReadIntegerAsHex+0x50>)
    1fc4:	b98a      	cbnz	r2, 1fea <__mriBuffer_ReadIntegerAsHex+0x4a>
    1fc6:	b936      	cbnz	r6, 1fd6 <__mriBuffer_ReadIntegerAsHex+0x36>
    1fc8:	2800      	cmp	r0, #0
    1fca:	da0f      	bge.n	1fec <__mriBuffer_ReadIntegerAsHex+0x4c>
    1fcc:	2303      	movs	r3, #3
    1fce:	600b      	str	r3, [r1, #0]
    1fd0:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
    1fd4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fd6:	f1b0 4f00 	cmp.w	r0, #2147483648	; 0x80000000
    1fda:	d904      	bls.n	1fe6 <__mriBuffer_ReadIntegerAsHex+0x46>
    1fdc:	2003      	movs	r0, #3
    1fde:	6008      	str	r0, [r1, #0]
    1fe0:	f04f 4000 	mov.w	r0, #2147483648	; 0x80000000
    1fe4:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fe6:	4240      	negs	r0, r0
    1fe8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fea:	2000      	movs	r0, #0
    1fec:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    1fee:	bf00      	nop
    1ff0:	1000014c 	.word	0x1000014c

00001ff4 <__mriBuffer_MatchesString>:
    1ff4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    1ff8:	4e12      	ldr	r6, [pc, #72]	; (2044 <__mriBuffer_MatchesString+0x50>)
    1ffa:	2300      	movs	r3, #0
    1ffc:	4614      	mov	r4, r2
    1ffe:	4605      	mov	r5, r0
    2000:	4688      	mov	r8, r1
    2002:	6033      	str	r3, [r6, #0]
    2004:	f7ff fe8d 	bl	1d22 <__mriBuffer_BytesLeft>
    2008:	42a0      	cmp	r0, r4
    200a:	d201      	bcs.n	2010 <__mriBuffer_MatchesString+0x1c>
    200c:	2001      	movs	r0, #1
    200e:	6030      	str	r0, [r6, #0]
    2010:	6837      	ldr	r7, [r6, #0]
    2012:	b97f      	cbnz	r7, 2034 <__mriBuffer_MatchesString+0x40>
    2014:	68ae      	ldr	r6, [r5, #8]
    2016:	4641      	mov	r1, r8
    2018:	4630      	mov	r0, r6
    201a:	4622      	mov	r2, r4
    201c:	f001 fa5e 	bl	34dc <strncmp>
    2020:	4680      	mov	r8, r0
    2022:	b938      	cbnz	r0, 2034 <__mriBuffer_MatchesString+0x40>
    2024:	4628      	mov	r0, r5
    2026:	f7ff fe7c 	bl	1d22 <__mriBuffer_BytesLeft>
    202a:	42a0      	cmp	r0, r4
    202c:	d005      	beq.n	203a <__mriBuffer_MatchesString+0x46>
    202e:	5d31      	ldrb	r1, [r6, r4]
    2030:	293a      	cmp	r1, #58	; 0x3a
    2032:	d002      	beq.n	203a <__mriBuffer_MatchesString+0x46>
    2034:	2000      	movs	r0, #0
    2036:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    203a:	1934      	adds	r4, r6, r4
    203c:	60ac      	str	r4, [r5, #8]
    203e:	2001      	movs	r0, #1
    2040:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2044:	1000014c 	.word	0x1000014c

00002048 <handleBreakpointWatchpointException>:
    2048:	4b05      	ldr	r3, [pc, #20]	; (2060 <handleBreakpointWatchpointException+0x18>)
    204a:	6818      	ldr	r0, [r3, #0]
    204c:	2804      	cmp	r0, #4
    204e:	d003      	beq.n	2058 <handleBreakpointWatchpointException+0x10>
    2050:	2808      	cmp	r0, #8
    2052:	d104      	bne.n	205e <handleBreakpointWatchpointException+0x16>
    2054:	4803      	ldr	r0, [pc, #12]	; (2064 <handleBreakpointWatchpointException+0x1c>)
    2056:	e000      	b.n	205a <handleBreakpointWatchpointException+0x12>
    2058:	4803      	ldr	r0, [pc, #12]	; (2068 <handleBreakpointWatchpointException+0x20>)
    205a:	f7fe b9b5 	b.w	3c8 <__mriCore_PrepareStringResponse>
    205e:	4770      	bx	lr
    2060:	1000014c 	.word	0x1000014c
    2064:	00004209 	.word	0x00004209
    2068:	00004205 	.word	0x00004205

0000206c <parseBreakpointWatchpointCommandArguments>:
    206c:	b570      	push	{r4, r5, r6, lr}
    206e:	4606      	mov	r6, r0
    2070:	f7fe fa14 	bl	49c <__mriCore_GetBuffer>
    2074:	4c0f      	ldr	r4, [pc, #60]	; (20b4 <parseBreakpointWatchpointCommandArguments+0x48>)
    2076:	2300      	movs	r3, #0
    2078:	4605      	mov	r5, r0
    207a:	6023      	str	r3, [r4, #0]
    207c:	f7ff fe88 	bl	1d90 <__mriBuffer_ReadChar>
    2080:	7230      	strb	r0, [r6, #8]
    2082:	6820      	ldr	r0, [r4, #0]
    2084:	b9a8      	cbnz	r0, 20b2 <parseBreakpointWatchpointCommandArguments+0x46>
    2086:	212c      	movs	r1, #44	; 0x2c
    2088:	4628      	mov	r0, r5
    208a:	f000 f8bf 	bl	220c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    208e:	6821      	ldr	r1, [r4, #0]
    2090:	b979      	cbnz	r1, 20b2 <parseBreakpointWatchpointCommandArguments+0x46>
    2092:	4628      	mov	r0, r5
    2094:	f000 f8ac 	bl	21f0 <__mriCmd_ReadUIntegerArgument>
    2098:	6822      	ldr	r2, [r4, #0]
    209a:	6030      	str	r0, [r6, #0]
    209c:	b94a      	cbnz	r2, 20b2 <parseBreakpointWatchpointCommandArguments+0x46>
    209e:	4628      	mov	r0, r5
    20a0:	212c      	movs	r1, #44	; 0x2c
    20a2:	f000 f8b3 	bl	220c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    20a6:	6823      	ldr	r3, [r4, #0]
    20a8:	b91b      	cbnz	r3, 20b2 <parseBreakpointWatchpointCommandArguments+0x46>
    20aa:	4628      	mov	r0, r5
    20ac:	f000 f8a0 	bl	21f0 <__mriCmd_ReadUIntegerArgument>
    20b0:	6070      	str	r0, [r6, #4]
    20b2:	bd70      	pop	{r4, r5, r6, pc}
    20b4:	1000014c 	.word	0x1000014c

000020b8 <handleWatchpointRemoveCommand>:
    20b8:	b510      	push	{r4, lr}
    20ba:	4c09      	ldr	r4, [pc, #36]	; (20e0 <handleWatchpointRemoveCommand+0x28>)
    20bc:	4602      	mov	r2, r0
    20be:	2300      	movs	r3, #0
    20c0:	c903      	ldmia	r1, {r0, r1}
    20c2:	6023      	str	r3, [r4, #0]
    20c4:	f7ff f924 	bl	1310 <__mriPlatform_ClearHardwareWatchpoint>
    20c8:	6820      	ldr	r0, [r4, #0]
    20ca:	b118      	cbz	r0, 20d4 <handleWatchpointRemoveCommand+0x1c>
    20cc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    20d0:	f7ff bfba 	b.w	2048 <handleBreakpointWatchpointException>
    20d4:	4803      	ldr	r0, [pc, #12]	; (20e4 <handleWatchpointRemoveCommand+0x2c>)
    20d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    20da:	f7fe b975 	b.w	3c8 <__mriCore_PrepareStringResponse>
    20de:	bf00      	nop
    20e0:	1000014c 	.word	0x1000014c
    20e4:	0000420d 	.word	0x0000420d

000020e8 <handleWatchpointSetCommand>:
    20e8:	b510      	push	{r4, lr}
    20ea:	4c09      	ldr	r4, [pc, #36]	; (2110 <handleWatchpointSetCommand+0x28>)
    20ec:	4602      	mov	r2, r0
    20ee:	2300      	movs	r3, #0
    20f0:	c903      	ldmia	r1, {r0, r1}
    20f2:	6023      	str	r3, [r4, #0]
    20f4:	f7ff f8c4 	bl	1280 <__mriPlatform_SetHardwareWatchpoint>
    20f8:	6820      	ldr	r0, [r4, #0]
    20fa:	b118      	cbz	r0, 2104 <handleWatchpointSetCommand+0x1c>
    20fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    2100:	f7ff bfa2 	b.w	2048 <handleBreakpointWatchpointException>
    2104:	4803      	ldr	r0, [pc, #12]	; (2114 <handleWatchpointSetCommand+0x2c>)
    2106:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    210a:	f7fe b95d 	b.w	3c8 <__mriCore_PrepareStringResponse>
    210e:	bf00      	nop
    2110:	1000014c 	.word	0x1000014c
    2114:	0000420d 	.word	0x0000420d

00002118 <__mriCmd_HandleBreakpointWatchpointSetCommand>:
    2118:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    211a:	4c16      	ldr	r4, [pc, #88]	; (2174 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x5c>)
    211c:	2300      	movs	r3, #0
    211e:	a801      	add	r0, sp, #4
    2120:	6023      	str	r3, [r4, #0]
    2122:	f7ff ffa3 	bl	206c <parseBreakpointWatchpointCommandArguments>
    2126:	6820      	ldr	r0, [r4, #0]
    2128:	b108      	cbz	r0, 212e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x16>
    212a:	4813      	ldr	r0, [pc, #76]	; (2178 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x60>)
    212c:	e01d      	b.n	216a <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    212e:	f89d 100c 	ldrb.w	r1, [sp, #12]
    2132:	3931      	subs	r1, #49	; 0x31
    2134:	2903      	cmp	r1, #3
    2136:	d817      	bhi.n	2168 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x50>
    2138:	e8df f001 	tbb	[pc, r1]
    213c:	110f0d02 	.word	0x110f0d02
    2140:	9801      	ldr	r0, [sp, #4]
    2142:	9902      	ldr	r1, [sp, #8]
    2144:	f7fe ff4c 	bl	fe0 <__mriPlatform_SetHardwareBreakpoint>
    2148:	6822      	ldr	r2, [r4, #0]
    214a:	b112      	cbz	r2, 2152 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x3a>
    214c:	f7ff ff7c 	bl	2048 <handleBreakpointWatchpointException>
    2150:	e00d      	b.n	216e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    2152:	480a      	ldr	r0, [pc, #40]	; (217c <__mriCmd_HandleBreakpointWatchpointSetCommand+0x64>)
    2154:	e009      	b.n	216a <__mriCmd_HandleBreakpointWatchpointSetCommand+0x52>
    2156:	2000      	movs	r0, #0
    2158:	e002      	b.n	2160 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    215a:	2001      	movs	r0, #1
    215c:	e000      	b.n	2160 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x48>
    215e:	2002      	movs	r0, #2
    2160:	a901      	add	r1, sp, #4
    2162:	f7ff ffc1 	bl	20e8 <handleWatchpointSetCommand>
    2166:	e002      	b.n	216e <__mriCmd_HandleBreakpointWatchpointSetCommand+0x56>
    2168:	4805      	ldr	r0, [pc, #20]	; (2180 <__mriCmd_HandleBreakpointWatchpointSetCommand+0x68>)
    216a:	f7fe f92d 	bl	3c8 <__mriCore_PrepareStringResponse>
    216e:	2000      	movs	r0, #0
    2170:	b004      	add	sp, #16
    2172:	bd10      	pop	{r4, pc}
    2174:	1000014c 	.word	0x1000014c
    2178:	00004205 	.word	0x00004205
    217c:	0000420d 	.word	0x0000420d
    2180:	000035da 	.word	0x000035da

00002184 <__mriCmd_HandleBreakpointWatchpointRemoveCommand>:
    2184:	b51f      	push	{r0, r1, r2, r3, r4, lr}
    2186:	4c16      	ldr	r4, [pc, #88]	; (21e0 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x5c>)
    2188:	2300      	movs	r3, #0
    218a:	a801      	add	r0, sp, #4
    218c:	6023      	str	r3, [r4, #0]
    218e:	f7ff ff6d 	bl	206c <parseBreakpointWatchpointCommandArguments>
    2192:	6820      	ldr	r0, [r4, #0]
    2194:	b108      	cbz	r0, 219a <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x16>
    2196:	4813      	ldr	r0, [pc, #76]	; (21e4 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x60>)
    2198:	e01d      	b.n	21d6 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    219a:	f89d 100c 	ldrb.w	r1, [sp, #12]
    219e:	3931      	subs	r1, #49	; 0x31
    21a0:	2903      	cmp	r1, #3
    21a2:	d817      	bhi.n	21d4 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x50>
    21a4:	e8df f001 	tbb	[pc, r1]
    21a8:	110f0d02 	.word	0x110f0d02
    21ac:	9801      	ldr	r0, [sp, #4]
    21ae:	9902      	ldr	r1, [sp, #8]
    21b0:	f7fe ffbc 	bl	112c <__mriPlatform_ClearHardwareBreakpoint>
    21b4:	6822      	ldr	r2, [r4, #0]
    21b6:	b112      	cbz	r2, 21be <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x3a>
    21b8:	f7ff ff46 	bl	2048 <handleBreakpointWatchpointException>
    21bc:	e00d      	b.n	21da <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    21be:	480a      	ldr	r0, [pc, #40]	; (21e8 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x64>)
    21c0:	e009      	b.n	21d6 <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x52>
    21c2:	2000      	movs	r0, #0
    21c4:	e002      	b.n	21cc <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    21c6:	2001      	movs	r0, #1
    21c8:	e000      	b.n	21cc <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x48>
    21ca:	2002      	movs	r0, #2
    21cc:	a901      	add	r1, sp, #4
    21ce:	f7ff ff73 	bl	20b8 <handleWatchpointRemoveCommand>
    21d2:	e002      	b.n	21da <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x56>
    21d4:	4805      	ldr	r0, [pc, #20]	; (21ec <__mriCmd_HandleBreakpointWatchpointRemoveCommand+0x68>)
    21d6:	f7fe f8f7 	bl	3c8 <__mriCore_PrepareStringResponse>
    21da:	2000      	movs	r0, #0
    21dc:	b004      	add	sp, #16
    21de:	bd10      	pop	{r4, pc}
    21e0:	1000014c 	.word	0x1000014c
    21e4:	00004205 	.word	0x00004205
    21e8:	0000420d 	.word	0x0000420d
    21ec:	000035da 	.word	0x000035da

000021f0 <__mriCmd_ReadUIntegerArgument>:
    21f0:	b510      	push	{r4, lr}
    21f2:	4c05      	ldr	r4, [pc, #20]	; (2208 <__mriCmd_ReadUIntegerArgument+0x18>)
    21f4:	2300      	movs	r3, #0
    21f6:	6023      	str	r3, [r4, #0]
    21f8:	f7ff fe48 	bl	1e8c <__mriBuffer_ReadUIntegerAsHex>
    21fc:	6821      	ldr	r1, [r4, #0]
    21fe:	2900      	cmp	r1, #0
    2200:	bf18      	it	ne
    2202:	2000      	movne	r0, #0
    2204:	bd10      	pop	{r4, pc}
    2206:	bf00      	nop
    2208:	1000014c 	.word	0x1000014c

0000220c <__mriCmd_ThrowIfNextCharIsNotEqualTo>:
    220c:	b508      	push	{r3, lr}
    220e:	f7ff fead 	bl	1f6c <__mriBuffer_IsNextCharEqualTo>
    2212:	b928      	cbnz	r0, 2220 <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x14>
    2214:	4b03      	ldr	r3, [pc, #12]	; (2224 <__mriCmd_ThrowIfNextCharIsNotEqualTo+0x18>)
    2216:	681a      	ldr	r2, [r3, #0]
    2218:	2a04      	cmp	r2, #4
    221a:	bfb8      	it	lt
    221c:	2204      	movlt	r2, #4
    221e:	601a      	str	r2, [r3, #0]
    2220:	bd08      	pop	{r3, pc}
    2222:	bf00      	nop
    2224:	1000014c 	.word	0x1000014c

00002228 <__mriCmd_ReadAddressAndLengthArguments>:
    2228:	b570      	push	{r4, r5, r6, lr}
    222a:	4c0a      	ldr	r4, [pc, #40]	; (2254 <__mriCmd_ReadAddressAndLengthArguments+0x2c>)
    222c:	2300      	movs	r3, #0
    222e:	460d      	mov	r5, r1
    2230:	4606      	mov	r6, r0
    2232:	6023      	str	r3, [r4, #0]
    2234:	f7ff ffdc 	bl	21f0 <__mriCmd_ReadUIntegerArgument>
    2238:	6028      	str	r0, [r5, #0]
    223a:	6820      	ldr	r0, [r4, #0]
    223c:	b948      	cbnz	r0, 2252 <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    223e:	212c      	movs	r1, #44	; 0x2c
    2240:	4630      	mov	r0, r6
    2242:	f7ff ffe3 	bl	220c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2246:	6821      	ldr	r1, [r4, #0]
    2248:	b919      	cbnz	r1, 2252 <__mriCmd_ReadAddressAndLengthArguments+0x2a>
    224a:	4630      	mov	r0, r6
    224c:	f7ff ffd0 	bl	21f0 <__mriCmd_ReadUIntegerArgument>
    2250:	6068      	str	r0, [r5, #4]
    2252:	bd70      	pop	{r4, r5, r6, pc}
    2254:	1000014c 	.word	0x1000014c

00002258 <__mriCmd_ReadAddressAndLengthArgumentsWithColon>:
    2258:	b538      	push	{r3, r4, r5, lr}
    225a:	4c07      	ldr	r4, [pc, #28]	; (2278 <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x20>)
    225c:	2300      	movs	r3, #0
    225e:	4605      	mov	r5, r0
    2260:	6023      	str	r3, [r4, #0]
    2262:	f7ff ffe1 	bl	2228 <__mriCmd_ReadAddressAndLengthArguments>
    2266:	6820      	ldr	r0, [r4, #0]
    2268:	b928      	cbnz	r0, 2276 <__mriCmd_ReadAddressAndLengthArgumentsWithColon+0x1e>
    226a:	4628      	mov	r0, r5
    226c:	213a      	movs	r1, #58	; 0x3a
    226e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2272:	f7ff bfcb 	b.w	220c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    2276:	bd38      	pop	{r3, r4, r5, pc}
    2278:	1000014c 	.word	0x1000014c

0000227c <__mriCmd_HandleContinueCommand>:
    227c:	b570      	push	{r4, r5, r6, lr}
    227e:	f7fe f90d 	bl	49c <__mriCore_GetBuffer>
    2282:	4606      	mov	r6, r0
    2284:	f7fe fddc 	bl	e40 <__mriPlatform_WasProgramCounterModifiedByUser>
    2288:	b918      	cbnz	r0, 2292 <__mriCmd_HandleContinueCommand+0x16>
    228a:	f7fe fe29 	bl	ee0 <__mriPlatform_TypeOfCurrentInstruction>
    228e:	2803      	cmp	r0, #3
    2290:	d00d      	beq.n	22ae <__mriCmd_HandleContinueCommand+0x32>
    2292:	2400      	movs	r4, #0
    2294:	4d08      	ldr	r5, [pc, #32]	; (22b8 <__mriCmd_HandleContinueCommand+0x3c>)
    2296:	2300      	movs	r3, #0
    2298:	4630      	mov	r0, r6
    229a:	602b      	str	r3, [r5, #0]
    229c:	f7ff ffa8 	bl	21f0 <__mriCmd_ReadUIntegerArgument>
    22a0:	6829      	ldr	r1, [r5, #0]
    22a2:	b909      	cbnz	r1, 22a8 <__mriCmd_HandleContinueCommand+0x2c>
    22a4:	f7fe fdc6 	bl	e34 <__mriPlatform_SetProgramCounter>
    22a8:	f044 0003 	orr.w	r0, r4, #3
    22ac:	bd70      	pop	{r4, r5, r6, pc}
    22ae:	f7fe fe35 	bl	f1c <__mriPlatform_AdvanceProgramCounterToNextInstruction>
    22b2:	2404      	movs	r4, #4
    22b4:	e7ee      	b.n	2294 <__mriCmd_HandleContinueCommand+0x18>
    22b6:	bf00      	nop
    22b8:	1000014c 	.word	0x1000014c

000022bc <processGdbFileResponseCommands>:
    22bc:	b508      	push	{r3, lr}
    22be:	f7fe f915 	bl	4ec <__mriCore_GdbCommandHandlingLoop>
    22c2:	f7fe f88d 	bl	3e0 <__mriCore_WasControlCFlagSentFromGdb>
    22c6:	b148      	cbz	r0, 22dc <processGdbFileResponseCommands+0x20>
    22c8:	f7fe f8ac 	bl	424 <__mriCore_WasSemihostCallCancelledByGdb>
    22cc:	b908      	cbnz	r0, 22d2 <processGdbFileResponseCommands+0x16>
    22ce:	f7fe f8b3 	bl	438 <__mriCore_FlagSemihostCallAsHandled>
    22d2:	2002      	movs	r0, #2
    22d4:	f7fe f8ca 	bl	46c <__mriCore_SetSignalValue>
    22d8:	2000      	movs	r0, #0
    22da:	bd08      	pop	{r3, pc}
    22dc:	f7fe f8ac 	bl	438 <__mriCore_FlagSemihostCallAsHandled>
    22e0:	2001      	movs	r0, #1
    22e2:	bd08      	pop	{r3, pc}

000022e4 <__mriIssueGdbFileOpenRequest>:
    22e4:	b538      	push	{r3, r4, r5, lr}
    22e6:	4605      	mov	r5, r0
    22e8:	f7fe f8dc 	bl	4a4 <__mriCore_GetInitializedBuffer>
    22ec:	4913      	ldr	r1, [pc, #76]	; (233c <__mriIssueGdbFileOpenRequest+0x58>)
    22ee:	4604      	mov	r4, r0
    22f0:	f7ff fdbe 	bl	1e70 <__mriBuffer_WriteString>
    22f4:	4620      	mov	r0, r4
    22f6:	6829      	ldr	r1, [r5, #0]
    22f8:	f7ff fdf6 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    22fc:	4620      	mov	r0, r4
    22fe:	212f      	movs	r1, #47	; 0x2f
    2300:	f7ff fd34 	bl	1d6c <__mriBuffer_WriteChar>
    2304:	6869      	ldr	r1, [r5, #4]
    2306:	4620      	mov	r0, r4
    2308:	3101      	adds	r1, #1
    230a:	f7ff fded 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    230e:	4620      	mov	r0, r4
    2310:	212c      	movs	r1, #44	; 0x2c
    2312:	f7ff fd2b 	bl	1d6c <__mriBuffer_WriteChar>
    2316:	4620      	mov	r0, r4
    2318:	68a9      	ldr	r1, [r5, #8]
    231a:	f7ff fde5 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    231e:	4620      	mov	r0, r4
    2320:	212c      	movs	r1, #44	; 0x2c
    2322:	f7ff fd23 	bl	1d6c <__mriBuffer_WriteChar>
    2326:	4620      	mov	r0, r4
    2328:	68e9      	ldr	r1, [r5, #12]
    232a:	f7ff fddd 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    232e:	f7fe f8c1 	bl	4b4 <__mriCore_SendPacketToGdb>
    2332:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2336:	f7ff bfc1 	b.w	22bc <processGdbFileResponseCommands>
    233a:	bf00      	nop
    233c:	00004233 	.word	0x00004233

00002340 <__mriIssueGdbFileWriteRequest>:
    2340:	b538      	push	{r3, r4, r5, lr}
    2342:	4605      	mov	r5, r0
    2344:	f7fe f8ae 	bl	4a4 <__mriCore_GetInitializedBuffer>
    2348:	490e      	ldr	r1, [pc, #56]	; (2384 <__mriIssueGdbFileWriteRequest+0x44>)
    234a:	4604      	mov	r4, r0
    234c:	f7ff fd90 	bl	1e70 <__mriBuffer_WriteString>
    2350:	4620      	mov	r0, r4
    2352:	6829      	ldr	r1, [r5, #0]
    2354:	f7ff fdc8 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    2358:	4620      	mov	r0, r4
    235a:	212c      	movs	r1, #44	; 0x2c
    235c:	f7ff fd06 	bl	1d6c <__mriBuffer_WriteChar>
    2360:	4620      	mov	r0, r4
    2362:	6869      	ldr	r1, [r5, #4]
    2364:	f7ff fdc0 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    2368:	4620      	mov	r0, r4
    236a:	212c      	movs	r1, #44	; 0x2c
    236c:	f7ff fcfe 	bl	1d6c <__mriBuffer_WriteChar>
    2370:	4620      	mov	r0, r4
    2372:	68a9      	ldr	r1, [r5, #8]
    2374:	f7ff fdb8 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    2378:	f7fe f89c 	bl	4b4 <__mriCore_SendPacketToGdb>
    237c:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2380:	f7ff bf9c 	b.w	22bc <processGdbFileResponseCommands>
    2384:	0000422b 	.word	0x0000422b

00002388 <__mriIssueGdbFileReadRequest>:
    2388:	b538      	push	{r3, r4, r5, lr}
    238a:	4605      	mov	r5, r0
    238c:	f7fe f88a 	bl	4a4 <__mriCore_GetInitializedBuffer>
    2390:	490e      	ldr	r1, [pc, #56]	; (23cc <__mriIssueGdbFileReadRequest+0x44>)
    2392:	4604      	mov	r4, r0
    2394:	f7ff fd6c 	bl	1e70 <__mriBuffer_WriteString>
    2398:	4620      	mov	r0, r4
    239a:	6829      	ldr	r1, [r5, #0]
    239c:	f7ff fda4 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    23a0:	4620      	mov	r0, r4
    23a2:	212c      	movs	r1, #44	; 0x2c
    23a4:	f7ff fce2 	bl	1d6c <__mriBuffer_WriteChar>
    23a8:	4620      	mov	r0, r4
    23aa:	6869      	ldr	r1, [r5, #4]
    23ac:	f7ff fd9c 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    23b0:	4620      	mov	r0, r4
    23b2:	212c      	movs	r1, #44	; 0x2c
    23b4:	f7ff fcda 	bl	1d6c <__mriBuffer_WriteChar>
    23b8:	4620      	mov	r0, r4
    23ba:	68a9      	ldr	r1, [r5, #8]
    23bc:	f7ff fd94 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    23c0:	f7fe f878 	bl	4b4 <__mriCore_SendPacketToGdb>
    23c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    23c8:	f7ff bf78 	b.w	22bc <processGdbFileResponseCommands>
    23cc:	00004242 	.word	0x00004242

000023d0 <__mriIssueGdbFileCloseRequest>:
    23d0:	b538      	push	{r3, r4, r5, lr}
    23d2:	4604      	mov	r4, r0
    23d4:	f7fe f866 	bl	4a4 <__mriCore_GetInitializedBuffer>
    23d8:	4906      	ldr	r1, [pc, #24]	; (23f4 <__mriIssueGdbFileCloseRequest+0x24>)
    23da:	4605      	mov	r5, r0
    23dc:	f7ff fd48 	bl	1e70 <__mriBuffer_WriteString>
    23e0:	4628      	mov	r0, r5
    23e2:	4621      	mov	r1, r4
    23e4:	f7ff fd80 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    23e8:	f7fe f864 	bl	4b4 <__mriCore_SendPacketToGdb>
    23ec:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    23f0:	f7ff bf64 	b.w	22bc <processGdbFileResponseCommands>
    23f4:	00004210 	.word	0x00004210

000023f8 <__mriIssueGdbFileSeekRequest>:
    23f8:	b538      	push	{r3, r4, r5, lr}
    23fa:	4605      	mov	r5, r0
    23fc:	f7fe f852 	bl	4a4 <__mriCore_GetInitializedBuffer>
    2400:	490e      	ldr	r1, [pc, #56]	; (243c <__mriIssueGdbFileSeekRequest+0x44>)
    2402:	4604      	mov	r4, r0
    2404:	f7ff fd34 	bl	1e70 <__mriBuffer_WriteString>
    2408:	4620      	mov	r0, r4
    240a:	6829      	ldr	r1, [r5, #0]
    240c:	f7ff fd6c 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    2410:	4620      	mov	r0, r4
    2412:	212c      	movs	r1, #44	; 0x2c
    2414:	f7ff fcaa 	bl	1d6c <__mriBuffer_WriteChar>
    2418:	4620      	mov	r0, r4
    241a:	6869      	ldr	r1, [r5, #4]
    241c:	f7ff fd8e 	bl	1f3c <__mriBuffer_WriteIntegerAsHex>
    2420:	4620      	mov	r0, r4
    2422:	212c      	movs	r1, #44	; 0x2c
    2424:	f7ff fca2 	bl	1d6c <__mriBuffer_WriteChar>
    2428:	4620      	mov	r0, r4
    242a:	68a9      	ldr	r1, [r5, #8]
    242c:	f7ff fd86 	bl	1f3c <__mriBuffer_WriteIntegerAsHex>
    2430:	f7fe f840 	bl	4b4 <__mriCore_SendPacketToGdb>
    2434:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2438:	f7ff bf40 	b.w	22bc <processGdbFileResponseCommands>
    243c:	00004249 	.word	0x00004249

00002440 <__mriIssueGdbFileFStatRequest>:
    2440:	b570      	push	{r4, r5, r6, lr}
    2442:	460d      	mov	r5, r1
    2444:	4606      	mov	r6, r0
    2446:	f7fe f82d 	bl	4a4 <__mriCore_GetInitializedBuffer>
    244a:	490b      	ldr	r1, [pc, #44]	; (2478 <__mriIssueGdbFileFStatRequest+0x38>)
    244c:	4604      	mov	r4, r0
    244e:	f7ff fd0f 	bl	1e70 <__mriBuffer_WriteString>
    2452:	4620      	mov	r0, r4
    2454:	4631      	mov	r1, r6
    2456:	f7ff fd47 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    245a:	4620      	mov	r0, r4
    245c:	212c      	movs	r1, #44	; 0x2c
    245e:	f7ff fc85 	bl	1d6c <__mriBuffer_WriteChar>
    2462:	4620      	mov	r0, r4
    2464:	4629      	mov	r1, r5
    2466:	f7ff fd3f 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    246a:	f7fe f823 	bl	4b4 <__mriCore_SendPacketToGdb>
    246e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2472:	f7ff bf23 	b.w	22bc <processGdbFileResponseCommands>
    2476:	bf00      	nop
    2478:	0000423a 	.word	0x0000423a

0000247c <__mriIssueGdbFileUnlinkRequest>:
    247c:	b538      	push	{r3, r4, r5, lr}
    247e:	4605      	mov	r5, r0
    2480:	f7fe f810 	bl	4a4 <__mriCore_GetInitializedBuffer>
    2484:	490b      	ldr	r1, [pc, #44]	; (24b4 <__mriIssueGdbFileUnlinkRequest+0x38>)
    2486:	4604      	mov	r4, r0
    2488:	f7ff fcf2 	bl	1e70 <__mriBuffer_WriteString>
    248c:	4620      	mov	r0, r4
    248e:	6829      	ldr	r1, [r5, #0]
    2490:	f7ff fd2a 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    2494:	4620      	mov	r0, r4
    2496:	212f      	movs	r1, #47	; 0x2f
    2498:	f7ff fc68 	bl	1d6c <__mriBuffer_WriteChar>
    249c:	6869      	ldr	r1, [r5, #4]
    249e:	4620      	mov	r0, r4
    24a0:	3101      	adds	r1, #1
    24a2:	f7ff fd21 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    24a6:	f7fe f805 	bl	4b4 <__mriCore_SendPacketToGdb>
    24aa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    24ae:	f7ff bf05 	b.w	22bc <processGdbFileResponseCommands>
    24b2:	bf00      	nop
    24b4:	00004251 	.word	0x00004251

000024b8 <__mriIssueGdbFileStatRequest>:
    24b8:	b570      	push	{r4, r5, r6, lr}
    24ba:	4605      	mov	r5, r0
    24bc:	460e      	mov	r6, r1
    24be:	f7fd fff1 	bl	4a4 <__mriCore_GetInitializedBuffer>
    24c2:	4910      	ldr	r1, [pc, #64]	; (2504 <__mriIssueGdbFileStatRequest+0x4c>)
    24c4:	4604      	mov	r4, r0
    24c6:	f7ff fcd3 	bl	1e70 <__mriBuffer_WriteString>
    24ca:	4620      	mov	r0, r4
    24cc:	4629      	mov	r1, r5
    24ce:	f7ff fd0b 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    24d2:	212f      	movs	r1, #47	; 0x2f
    24d4:	4620      	mov	r0, r4
    24d6:	f7ff fc49 	bl	1d6c <__mriBuffer_WriteChar>
    24da:	4628      	mov	r0, r5
    24dc:	f000 fff6 	bl	34cc <strlen>
    24e0:	1c41      	adds	r1, r0, #1
    24e2:	4620      	mov	r0, r4
    24e4:	f7ff fd00 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    24e8:	4620      	mov	r0, r4
    24ea:	212c      	movs	r1, #44	; 0x2c
    24ec:	f7ff fc3e 	bl	1d6c <__mriBuffer_WriteChar>
    24f0:	4620      	mov	r0, r4
    24f2:	4631      	mov	r1, r6
    24f4:	f7ff fcf8 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    24f8:	f7fd ffdc 	bl	4b4 <__mriCore_SendPacketToGdb>
    24fc:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2500:	f7ff bedc 	b.w	22bc <processGdbFileResponseCommands>
    2504:	00004218 	.word	0x00004218

00002508 <__mriIssueGdbFileRenameRequest>:
    2508:	b570      	push	{r4, r5, r6, lr}
    250a:	460d      	mov	r5, r1
    250c:	4606      	mov	r6, r0
    250e:	f7fd ffc9 	bl	4a4 <__mriCore_GetInitializedBuffer>
    2512:	4916      	ldr	r1, [pc, #88]	; (256c <__mriIssueGdbFileRenameRequest+0x64>)
    2514:	4604      	mov	r4, r0
    2516:	f7ff fcab 	bl	1e70 <__mriBuffer_WriteString>
    251a:	4620      	mov	r0, r4
    251c:	4631      	mov	r1, r6
    251e:	f7ff fce3 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    2522:	212f      	movs	r1, #47	; 0x2f
    2524:	4620      	mov	r0, r4
    2526:	f7ff fc21 	bl	1d6c <__mriBuffer_WriteChar>
    252a:	4630      	mov	r0, r6
    252c:	f000 ffce 	bl	34cc <strlen>
    2530:	1c41      	adds	r1, r0, #1
    2532:	4620      	mov	r0, r4
    2534:	f7ff fcd8 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    2538:	4620      	mov	r0, r4
    253a:	212c      	movs	r1, #44	; 0x2c
    253c:	f7ff fc16 	bl	1d6c <__mriBuffer_WriteChar>
    2540:	4620      	mov	r0, r4
    2542:	4629      	mov	r1, r5
    2544:	f7ff fcd0 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    2548:	212f      	movs	r1, #47	; 0x2f
    254a:	4620      	mov	r0, r4
    254c:	f7ff fc0e 	bl	1d6c <__mriBuffer_WriteChar>
    2550:	4628      	mov	r0, r5
    2552:	f000 ffbb 	bl	34cc <strlen>
    2556:	1c41      	adds	r1, r0, #1
    2558:	4620      	mov	r0, r4
    255a:	f7ff fcc5 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    255e:	f7fd ffa9 	bl	4b4 <__mriCore_SendPacketToGdb>
    2562:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
    2566:	f7ff bea9 	b.w	22bc <processGdbFileResponseCommands>
    256a:	bf00      	nop
    256c:	00004222 	.word	0x00004222

00002570 <__mriHandleFileIOCommand>:
    2570:	b570      	push	{r4, r5, r6, lr}
    2572:	f7fd ff93 	bl	49c <__mriCore_GetBuffer>
    2576:	4604      	mov	r4, r0
    2578:	f7ff fd12 	bl	1fa0 <__mriBuffer_ReadIntegerAsHex>
    257c:	212c      	movs	r1, #44	; 0x2c
    257e:	4606      	mov	r6, r0
    2580:	4620      	mov	r0, r4
    2582:	f7ff fcf3 	bl	1f6c <__mriBuffer_IsNextCharEqualTo>
    2586:	b150      	cbz	r0, 259e <__mriHandleFileIOCommand+0x2e>
    2588:	4620      	mov	r0, r4
    258a:	f7ff fd09 	bl	1fa0 <__mriBuffer_ReadIntegerAsHex>
    258e:	4909      	ldr	r1, [pc, #36]	; (25b4 <__mriHandleFileIOCommand+0x44>)
    2590:	4605      	mov	r5, r0
    2592:	2202      	movs	r2, #2
    2594:	4620      	mov	r0, r4
    2596:	f7ff fd2d 	bl	1ff4 <__mriBuffer_MatchesString>
    259a:	4604      	mov	r4, r0
    259c:	e001      	b.n	25a2 <__mriHandleFileIOCommand+0x32>
    259e:	4604      	mov	r4, r0
    25a0:	4605      	mov	r5, r0
    25a2:	4630      	mov	r0, r6
    25a4:	4629      	mov	r1, r5
    25a6:	f7fd ff6d 	bl	484 <__mriCore_SetSemihostReturnValues>
    25aa:	4620      	mov	r0, r4
    25ac:	f7fd ff2e 	bl	40c <__mriCore_RecordControlCFlagSentFromGdb>
    25b0:	2003      	movs	r0, #3
    25b2:	bd70      	pop	{r4, r5, r6, pc}
    25b4:	0000421f 	.word	0x0000421f

000025b8 <__mriCmd_HandleMemoryReadCommand>:
    25b8:	b537      	push	{r0, r1, r2, r4, r5, lr}
    25ba:	f7fd ff6f 	bl	49c <__mriCore_GetBuffer>
    25be:	4c0b      	ldr	r4, [pc, #44]	; (25ec <__mriCmd_HandleMemoryReadCommand+0x34>)
    25c0:	2300      	movs	r3, #0
    25c2:	4669      	mov	r1, sp
    25c4:	4605      	mov	r5, r0
    25c6:	6023      	str	r3, [r4, #0]
    25c8:	f7ff fe2e 	bl	2228 <__mriCmd_ReadAddressAndLengthArguments>
    25cc:	6820      	ldr	r0, [r4, #0]
    25ce:	b118      	cbz	r0, 25d8 <__mriCmd_HandleMemoryReadCommand+0x20>
    25d0:	4807      	ldr	r0, [pc, #28]	; (25f0 <__mriCmd_HandleMemoryReadCommand+0x38>)
    25d2:	f7fd fef9 	bl	3c8 <__mriCore_PrepareStringResponse>
    25d6:	e006      	b.n	25e6 <__mriCmd_HandleMemoryReadCommand+0x2e>
    25d8:	f7fd fee6 	bl	3a8 <__mriCore_InitBuffer>
    25dc:	e89d 0006 	ldmia.w	sp, {r1, r2}
    25e0:	4628      	mov	r0, r5
    25e2:	f000 fa48 	bl	2a76 <__mriMem_ReadMemoryIntoHexBuffer>
    25e6:	2000      	movs	r0, #0
    25e8:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    25ea:	bf00      	nop
    25ec:	1000014c 	.word	0x1000014c
    25f0:	00004205 	.word	0x00004205

000025f4 <__mriCmd_HandleMemoryWriteCommand>:
    25f4:	b537      	push	{r0, r1, r2, r4, r5, lr}
    25f6:	f7fd ff51 	bl	49c <__mriCore_GetBuffer>
    25fa:	4c0c      	ldr	r4, [pc, #48]	; (262c <__mriCmd_HandleMemoryWriteCommand+0x38>)
    25fc:	2300      	movs	r3, #0
    25fe:	4669      	mov	r1, sp
    2600:	4605      	mov	r5, r0
    2602:	6023      	str	r3, [r4, #0]
    2604:	f7ff fe28 	bl	2258 <__mriCmd_ReadAddressAndLengthArgumentsWithColon>
    2608:	6820      	ldr	r0, [r4, #0]
    260a:	b108      	cbz	r0, 2610 <__mriCmd_HandleMemoryWriteCommand+0x1c>
    260c:	4808      	ldr	r0, [pc, #32]	; (2630 <__mriCmd_HandleMemoryWriteCommand+0x3c>)
    260e:	e008      	b.n	2622 <__mriCmd_HandleMemoryWriteCommand+0x2e>
    2610:	4628      	mov	r0, r5
    2612:	e89d 0006 	ldmia.w	sp, {r1, r2}
    2616:	f000 fa5b 	bl	2ad0 <__mriMem_WriteHexBufferToMemory>
    261a:	b108      	cbz	r0, 2620 <__mriCmd_HandleMemoryWriteCommand+0x2c>
    261c:	4805      	ldr	r0, [pc, #20]	; (2634 <__mriCmd_HandleMemoryWriteCommand+0x40>)
    261e:	e000      	b.n	2622 <__mriCmd_HandleMemoryWriteCommand+0x2e>
    2620:	4805      	ldr	r0, [pc, #20]	; (2638 <__mriCmd_HandleMemoryWriteCommand+0x44>)
    2622:	f7fd fed1 	bl	3c8 <__mriCore_PrepareStringResponse>
    2626:	2000      	movs	r0, #0
    2628:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    262a:	bf00      	nop
    262c:	1000014c 	.word	0x1000014c
    2630:	00004205 	.word	0x00004205
    2634:	0000420d 	.word	0x0000420d
    2638:	0000425a 	.word	0x0000425a

0000263c <__mriCmd_HandleBinaryMemoryWriteCommand>:
    263c:	b537      	push	{r0, r1, r2, r4, r5, lr}
    263e:	f7fd ff2d 	bl	49c <__mriCore_GetBuffer>
    2642:	4d12      	ldr	r5, [pc, #72]	; (268c <__mriCmd_HandleBinaryMemoryWriteCommand+0x50>)
    2644:	2300      	movs	r3, #0
    2646:	4669      	mov	r1, sp
    2648:	4604      	mov	r4, r0
    264a:	602b      	str	r3, [r5, #0]
    264c:	f7ff fdec 	bl	2228 <__mriCmd_ReadAddressAndLengthArguments>
    2650:	6828      	ldr	r0, [r5, #0]
    2652:	b918      	cbnz	r0, 265c <__mriCmd_HandleBinaryMemoryWriteCommand+0x20>
    2654:	4620      	mov	r0, r4
    2656:	213a      	movs	r1, #58	; 0x3a
    2658:	f7ff fdd8 	bl	220c <__mriCmd_ThrowIfNextCharIsNotEqualTo>
    265c:	6829      	ldr	r1, [r5, #0]
    265e:	b109      	cbz	r1, 2664 <__mriCmd_HandleBinaryMemoryWriteCommand+0x28>
    2660:	480b      	ldr	r0, [pc, #44]	; (2690 <__mriCmd_HandleBinaryMemoryWriteCommand+0x54>)
    2662:	e00e      	b.n	2682 <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    2664:	4620      	mov	r0, r4
    2666:	e89d 0006 	ldmia.w	sp, {r1, r2}
    266a:	f000 fa59 	bl	2b20 <__mriMem_WriteBinaryBufferToMemory>
    266e:	b108      	cbz	r0, 2674 <__mriCmd_HandleBinaryMemoryWriteCommand+0x38>
    2670:	4808      	ldr	r0, [pc, #32]	; (2694 <__mriCmd_HandleBinaryMemoryWriteCommand+0x58>)
    2672:	e006      	b.n	2682 <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    2674:	4620      	mov	r0, r4
    2676:	f7ff fb71 	bl	1d5c <__mriBuffer_OverrunDetected>
    267a:	b108      	cbz	r0, 2680 <__mriCmd_HandleBinaryMemoryWriteCommand+0x44>
    267c:	4806      	ldr	r0, [pc, #24]	; (2698 <__mriCmd_HandleBinaryMemoryWriteCommand+0x5c>)
    267e:	e000      	b.n	2682 <__mriCmd_HandleBinaryMemoryWriteCommand+0x46>
    2680:	4806      	ldr	r0, [pc, #24]	; (269c <__mriCmd_HandleBinaryMemoryWriteCommand+0x60>)
    2682:	f7fd fea1 	bl	3c8 <__mriCore_PrepareStringResponse>
    2686:	2000      	movs	r0, #0
    2688:	bd3e      	pop	{r1, r2, r3, r4, r5, pc}
    268a:	bf00      	nop
    268c:	1000014c 	.word	0x1000014c
    2690:	00004205 	.word	0x00004205
    2694:	0000420d 	.word	0x0000420d
    2698:	00003564 	.word	0x00003564
    269c:	0000425a 	.word	0x0000425a

000026a0 <handleQueryTransferReadCommand>:
    26a0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    26a4:	4604      	mov	r4, r0
    26a6:	f7fd fef9 	bl	49c <__mriCore_GetBuffer>
    26aa:	1d25      	adds	r5, r4, #4
    26ac:	e895 01a0 	ldmia.w	r5, {r5, r7, r8}
    26b0:	42af      	cmp	r7, r5
    26b2:	4606      	mov	r6, r0
    26b4:	d203      	bcs.n	26be <handleQueryTransferReadCommand+0x1e>
    26b6:	1bed      	subs	r5, r5, r7
    26b8:	f04f 096d 	mov.w	r9, #109	; 0x6d
    26bc:	e003      	b.n	26c6 <handleQueryTransferReadCommand+0x26>
    26be:	2500      	movs	r5, #0
    26c0:	46a8      	mov	r8, r5
    26c2:	f04f 096c 	mov.w	r9, #108	; 0x6c
    26c6:	f7fd fe6f 	bl	3a8 <__mriCore_InitBuffer>
    26ca:	4630      	mov	r0, r6
    26cc:	f7ff fb29 	bl	1d22 <__mriBuffer_BytesLeft>
    26d0:	4540      	cmp	r0, r8
    26d2:	bf38      	it	cc
    26d4:	4680      	movcc	r8, r0
    26d6:	45a8      	cmp	r8, r5
    26d8:	bf88      	it	hi
    26da:	f04f 096c 	movhi.w	r9, #108	; 0x6c
    26de:	4630      	mov	r0, r6
    26e0:	4649      	mov	r1, r9
    26e2:	bf88      	it	hi
    26e4:	46a8      	movhi	r8, r5
    26e6:	f7ff fb41 	bl	1d6c <__mriBuffer_WriteChar>
    26ea:	6821      	ldr	r1, [r4, #0]
    26ec:	4630      	mov	r0, r6
    26ee:	19c9      	adds	r1, r1, r7
    26f0:	4642      	mov	r2, r8
    26f2:	e8bd 43f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    26f6:	f7ff bba1 	b.w	1e3c <__mriBuffer_WriteSizedString>
	...

000026fc <readQueryTransferReadArguments>:
    26fc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    26fe:	4604      	mov	r4, r0
    2700:	460e      	mov	r6, r1
    2702:	4608      	mov	r0, r1
    2704:	2210      	movs	r2, #16
    2706:	2100      	movs	r1, #0
    2708:	f000 fecd 	bl	34a6 <memset>
    270c:	4620      	mov	r0, r4
    270e:	213a      	movs	r1, #58	; 0x3a
    2710:	f7ff fc2c 	bl	1f6c <__mriBuffer_IsNextCharEqualTo>
    2714:	b930      	cbnz	r0, 2724 <readQueryTransferReadArguments+0x28>
    2716:	481f      	ldr	r0, [pc, #124]	; (2794 <readQueryTransferReadArguments+0x98>)
    2718:	6802      	ldr	r2, [r0, #0]
    271a:	2a04      	cmp	r2, #4
    271c:	bfb8      	it	lt
    271e:	2204      	movlt	r2, #4
    2720:	6002      	str	r2, [r0, #0]
    2722:	e036      	b.n	2792 <readQueryTransferReadArguments+0x96>
    2724:	4620      	mov	r0, r4
    2726:	491c      	ldr	r1, [pc, #112]	; (2798 <readQueryTransferReadArguments+0x9c>)
    2728:	2204      	movs	r2, #4
    272a:	f7ff fc63 	bl	1ff4 <__mriBuffer_MatchesString>
    272e:	2800      	cmp	r0, #0
    2730:	d0f1      	beq.n	2716 <readQueryTransferReadArguments+0x1a>
    2732:	4620      	mov	r0, r4
    2734:	213a      	movs	r1, #58	; 0x3a
    2736:	f7ff fc19 	bl	1f6c <__mriBuffer_IsNextCharEqualTo>
    273a:	2800      	cmp	r0, #0
    273c:	d0eb      	beq.n	2716 <readQueryTransferReadArguments+0x1a>
    273e:	4d15      	ldr	r5, [pc, #84]	; (2794 <readQueryTransferReadArguments+0x98>)
    2740:	2300      	movs	r3, #0
    2742:	4620      	mov	r0, r4
    2744:	4915      	ldr	r1, [pc, #84]	; (279c <readQueryTransferReadArguments+0xa0>)
    2746:	220a      	movs	r2, #10
    2748:	602b      	str	r3, [r5, #0]
    274a:	f7ff fc53 	bl	1ff4 <__mriBuffer_MatchesString>
    274e:	4607      	mov	r7, r0
    2750:	b190      	cbz	r0, 2778 <readQueryTransferReadArguments+0x7c>
    2752:	4620      	mov	r0, r4
    2754:	213a      	movs	r1, #58	; 0x3a
    2756:	f7ff fc09 	bl	1f6c <__mriBuffer_IsNextCharEqualTo>
    275a:	b1a0      	cbz	r0, 2786 <readQueryTransferReadArguments+0x8a>
    275c:	480f      	ldr	r0, [pc, #60]	; (279c <readQueryTransferReadArguments+0xa0>)
    275e:	6030      	str	r0, [r6, #0]
    2760:	480c      	ldr	r0, [pc, #48]	; (2794 <readQueryTransferReadArguments+0x98>)
    2762:	6802      	ldr	r2, [r0, #0]
    2764:	b9aa      	cbnz	r2, 2792 <readQueryTransferReadArguments+0x96>
    2766:	4669      	mov	r1, sp
    2768:	4620      	mov	r0, r4
    276a:	f7ff fd5d 	bl	2228 <__mriCmd_ReadAddressAndLengthArguments>
    276e:	9b00      	ldr	r3, [sp, #0]
    2770:	9901      	ldr	r1, [sp, #4]
    2772:	60b3      	str	r3, [r6, #8]
    2774:	60f1      	str	r1, [r6, #12]
    2776:	e00c      	b.n	2792 <readQueryTransferReadArguments+0x96>
    2778:	4620      	mov	r0, r4
    277a:	213a      	movs	r1, #58	; 0x3a
    277c:	f7ff fbf6 	bl	1f6c <__mriBuffer_IsNextCharEqualTo>
    2780:	b108      	cbz	r0, 2786 <readQueryTransferReadArguments+0x8a>
    2782:	4638      	mov	r0, r7
    2784:	e7eb      	b.n	275e <readQueryTransferReadArguments+0x62>
    2786:	6829      	ldr	r1, [r5, #0]
    2788:	2904      	cmp	r1, #4
    278a:	bfb8      	it	lt
    278c:	2104      	movlt	r1, #4
    278e:	6029      	str	r1, [r5, #0]
    2790:	e7e5      	b.n	275e <readQueryTransferReadArguments+0x62>
    2792:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
    2794:	1000014c 	.word	0x1000014c
    2798:	000042cf 	.word	0x000042cf
    279c:	0000426d 	.word	0x0000426d

000027a0 <__mriCmd_HandleQueryCommand>:
    27a0:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
    27a2:	f7fd fe7b 	bl	49c <__mriCore_GetBuffer>
    27a6:	4935      	ldr	r1, [pc, #212]	; (287c <__mriCmd_HandleQueryCommand+0xdc>)
    27a8:	2209      	movs	r2, #9
    27aa:	4604      	mov	r4, r0
    27ac:	f7ff fc22 	bl	1ff4 <__mriBuffer_MatchesString>
    27b0:	4606      	mov	r6, r0
    27b2:	b168      	cbz	r0, 27d0 <__mriCmd_HandleQueryCommand+0x30>
    27b4:	f7fe fa66 	bl	c84 <__mriPlatform_GetPacketBufferSize>
    27b8:	4604      	mov	r4, r0
    27ba:	f7fd fe73 	bl	4a4 <__mriCore_GetInitializedBuffer>
    27be:	4930      	ldr	r1, [pc, #192]	; (2880 <__mriCmd_HandleQueryCommand+0xe0>)
    27c0:	4605      	mov	r5, r0
    27c2:	f7ff fb55 	bl	1e70 <__mriBuffer_WriteString>
    27c6:	4628      	mov	r0, r5
    27c8:	4621      	mov	r1, r4
    27ca:	f7ff fb8d 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    27ce:	e051      	b.n	2874 <__mriCmd_HandleQueryCommand+0xd4>
    27d0:	4620      	mov	r0, r4
    27d2:	492c      	ldr	r1, [pc, #176]	; (2884 <__mriCmd_HandleQueryCommand+0xe4>)
    27d4:	2204      	movs	r2, #4
    27d6:	f7ff fc0d 	bl	1ff4 <__mriBuffer_MatchesString>
    27da:	2800      	cmp	r0, #0
    27dc:	d047      	beq.n	286e <__mriCmd_HandleQueryCommand+0xce>
    27de:	f7fd fe5d 	bl	49c <__mriCore_GetBuffer>
    27e2:	213a      	movs	r1, #58	; 0x3a
    27e4:	4604      	mov	r4, r0
    27e6:	f7ff fbc1 	bl	1f6c <__mriBuffer_IsNextCharEqualTo>
    27ea:	2800      	cmp	r0, #0
    27ec:	d033      	beq.n	2856 <__mriCmd_HandleQueryCommand+0xb6>
    27ee:	4620      	mov	r0, r4
    27f0:	4925      	ldr	r1, [pc, #148]	; (2888 <__mriCmd_HandleQueryCommand+0xe8>)
    27f2:	220a      	movs	r2, #10
    27f4:	f7ff fbfe 	bl	1ff4 <__mriBuffer_MatchesString>
    27f8:	4605      	mov	r5, r0
    27fa:	b1a0      	cbz	r0, 2826 <__mriCmd_HandleQueryCommand+0x86>
    27fc:	4c23      	ldr	r4, [pc, #140]	; (288c <__mriCmd_HandleQueryCommand+0xec>)
    27fe:	f7fd fe4d 	bl	49c <__mriCore_GetBuffer>
    2802:	4669      	mov	r1, sp
    2804:	6026      	str	r6, [r4, #0]
    2806:	f7ff ff79 	bl	26fc <readQueryTransferReadArguments>
    280a:	6822      	ldr	r2, [r4, #0]
    280c:	b91a      	cbnz	r2, 2816 <__mriCmd_HandleQueryCommand+0x76>
    280e:	9b00      	ldr	r3, [sp, #0]
    2810:	b10b      	cbz	r3, 2816 <__mriCmd_HandleQueryCommand+0x76>
    2812:	2004      	movs	r0, #4
    2814:	6020      	str	r0, [r4, #0]
    2816:	6821      	ldr	r1, [r4, #0]
    2818:	b9e9      	cbnz	r1, 2856 <__mriCmd_HandleQueryCommand+0xb6>
    281a:	f7fe ffcf 	bl	17bc <__mriPlatform_GetDeviceMemoryMapXml>
    281e:	9000      	str	r0, [sp, #0]
    2820:	f7fe ffc8 	bl	17b4 <__mriPlatform_GetDeviceMemoryMapXmlSize>
    2824:	e01e      	b.n	2864 <__mriCmd_HandleQueryCommand+0xc4>
    2826:	4620      	mov	r0, r4
    2828:	4919      	ldr	r1, [pc, #100]	; (2890 <__mriCmd_HandleQueryCommand+0xf0>)
    282a:	2208      	movs	r2, #8
    282c:	f7ff fbe2 	bl	1ff4 <__mriBuffer_MatchesString>
    2830:	b1e8      	cbz	r0, 286e <__mriCmd_HandleQueryCommand+0xce>
    2832:	4c16      	ldr	r4, [pc, #88]	; (288c <__mriCmd_HandleQueryCommand+0xec>)
    2834:	f7fd fe32 	bl	49c <__mriCore_GetBuffer>
    2838:	4669      	mov	r1, sp
    283a:	6025      	str	r5, [r4, #0]
    283c:	f7ff ff5e 	bl	26fc <readQueryTransferReadArguments>
    2840:	6823      	ldr	r3, [r4, #0]
    2842:	b933      	cbnz	r3, 2852 <__mriCmd_HandleQueryCommand+0xb2>
    2844:	9800      	ldr	r0, [sp, #0]
    2846:	4913      	ldr	r1, [pc, #76]	; (2894 <__mriCmd_HandleQueryCommand+0xf4>)
    2848:	f000 fe35 	bl	34b6 <strcmp>
    284c:	b108      	cbz	r0, 2852 <__mriCmd_HandleQueryCommand+0xb2>
    284e:	2004      	movs	r0, #4
    2850:	6020      	str	r0, [r4, #0]
    2852:	6821      	ldr	r1, [r4, #0]
    2854:	b109      	cbz	r1, 285a <__mriCmd_HandleQueryCommand+0xba>
    2856:	4810      	ldr	r0, [pc, #64]	; (2898 <__mriCmd_HandleQueryCommand+0xf8>)
    2858:	e00a      	b.n	2870 <__mriCmd_HandleQueryCommand+0xd0>
    285a:	f7fe fd87 	bl	136c <__mriPlatform_GetTargetXml>
    285e:	9000      	str	r0, [sp, #0]
    2860:	f7fe fd80 	bl	1364 <__mriPlatform_GetTargetXmlSize>
    2864:	9001      	str	r0, [sp, #4]
    2866:	4668      	mov	r0, sp
    2868:	f7ff ff1a 	bl	26a0 <handleQueryTransferReadCommand>
    286c:	e002      	b.n	2874 <__mriCmd_HandleQueryCommand+0xd4>
    286e:	480b      	ldr	r0, [pc, #44]	; (289c <__mriCmd_HandleQueryCommand+0xfc>)
    2870:	f7fd fdaa 	bl	3c8 <__mriCore_PrepareStringResponse>
    2874:	2000      	movs	r0, #0
    2876:	b004      	add	sp, #16
    2878:	bd70      	pop	{r4, r5, r6, pc}
    287a:	bf00      	nop
    287c:	00004263 	.word	0x00004263
    2880:	00004278 	.word	0x00004278
    2884:	0000425e 	.word	0x0000425e
    2888:	000042c4 	.word	0x000042c4
    288c:	1000014c 	.word	0x1000014c
    2890:	000042bb 	.word	0x000042bb
    2894:	000042b0 	.word	0x000042b0
    2898:	00004205 	.word	0x00004205
    289c:	000035da 	.word	0x000035da

000028a0 <__mriCmd_Send_T_StopResponse>:
    28a0:	b510      	push	{r4, lr}
    28a2:	f7fd fdff 	bl	4a4 <__mriCore_GetInitializedBuffer>
    28a6:	2154      	movs	r1, #84	; 0x54
    28a8:	4604      	mov	r4, r0
    28aa:	f7ff fa5f 	bl	1d6c <__mriBuffer_WriteChar>
    28ae:	f7fd fde3 	bl	478 <__mriCore_GetSignalValue>
    28b2:	4601      	mov	r1, r0
    28b4:	4620      	mov	r0, r4
    28b6:	f7ff fa7f 	bl	1db8 <__mriBuffer_WriteByteAsHex>
    28ba:	4620      	mov	r0, r4
    28bc:	f7fe fb52 	bl	f64 <__mriPlatform_WriteTResponseRegistersToBuffer>
    28c0:	f7fd fdf8 	bl	4b4 <__mriCore_SendPacketToGdb>
    28c4:	2002      	movs	r0, #2
    28c6:	bd10      	pop	{r4, pc}

000028c8 <__mriCmd_HandleRegisterReadCommand>:
    28c8:	b508      	push	{r3, lr}
    28ca:	f7fd fdeb 	bl	4a4 <__mriCore_GetInitializedBuffer>
    28ce:	f7fe fb67 	bl	fa0 <__mriPlatform_CopyContextToBuffer>
    28d2:	2000      	movs	r0, #0
    28d4:	bd08      	pop	{r3, pc}
	...

000028d8 <__mriCmd_HandleRegisterWriteCommand>:
    28d8:	b510      	push	{r4, lr}
    28da:	f7fd fddf 	bl	49c <__mriCore_GetBuffer>
    28de:	4604      	mov	r4, r0
    28e0:	f7fe fb6e 	bl	fc0 <__mriPlatform_CopyContextFromBuffer>
    28e4:	4620      	mov	r0, r4
    28e6:	f7ff fa39 	bl	1d5c <__mriBuffer_OverrunDetected>
    28ea:	b108      	cbz	r0, 28f0 <__mriCmd_HandleRegisterWriteCommand+0x18>
    28ec:	4803      	ldr	r0, [pc, #12]	; (28fc <__mriCmd_HandleRegisterWriteCommand+0x24>)
    28ee:	e000      	b.n	28f2 <__mriCmd_HandleRegisterWriteCommand+0x1a>
    28f0:	4803      	ldr	r0, [pc, #12]	; (2900 <__mriCmd_HandleRegisterWriteCommand+0x28>)
    28f2:	f7fd fd69 	bl	3c8 <__mriCore_PrepareStringResponse>
    28f6:	2000      	movs	r0, #0
    28f8:	bd10      	pop	{r4, pc}
    28fa:	bf00      	nop
    28fc:	00003564 	.word	0x00003564
    2900:	0000420d 	.word	0x0000420d

00002904 <__mriCmd_HandleSingleStepCommand>:
    2904:	b508      	push	{r3, lr}
    2906:	f7ff fcb9 	bl	227c <__mriCmd_HandleContinueCommand>
    290a:	0743      	lsls	r3, r0, #29
    290c:	d503      	bpl.n	2916 <__mriCmd_HandleSingleStepCommand+0x12>
    290e:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    2912:	f7ff bfc5 	b.w	28a0 <__mriCmd_Send_T_StopResponse>
    2916:	f7fe fb9b 	bl	1050 <__mriPlatform_EnableSingleStep>
    291a:	2003      	movs	r0, #3
    291c:	bd08      	pop	{r3, pc}

0000291e <__mriGdbConsole_WriteString>:
    291e:	b538      	push	{r3, r4, r5, lr}
    2920:	4604      	mov	r4, r0
    2922:	f7fe fd7b 	bl	141c <__mriPlatform_CommSharingWithApplication>
    2926:	b150      	cbz	r0, 293e <__mriGdbConsole_WriteString+0x20>
    2928:	f7fd fd98 	bl	45c <__mriCore_IsFirstException>
    292c:	b138      	cbz	r0, 293e <__mriGdbConsole_WriteString+0x20>
    292e:	3c01      	subs	r4, #1
    2930:	f814 0f01 	ldrb.w	r0, [r4, #1]!
    2934:	b110      	cbz	r0, 293c <__mriGdbConsole_WriteString+0x1e>
    2936:	f7fe fd4f 	bl	13d8 <__mriPlatform_CommSendChar>
    293a:	e7f9      	b.n	2930 <__mriGdbConsole_WriteString+0x12>
    293c:	bd38      	pop	{r3, r4, r5, pc}
    293e:	f7fd fdb1 	bl	4a4 <__mriCore_GetInitializedBuffer>
    2942:	214f      	movs	r1, #79	; 0x4f
    2944:	4605      	mov	r5, r0
    2946:	f7ff fa11 	bl	1d6c <__mriBuffer_WriteChar>
    294a:	4620      	mov	r0, r4
    294c:	f000 fdbe 	bl	34cc <strlen>
    2950:	4621      	mov	r1, r4
    2952:	4602      	mov	r2, r0
    2954:	4628      	mov	r0, r5
    2956:	f000 f88e 	bl	2a76 <__mriMem_ReadMemoryIntoHexBuffer>
    295a:	4628      	mov	r0, r5
    295c:	f7ff f9fe 	bl	1d5c <__mriBuffer_OverrunDetected>
    2960:	b918      	cbnz	r0, 296a <__mriGdbConsole_WriteString+0x4c>
    2962:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
    2966:	f7fd bda5 	b.w	4b4 <__mriCore_SendPacketToGdb>
    296a:	bd38      	pop	{r3, r4, r5, pc}

0000296c <__mriGdbConsole_WriteHexValue>:
    296c:	b510      	push	{r4, lr}
    296e:	b086      	sub	sp, #24
    2970:	220b      	movs	r2, #11
    2972:	4604      	mov	r4, r0
    2974:	4669      	mov	r1, sp
    2976:	a803      	add	r0, sp, #12
    2978:	f7ff f9c8 	bl	1d0c <__mriBuffer_Init>
    297c:	a803      	add	r0, sp, #12
    297e:	4908      	ldr	r1, [pc, #32]	; (29a0 <__mriGdbConsole_WriteHexValue+0x34>)
    2980:	f7ff fa76 	bl	1e70 <__mriBuffer_WriteString>
    2984:	a803      	add	r0, sp, #12
    2986:	4621      	mov	r1, r4
    2988:	f7ff faae 	bl	1ee8 <__mriBuffer_WriteUIntegerAsHex>
    298c:	a803      	add	r0, sp, #12
    298e:	2100      	movs	r1, #0
    2990:	f7ff f9ec 	bl	1d6c <__mriBuffer_WriteChar>
    2994:	4668      	mov	r0, sp
    2996:	f7ff ffc2 	bl	291e <__mriGdbConsole_WriteString>
    299a:	b006      	add	sp, #24
    299c:	bd10      	pop	{r4, pc}
    299e:	bf00      	nop
    29a0:	000042d4 	.word	0x000042d4

000029a4 <writeBinaryBufferToByteMemory>:
    29a4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
    29a8:	4606      	mov	r6, r0
    29aa:	eb01 0802 	add.w	r8, r1, r2
    29ae:	460c      	mov	r4, r1
    29b0:	4544      	cmp	r4, r8
    29b2:	d024      	beq.n	29fe <writeBinaryBufferToByteMemory+0x5a>
    29b4:	4d13      	ldr	r5, [pc, #76]	; (2a04 <writeBinaryBufferToByteMemory+0x60>)
    29b6:	2300      	movs	r3, #0
    29b8:	4630      	mov	r0, r6
    29ba:	602b      	str	r3, [r5, #0]
    29bc:	f7ff f9e8 	bl	1d90 <__mriBuffer_ReadChar>
    29c0:	682f      	ldr	r7, [r5, #0]
    29c2:	4601      	mov	r1, r0
    29c4:	b95f      	cbnz	r7, 29de <writeBinaryBufferToByteMemory+0x3a>
    29c6:	287d      	cmp	r0, #125	; 0x7d
    29c8:	d109      	bne.n	29de <writeBinaryBufferToByteMemory+0x3a>
    29ca:	4630      	mov	r0, r6
    29cc:	f7ff f9e0 	bl	1d90 <__mriBuffer_ReadChar>
    29d0:	6829      	ldr	r1, [r5, #0]
    29d2:	b919      	cbnz	r1, 29dc <writeBinaryBufferToByteMemory+0x38>
    29d4:	f080 0020 	eor.w	r0, r0, #32
    29d8:	b2c1      	uxtb	r1, r0
    29da:	e000      	b.n	29de <writeBinaryBufferToByteMemory+0x3a>
    29dc:	4639      	mov	r1, r7
    29de:	4a09      	ldr	r2, [pc, #36]	; (2a04 <writeBinaryBufferToByteMemory+0x60>)
    29e0:	6813      	ldr	r3, [r2, #0]
    29e2:	b113      	cbz	r3, 29ea <writeBinaryBufferToByteMemory+0x46>
    29e4:	2000      	movs	r0, #0
    29e6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    29ea:	4620      	mov	r0, r4
    29ec:	1c65      	adds	r5, r4, #1
    29ee:	f7fe fccc 	bl	138a <__mriPlatform_MemWrite8>
    29f2:	f7fe fa49 	bl	e88 <__mriPlatform_WasMemoryFaultEncountered>
    29f6:	2800      	cmp	r0, #0
    29f8:	d1f4      	bne.n	29e4 <writeBinaryBufferToByteMemory+0x40>
    29fa:	462c      	mov	r4, r5
    29fc:	e7d8      	b.n	29b0 <writeBinaryBufferToByteMemory+0xc>
    29fe:	2001      	movs	r0, #1
    2a00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    2a04:	1000014c 	.word	0x1000014c

00002a08 <writeHexBufferToByteMemory>:
    2a08:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2a0a:	4607      	mov	r7, r0
    2a0c:	188e      	adds	r6, r1, r2
    2a0e:	460c      	mov	r4, r1
    2a10:	42b4      	cmp	r4, r6
    2a12:	d014      	beq.n	2a3e <writeHexBufferToByteMemory+0x36>
    2a14:	4d0b      	ldr	r5, [pc, #44]	; (2a44 <writeHexBufferToByteMemory+0x3c>)
    2a16:	2300      	movs	r3, #0
    2a18:	4638      	mov	r0, r7
    2a1a:	602b      	str	r3, [r5, #0]
    2a1c:	f7ff f9e8 	bl	1df0 <__mriBuffer_ReadByteAsHex>
    2a20:	4601      	mov	r1, r0
    2a22:	6828      	ldr	r0, [r5, #0]
    2a24:	b108      	cbz	r0, 2a2a <writeHexBufferToByteMemory+0x22>
    2a26:	2000      	movs	r0, #0
    2a28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2a2a:	4620      	mov	r0, r4
    2a2c:	1c65      	adds	r5, r4, #1
    2a2e:	f7fe fcac 	bl	138a <__mriPlatform_MemWrite8>
    2a32:	f7fe fa29 	bl	e88 <__mriPlatform_WasMemoryFaultEncountered>
    2a36:	2800      	cmp	r0, #0
    2a38:	d1f5      	bne.n	2a26 <writeHexBufferToByteMemory+0x1e>
    2a3a:	462c      	mov	r4, r5
    2a3c:	e7e8      	b.n	2a10 <writeHexBufferToByteMemory+0x8>
    2a3e:	2001      	movs	r0, #1
    2a40:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2a42:	bf00      	nop
    2a44:	1000014c 	.word	0x1000014c

00002a48 <readMemoryBytesIntoHexBuffer>:
    2a48:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    2a4a:	4605      	mov	r5, r0
    2a4c:	188c      	adds	r4, r1, r2
    2a4e:	4608      	mov	r0, r1
    2a50:	42a0      	cmp	r0, r4
    2a52:	d00c      	beq.n	2a6e <readMemoryBytesIntoHexBuffer+0x26>
    2a54:	1c46      	adds	r6, r0, #1
    2a56:	f7fe fc92 	bl	137e <__mriPlatform_MemRead8>
    2a5a:	4607      	mov	r7, r0
    2a5c:	f7fe fa14 	bl	e88 <__mriPlatform_WasMemoryFaultEncountered>
    2a60:	b938      	cbnz	r0, 2a72 <readMemoryBytesIntoHexBuffer+0x2a>
    2a62:	4628      	mov	r0, r5
    2a64:	4639      	mov	r1, r7
    2a66:	f7ff f9a7 	bl	1db8 <__mriBuffer_WriteByteAsHex>
    2a6a:	4630      	mov	r0, r6
    2a6c:	e7f0      	b.n	2a50 <readMemoryBytesIntoHexBuffer+0x8>
    2a6e:	2001      	movs	r0, #1
    2a70:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
    2a72:	2000      	movs	r0, #0
    2a74:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

00002a76 <__mriMem_ReadMemoryIntoHexBuffer>:
    2a76:	2a02      	cmp	r2, #2
    2a78:	b573      	push	{r0, r1, r4, r5, r6, lr}
    2a7a:	4605      	mov	r5, r0
    2a7c:	4614      	mov	r4, r2
    2a7e:	d002      	beq.n	2a86 <__mriMem_ReadMemoryIntoHexBuffer+0x10>
    2a80:	2a04      	cmp	r2, #4
    2a82:	d122      	bne.n	2aca <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    2a84:	e00e      	b.n	2aa4 <__mriMem_ReadMemoryIntoHexBuffer+0x2e>
    2a86:	f011 0601 	ands.w	r6, r1, #1
    2a8a:	d11e      	bne.n	2aca <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    2a8c:	4608      	mov	r0, r1
    2a8e:	f7fe fc73 	bl	1378 <__mriPlatform_MemRead16>
    2a92:	f8ad 0002 	strh.w	r0, [sp, #2]
    2a96:	f7fe f9f7 	bl	e88 <__mriPlatform_WasMemoryFaultEncountered>
    2a9a:	b9a0      	cbnz	r0, 2ac6 <__mriMem_ReadMemoryIntoHexBuffer+0x50>
    2a9c:	4628      	mov	r0, r5
    2a9e:	f10d 0102 	add.w	r1, sp, #2
    2aa2:	e00b      	b.n	2abc <__mriMem_ReadMemoryIntoHexBuffer+0x46>
    2aa4:	f011 0603 	ands.w	r6, r1, #3
    2aa8:	d10f      	bne.n	2aca <__mriMem_ReadMemoryIntoHexBuffer+0x54>
    2aaa:	4608      	mov	r0, r1
    2aac:	f7fe fc62 	bl	1374 <__mriPlatform_MemRead32>
    2ab0:	9001      	str	r0, [sp, #4]
    2ab2:	f7fe f9e9 	bl	e88 <__mriPlatform_WasMemoryFaultEncountered>
    2ab6:	b930      	cbnz	r0, 2ac6 <__mriMem_ReadMemoryIntoHexBuffer+0x50>
    2ab8:	4628      	mov	r0, r5
    2aba:	a901      	add	r1, sp, #4
    2abc:	4622      	mov	r2, r4
    2abe:	f7ff ffc3 	bl	2a48 <readMemoryBytesIntoHexBuffer>
    2ac2:	2001      	movs	r0, #1
    2ac4:	e003      	b.n	2ace <__mriMem_ReadMemoryIntoHexBuffer+0x58>
    2ac6:	4630      	mov	r0, r6
    2ac8:	e001      	b.n	2ace <__mriMem_ReadMemoryIntoHexBuffer+0x58>
    2aca:	f7ff ffbd 	bl	2a48 <readMemoryBytesIntoHexBuffer>
    2ace:	bd7c      	pop	{r2, r3, r4, r5, r6, pc}

00002ad0 <__mriMem_WriteHexBufferToMemory>:
    2ad0:	2a02      	cmp	r2, #2
    2ad2:	b513      	push	{r0, r1, r4, lr}
    2ad4:	460c      	mov	r4, r1
    2ad6:	d002      	beq.n	2ade <__mriMem_WriteHexBufferToMemory+0xe>
    2ad8:	2a04      	cmp	r2, #4
    2ada:	d11e      	bne.n	2b1a <__mriMem_WriteHexBufferToMemory+0x4a>
    2adc:	e00c      	b.n	2af8 <__mriMem_WriteHexBufferToMemory+0x28>
    2ade:	07cb      	lsls	r3, r1, #31
    2ae0:	d41b      	bmi.n	2b1a <__mriMem_WriteHexBufferToMemory+0x4a>
    2ae2:	f10d 0102 	add.w	r1, sp, #2
    2ae6:	f7ff ff8f 	bl	2a08 <writeHexBufferToByteMemory>
    2aea:	b1c0      	cbz	r0, 2b1e <__mriMem_WriteHexBufferToMemory+0x4e>
    2aec:	4620      	mov	r0, r4
    2aee:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    2af2:	f7fe fc48 	bl	1386 <__mriPlatform_MemWrite16>
    2af6:	e009      	b.n	2b0c <__mriMem_WriteHexBufferToMemory+0x3c>
    2af8:	078b      	lsls	r3, r1, #30
    2afa:	d10e      	bne.n	2b1a <__mriMem_WriteHexBufferToMemory+0x4a>
    2afc:	a901      	add	r1, sp, #4
    2afe:	f7ff ff83 	bl	2a08 <writeHexBufferToByteMemory>
    2b02:	b160      	cbz	r0, 2b1e <__mriMem_WriteHexBufferToMemory+0x4e>
    2b04:	4620      	mov	r0, r4
    2b06:	9901      	ldr	r1, [sp, #4]
    2b08:	f7fe fc3b 	bl	1382 <__mriPlatform_MemWrite32>
    2b0c:	f7fe f9bc 	bl	e88 <__mriPlatform_WasMemoryFaultEncountered>
    2b10:	f1d0 0001 	rsbs	r0, r0, #1
    2b14:	bf38      	it	cc
    2b16:	2000      	movcc	r0, #0
    2b18:	e001      	b.n	2b1e <__mriMem_WriteHexBufferToMemory+0x4e>
    2b1a:	f7ff ff75 	bl	2a08 <writeHexBufferToByteMemory>
    2b1e:	bd1c      	pop	{r2, r3, r4, pc}

00002b20 <__mriMem_WriteBinaryBufferToMemory>:
    2b20:	2a02      	cmp	r2, #2
    2b22:	b513      	push	{r0, r1, r4, lr}
    2b24:	460c      	mov	r4, r1
    2b26:	d002      	beq.n	2b2e <__mriMem_WriteBinaryBufferToMemory+0xe>
    2b28:	2a04      	cmp	r2, #4
    2b2a:	d11e      	bne.n	2b6a <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2b2c:	e00c      	b.n	2b48 <__mriMem_WriteBinaryBufferToMemory+0x28>
    2b2e:	07cb      	lsls	r3, r1, #31
    2b30:	d41b      	bmi.n	2b6a <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2b32:	f10d 0102 	add.w	r1, sp, #2
    2b36:	f7ff ff35 	bl	29a4 <writeBinaryBufferToByteMemory>
    2b3a:	b1c0      	cbz	r0, 2b6e <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2b3c:	4620      	mov	r0, r4
    2b3e:	f8bd 1002 	ldrh.w	r1, [sp, #2]
    2b42:	f7fe fc20 	bl	1386 <__mriPlatform_MemWrite16>
    2b46:	e009      	b.n	2b5c <__mriMem_WriteBinaryBufferToMemory+0x3c>
    2b48:	078b      	lsls	r3, r1, #30
    2b4a:	d10e      	bne.n	2b6a <__mriMem_WriteBinaryBufferToMemory+0x4a>
    2b4c:	a901      	add	r1, sp, #4
    2b4e:	f7ff ff29 	bl	29a4 <writeBinaryBufferToByteMemory>
    2b52:	b160      	cbz	r0, 2b6e <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2b54:	4620      	mov	r0, r4
    2b56:	9901      	ldr	r1, [sp, #4]
    2b58:	f7fe fc13 	bl	1382 <__mriPlatform_MemWrite32>
    2b5c:	f7fe f994 	bl	e88 <__mriPlatform_WasMemoryFaultEncountered>
    2b60:	f1d0 0001 	rsbs	r0, r0, #1
    2b64:	bf38      	it	cc
    2b66:	2000      	movcc	r0, #0
    2b68:	e001      	b.n	2b6e <__mriMem_WriteBinaryBufferToMemory+0x4e>
    2b6a:	f7ff ff1b 	bl	29a4 <writeBinaryBufferToByteMemory>
    2b6e:	bd1c      	pop	{r2, r3, r4, pc}

00002b70 <NVIC_SetVector>:
    2b70:	b086      	sub	sp, #24
    2b72:	4603      	mov	r3, r0
    2b74:	9100      	str	r1, [sp, #0]
    2b76:	f88d 3007 	strb.w	r3, [sp, #7]
    2b7a:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2b7e:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2b82:	689b      	ldr	r3, [r3, #8]
    2b84:	9305      	str	r3, [sp, #20]
    2b86:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2b8a:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2b8e:	689b      	ldr	r3, [r3, #8]
    2b90:	2b00      	cmp	r3, #0
    2b92:	d122      	bne.n	2bda <NVIC_SetVector+0x6a>
    2b94:	9b05      	ldr	r3, [sp, #20]
    2b96:	9303      	str	r3, [sp, #12]
    2b98:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
    2b9c:	9305      	str	r3, [sp, #20]
    2b9e:	f04f 0300 	mov.w	r3, #0
    2ba2:	9304      	str	r3, [sp, #16]
    2ba4:	e00f      	b.n	2bc6 <NVIC_SetVector+0x56>
    2ba6:	9b04      	ldr	r3, [sp, #16]
    2ba8:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2bac:	9a05      	ldr	r2, [sp, #20]
    2bae:	18d3      	adds	r3, r2, r3
    2bb0:	9a04      	ldr	r2, [sp, #16]
    2bb2:	ea4f 0282 	mov.w	r2, r2, lsl #2
    2bb6:	9903      	ldr	r1, [sp, #12]
    2bb8:	188a      	adds	r2, r1, r2
    2bba:	6812      	ldr	r2, [r2, #0]
    2bbc:	601a      	str	r2, [r3, #0]
    2bbe:	9b04      	ldr	r3, [sp, #16]
    2bc0:	f103 0301 	add.w	r3, r3, #1
    2bc4:	9304      	str	r3, [sp, #16]
    2bc6:	9b04      	ldr	r3, [sp, #16]
    2bc8:	2b30      	cmp	r3, #48	; 0x30
    2bca:	d9ec      	bls.n	2ba6 <NVIC_SetVector+0x36>
    2bcc:	f44f 436d 	mov.w	r3, #60672	; 0xed00
    2bd0:	f2ce 0300 	movt	r3, #57344	; 0xe000
    2bd4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
    2bd8:	609a      	str	r2, [r3, #8]
    2bda:	f99d 3007 	ldrsb.w	r3, [sp, #7]
    2bde:	f103 0310 	add.w	r3, r3, #16
    2be2:	ea4f 0383 	mov.w	r3, r3, lsl #2
    2be6:	9a05      	ldr	r2, [sp, #20]
    2be8:	18d3      	adds	r3, r2, r3
    2bea:	9a00      	ldr	r2, [sp, #0]
    2bec:	601a      	str	r2, [r3, #0]
    2bee:	b006      	add	sp, #24
    2bf0:	4770      	bx	lr
    2bf2:	bf00      	nop

00002bf4 <SystemInit>:
    2bf4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2bf8:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2bfc:	f04f 0220 	mov.w	r2, #32
    2c00:	f8c3 21a0 	str.w	r2, [r3, #416]	; 0x1a0
    2c04:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c08:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c0c:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2c10:	f003 0320 	and.w	r3, r3, #32
    2c14:	2b00      	cmp	r3, #0
    2c16:	d00a      	beq.n	2c2e <SystemInit+0x3a>
    2c18:	bf00      	nop
    2c1a:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c1e:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c22:	f8d3 31a0 	ldr.w	r3, [r3, #416]	; 0x1a0
    2c26:	f003 0340 	and.w	r3, r3, #64	; 0x40
    2c2a:	2b00      	cmp	r3, #0
    2c2c:	d0f5      	beq.n	2c1a <SystemInit+0x26>
    2c2e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c32:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c36:	f04f 0202 	mov.w	r2, #2
    2c3a:	f8c3 2104 	str.w	r2, [r3, #260]	; 0x104
    2c3e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c42:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c46:	f04f 0200 	mov.w	r2, #0
    2c4a:	f8c3 21a8 	str.w	r2, [r3, #424]	; 0x1a8
    2c4e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c52:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c56:	f04f 0200 	mov.w	r2, #0
    2c5a:	f8c3 21ac 	str.w	r2, [r3, #428]	; 0x1ac
    2c5e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c62:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c66:	f04f 0201 	mov.w	r2, #1
    2c6a:	f8c3 210c 	str.w	r2, [r3, #268]	; 0x10c
    2c6e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c72:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c76:	f04f 020b 	mov.w	r2, #11
    2c7a:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
    2c7e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c82:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c86:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2c8a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c8e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2c92:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2c96:	f04f 0255 	mov.w	r2, #85	; 0x55
    2c9a:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2c9e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ca2:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2ca6:	f04f 0201 	mov.w	r2, #1
    2caa:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2cae:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2cb2:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2cb6:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2cba:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2cbe:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2cc2:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2cc6:	f04f 0255 	mov.w	r2, #85	; 0x55
    2cca:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2cce:	bf00      	nop
    2cd0:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2cd4:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2cd8:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2cdc:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
    2ce0:	2b00      	cmp	r3, #0
    2ce2:	d0f5      	beq.n	2cd0 <SystemInit+0xdc>
    2ce4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ce8:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2cec:	f04f 0203 	mov.w	r2, #3
    2cf0:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
    2cf4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2cf8:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2cfc:	f04f 02aa 	mov.w	r2, #170	; 0xaa
    2d00:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2d04:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d08:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d0c:	f04f 0255 	mov.w	r2, #85	; 0x55
    2d10:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
    2d14:	bf00      	nop
    2d16:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d1a:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d1e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
    2d22:	f003 7340 	and.w	r3, r3, #50331648	; 0x3000000
    2d26:	2b00      	cmp	r3, #0
    2d28:	d0f5      	beq.n	2d16 <SystemInit+0x122>
    2d2a:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d2e:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d32:	f04f 0205 	mov.w	r2, #5
    2d36:	f8c3 2108 	str.w	r2, [r3, #264]	; 0x108
    2d3a:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d3e:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d42:	f248 72de 	movw	r2, #34782	; 0x87de
    2d46:	f2c0 4228 	movt	r2, #1064	; 0x428
    2d4a:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    2d4e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d52:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d56:	f04f 0200 	mov.w	r2, #0
    2d5a:	f8c3 21c8 	str.w	r2, [r3, #456]	; 0x1c8
    2d5e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2d62:	f2c4 030f 	movt	r3, #16399	; 0x400f
    2d66:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2d6a:	f2c4 020f 	movt	r2, #16399	; 0x400f
    2d6e:	6812      	ldr	r2, [r2, #0]
    2d70:	f422 4270 	bic.w	r2, r2, #61440	; 0xf000
    2d74:	f022 023a 	bic.w	r2, r2, #58	; 0x3a
    2d78:	f442 5240 	orr.w	r2, r2, #12288	; 0x3000
    2d7c:	f042 023a 	orr.w	r2, r2, #58	; 0x3a
    2d80:	601a      	str	r2, [r3, #0]
    2d82:	4770      	bx	lr

00002d84 <exit>:
    2d84:	b500      	push	{lr}
    2d86:	b083      	sub	sp, #12
    2d88:	9001      	str	r0, [sp, #4]
    2d8a:	f000 f80b 	bl	2da4 <mbed_interface_connected>
    2d8e:	4603      	mov	r3, r0
    2d90:	2b00      	cmp	r3, #0
    2d92:	d001      	beq.n	2d98 <exit+0x14>
    2d94:	f000 f81c 	bl	2dd0 <semihost_exit>
    2d98:	9b01      	ldr	r3, [sp, #4]
    2d9a:	2b00      	cmp	r3, #0
    2d9c:	d001      	beq.n	2da2 <exit+0x1e>
    2d9e:	f000 f955 	bl	304c <mbed_die>
    2da2:	e7fe      	b.n	2da2 <exit+0x1e>

00002da4 <mbed_interface_connected>:
    2da4:	b508      	push	{r3, lr}
    2da6:	f7fd fad5 	bl	354 <__wrap_semihost_connected>
    2daa:	4603      	mov	r3, r0
    2dac:	4618      	mov	r0, r3
    2dae:	bd08      	pop	{r3, pc}

00002db0 <__semihost>:
    2db0:	b530      	push	{r4, r5, lr}
    2db2:	b085      	sub	sp, #20
    2db4:	9001      	str	r0, [sp, #4]
    2db6:	9100      	str	r1, [sp, #0]
    2db8:	9c01      	ldr	r4, [sp, #4]
    2dba:	9d00      	ldr	r5, [sp, #0]
    2dbc:	4620      	mov	r0, r4
    2dbe:	4629      	mov	r1, r5
    2dc0:	beab      	bkpt	0x00ab
    2dc2:	4604      	mov	r4, r0
    2dc4:	9403      	str	r4, [sp, #12]
    2dc6:	9b03      	ldr	r3, [sp, #12]
    2dc8:	4618      	mov	r0, r3
    2dca:	b005      	add	sp, #20
    2dcc:	bd30      	pop	{r4, r5, pc}
    2dce:	bf00      	nop

00002dd0 <semihost_exit>:
    2dd0:	b500      	push	{lr}
    2dd2:	b085      	sub	sp, #20
    2dd4:	466b      	mov	r3, sp
    2dd6:	f04f 0018 	mov.w	r0, #24
    2dda:	4619      	mov	r1, r3
    2ddc:	f7ff ffe8 	bl	2db0 <__semihost>
    2de0:	4603      	mov	r3, r0
    2de2:	4618      	mov	r0, r3
    2de4:	b005      	add	sp, #20
    2de6:	bd00      	pop	{pc}

00002de8 <Reset_Handler>:
    2de8:	4907      	ldr	r1, [pc, #28]	; (2e08 <.flash_to_ram_loop+0x1a>)
    2dea:	4a08      	ldr	r2, [pc, #32]	; (2e0c <.flash_to_ram_loop+0x1e>)
    2dec:	4b08      	ldr	r3, [pc, #32]	; (2e10 <.flash_to_ram_loop+0x22>)

00002dee <.flash_to_ram_loop>:
    2dee:	429a      	cmp	r2, r3
    2df0:	bfbe      	ittt	lt
    2df2:	f851 0b04 	ldrlt.w	r0, [r1], #4
    2df6:	f842 0b04 	strlt.w	r0, [r2], #4
    2dfa:	f7ff bff8 	blt.w	2dee <.flash_to_ram_loop>
    2dfe:	4805      	ldr	r0, [pc, #20]	; (2e14 <.flash_to_ram_loop+0x26>)
    2e00:	4780      	blx	r0
    2e02:	4805      	ldr	r0, [pc, #20]	; (2e18 <.flash_to_ram_loop+0x2a>)
    2e04:	4700      	bx	r0
    2e06:	0000      	.short	0x0000
    2e08:	000042dc 	.word	0x000042dc
    2e0c:	100000c8 	.word	0x100000c8
    2e10:	100000d4 	.word	0x100000d4
    2e14:	00002bf5 	.word	0x00002bf5
    2e18:	00000309 	.word	0x00000309

00002e1c <NMI_Handler>:
    2e1c:	e7fe      	b.n	2e1c <NMI_Handler>
    2e1e:	e7fe      	b.n	2e1e <NMI_Handler+0x2>
    2e20:	e7fe      	b.n	2e20 <NMI_Handler+0x4>
    2e22:	e7fe      	b.n	2e22 <NMI_Handler+0x6>
    2e24:	e7fe      	b.n	2e24 <NMI_Handler+0x8>
    2e26:	e7fe      	b.n	2e26 <NMI_Handler+0xa>
    2e28:	e7fe      	b.n	2e28 <NMI_Handler+0xc>

00002e2a <PendSV_Handler>:
    2e2a:	e7fe      	b.n	2e2a <PendSV_Handler>

00002e2c <SysTick_Handler>:
    2e2c:	e7fe      	b.n	2e2c <SysTick_Handler>

00002e2e <DEF_IRQHandler>:
    2e2e:	e7fe      	b.n	2e2e <DEF_IRQHandler>

00002e30 <WDT_IRQHandler>:
    2e30:	e7fe      	b.n	2e30 <WDT_IRQHandler>

00002e32 <TIMER0_IRQHandler>:
    2e32:	e7fe      	b.n	2e32 <TIMER0_IRQHandler>

00002e34 <TIMER1_IRQHandler>:
    2e34:	e7fe      	b.n	2e34 <TIMER1_IRQHandler>

00002e36 <TIMER2_IRQHandler>:
    2e36:	e7fe      	b.n	2e36 <TIMER2_IRQHandler>

00002e38 <TIMER3_IRQHandler>:
    2e38:	e7fe      	b.n	2e38 <TIMER3_IRQHandler>
    2e3a:	e7fe      	b.n	2e3a <TIMER3_IRQHandler+0x2>
    2e3c:	e7fe      	b.n	2e3c <TIMER3_IRQHandler+0x4>
    2e3e:	e7fe      	b.n	2e3e <TIMER3_IRQHandler+0x6>
    2e40:	e7fe      	b.n	2e40 <TIMER3_IRQHandler+0x8>

00002e42 <PWM1_IRQHandler>:
    2e42:	e7fe      	b.n	2e42 <PWM1_IRQHandler>

00002e44 <I2C0_IRQHandler>:
    2e44:	e7fe      	b.n	2e44 <I2C0_IRQHandler>

00002e46 <I2C1_IRQHandler>:
    2e46:	e7fe      	b.n	2e46 <I2C1_IRQHandler>

00002e48 <I2C2_IRQHandler>:
    2e48:	e7fe      	b.n	2e48 <I2C2_IRQHandler>

00002e4a <SPI_IRQHandler>:
    2e4a:	e7fe      	b.n	2e4a <SPI_IRQHandler>

00002e4c <SSP0_IRQHandler>:
    2e4c:	e7fe      	b.n	2e4c <SSP0_IRQHandler>

00002e4e <SSP1_IRQHandler>:
    2e4e:	e7fe      	b.n	2e4e <SSP1_IRQHandler>

00002e50 <PLL0_IRQHandler>:
    2e50:	e7fe      	b.n	2e50 <PLL0_IRQHandler>

00002e52 <RTC_IRQHandler>:
    2e52:	e7fe      	b.n	2e52 <RTC_IRQHandler>

00002e54 <EINT0_IRQHandler>:
    2e54:	e7fe      	b.n	2e54 <EINT0_IRQHandler>

00002e56 <EINT1_IRQHandler>:
    2e56:	e7fe      	b.n	2e56 <EINT1_IRQHandler>

00002e58 <EINT2_IRQHandler>:
    2e58:	e7fe      	b.n	2e58 <EINT2_IRQHandler>

00002e5a <EINT3_IRQHandler>:
    2e5a:	e7fe      	b.n	2e5a <EINT3_IRQHandler>

00002e5c <ADC_IRQHandler>:
    2e5c:	e7fe      	b.n	2e5c <ADC_IRQHandler>

00002e5e <BOD_IRQHandler>:
    2e5e:	e7fe      	b.n	2e5e <BOD_IRQHandler>

00002e60 <USB_IRQHandler>:
    2e60:	e7fe      	b.n	2e60 <USB_IRQHandler>

00002e62 <CAN_IRQHandler>:
    2e62:	e7fe      	b.n	2e62 <CAN_IRQHandler>

00002e64 <DMA_IRQHandler>:
    2e64:	e7fe      	b.n	2e64 <DMA_IRQHandler>

00002e66 <I2S_IRQHandler>:
    2e66:	e7fe      	b.n	2e66 <I2S_IRQHandler>

00002e68 <ENET_IRQHandler>:
    2e68:	e7fe      	b.n	2e68 <ENET_IRQHandler>

00002e6a <RIT_IRQHandler>:
    2e6a:	e7fe      	b.n	2e6a <RIT_IRQHandler>

00002e6c <MCPWM_IRQHandler>:
    2e6c:	e7fe      	b.n	2e6c <MCPWM_IRQHandler>

00002e6e <QEI_IRQHandler>:
    2e6e:	e7fe      	b.n	2e6e <QEI_IRQHandler>

00002e70 <PLL1_IRQHandler>:
    2e70:	e7fe      	b.n	2e70 <PLL1_IRQHandler>

00002e72 <USBActivity_IRQHandler>:
    2e72:	e7fe      	b.n	2e72 <USBActivity_IRQHandler>

00002e74 <CANActivity_IRQHandler>:
    2e74:	e7fe      	b.n	2e74 <CANActivity_IRQHandler>
    2e76:	bf00      	nop

00002e78 <pin_function>:
    2e78:	b086      	sub	sp, #24
    2e7a:	9001      	str	r0, [sp, #4]
    2e7c:	9100      	str	r1, [sp, #0]
    2e7e:	9b01      	ldr	r3, [sp, #4]
    2e80:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2e84:	d039      	beq.n	2efa <pin_function+0x82>
    2e86:	9b01      	ldr	r3, [sp, #4]
    2e88:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2e8c:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    2e90:	9305      	str	r3, [sp, #20]
    2e92:	9b05      	ldr	r3, [sp, #20]
    2e94:	ea4f 1313 	mov.w	r3, r3, lsr #4
    2e98:	9304      	str	r3, [sp, #16]
    2e9a:	9b05      	ldr	r3, [sp, #20]
    2e9c:	f003 030f 	and.w	r3, r3, #15
    2ea0:	ea4f 0343 	mov.w	r3, r3, lsl #1
    2ea4:	9303      	str	r3, [sp, #12]
    2ea6:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2eaa:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2eae:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2eb2:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2eb6:	9904      	ldr	r1, [sp, #16]
    2eb8:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2ebc:	f04f 0003 	mov.w	r0, #3
    2ec0:	9a03      	ldr	r2, [sp, #12]
    2ec2:	fa00 f202 	lsl.w	r2, r0, r2
    2ec6:	ea6f 0202 	mvn.w	r2, r2
    2eca:	4011      	ands	r1, r2
    2ecc:	9a04      	ldr	r2, [sp, #16]
    2ece:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2ed2:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ed6:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2eda:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2ede:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2ee2:	9904      	ldr	r1, [sp, #16]
    2ee4:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2ee8:	9800      	ldr	r0, [sp, #0]
    2eea:	9a03      	ldr	r2, [sp, #12]
    2eec:	fa00 f202 	lsl.w	r2, r0, r2
    2ef0:	4311      	orrs	r1, r2
    2ef2:	9a04      	ldr	r2, [sp, #16]
    2ef4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2ef8:	e000      	b.n	2efc <pin_function+0x84>
    2efa:	bf00      	nop
    2efc:	b006      	add	sp, #24
    2efe:	4770      	bx	lr

00002f00 <pin_mode>:
    2f00:	b086      	sub	sp, #24
    2f02:	9001      	str	r0, [sp, #4]
    2f04:	460b      	mov	r3, r1
    2f06:	f88d 3003 	strb.w	r3, [sp, #3]
    2f0a:	9b01      	ldr	r3, [sp, #4]
    2f0c:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    2f10:	f000 8085 	beq.w	301e <pin_mode+0x11e>
    2f14:	9b01      	ldr	r3, [sp, #4]
    2f16:	f103 4360 	add.w	r3, r3, #3758096384	; 0xe0000000
    2f1a:	f5a3 231c 	sub.w	r3, r3, #638976	; 0x9c000
    2f1e:	9305      	str	r3, [sp, #20]
    2f20:	9b05      	ldr	r3, [sp, #20]
    2f22:	ea4f 1353 	mov.w	r3, r3, lsr #5
    2f26:	9304      	str	r3, [sp, #16]
    2f28:	9b05      	ldr	r3, [sp, #20]
    2f2a:	f003 031f 	and.w	r3, r3, #31
    2f2e:	9303      	str	r3, [sp, #12]
    2f30:	f89d 3003 	ldrb.w	r3, [sp, #3]
    2f34:	f003 0304 	and.w	r3, r3, #4
    2f38:	ea4f 0393 	mov.w	r3, r3, lsr #2
    2f3c:	9302      	str	r3, [sp, #8]
    2f3e:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2f42:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2f46:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2f4a:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2f4e:	9904      	ldr	r1, [sp, #16]
    2f50:	f101 011a 	add.w	r1, r1, #26
    2f54:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2f58:	9802      	ldr	r0, [sp, #8]
    2f5a:	9a03      	ldr	r2, [sp, #12]
    2f5c:	fa00 f202 	lsl.w	r2, r0, r2
    2f60:	ea6f 0202 	mvn.w	r2, r2
    2f64:	4011      	ands	r1, r2
    2f66:	9a04      	ldr	r2, [sp, #16]
    2f68:	f102 021a 	add.w	r2, r2, #26
    2f6c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2f70:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2f74:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2f78:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2f7c:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2f80:	9904      	ldr	r1, [sp, #16]
    2f82:	f101 011a 	add.w	r1, r1, #26
    2f86:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2f8a:	9802      	ldr	r0, [sp, #8]
    2f8c:	9a03      	ldr	r2, [sp, #12]
    2f8e:	fa00 f202 	lsl.w	r2, r0, r2
    2f92:	4311      	orrs	r1, r2
    2f94:	9a04      	ldr	r2, [sp, #16]
    2f96:	f102 021a 	add.w	r2, r2, #26
    2f9a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2f9e:	9b02      	ldr	r3, [sp, #8]
    2fa0:	2b00      	cmp	r3, #0
    2fa2:	d13d      	bne.n	3020 <pin_mode+0x120>
    2fa4:	9b05      	ldr	r3, [sp, #20]
    2fa6:	ea4f 1313 	mov.w	r3, r3, lsr #4
    2faa:	9304      	str	r3, [sp, #16]
    2fac:	9b05      	ldr	r3, [sp, #20]
    2fae:	f003 030f 	and.w	r3, r3, #15
    2fb2:	ea4f 0343 	mov.w	r3, r3, lsl #1
    2fb6:	9303      	str	r3, [sp, #12]
    2fb8:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2fbc:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2fc0:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2fc4:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2fc8:	9904      	ldr	r1, [sp, #16]
    2fca:	f101 0110 	add.w	r1, r1, #16
    2fce:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    2fd2:	f04f 0003 	mov.w	r0, #3
    2fd6:	9a03      	ldr	r2, [sp, #12]
    2fd8:	fa00 f202 	lsl.w	r2, r0, r2
    2fdc:	ea6f 0202 	mvn.w	r2, r2
    2fe0:	4011      	ands	r1, r2
    2fe2:	9a04      	ldr	r2, [sp, #16]
    2fe4:	f102 0210 	add.w	r2, r2, #16
    2fe8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    2fec:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    2ff0:	f2c4 0302 	movt	r3, #16386	; 0x4002
    2ff4:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    2ff8:	f2c4 0202 	movt	r2, #16386	; 0x4002
    2ffc:	9904      	ldr	r1, [sp, #16]
    2ffe:	f101 0110 	add.w	r1, r1, #16
    3002:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
    3006:	f89d 0003 	ldrb.w	r0, [sp, #3]
    300a:	9a03      	ldr	r2, [sp, #12]
    300c:	fa00 f202 	lsl.w	r2, r0, r2
    3010:	4311      	orrs	r1, r2
    3012:	9a04      	ldr	r2, [sp, #16]
    3014:	f102 0210 	add.w	r2, r2, #16
    3018:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    301c:	e000      	b.n	3020 <pin_mode+0x120>
    301e:	bf00      	nop
    3020:	b006      	add	sp, #24
    3022:	4770      	bx	lr

00003024 <gpio_write>:
    3024:	b082      	sub	sp, #8
    3026:	9001      	str	r0, [sp, #4]
    3028:	9100      	str	r1, [sp, #0]
    302a:	9b00      	ldr	r3, [sp, #0]
    302c:	2b00      	cmp	r3, #0
    302e:	d005      	beq.n	303c <gpio_write+0x18>
    3030:	9b01      	ldr	r3, [sp, #4]
    3032:	68db      	ldr	r3, [r3, #12]
    3034:	9a01      	ldr	r2, [sp, #4]
    3036:	6852      	ldr	r2, [r2, #4]
    3038:	601a      	str	r2, [r3, #0]
    303a:	e004      	b.n	3046 <gpio_write+0x22>
    303c:	9b01      	ldr	r3, [sp, #4]
    303e:	691b      	ldr	r3, [r3, #16]
    3040:	9a01      	ldr	r2, [sp, #4]
    3042:	6852      	ldr	r2, [r2, #4]
    3044:	601a      	str	r2, [r3, #0]
    3046:	b002      	add	sp, #8
    3048:	4770      	bx	lr
    304a:	bf00      	nop

0000304c <mbed_die>:
    304c:	b500      	push	{lr}
    304e:	b099      	sub	sp, #100	; 0x64
    3050:	ab12      	add	r3, sp, #72	; 0x48
    3052:	4618      	mov	r0, r3
    3054:	f24c 0132 	movw	r1, #49202	; 0xc032
    3058:	f2c2 0109 	movt	r1, #8201	; 0x2009
    305c:	f04f 0201 	mov.w	r2, #1
    3060:	f000 f88a 	bl	3178 <gpio_init>
    3064:	ab0c      	add	r3, sp, #48	; 0x30
    3066:	4618      	mov	r0, r3
    3068:	f24c 0134 	movw	r1, #49204	; 0xc034
    306c:	f2c2 0109 	movt	r1, #8201	; 0x2009
    3070:	f04f 0201 	mov.w	r2, #1
    3074:	f000 f880 	bl	3178 <gpio_init>
    3078:	ab06      	add	r3, sp, #24
    307a:	4618      	mov	r0, r3
    307c:	f24c 0135 	movw	r1, #49205	; 0xc035
    3080:	f2c2 0109 	movt	r1, #8201	; 0x2009
    3084:	f04f 0201 	mov.w	r2, #1
    3088:	f000 f876 	bl	3178 <gpio_init>
    308c:	466b      	mov	r3, sp
    308e:	4618      	mov	r0, r3
    3090:	f24c 0137 	movw	r1, #49207	; 0xc037
    3094:	f2c2 0109 	movt	r1, #8201	; 0x2009
    3098:	f04f 0201 	mov.w	r2, #1
    309c:	f000 f86c 	bl	3178 <gpio_init>
    30a0:	ab12      	add	r3, sp, #72	; 0x48
    30a2:	4618      	mov	r0, r3
    30a4:	f04f 0101 	mov.w	r1, #1
    30a8:	f7ff ffbc 	bl	3024 <gpio_write>
    30ac:	ab0c      	add	r3, sp, #48	; 0x30
    30ae:	4618      	mov	r0, r3
    30b0:	f04f 0100 	mov.w	r1, #0
    30b4:	f7ff ffb6 	bl	3024 <gpio_write>
    30b8:	ab06      	add	r3, sp, #24
    30ba:	4618      	mov	r0, r3
    30bc:	f04f 0100 	mov.w	r1, #0
    30c0:	f7ff ffb0 	bl	3024 <gpio_write>
    30c4:	466b      	mov	r3, sp
    30c6:	4618      	mov	r0, r3
    30c8:	f04f 0101 	mov.w	r1, #1
    30cc:	f7ff ffaa 	bl	3024 <gpio_write>
    30d0:	f04f 0096 	mov.w	r0, #150	; 0x96
    30d4:	f000 f81e 	bl	3114 <wait_ms>
    30d8:	ab12      	add	r3, sp, #72	; 0x48
    30da:	4618      	mov	r0, r3
    30dc:	f04f 0100 	mov.w	r1, #0
    30e0:	f7ff ffa0 	bl	3024 <gpio_write>
    30e4:	ab0c      	add	r3, sp, #48	; 0x30
    30e6:	4618      	mov	r0, r3
    30e8:	f04f 0101 	mov.w	r1, #1
    30ec:	f7ff ff9a 	bl	3024 <gpio_write>
    30f0:	ab06      	add	r3, sp, #24
    30f2:	4618      	mov	r0, r3
    30f4:	f04f 0101 	mov.w	r1, #1
    30f8:	f7ff ff94 	bl	3024 <gpio_write>
    30fc:	466b      	mov	r3, sp
    30fe:	4618      	mov	r0, r3
    3100:	f04f 0100 	mov.w	r1, #0
    3104:	f7ff ff8e 	bl	3024 <gpio_write>
    3108:	f04f 0096 	mov.w	r0, #150	; 0x96
    310c:	f000 f802 	bl	3114 <wait_ms>
    3110:	e7c6      	b.n	30a0 <mbed_die+0x54>
    3112:	bf00      	nop

00003114 <wait_ms>:
    3114:	b500      	push	{lr}
    3116:	b083      	sub	sp, #12
    3118:	9001      	str	r0, [sp, #4]
    311a:	9b01      	ldr	r3, [sp, #4]
    311c:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
    3120:	fb02 f303 	mul.w	r3, r2, r3
    3124:	4618      	mov	r0, r3
    3126:	f000 f803 	bl	3130 <wait_us>
    312a:	b003      	add	sp, #12
    312c:	bd00      	pop	{pc}
    312e:	bf00      	nop

00003130 <wait_us>:
    3130:	b500      	push	{lr}
    3132:	b085      	sub	sp, #20
    3134:	9001      	str	r0, [sp, #4]
    3136:	f000 f8ff 	bl	3338 <us_ticker_read>
    313a:	9003      	str	r0, [sp, #12]
    313c:	bf00      	nop
    313e:	f000 f8fb 	bl	3338 <us_ticker_read>
    3142:	4602      	mov	r2, r0
    3144:	9b03      	ldr	r3, [sp, #12]
    3146:	1ad2      	subs	r2, r2, r3
    3148:	9b01      	ldr	r3, [sp, #4]
    314a:	429a      	cmp	r2, r3
    314c:	d3f7      	bcc.n	313e <wait_us+0xe>
    314e:	b005      	add	sp, #20
    3150:	bd00      	pop	{pc}
    3152:	bf00      	nop

00003154 <gpio_set>:
    3154:	b500      	push	{lr}
    3156:	b083      	sub	sp, #12
    3158:	9001      	str	r0, [sp, #4]
    315a:	9801      	ldr	r0, [sp, #4]
    315c:	f04f 0100 	mov.w	r1, #0
    3160:	f7ff fe8a 	bl	2e78 <pin_function>
    3164:	9b01      	ldr	r3, [sp, #4]
    3166:	f003 031f 	and.w	r3, r3, #31
    316a:	f04f 0201 	mov.w	r2, #1
    316e:	fa02 f303 	lsl.w	r3, r2, r3
    3172:	4618      	mov	r0, r3
    3174:	b003      	add	sp, #12
    3176:	bd00      	pop	{pc}

00003178 <gpio_init>:
    3178:	b500      	push	{lr}
    317a:	b087      	sub	sp, #28
    317c:	9003      	str	r0, [sp, #12]
    317e:	9102      	str	r1, [sp, #8]
    3180:	4613      	mov	r3, r2
    3182:	f88d 3007 	strb.w	r3, [sp, #7]
    3186:	9b02      	ldr	r3, [sp, #8]
    3188:	f1b3 3fff 	cmp.w	r3, #4294967295	; 0xffffffff
    318c:	d037      	beq.n	31fe <gpio_init+0x86>
    318e:	9b03      	ldr	r3, [sp, #12]
    3190:	9a02      	ldr	r2, [sp, #8]
    3192:	601a      	str	r2, [r3, #0]
    3194:	9802      	ldr	r0, [sp, #8]
    3196:	f7ff ffdd 	bl	3154 <gpio_set>
    319a:	4602      	mov	r2, r0
    319c:	9b03      	ldr	r3, [sp, #12]
    319e:	605a      	str	r2, [r3, #4]
    31a0:	9b02      	ldr	r3, [sp, #8]
    31a2:	f023 031f 	bic.w	r3, r3, #31
    31a6:	9305      	str	r3, [sp, #20]
    31a8:	9b05      	ldr	r3, [sp, #20]
    31aa:	f103 0218 	add.w	r2, r3, #24
    31ae:	9b03      	ldr	r3, [sp, #12]
    31b0:	60da      	str	r2, [r3, #12]
    31b2:	9b05      	ldr	r3, [sp, #20]
    31b4:	f103 021c 	add.w	r2, r3, #28
    31b8:	9b03      	ldr	r3, [sp, #12]
    31ba:	611a      	str	r2, [r3, #16]
    31bc:	9b05      	ldr	r3, [sp, #20]
    31be:	f103 0214 	add.w	r2, r3, #20
    31c2:	9b03      	ldr	r3, [sp, #12]
    31c4:	615a      	str	r2, [r3, #20]
    31c6:	9a05      	ldr	r2, [sp, #20]
    31c8:	9b03      	ldr	r3, [sp, #12]
    31ca:	609a      	str	r2, [r3, #8]
    31cc:	f89d 3007 	ldrb.w	r3, [sp, #7]
    31d0:	9803      	ldr	r0, [sp, #12]
    31d2:	4619      	mov	r1, r3
    31d4:	f000 f816 	bl	3204 <gpio_dir>
    31d8:	f89d 3007 	ldrb.w	r3, [sp, #7]
    31dc:	2b00      	cmp	r3, #0
    31de:	d007      	beq.n	31f0 <gpio_init+0x78>
    31e0:	2b01      	cmp	r3, #1
    31e2:	d10d      	bne.n	3200 <gpio_init+0x88>
    31e4:	9802      	ldr	r0, [sp, #8]
    31e6:	f04f 0102 	mov.w	r1, #2
    31ea:	f7ff fe89 	bl	2f00 <pin_mode>
    31ee:	e007      	b.n	3200 <gpio_init+0x88>
    31f0:	9802      	ldr	r0, [sp, #8]
    31f2:	f04f 0103 	mov.w	r1, #3
    31f6:	f7ff fe83 	bl	2f00 <pin_mode>
    31fa:	bf00      	nop
    31fc:	e000      	b.n	3200 <gpio_init+0x88>
    31fe:	bf00      	nop
    3200:	b007      	add	sp, #28
    3202:	bd00      	pop	{pc}

00003204 <gpio_dir>:
    3204:	b082      	sub	sp, #8
    3206:	9001      	str	r0, [sp, #4]
    3208:	460b      	mov	r3, r1
    320a:	f88d 3003 	strb.w	r3, [sp, #3]
    320e:	f89d 3003 	ldrb.w	r3, [sp, #3]
    3212:	2b00      	cmp	r3, #0
    3214:	d002      	beq.n	321c <gpio_dir+0x18>
    3216:	2b01      	cmp	r3, #1
    3218:	d00c      	beq.n	3234 <gpio_dir+0x30>
    321a:	e015      	b.n	3248 <gpio_dir+0x44>
    321c:	9b01      	ldr	r3, [sp, #4]
    321e:	689b      	ldr	r3, [r3, #8]
    3220:	9a01      	ldr	r2, [sp, #4]
    3222:	6892      	ldr	r2, [r2, #8]
    3224:	6811      	ldr	r1, [r2, #0]
    3226:	9a01      	ldr	r2, [sp, #4]
    3228:	6852      	ldr	r2, [r2, #4]
    322a:	ea6f 0202 	mvn.w	r2, r2
    322e:	400a      	ands	r2, r1
    3230:	601a      	str	r2, [r3, #0]
    3232:	e009      	b.n	3248 <gpio_dir+0x44>
    3234:	9b01      	ldr	r3, [sp, #4]
    3236:	689b      	ldr	r3, [r3, #8]
    3238:	9a01      	ldr	r2, [sp, #4]
    323a:	6892      	ldr	r2, [r2, #8]
    323c:	6811      	ldr	r1, [r2, #0]
    323e:	9a01      	ldr	r2, [sp, #4]
    3240:	6852      	ldr	r2, [r2, #4]
    3242:	430a      	orrs	r2, r1
    3244:	601a      	str	r2, [r3, #0]
    3246:	bf00      	nop
    3248:	b002      	add	sp, #8
    324a:	4770      	bx	lr

0000324c <NVIC_EnableIRQ>:
    324c:	b082      	sub	sp, #8
    324e:	4603      	mov	r3, r0
    3250:	f88d 3007 	strb.w	r3, [sp, #7]
    3254:	f44f 4361 	mov.w	r3, #57600	; 0xe100
    3258:	f2ce 0300 	movt	r3, #57344	; 0xe000
    325c:	f99d 2007 	ldrsb.w	r2, [sp, #7]
    3260:	ea4f 1252 	mov.w	r2, r2, lsr #5
    3264:	f89d 1007 	ldrb.w	r1, [sp, #7]
    3268:	f001 011f 	and.w	r1, r1, #31
    326c:	f04f 0001 	mov.w	r0, #1
    3270:	fa00 f101 	lsl.w	r1, r0, r1
    3274:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    3278:	b002      	add	sp, #8
    327a:	4770      	bx	lr

0000327c <us_ticker_init>:
    327c:	b500      	push	{lr}
    327e:	b083      	sub	sp, #12
    3280:	f240 1340 	movw	r3, #320	; 0x140
    3284:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3288:	681b      	ldr	r3, [r3, #0]
    328a:	2b00      	cmp	r3, #0
    328c:	d151      	bne.n	3332 <us_ticker_init+0xb6>
    328e:	f240 1340 	movw	r3, #320	; 0x140
    3292:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3296:	f04f 0201 	mov.w	r2, #1
    329a:	601a      	str	r2, [r3, #0]
    329c:	f44f 4340 	mov.w	r3, #49152	; 0xc000
    32a0:	f2c4 030f 	movt	r3, #16399	; 0x400f
    32a4:	f44f 4240 	mov.w	r2, #49152	; 0xc000
    32a8:	f2c4 020f 	movt	r2, #16399	; 0x400f
    32ac:	f8d2 20c4 	ldr.w	r2, [r2, #196]	; 0xc4
    32b0:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
    32b4:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
    32b8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32bc:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32c0:	f04f 0200 	mov.w	r2, #0
    32c4:	671a      	str	r2, [r3, #112]	; 0x70
    32c6:	f240 03c8 	movw	r3, #200	; 0xc8
    32ca:	f2c1 0300 	movt	r3, #4096	; 0x1000
    32ce:	681b      	ldr	r3, [r3, #0]
    32d0:	ea4f 0393 	mov.w	r3, r3, lsr #2
    32d4:	9301      	str	r3, [sp, #4]
    32d6:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32da:	f2c4 0309 	movt	r3, #16393	; 0x4009
    32de:	f04f 0202 	mov.w	r2, #2
    32e2:	605a      	str	r2, [r3, #4]
    32e4:	9a01      	ldr	r2, [sp, #4]
    32e6:	f64d 6383 	movw	r3, #56963	; 0xde83
    32ea:	f2c4 331b 	movt	r3, #17179	; 0x431b
    32ee:	fba3 1302 	umull	r1, r3, r3, r2
    32f2:	ea4f 4393 	mov.w	r3, r3, lsr #18
    32f6:	9300      	str	r3, [sp, #0]
    32f8:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    32fc:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3300:	9a00      	ldr	r2, [sp, #0]
    3302:	f102 32ff 	add.w	r2, r2, #4294967295	; 0xffffffff
    3306:	60da      	str	r2, [r3, #12]
    3308:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    330c:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3310:	f04f 0201 	mov.w	r2, #1
    3314:	605a      	str	r2, [r3, #4]
    3316:	f243 33b5 	movw	r3, #13237	; 0x33b5
    331a:	f2c0 0300 	movt	r3, #0
    331e:	f04f 0004 	mov.w	r0, #4
    3322:	4619      	mov	r1, r3
    3324:	f7ff fc24 	bl	2b70 <NVIC_SetVector>
    3328:	f04f 0004 	mov.w	r0, #4
    332c:	f7ff ff8e 	bl	324c <NVIC_EnableIRQ>
    3330:	e000      	b.n	3334 <us_ticker_init+0xb8>
    3332:	bf00      	nop
    3334:	b003      	add	sp, #12
    3336:	bd00      	pop	{pc}

00003338 <us_ticker_read>:
    3338:	b508      	push	{r3, lr}
    333a:	f240 1340 	movw	r3, #320	; 0x140
    333e:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3342:	681b      	ldr	r3, [r3, #0]
    3344:	2b00      	cmp	r3, #0
    3346:	d101      	bne.n	334c <us_ticker_read+0x14>
    3348:	f7ff ff98 	bl	327c <us_ticker_init>
    334c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3350:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3354:	689b      	ldr	r3, [r3, #8]
    3356:	4618      	mov	r0, r3
    3358:	bd08      	pop	{r3, pc}
    335a:	bf00      	nop

0000335c <us_ticker_set_interrupt>:
    335c:	b082      	sub	sp, #8
    335e:	9001      	str	r0, [sp, #4]
    3360:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3364:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3368:	9a01      	ldr	r2, [sp, #4]
    336a:	619a      	str	r2, [r3, #24]
    336c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    3370:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3374:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    3378:	f2c4 0209 	movt	r2, #16393	; 0x4009
    337c:	6952      	ldr	r2, [r2, #20]
    337e:	f042 0201 	orr.w	r2, r2, #1
    3382:	615a      	str	r2, [r3, #20]
    3384:	b002      	add	sp, #8
    3386:	4770      	bx	lr

00003388 <us_ticker_disable_interrupt>:
    3388:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    338c:	f2c4 0309 	movt	r3, #16393	; 0x4009
    3390:	f44f 4280 	mov.w	r2, #16384	; 0x4000
    3394:	f2c4 0209 	movt	r2, #16393	; 0x4009
    3398:	6952      	ldr	r2, [r2, #20]
    339a:	f022 0201 	bic.w	r2, r2, #1
    339e:	615a      	str	r2, [r3, #20]
    33a0:	4770      	bx	lr
    33a2:	bf00      	nop

000033a4 <us_ticker_clear_interrupt>:
    33a4:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    33a8:	f2c4 0309 	movt	r3, #16393	; 0x4009
    33ac:	f04f 0201 	mov.w	r2, #1
    33b0:	601a      	str	r2, [r3, #0]
    33b2:	4770      	bx	lr

000033b4 <us_ticker_irq_handler>:
    33b4:	b510      	push	{r4, lr}
    33b6:	b082      	sub	sp, #8
    33b8:	f7ff fff4 	bl	33a4 <us_ticker_clear_interrupt>
    33bc:	e000      	b.n	33c0 <us_ticker_irq_handler+0xc>
    33be:	bf00      	nop
    33c0:	f240 1348 	movw	r3, #328	; 0x148
    33c4:	f2c1 0300 	movt	r3, #4096	; 0x1000
    33c8:	681b      	ldr	r3, [r3, #0]
    33ca:	2b00      	cmp	r3, #0
    33cc:	d102      	bne.n	33d4 <us_ticker_irq_handler+0x20>
    33ce:	f7ff ffdb 	bl	3388 <us_ticker_disable_interrupt>
    33d2:	e037      	b.n	3444 <us_ticker_irq_handler+0x90>
    33d4:	f240 1348 	movw	r3, #328	; 0x148
    33d8:	f2c1 0300 	movt	r3, #4096	; 0x1000
    33dc:	681b      	ldr	r3, [r3, #0]
    33de:	681c      	ldr	r4, [r3, #0]
    33e0:	f7ff ffaa 	bl	3338 <us_ticker_read>
    33e4:	4603      	mov	r3, r0
    33e6:	1ae3      	subs	r3, r4, r3
    33e8:	2b00      	cmp	r3, #0
    33ea:	dc21      	bgt.n	3430 <us_ticker_irq_handler+0x7c>
    33ec:	f240 1348 	movw	r3, #328	; 0x148
    33f0:	f2c1 0300 	movt	r3, #4096	; 0x1000
    33f4:	681b      	ldr	r3, [r3, #0]
    33f6:	9301      	str	r3, [sp, #4]
    33f8:	f240 1348 	movw	r3, #328	; 0x148
    33fc:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3400:	681b      	ldr	r3, [r3, #0]
    3402:	689a      	ldr	r2, [r3, #8]
    3404:	f240 1348 	movw	r3, #328	; 0x148
    3408:	f2c1 0300 	movt	r3, #4096	; 0x1000
    340c:	601a      	str	r2, [r3, #0]
    340e:	f240 1344 	movw	r3, #324	; 0x144
    3412:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3416:	681b      	ldr	r3, [r3, #0]
    3418:	2b00      	cmp	r3, #0
    341a:	d0d0      	beq.n	33be <us_ticker_irq_handler+0xa>
    341c:	f240 1344 	movw	r3, #324	; 0x144
    3420:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3424:	681b      	ldr	r3, [r3, #0]
    3426:	9a01      	ldr	r2, [sp, #4]
    3428:	6852      	ldr	r2, [r2, #4]
    342a:	4610      	mov	r0, r2
    342c:	4798      	blx	r3
    342e:	e7c6      	b.n	33be <us_ticker_irq_handler+0xa>
    3430:	f240 1348 	movw	r3, #328	; 0x148
    3434:	f2c1 0300 	movt	r3, #4096	; 0x1000
    3438:	681b      	ldr	r3, [r3, #0]
    343a:	681b      	ldr	r3, [r3, #0]
    343c:	4618      	mov	r0, r3
    343e:	f7ff ff8d 	bl	335c <us_ticker_set_interrupt>
    3442:	bf00      	nop
    3444:	b002      	add	sp, #8
    3446:	bd10      	pop	{r4, pc}

00003448 <__libc_init_array>:
    3448:	b538      	push	{r3, r4, r5, lr}
    344a:	4d0e      	ldr	r5, [pc, #56]	; (3484 <__libc_init_array+0x3c>)
    344c:	4b0e      	ldr	r3, [pc, #56]	; (3488 <__libc_init_array+0x40>)
    344e:	2400      	movs	r4, #0
    3450:	1ae8      	subs	r0, r5, r3
    3452:	1085      	asrs	r5, r0, #2
    3454:	42ac      	cmp	r4, r5
    3456:	d005      	beq.n	3464 <__libc_init_array+0x1c>
    3458:	490b      	ldr	r1, [pc, #44]	; (3488 <__libc_init_array+0x40>)
    345a:	f851 2024 	ldr.w	r2, [r1, r4, lsl #2]
    345e:	4790      	blx	r2
    3460:	3401      	adds	r4, #1
    3462:	e7f7      	b.n	3454 <__libc_init_array+0xc>
    3464:	f000 f868 	bl	3538 <_init>
    3468:	4908      	ldr	r1, [pc, #32]	; (348c <__libc_init_array+0x44>)
    346a:	4a09      	ldr	r2, [pc, #36]	; (3490 <__libc_init_array+0x48>)
    346c:	1a54      	subs	r4, r2, r1
    346e:	10a5      	asrs	r5, r4, #2
    3470:	2400      	movs	r4, #0
    3472:	42ac      	cmp	r4, r5
    3474:	d005      	beq.n	3482 <__libc_init_array+0x3a>
    3476:	4b05      	ldr	r3, [pc, #20]	; (348c <__libc_init_array+0x44>)
    3478:	f853 0024 	ldr.w	r0, [r3, r4, lsl #2]
    347c:	4780      	blx	r0
    347e:	3401      	adds	r4, #1
    3480:	e7f7      	b.n	3472 <__libc_init_array+0x2a>
    3482:	bd38      	pop	{r3, r4, r5, pc}
    3484:	100000cc 	.word	0x100000cc
    3488:	100000cc 	.word	0x100000cc
    348c:	100000cc 	.word	0x100000cc
    3490:	100000d0 	.word	0x100000d0

00003494 <memcpy>:
    3494:	b510      	push	{r4, lr}
    3496:	2300      	movs	r3, #0
    3498:	4293      	cmp	r3, r2
    349a:	d003      	beq.n	34a4 <memcpy+0x10>
    349c:	5ccc      	ldrb	r4, [r1, r3]
    349e:	54c4      	strb	r4, [r0, r3]
    34a0:	3301      	adds	r3, #1
    34a2:	e7f9      	b.n	3498 <memcpy+0x4>
    34a4:	bd10      	pop	{r4, pc}

000034a6 <memset>:
    34a6:	1882      	adds	r2, r0, r2
    34a8:	4603      	mov	r3, r0
    34aa:	4293      	cmp	r3, r2
    34ac:	d002      	beq.n	34b4 <memset+0xe>
    34ae:	f803 1b01 	strb.w	r1, [r3], #1
    34b2:	e7fa      	b.n	34aa <memset+0x4>
    34b4:	4770      	bx	lr

000034b6 <strcmp>:
    34b6:	f810 2b01 	ldrb.w	r2, [r0], #1
    34ba:	f811 3b01 	ldrb.w	r3, [r1], #1
    34be:	2a01      	cmp	r2, #1
    34c0:	bf28      	it	cs
    34c2:	429a      	cmpcs	r2, r3
    34c4:	d0f7      	beq.n	34b6 <strcmp>
    34c6:	eba2 0003 	sub.w	r0, r2, r3
    34ca:	4770      	bx	lr

000034cc <strlen>:
    34cc:	4603      	mov	r3, r0
    34ce:	f813 2b01 	ldrb.w	r2, [r3], #1
    34d2:	2a00      	cmp	r2, #0
    34d4:	d1fb      	bne.n	34ce <strlen+0x2>
    34d6:	1a18      	subs	r0, r3, r0
    34d8:	3801      	subs	r0, #1
    34da:	4770      	bx	lr

000034dc <strncmp>:
    34dc:	b570      	push	{r4, r5, r6, lr}
    34de:	b192      	cbz	r2, 3506 <strncmp+0x2a>
    34e0:	460b      	mov	r3, r1
    34e2:	4605      	mov	r5, r0
    34e4:	b91a      	cbnz	r2, 34ee <strncmp+0x12>
    34e6:	7828      	ldrb	r0, [r5, #0]
    34e8:	7819      	ldrb	r1, [r3, #0]
    34ea:	1a40      	subs	r0, r0, r1
    34ec:	bd70      	pop	{r4, r5, r6, pc}
    34ee:	f810 6b01 	ldrb.w	r6, [r0], #1
    34f2:	781c      	ldrb	r4, [r3, #0]
    34f4:	3101      	adds	r1, #1
    34f6:	42b4      	cmp	r4, r6
    34f8:	d1f5      	bne.n	34e6 <strncmp+0xa>
    34fa:	2a01      	cmp	r2, #1
    34fc:	d0f3      	beq.n	34e6 <strncmp+0xa>
    34fe:	3a01      	subs	r2, #1
    3500:	2c00      	cmp	r4, #0
    3502:	d1ed      	bne.n	34e0 <strncmp+0x4>
    3504:	e7ef      	b.n	34e6 <strncmp+0xa>
    3506:	4610      	mov	r0, r2
    3508:	bd70      	pop	{r4, r5, r6, pc}

0000350a <strstr>:
    350a:	b530      	push	{r4, r5, lr}
    350c:	7803      	ldrb	r3, [r0, #0]
    350e:	b10b      	cbz	r3, 3514 <strstr+0xa>
    3510:	4602      	mov	r2, r0
    3512:	e003      	b.n	351c <strstr+0x12>
    3514:	7809      	ldrb	r1, [r1, #0]
    3516:	b171      	cbz	r1, 3536 <strstr+0x2c>
    3518:	2000      	movs	r0, #0
    351a:	bd30      	pop	{r4, r5, pc}
    351c:	4610      	mov	r0, r2
    351e:	7803      	ldrb	r3, [r0, #0]
    3520:	3201      	adds	r2, #1
    3522:	2b00      	cmp	r3, #0
    3524:	d0f8      	beq.n	3518 <strstr+0xe>
    3526:	2300      	movs	r3, #0
    3528:	5ccc      	ldrb	r4, [r1, r3]
    352a:	b124      	cbz	r4, 3536 <strstr+0x2c>
    352c:	5cc5      	ldrb	r5, [r0, r3]
    352e:	42a5      	cmp	r5, r4
    3530:	d1f4      	bne.n	351c <strstr+0x12>
    3532:	3301      	adds	r3, #1
    3534:	e7f8      	b.n	3528 <strstr+0x1e>
    3536:	bd30      	pop	{r4, r5, pc}

00003538 <_init>:
    3538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    353a:	bf00      	nop
    353c:	bcf8      	pop	{r3, r4, r5, r6, r7}
    353e:	bc08      	pop	{r3}
    3540:	469e      	mov	lr, r3
    3542:	4770      	bx	lr

00003544 <_fini>:
    3544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    3546:	bf00      	nop
    3548:	bcf8      	pop	{r3, r4, r5, r6, r7}
    354a:	bc08      	pop	{r3}
    354c:	469e      	mov	lr, r3
    354e:	4770      	bx	lr
    3550:	5f49524d 	.word	0x5f49524d
    3554:	54524155 	.word	0x54524155
    3558:	45424d5f 	.word	0x45424d5f
    355c:	53555f44 	.word	0x53555f44
    3560:	00000042 	.word	0x00000042
    3564:	00343045 	.word	0x00343045

00003568 <commandTable.5671>:
    3568:	000028a1 0000003f 0000227d 00000063     .(..?...}"..c...
    3578:	00002571 00000046 000028c9 00000067     q%..F....(..g...
    3588:	000028d9 00000047 000025b9 0000006d     .(..G....%..m...
    3598:	000025f5 0000004d 000027a1 00000071     .%..M....'..q...
    35a8:	00002905 00000073 0000263d 00000058     .)..s...=&..X...
    35b8:	00002185 0000007a 00002119 0000005a     .!..z....!..Z...

000035c8 <NibbleToHexChar>:
    35c8:	33323130 37363534 62613938 66656463     0123456789abcdef
    35d8:	3c000920                                          ..

000035db <g_targetXml>:
    35db:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    35eb:	3f22302e 213c0a3e 54434f44 20455059     .0"?>.<!DOCTYPE 
    35fb:	74616566 20657275 54535953 22204d45     feature SYSTEM "
    360b:	2d626467 67726174 642e7465 3e226474     gdb-target.dtd">
    361b:	61743c0a 74656772 663c0a3e 75746165     .<target>.<featu
    362b:	6e206572 3d656d61 67726f22 756e672e     re name="org.gnu
    363b:	6264672e 6d72612e 702d6d2e 69666f72     .gdb.arm.m-profi
    364b:	3e22656c 65723c0a 616e2067 223d656d     le">.<reg name="
    365b:	20223072 73746962 3d657a69 22323322     r0" bitsize="32"
    366b:	3c0a3e2f 20676572 656d616e 3172223d     />.<reg name="r1
    367b:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    368b:	65723c0a 616e2067 223d656d 20223272     .<reg name="r2" 
    369b:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    36ab:	20676572 656d616e 3372223d 69622022     reg name="r3" bi
    36bb:	7a697374 33223d65 3e2f2232 65723c0a     tsize="32"/>.<re
    36cb:	616e2067 223d656d 20223472 73746962     g name="r4" bits
    36db:	3d657a69 22323322 3c0a3e2f 20676572     ize="32"/>.<reg 
    36eb:	656d616e 3572223d 69622022 7a697374     name="r5" bitsiz
    36fb:	33223d65 3e2f2232 65723c0a 616e2067     e="32"/>.<reg na
    370b:	223d656d 20223672 73746962 3d657a69     me="r6" bitsize=
    371b:	22323322 3c0a3e2f 20676572 656d616e     "32"/>.<reg name
    372b:	3772223d 69622022 7a697374 33223d65     ="r7" bitsize="3
    373b:	3e2f2232 65723c0a 616e2067 223d656d     2"/>.<reg name="
    374b:	20223872 73746962 3d657a69 22323322     r8" bitsize="32"
    375b:	3c0a3e2f 20676572 656d616e 3972223d     />.<reg name="r9
    376b:	69622022 7a697374 33223d65 3e2f2232     " bitsize="32"/>
    377b:	65723c0a 616e2067 223d656d 22303172     .<reg name="r10"
    378b:	74696220 657a6973 3233223d 0a3e2f22      bitsize="32"/>.
    379b:	6765723c 6d616e20 72223d65 20223131     <reg name="r11" 
    37ab:	73746962 3d657a69 22323322 3c0a3e2f     bitsize="32"/>.<
    37bb:	20676572 656d616e 3172223d 62202232     reg name="r12" b
    37cb:	69737469 223d657a 2f223233 723c0a3e     itsize="32"/>.<r
    37db:	6e206765 3d656d61 22707322 74696220     eg name="sp" bit
    37eb:	657a6973 3233223d 79742022 223d6570     size="32" type="
    37fb:	61746164 7274705f 0a3e2f22 6765723c     data_ptr"/>.<reg
    380b:	6d616e20 6c223d65 62202272 69737469      name="lr" bitsi
    381b:	223d657a 2f223233 723c0a3e 6e206765     ze="32"/>.<reg n
    382b:	3d656d61 22637022 74696220 657a6973     ame="pc" bitsize
    383b:	3233223d 79742022 223d6570 65646f63     ="32" type="code
    384b:	7274705f 0a3e2f22 6765723c 6d616e20     _ptr"/>.<reg nam
    385b:	78223d65 22727370 74696220 657a6973     e="xpsr" bitsize
    386b:	3233223d 65722022 6d756e67 3532223d     ="32" regnum="25
    387b:	0a3e2f22 65662f3c 72757461 3c0a3e65     "/>.</feature>.<
    388b:	7261742f 3e746567 0000000a addead00              /target>.....

00003898 <__mriCortexMFakeStack>:
    3898:	deaddead deaddead deaddead deaddead     ................
    38a8:	deaddead deaddead deaddead deaddead     ................

000038b8 <CSWTCH.114>:
    38b8:	0a070506 504d2a2a 61462055 2a746c75     ....**MPU Fault*
    38c8:	200a002a 61745320 20737574 69676552     *..  Status Regi
    38d8:	72657473 0a00203a 20202020 6c756146     ster: ..    Faul
    38e8:	64412074 73657264 00203a73 2020200a     t Address: ..   
    38f8:	20504620 797a614c 65725020 76726573      FP Lazy Preserv
    3908:	6f697461 200a006e 53202020 6b636174     ation..    Stack
    3918:	20676e69 6f727245 2f772072 20505320     ing Error w/ SP 
    3928:	0a00203d 20202020 74736e55 696b6361     = ..    Unstacki
    3938:	4520676e 726f7272 202f7720 3d205053     ng Error w/ SP =
    3948:	200a0020 44202020 20617461 65636341      ..    Data Acce
    3958:	0a007373 20202020 74736e49 74637572     ss..    Instruct
    3968:	206e6f69 63746546 2a0a0068 7375422a     ion Fetch..**Bus
    3978:	75614620 2a2a746c 20200a00 6d492020      Fault**..    Im
    3988:	63657270 20657369 61746144 63634120     precise Data Acc
    3998:	00737365 2020200a 65725020 65736963     ess..    Precise
    39a8:	74614420 63412061 73736563 20200a00      Data Access..  
    39b8:	6e492020 75727473 6f697463 7250206e       Instruction Pr
    39c8:	74656665 0a006863 73552a2a 20656761     efetch..**Usage 
    39d8:	6c756146 002a2a74 2020200a 76694420     Fault**..    Div
    39e8:	20656469 5a207962 006f7265 2020200a     ide by Zero..   
    39f8:	616e5520 6e67696c 41206465 73656363      Unaligned Acces
    3a08:	200a0073 43202020 6f72706f 73736563     s..    Coprocess
    3a18:	4120726f 73656363 200a0073 49202020     or Access..    I
    3a28:	6c61766e 45206469 70656378 6e6f6974     nvalid Exception
    3a38:	74655220 206e7275 74617453 200a0065      Return State.. 
    3a48:	49202020 6c61766e 53206469 65746174        Invalid State
    3a58:	20200a00 6e552020 69666564 2064656e     ..    Undefined 
    3a68:	74736e49 74637572 006e6f69 482a2a0a     Instruction..**H
    3a78:	20647261 6c756146 002a2a74 2020200a     ard Fault**..   
    3a88:	62654420 45206775 746e6576 20200a00      Debug Event..  
    3a98:	65562020 726f7463 62615420 5220656c       Vector Table R
    3aa8:	00646165 2020200a 726f4620 00646563     ead..    Forced.
    3ab8:	0000000a                                ....

00003abc <debugEventToSignalMap.7008>:
    3abc:	00000010 00000011 00000004 00000005     ................
    3acc:	00000002 00000005 00000001 00000005     ................

00003adc <baudRatePrefix.7337>:
    3adc:	5f49524d 54524155 5541425f 00003d44     MRI_UART_BAUD=..

00003aec <g_uartConfigurations>:
    3aec:	400fc1a8 4002c000 4002c000 4000c000     ...@...@...@...@
    3afc:	00000008 000000c0 00000030 000000c0     ........0.......
    3b0c:	55555555 400fc1a8 4002c000 4002c004     UUUU...@...@...@
    3b1c:	40010000 00000010 00000300 c0000000     ...@............
    3b2c:	00000003 55555555 400fc1ac 4002c000     ....UUUU...@...@
    3b3c:	4002c000 40098000 01000000 00030000     ...@...@........
    3b4c:	00300000 00c00000 55555555 400fc1ac     ..0.....UUUU...@
    3b5c:	4002c000 4002c000 4009c000 02000000     ...@...@...@....
    3b6c:	000c0000 00000003 0000000c aaaaaaaa     ................
    3b7c:	5f49524d 54524155 45424d5f 53555f44     MRI_UART_MBED_US
    3b8c:	524d0042 41555f49 4d5f5452 5f444542     B.MRI_UART_MBED_
    3b9c:	505f3950 4d003031 555f4952 5f545241     P9_P10.MRI_UART_
    3bac:	4445424d 3331505f 3431505f 49524d00     MBED_P13_P14.MRI
    3bbc:	5241555f 424d5f54 505f4445 505f3832     _UART_MBED_P28_P
    3bcc:	4d003732 555f4952 5f545241 524d0030     27.MRI_UART_0.MR
    3bdc:	41555f49 315f5452 49524d00 5241555f     I_UART_1.MRI_UAR
    3bec:	00325f54 5f49524d 54524155 4d00335f     T_2.MRI_UART_3.M
    3bfc:	555f4952 5f545241 52414853 3f3c0045              RI_UART_SHARE.

00003c0a <g_memoryMapXml>:
    3c0a:	6d783f3c 6576206c 6f697372 31223d6e     <?xml version="1
    3c1a:	3f22302e 44213c3e 5954434f 6d204550     .0"?><!DOCTYPE m
    3c2a:	726f6d65 616d2d79 55502070 43494c42     emory-map PUBLIC
    3c3a:	2f2b2220 4e44492f 756e6720 67726f2e      "+//IDN gnu.org
    3c4a:	54442f2f 44472044 654d2042 79726f6d     //DTD GDB Memory
    3c5a:	70614d20 2e315620 452f2f30 2220224e      Map V1.0//EN" "
    3c6a:	70747468 732f2f3a 6372756f 72617765     http://sourcewar
    3c7a:	726f2e65 64672f67 64672f62 656d2d62     e.org/gdb/gdb-me
    3c8a:	79726f6d 70616d2d 6474642e 6d3c3e22     mory-map.dtd"><m
    3c9a:	726f6d65 616d2d79 6d3c3e70 726f6d65     emory-map><memor
    3caa:	79742079 223d6570 73616c66 73202268     y type="flash" s
    3cba:	74726174 7830223d 6c202230 74676e65     tart="0x0" lengt
    3cca:	30223d68 30303178 3e223030 72703c20     h="0x10000"> <pr
    3cda:	7265706f 6e207974 3d656d61 6f6c6222     operty name="blo
    3cea:	69736b63 3e22657a 30317830 2f3c3030     cksize">0x1000</
    3cfa:	706f7270 79747265 6d2f3c3e 726f6d65     property></memor
    3d0a:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    3d1a:	73616c66 73202268 74726174 7830223d     flash" start="0x
    3d2a:	30303031 6c202230 74676e65 30223d68     10000" length="0
    3d3a:	30303778 3e223030 72703c20 7265706f     x70000"> <proper
    3d4a:	6e207974 3d656d61 6f6c6222 69736b63     ty name="blocksi
    3d5a:	3e22657a 30387830 2f3c3030 706f7270     ze">0x8000</prop
    3d6a:	79747265 6d2f3c3e 726f6d65 6d3c3e79     erty></memory><m
    3d7a:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3d8a:	61747320 223d7472 30317830 30303030      start="0x100000
    3d9a:	20223030 676e656c 223d6874 30387830     00" length="0x80
    3daa:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3dba:	726f6d65 79742079 223d6570 226d6f72     emory type="rom"
    3dca:	61747320 223d7472 46317830 30304646      start="0x1FFF00
    3dda:	20223030 676e656c 223d6874 30327830     00" length="0x20
    3dea:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3dfa:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3e0a:	61747320 223d7472 30327830 30433730      start="0x2007C0
    3e1a:	20223030 676e656c 223d6874 30387830     00" length="0x80
    3e2a:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3e3a:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3e4a:	61747320 223d7472 30327830 30433930      start="0x2009C0
    3e5a:	20223030 676e656c 223d6874 30347830     00" length="0x40
    3e6a:	3e223030 6d2f3c20 726f6d65 6d3c3e79     00"> </memory><m
    3e7a:	726f6d65 79742079 223d6570 226d6172     emory type="ram"
    3e8a:	61747320 223d7472 32327830 30303030      start="0x220000
    3e9a:	20223030 676e656c 223d6874 30327830     00" length="0x20
    3eaa:	30303030 203e2230 656d2f3c 79726f6d     00000"> </memory
    3eba:	656d3c3e 79726f6d 70797420 72223d65     ><memory type="r
    3eca:	20226d61 72617473 30223d74 30303478     am" start="0x400
    3eda:	30303030 6c202230 74676e65 30223d68     00000" length="0
    3eea:	30343178 3e223030 6d2f3c20 726f6d65     x14000"> </memor
    3efa:	6d3c3e79 726f6d65 79742079 223d6570     y><memory type="
    3f0a:	226d6172 61747320 223d7472 30347830     ram" start="0x40
    3f1a:	30383130 20223030 676e656c 223d6874     018000" length="
    3f2a:	34337830 22303030 2f3c203e 6f6d656d     0x34000"> </memo
    3f3a:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    3f4a:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    3f5a:	43353030 22303030 6e656c20 3d687467     005C000" length=
    3f6a:	34783022 22303030 2f3c203e 6f6d656d     "0x4000"> </memo
    3f7a:	3c3e7972 6f6d656d 74207972 3d657079     ry><memory type=
    3f8a:	6d617222 74732022 3d747261 34783022     "ram" start="0x4
    3f9a:	38383030 22303030 6e656c20 3d687467     0088000" length=
    3faa:	31783022 30303043 3c203e22 6d656d2f     "0x1C000"> </mem
    3fba:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    3fca:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    3fda:	41303034 30303038 656c2022 6874676e     400A8000" length
    3fea:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    3ffa:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    400a:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    401a:	42303034 30303030 656c2022 6874676e     400B0000" length
    402a:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    403a:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    404a:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    405a:	42303034 30303038 656c2022 6874676e     400B8000" length
    406a:	7830223d 30303038 3c203e22 6d656d2f     ="0x8000"> </mem
    407a:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    408a:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    409a:	46303034 30303043 656c2022 6874676e     400FC000" length
    40aa:	7830223d 30303034 3c203e22 6d656d2f     ="0x4000"> </mem
    40ba:	3e79726f 6d656d3c 2079726f 65707974     ory><memory type
    40ca:	6172223d 7320226d 74726174 7830223d     ="ram" start="0x
    40da:	30303234 30303030 656c2022 6874676e     42000000" length
    40ea:	7830223d 30303032 22303030 2f3c203e     ="0x2000000"> </
    40fa:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    410a:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    411a:	35783022 30303030 22303030 6e656c20     "0x50000000" len
    412a:	3d687467 38783022 22303030 2f3c203e     gth="0x8000"> </
    413a:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    414a:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    415a:	35783022 43303030 22303030 6e656c20     "0x5000C000" len
    416a:	3d687467 34783022 22303030 2f3c203e     gth="0x4000"> </
    417a:	6f6d656d 3c3e7972 6f6d656d 74207972     memory><memory t
    418a:	3d657079 6d617222 74732022 3d747261     ype="ram" start=
    419a:	45783022 30303030 22303030 6e656c20     "0xE0000000" len
    41aa:	3d687467 31783022 30303030 203e2230     gth="0x100000"> 
    41ba:	656d2f3c 79726f6d 6d2f3c3e 726f6d65     </memory></memor
    41ca:	616d2d79 31003e70 30303130 30303030     y-map>.101000000
    41da:	30303030 30303030 30303030 46323030     000000000000002F
    41ea:	30304637 00303030 30000000                       7F00000....

000041f5 <NibbleToHexChar>:
    41f5:	33323130 37363534 62613938 66656463     0123456789abcdef
    4205:	00313045 00353045 46004b4f                       E01.E05.OK.

00004210 <gdbCloseCommand.4654>:
    4210:	6f6c6346 002c6573                       Fclose,.

00004218 <gdbStatCommand.4676>:
    4218:	61747346 2c002c74                                Fstat,.

0000421f <controlCFlag.4687>:
    421f:	4600432c                                         ,C.

00004222 <gdbCommand.4682>:
    4222:	6e657246 2c656d61 72774600                       Frename,.

0000422b <gdbWriteCommand.4644>:
    422b:	69727746 002c6574                       Fwrite,.

00004233 <gdbOpenCommand.4639>:
    4233:	65706f46 46002c6e                                Fopen,.

0000423a <gdbStatCommand.4665>:
    423a:	74736646 002c7461                       Ffstat,.

00004242 <gdbReadCommand.4649>:
    4242:	61657246 46002c64                                Fread,.

00004249 <gdbSeekCommand.4659>:
    4249:	65736c46 002c6b65                       Flseek,.

00004251 <gdbUnlinkCommand.4670>:
    4251:	6c6e7546 2c6b6e69 33304500 65665800              Funlink,.E03.

0000425e <qXferCommand.4744>:
    425e:	72656658 70755300                                Xfer.

00004263 <qSupportedCommand.4743>:
    4263:	70707553 6574726f 61740064                       Supported.

0000426d <targetXmlAnnex.4772>:
    426d:	67726174 782e7465 71006c6d                       target.xml.

00004278 <querySupportResponse.4748>:
    4278:	65665871 656d3a72 79726f6d 70616d2d     qXfer:memory-map
    4288:	6165723a 713b2b64 72656658 6165663a     :read+;qXfer:fea
    4298:	65727574 65723a73 3b2b6461 6b636150     tures:read+;Pack
    42a8:	69537465 003d657a 67726174 782e7465     etSize=.target.x
    42b8:	66006c6d                                         ml.

000042bb <featureObject.4756>:
    42bb:	74616566 73657275 6d656d00                       features.

000042c4 <memoryMapObject.4755>:
    42c4:	6f6d656d 6d2d7972 72007061                       memory-map.

000042cf <readCommand.4767>:
    42cf:	64616572 00783000 00000000                       read.0x..

000042d8 <__EH_FRAME_BEGIN__>:
    42d8:	00000000                                ....
